Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: JOB

; Microsoft Dynamics AX Job : jobName déchargé
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #jobName
    #static void jobName(Args _args)
    #
    #{
    #
    #    NumberSeqModuleVendor  NumberSeqModuleVend = new NumberSeqModuleVendor();
    #
    #    ;
    #
    #    NumberSeqModuleVend.load();
    #
    #}
  ENDSOURCE
  PROPERTIES
    Origin              #{771F45D2-4500-4158-BE51-2611C61879E0}
  ENDPROPERTIES
  

***Element: UTS

; Microsoft Dynamics AX String : DINumSeq déchargé
; --------------------------------------------------------------------------------
  USERTYPEVERSION 6
  
  USERTYPE #DINumSeq
  STRING
    PROPERTIES
      Name                #DINumSeq
      Label               #Num dossier d'importation
      Origin              #{6180E5CD-B6EC-4999-9F0F-027A4CFAD2EA}
    ENDPROPERTIES
    
    TYPEELEMENTS
    ENDTYPEELEMENTS
    
    TYPEREFERENCES
    ENDTYPEREFERENCES
    
    TYPELOOKUPS
    ENDTYPELOOKUPS
    
  ENDUSERTYPE
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DossierImportationQuickCreate unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DossierImportationQuickCreate
    Type: 1
    PROPERTIES
      Name                #DossierImportationQuickCreate
      Object              #DossierImportationQuickCreate
      Origin              #{90756E04-3831-4F29-B926-DE9C6078F5DA}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DossierImportationPort unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DossierImportationPort
    Type: 1
    PROPERTIES
      Name                #DossierImportationPort
      Object              #DossierImportationPort
      Origin              #{13AE5351-F168-4116-98DE-3A7D8D25840E}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DossierImportationListPage unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DossierImportationListPage
    Type: 1
    PROPERTIES
      Name                #DossierImportationListPage
      Label               #Tous les dossiers d'importation
      Object              #DossierImportationListPage
      Origin              #{B312D3B5-088A-4C50-8D55-8CA146A83215}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DossierImportation unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DossierImportation
    Type: 1
    PROPERTIES
      Name                #DossierImportation
      Object              #DossierImportation
      Origin              #{3FEC8E52-18F9-4C19-8E9D-0A1D3F639685}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: QUE

; Microsoft Dynamics AX Query : DossierImportationListPage déchargé
; --------------------------------------------------------------------------------
VERSION 31

QUERY #DossierImportationListPage
  PROPERTIES
    Name                #DossierImportationListPage
    Version             #9
    NextUniqueId        #1002
    Origin              #{9A710BC5-694A-43AD-BE18-5C82FC9E9DFF}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class QueryRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  BLOCKS
    BLOCK #DossierImportation
      PROPERTIES
        Name                #DossierImportation_1
        Table               #DossierImportation
        UniqueId            #1001
        FetchMode           #1:1
      ENDPROPERTIES
      
      FIELDLIST
        PROPERTIES
        ENDPROPERTIES
        
      ENDFIELDLIST
      SORTING
      ENDSORTING
      LINES
      ENDLINES
      BLOCKS
      ENDBLOCKS
      GROUPBY
      ENDGROUPBY
      HAVING
      ENDHAVING
      ORDERBY
      ENDORDERBY
    ENDBLOCK
  ENDBLOCKS
  DEPENDENTS
  ENDDEPENDENTS
  COMPOSITEQUERIES
  ENDCOMPOSITEQUERIES
ENDQUERY


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DossierImportationListPage
  PROPERTIES
    Name                #DossierImportationListPage
    InteractionClass    #ListPageInteraction
    Origin              #{A65AAC1F-2154-4352-B160-27BA5C0DCCAB}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #DossierImportation
          Table               #DossierImportation
          AllowEdit           #No
          AllowCreate         #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      UseCaptionFromMenuItem  #Yes
      Style               #ListPage
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          VerticalSpacing     #0
          ElementPosition     #536870911
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
          Caption             #Dossiers
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Maintain
          ElementPosition     #1610612733
          HierarchyParent     #ActionPaneTab
          Caption             #Tenir à jour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #New
          ElementPosition     #1073741822
          HierarchyParent     #ActionPaneTab
          Caption             #Nouveau
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #ListPageGrid
          AllowEdit           #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          DataSource          #DossierImportation
          DefaultAction       #ViewButton
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Filter
          Visible             #No
          ElementPosition     #1073741822
          Style               #CustomFilter
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Delete
          ElementPosition     #1610612733
          HierarchyParent     #Maintain
          Text                #Supprimer
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateDossier
          ElementPosition     #715827882
          HierarchyParent     #ListPageGrid
          DataSource          #DossierImportation
          DataField           #DateDossier
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Edit
          ElementPosition     #1073741822
          HierarchyParent     #Maintain
          Text                #Modifier
          ButtonDisplay       #Text & Image left
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          OpenMode            #Edit
          MenuItemName        #DossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MenuItemButton
          ElementPosition     #1431655764
          HierarchyParent     #New
          Text                #Nouveau
          ButtonDisplay       #Text & Image above
          NormalImage         #10583
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          OpenMode            #New
          MenuItemName        #DossierImportationQuickCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ViewButton
          Visible             #No
          ElementPosition     #715827880
          HierarchyParent     #Maintain
          ShowShortCut        #No
          OpenMode            #View
          MenuItemName        #DossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Destination
          ElementPosition     #1073741823
          HierarchyParent     #ListPageGrid
          DataSource          #DossierImportation
          DataField           #Destination
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_DINumSeq
          ElementPosition     #1431655764
          HierarchyParent     #ListPageGrid
          DataSource          #DossierImportation
          DataField           #DINumSeq
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Origine
          ElementPosition     #1789569705
          HierarchyParent     #ListPageGrid
          DataSource          #DossierImportation
          DataField           #Origine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DossierImportationQuickCreate
  PROPERTIES
    Name                #DossierImportationQuickCreate
    Origin              #{7BC68E7F-ADBA-44B2-9BE4-1CCB34996F40}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #
      #}
    ENDSOURCE
    SOURCE #close
      #public void close()
      #{
      #   //Raffraichir le form père
      #    #Task
      #    FormRun formRun;
      #    formRun = element.args().caller();
      #    if(formRun)
      #    {
      #        formRun.task(#taskF5);
      #    }
      #    super();
      #
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #DossierImportation
          Table               #DossierImportation
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    super(_append);
          #    DossierImportation.DINumSeq = NumberSeq::newGetNum(DossierImportation::numRefNumDossier(),true).num();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS301615
      Frame               #Dialog
      WindowType          #Popup
      HideToolbar         #Yes
      BackgroundColor     #Window background
      DataSource          #DossierImportation
      Columnspace         #2
      Style               #DropDialog
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #DialogCommit
          ElementPosition     #1431655764
          Style               #DialogCommitContainer
          DataSource          #DossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogContent
          Width               #Column width
          ElementPosition     #715827882
          Style               #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #CancelButton
          ElementPosition     #1789569705
          HierarchyParent     #DialogCommit
          SaveRecord          #No
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SubmitAndClose
          ElementPosition     #1073741822
          HierarchyParent     #DialogCommit
          NormalImage         #Enregistrer et fermer
          Command             #263
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateDossier
          ElementPosition     #1227133512
          HierarchyParent     #DialogContent
          DataSource          #DossierImportation
          DataField           #DateDossier
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SubmitAndOpen
          ElementPosition     #1431655763
          HierarchyParent     #DialogCommit
          Text                #Enregistrer et ouvrir
          OpenMode            #Edit
          CopyCallerQuery     #Yes
          MenuItemName        #DossierImportation
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    element.close();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #MainInstruction
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #DialogContent
          Text                #Ajouter un nouoveau dossier d'imporation
          Style               #MainInstruction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Destination
          ElementPosition     #1840700268
          HierarchyParent     #DialogContent
          DataSource          #DossierImportation
          DataField           #Destination
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_DINumSeq
          AllowEdit           #No
          ElementPosition     #920350134
          HierarchyParent     #DialogContent
          DataSource          #DossierImportation
          DataField           #DINumSeq
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Origine
          ElementPosition     #1533916890
          HierarchyParent     #DialogContent
          DataSource          #DossierImportation
          DataField           #Origine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #EcoResCategorySingleLookup
    PROPERTIES
      Form                #EcoResCategorySingleLookup
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #EcoResCategorySingleLookup
    PROPERTIES
      Form                #EcoResCategorySingleLookup
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #EcoResCategorySingleLookup
    PROPERTIES
      Form                #EcoResCategorySingleLookup
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #EcoResCategorySingleLookup
    PROPERTIES
      Form                #EcoResCategorySingleLookup
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DossierImportationPort
  PROPERTIES
    Name                #DossierImportationPort
    Origin              #{5ADB6BE9-610A-484A-8310-7AE590C054F5}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    SysFormSplitter_X verticalSplitter;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    super();
      #    verticalSplitter = new SysFormSplitter_X(vSplitter, gridContainer, element);
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #DossierImportationPort
          Table               #DossierImportationPort
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Style               #SimpleListDetails
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #715827882
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridContainer
          DataSource          #DossierImportationPort
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Body
          ElementPosition     #1431655764
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #0
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Details
          ElementPosition     #1717986916
          HierarchyParent     #Body
          Style               #MarginlessContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridContainer
          AutoDeclaration     #Yes
          Width               #300
          ElementPosition     #429496729
          HierarchyParent     #Body
          Style               #BorderlessGridContainer
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Vsplitter
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Body
          Style               #SplitterVerticalContainer
        ENDPROPERTIES
        
        METHODS
          SOURCE #mouseDown
            #public int mouseDown(int _x, int _y, int _button, boolean _ctrl, boolean _shift)
            #{
            #    super(_x, _y, _button, _ctrl, _shift);
            #    return verticalSplitter.mouseDown(_x, _y, _button, _ctrl, _shift);
            #}
          ENDSOURCE
          SOURCE #mouseMove
            #public int mouseMove(int _x, int _y, int _button, boolean _Ctrl, boolean _Shift)
            #{
            #    super(_x, _y, _button, _ctrl, _shift);
            #    return verticalSplitter.mouseMove(_x, _y, _button, _ctrl, _shift);
            #}
          ENDSOURCE
          SOURCE #mouseUp
            #public int mouseUp(int _x, int _y, int _button, boolean _Ctrl, boolean _Shift)
            #{
            #    super(_x, _y, _button, _ctrl, _shift);
            #    return verticalSplitter.mouseUp(_x, _y, _button, _ctrl, _shift);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #DossierImportationPort_LogisticsAddressCountryRegion
          ElementPosition     #1717986916
          HierarchyParent     #Grid
          DataSource          #DossierImportationPort
          ReferenceField      #LogisticsAddressCountryRegion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #DossierImportationPort_LogisticsAddressCountryRegion1
          ElementPosition     #1717986916
          HierarchyParent     #Details
          DataSource          #DossierImportationPort
          ReferenceField      #LogisticsAddressCountryRegion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #deleteButton
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Text                #supprimer
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #newButton
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11045
          ImageLocation       #EmbeddedResource
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PayrollRegimesCNSSAvantages
          ElementPosition     #1789569704
          HierarchyParent     #ButtonGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #10688
          ImageLocation       #EmbeddedResource
          MenuItemName        #PayrollRegimesCNSSAvantages
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PayrollRegimesMassBenefitEnrollmen
          ElementPosition     #1968526675
          HierarchyParent     #ButtonGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #12441
          ImageLocation       #EmbeddedResource
          MenuItemName        #PayrollRegimesMassBenefitEnrollmen
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportationPort_Code
          ElementPosition     #858993458
          HierarchyParent     #Grid
          DataSource          #DossierImportationPort
          DataField           #Code
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportationPort_Code1
          ElementPosition     #858993458
          HierarchyParent     #Details
          DataSource          #DossierImportationPort
          DataField           #Code
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportationPort_Description
          ElementPosition     #1288490187
          HierarchyParent     #Grid
          DataSource          #DossierImportationPort
          DataField           #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportationPort_Description1
          ElementPosition     #1288490187
          HierarchyParent     #Details
          DataSource          #DossierImportationPort
          DataField           #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #PurchTable
  PROPERTIES
    Name                #PurchTable
    FormTemplate        #DetailsPage
    InteractionClass    #PurchTableInteraction
    Origin              #{0B0A0000-0000-1000-B49B-F07268546162}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    boolean                         isCalledFromLP;
      #    PurchTableForm                  purchTableForm;
      #    PurchTableType                  purchTableType;
      #
      #    QueryBuildRange                 queryBuildRangeProj;
      #    QueryBuildRange                 queryBuildRangePurchLine;
      #    boolean                         isProjectForm;
      #    boolean                         isDocuActionTemplate;
      #
      #    // Used for validateWrite and write to update tax groups on misc. charges and header2lines updates
      #    DialogButton                    copyTaxGroupToMarkupTrans;
      #    PurchTable2LineUpdatePrompt     purchTable2LineUpdatePrompt;
      #
      #    InventDimCtrl_Frm_Mov           inventDimFormSetup;
      #
      #    //PBA begin
      #    boolean                         autoConfig;
      #    // PBA end
      #
      #    Object                          tmpPurchTableTaxTransForm;
      #    Object                          tmpPurchTableTaxWithholdTransForm;
      #    TaxWithholdParameters_IN        taxWithholdParameters;
      #    TaxParameters                   taxParameters;
      #    EximParameters_IN               eximParameters;
      #    TaxExciseTypeController_IN      taxExciseTypeController;
      #    TaxItemGroupHeading             taxItemGroupHeadingRev;
      #    boolean                         isPurchLine_INEnabled;
      #
      #    boolean                         cashDiscOnInvoice;
      #
      #    Map                             interCompanySalesCache;
      #    RecId                           interCompanyIsPriceDiscSearchNeeded;
      #
      #    #Tax1099
      #
      #    PurchId                         purchIdTouched;
      #
      #    DimensionDefaultingController   dimensionDefaultingControllerHeader;
      #    DimensionDefaultingController   dimensionDefaultingControllerLine;
      #
      #    LedgerDimensionDefaultAccountController     ledgerDefaultAccountControllerLine;
      #
      #    boolean                         keepName; // When set to false Name is defaulted from category description.
      #
      #    NumberSeqFormHandler            numberSeqFormHandler;
      #    //Asset qualifier related variables
      #    container                       assetRules;
      #    List                            assetQualifierList;
      #    Description                     selectedAssetQualifier;
      #
      #    LogisticsLocationRecId          postalAddressLocation;
      #
      #    #AssetRules
      #    #resAppl
      #    #define.grpAssetQualifier('grpAssetQualifier')
      #    #define.editAssetQualifier('editAssetQualifier')
      #
      #    boolean                         hasEMSAccess;
      #
      #    BankLCImportFeatureChecker      bankLCImportFeatureChecker;
      #    BankLGFeatureChecker            bankLGFeatureChecker;
      #    boolean                         enableLCFeature;
      #    boolean                         enableLGFeature;
      #
      #    boolean                         wasCalledFromVendorSearch;
      #    VendAccount                     vendAccountSearch;
      #    // Default create values
      #    ItemId                          defaultItemId;
      #    InventDim                       defaultInventDim;
      #    TransDate                       defaultDate;
      #    boolean                         zakatParameterEnabled;
      #    InventItemBarcode               itemBarcode;
      #
      #    #resAppl
      #
      #
      #    boolean                         workflowEnabled;
      #    boolean                         isRU;
      #    boolean                         isPurchTableEnabled_RU;
      #    // RU assets
      #    Map                             itemTypeCache;
      #    Map                             itemInventDimSetupCache;
      #    #ISOCountryRegionCodes
      #
      #    DueDate                         priorDueDate;
      #    boolean                         isPurchLine_WEnabled;
      #    boolean                         isPurchTableEnabled_W;
      #    SalesPurchOperationTypeController_BR salesPurchOperationTypeController_BR;
      #    boolean                         isPurchTableEnabled_BR;
      #
      #    boolean                         advanceHoldersEnabled;
      #
      #    PurchLine                       defaultPurchLine;
      #
      #    PurchParameters purchParameters;
      #
      #    ImageListAppl_PurchTableForm  imageListAppl_PurchTableForm;
      #
      #    int                            purchTableRecVersion;
      #
      #    boolean                         skipLinkActive;
      #    boolean                         linkActiveHeaderExecuted;
      #
      #    boolean                         executePersonalization;
      #    QueryBuildRange                 queryRange;
      #    QueryBuildRange                 queryRangeQuantity;
      #    QueryBuildRange                 queryRangeOptionsRef;
      #    QueryBuildRange                 queryRangeGroup;
      #    InventQty                       salesLineMaxQty;
      #    boolean                         itemChanged;
      #    boolean                         inTextLine;
      #    boolean                         onInit;
      #    boolean                         fromQty;
      #    boolean                         fromLostControl;
      #    SalesLine                       salesLine;
      #    FilePath                        filePath;
      #
      #    boolean                         isWHSPurchLineEnabled;
      #}
    ENDSOURCE
    SOURCE #allowEditAsset_RU
      #boolean allowEditAsset_RU()
      #{
      #    boolean ret;
      #
      #    if (itemTypeCache && purchLine.ItemId)
      #    {
      #        if (itemTypeCache.exists(purchLine.ItemId))
      #        {
      #            ret = itemTypeCache.lookup(purchLine.ItemId);
      #        }
      #        else
      #        {
      #            ret = InventTable::find(purchLine.ItemId).AssetGroupId_RU != '';
      #            itemTypeCache.insert(purchLine.ItemId, ret);
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #allowEditLedgerAccount_RU
      #boolean allowEditLedgerAccount_RU()
      #{
      #    boolean                     allowEdit = ! purchLine_W.MarkupCode_RU;
      #
      #    if (allowEdit && itemInventDimSetupCache && purchLine.ItemId)
      #    {
      #        if (itemInventDimSetupCache.exists(purchLine.ItemId))
      #        {
      #            allowEdit = itemInventDimSetupCache.lookup(purchLine.ItemId);
      #        }
      #        else
      #        {
      #            allowEdit = !EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(purchLine.ItemId, fieldNum(InventDim, InventProfileId_RU));
      #            itemInventDimSetupCache.insert(purchLine.ItemId, allowEdit);
      #        }
      #    }
      #
      #    return allowEdit;
      #}
    ENDSOURCE
    SOURCE #applyBackOrderLinesSelection
      #/// <summary>
      #/// If form was called by BackOrderLines list page, applies additional ranges to the form data source to show only sales orders that were selected in a list page.
      #/// </summary>
      #/// <remarks>
      #/// If form called not from BackOrderLines list page no action is taken.
      #/// </remarks>
      #private void applyBackOrderLinesSelection()
      #{
      #    Map             selectedPurchIds;
      #    MapEnumerator   en;
      #
      #    if (!this.isCalledFromPurchLineBackOrderListPage() || !element.args().record())
      #    {
      #        return;
      #    }
      #
      #    // Apply filter to show only Purch Orders selected in the list page...
      #    selectedPurchIds = PurchLineBackOrderListPageInteraction::getPurchIdsSelected(element.args().record().dataSource());
      #    if (selectedPurchIds)
      #    {
      #        // Dynalinks need to be cleared to avoid transfer only currently selected record from a list page.
      #        purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).clearDynalinks();
      #
      #        en = new MapEnumerator(selectedPurchIds);
      #        while(en.moveNext())
      #        {
      #            purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,PurchId)).value(en.currentValue());
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #automaticTotalDiscount
      #public void automaticTotalDiscount()
      #{
      #    PurchTable localPurchTable;
      #
      #    if (PurchParameters::find().AutomaticTotalDiscount)
      #    {
      #        for (localPurchTable = purchTable_ds.getFirst(true) ? purchTable_ds.getFirst(true) : purchTable_ds.cursor(); localPurchTable; localPurchTable = purchTable_ds.getNext())
      #        {
      #            localPurchTable.updateFinalDisc();
      #        }
      #        purchTable_ds.reread();
      #        purchTable_ds.refresh();
      #        purchLine_ds.research(true);
      #    }
      #}
    ENDSOURCE
    SOURCE #budgetControlLine
      #public void budgetControlLine()
      #{
      #    if (purchLine)
      #    {
      #        // Submit to source document processor for an on-demand budget check
      #        SourceDocumentProcessorFacade::submitOnDemandSourceDocLineImpl(purchLine);
      #
      #        purchLine_ds.updateBudgetCheckResultDisplay();
      #    }
      #}
    ENDSOURCE
    SOURCE #budgetCreateTransfer
      #public void budgetCreateTransfer()
      #{
      #    BudgetCreateTransfer budgetCreateTransfer = BudgetCreateTransfer::construct();
      #
      #    // The source number for the created transfer is the purchase order id.
      #    budgetCreateTransfer.parmBudgetTransferSourceNumber(purchTable.PurchId);
      #
      #    budgetCreateTransfer.parmToLedgerDimensionDate(systemDateGet());
      #
      #    // Set the To ledger dimension to 0.
      #    budgetCreateTransfer.parmToLedgerDimension(0);
      #
      #    // Set the currency to the currency on the selected purchase order line.
      #    budgetCreateTransfer.parmCurrency(purchLine.CurrencyCode);
      #
      #    // Set the budget type as Expense.
      #    budgetCreateTransfer.parmBudgetType(BudgetType::Expense);
      #
      #    BudgetCreateTransferManager::launchCreateTransferForm(budgetCreateTransfer);
      #}
    ENDSOURCE
    SOURCE #canClose
      #public boolean canClose()
      #{
      #    boolean ret;
      #
      #    ret = super();
      #
      #    // PBA begin
      #    if (!purchLine.PBAItemLine::checkMandatory() )
      #    {
      #        return false;
      #    }
      #    // PBA end
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #canSubmitToWorkflow
      #public boolean canSubmitToWorkflow()
      #{
      #    return purchTable.canSubmitToWorkflow();
      #}
    ENDSOURCE
    SOURCE #checkCreditNoteLine
      #void  checkCreditNoteLine()
      #{
      #    boolean  allowEdit;
      #
      #    allowEdit = purchLine.allowEditReturnActionId();
      #    purchLine_ds.object(fieldNum(PurchLine, ReturnActionId)).allowEdit(allowEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, ReturnActionId)).skip(!allowEdit);
      #
      #    allowEdit = purchLine.allowEditScrap();
      #    purchLine_ds.object(fieldNum(PurchLine, Scrap)).allowEdit(allowEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Scrap)).skip(allowEdit);
      #}
    ENDSOURCE
    SOURCE #close
      #void close()
      #{
      #    xSysLastValue::saveLast(purchTableForm);
      #
      #    // Current price references may need to be deleted.
      #    purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #configBankDocumentControls
      #/// <summary>
      #///     Configs the BankDocument Controls.
      #/// </summary>
      #public void configBankDocumentControls()
      #{
      #    boolean         enableDocumentType = false;
      #    PurchTableType  purchTableTypeLcoal;
      #
      #    if (enableLCFeature
      #    ||  enableLGFeature)
      #    {
      #        purchTableTypeLcoal = purchTable.type();
      #        enableDocumentType  = purchTableTypeLcoal.mayBankDocumentTypeBeModified();
      #        element.configPaymentGroupControls();
      #        purchTable_DS.object(fieldNum(PurchTable, BankDocumentType)).allowEdit(enableDocumentType);
      #    }
      #}
    ENDSOURCE
    SOURCE #configPaymentGroupControls
      #/// <summary>
      #/// Configs the payment group controls based on the value of field <c>BankDocumentType</c>
      #/// </summary>
      #private void configPaymentGroupControls()
      #{
      #    boolean flag;
      #
      #    flag = !purchTable.isMarkedForBankLC();
      #
      #    purchTable_DS.object(fieldNum(PurchTable, Payment)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, FixedDueDate)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymMode)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymSpec)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymentSched)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, CashDisc)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, CashDiscPercent)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, SettleVoucher)).allowEdit(flag);
      #}
    ENDSOURCE
    SOURCE #createAgreementLink
      #public void createAgreementLink()
      #{
      #    AgreementLine                           localAgreementLine;
      #    Args                                    args;
      #    FormRun                                 formRun;
      #    PurchTableForm_DlvScheduleSyncEnabled   purchTableFormDlvSchedule;
      #    PurchLine                               origPurchLine;
      #
      #    args = new Args(formStr(AgreementLinePrompt));
      #    args.caller(element);
      #    args.record(purchLine);
      #    args.parm(int642str(purchTable.MatchingAgreement));
      #    formRun = classfactory.formRunClass(args);
      #    formRun.init();
      #    formRun.run();
      #    formRun.wait(true);
      #    localAgreementLine = args.record() as AgreementLine;
      #
      #    if (localAgreementLine)
      #    {
      #        // Make a pre-associated copy of the current purchase line.
      #        origPurchLine = purchLine.data().orig();
      #        if (isPurchLine_INEnabled || isPurchLine_WEnabled)
      #        {
      #            origPurchLine.SysExtensionSerializerMap::copyExtensionTableData(purchLine, true);
      #        }
      #
      #        ttsbegin;
      #
      #        PurchTableForm::createAgreementLinkServer(purchLine, localAgreementLine);
      #
      #        if (purchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
      #        {
      #            purchTableFormDlvSchedule = purchTableForm as PurchTableForm_DlvScheduleSyncEnabled;
      #            purchTableFormDlvSchedule.parmOrderLineOrig(origPurchLine);
      #            if (purchTableFormDlvSchedule.deliveryLinesSync(purchLine, false))
      #            {
      #                // Need to refresh delivery lines on grid.
      #                purchLine_DS.executeQuery();
      #            }
      #        }
      #
      #        ttscommit;
      #        purchLine_DS.research(true);
      #
      #        this.enableAgreementButtons();
      #    }
      #}
    ENDSOURCE
    SOURCE #disableConsInvoiceControl_JP
      #/// <summary>
      #/// Disable the consolidation invoice related controls.
      #/// </summary>
      #public void disableConsInvoiceControl_JP()
      #{
      #    if (!VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
      #    {
      #        purchTable_ds.object(fieldNum(PurchTable, ConsTarget_JP)).visible(false);
      #        consTarget_JP.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #distributionFormClosed
      #/// <summary>
      #/// Method called upon closing of the <c>AccountingDistribution</c> form.
      #/// </summary>
      #public void distributionFormClosed()
      #{
      #    purchTable_ds.reread();
      #    purchTable_ds.refresh();
      #    purchTable_ds.selectionChanged();
      #}
    ENDSOURCE
    SOURCE #docCursor
      #public Common docCursor()
      #{
      #    Common docCursor;
      #
      #    docCursor = super();
      #
      #    if (docCursor.TableId == tableNum(InventDim))
      #    {
      #        docCursor = purchLine;
      #    }
      #
      #    return docCursor;
      #}
    ENDSOURCE
    SOURCE #doRefresh
      #public void doRefresh(boolean _lineRefreshNeeded = false)
      #{
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        purchTable_ds.reread();
      #        purchTable_ds.refresh();
      #
      #        if (_lineRefreshNeeded)
      #        {
      #            purchLine_ds.reread();
      #            purchLine_ds.refresh();
      #        }
      #        else
      #        {
      #            purchLine_ds.research();
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #editPurch
      #public void editPurch(boolean _allowEdit, boolean _allowDelete = _allowEdit)
      #{
      #    boolean allowEditEmplAccount_RU;
      #    purchTable_ds.allowEdit    (_allowEdit);
      #    purchTable_ds.allowDelete  (_allowEdit && _allowDelete);
      #    purchLine_ds.allowEdit     (_allowEdit);
      #    purchLine_ds.allowCreate   (_allowEdit);
      #    purchLine_ds.allowDelete   (_allowEdit && _allowDelete);
      #    if (advanceHoldersEnabled)
      #    {
      #        allowEditEmplAccount_RU = PaymTerm::isEmplAccountUsed_RU(purchTable.Payment);
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, EmplAccount_RU)).allowEdit(allowEditEmplAccount_RU);
      #        purchTable_ds.object(fieldNum(PurchTable, CashDisc)).allowEdit(!allowEditEmplAccount_RU);
      #    }
      #}
    ENDSOURCE
    SOURCE #enableAdvanceAction
      #/// <summary>
      #/// Enables advance action button on header when <c>PurchaseType</c> field of <c>PurchTable</c> table has <c>PurchaseType::Purch</c> enum value .
      #/// </summary>
      #[SysObsoleteAttribute('Prepay elements are controlled by the PurchTableInteraction class', true)]
      #public void enableAdvanceAction()
      #{
      #
      #}
    ENDSOURCE
    SOURCE #enableAgreementButtons
      #protected void enableAgreementButtons()
      #{
      #    boolean agreementLineEnabled, createLinkEnabled, removeLinkEnabled;
      #
      #    [agreementLineEnabled, createLinkEnabled, removeLinkEnabled] = purchTableForm.getEnabledAgreementButtons(purchTable, purchLine);
      #
      #    agreementLine.enabled(agreementLineEnabled);
      #    createLink.enabled(createLinkEnabled);
      #    removeLink.enabled(removeLinkEnabled);
      #
      #    buttonPurchAgreement.enabled(purchTable.MatchingAgreement);
      #}
    ENDSOURCE
    SOURCE #enableApplyDEPB_IN
      #boolean enableApplyDEPB_IN()
      #{
      #    boolean ret;
      #    if (eximPurchLine_IN.EximIncentiveSchemeGroup)
      #    {
      #        ret = EximSetOffRulesTable_IN::checkUtilizedDEPBLicense(eximPurchLine_IN.EximIncentiveSchemeGroup);
      #    }
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #enableContractNumber_SA
      #public void enableContractNumber_SA()
      #{
      #    purchTable_ContractNum_SA.enabled(VendInfoZakat_SA::findByVendAccount(purchTable.OrderAccount).IsSubcontractor);
      #}
    ENDSOURCE
    SOURCE #enableDepreciationStartDate
      #//
      #// This method enables/disables depreciation start date control
      #//
      #void enableDepreciationStartDate(boolean _setDate = true)
      #{
      #    AssetBook assetBook;
      #
      #    assetBook = AssetBook::find(purchLine.AssetId, purchLine.AssetBookId);
      #    if (assetBook && (purchLine.AssetTransTypePurch == AssetTransTypePurch::Acquisition || purchLine.AssetTransTypePurch == AssetTransTypePurch::AcquisitionAdj) &&
      #    !assetBook.depreciationStarted() && assetBook.DepreciationConvention == AssetDepreciationConvention::None)
      #    {
      #        if (!depreciationStartDate.enabled())
      #        {
      #            depreciationStartDate.enabled(true);
      #            purchLine.setDepreciationStartDate(_setDate);
      #        }
      #    }
      #    else
      #    {
      #        purchLine.setDepreciationStartDate(true);
      #        depreciationStartDate.enabled(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #enabledVATTaxAgent_RU
      #void enabledVATTaxAgent_RU()
      #{
      #    vatTaxAgent_RU.allowEdit(! PurchLine::exist(purchTable.PurchId));
      #}
    ENDSOURCE
    SOURCE #enableFieldsActive_IN
      #public void enableFieldsActive_IN()
      #{
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, DirectSettlement_IN)).enabled(purchLine_IN.ExciseType_IN == ExciseType_IN::Manufacturer);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, cenvatCreditAvailed_IN)).enabled(purchLine_IN.ExciseRecordType_IN == ExciseRecordType_IN::RG23C    &&
      #                                                                             purchLine_IN.DirectSettlement_IN == DirectSettlement_IN::PLA      &&
      #                                                                             purchLine.PurchQty < 0                                         &&
      #                                                                             taxParameters.Excise_IN);
      #    customsImportAssessableValue_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::Yes    &&
      #                                            taxParameters.Customs_IN == NoYes::Yes);
      #    purchLine_CustomsMaxRetailPrice_IN.visible(purchTable_W.CustomsImportOrder_IN == NoYes::Yes &&
      #                                               taxParameters.Customs_IN == NoYes::Yes);
      #    purchLine_MaximumRetailPrice_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::No);
      #    element.setEximFieldsAccess_IN();
      #}
    ENDSOURCE
    SOURCE #enableForeignTrade_RU
      #void enableForeignTrade_RU()
      #{
      #    purchLine_W_ds.object(fieldNum(PurchLine_W, InvoiceGTDId_RU)).enabled(
      #        purchLine_W_ds.object(fieldNum(PurchLine_W, CountryRegionName_RU)).enabled(
      #            purchLine.isCategoryBased()));
      #}
    ENDSOURCE
    SOURCE #enableInvoice4PaymButtons
      #public void enableInvoice4PaymButtons()
      #{
      #    purchTableForm.enableInvoice4PaymButton_RU(buttonUpdateInvoice4Paym_RU);
      #    buttonProformaInvoice4Paym_RU.enabled(buttonUpdateInvoice4Paym_RU.enabled());
      #}
    ENDSOURCE
    SOURCE #enableLedgerDimensionDefaultAccount
      #public void enableLedgerDimensionDefaultAccount()
      #{
      #    if (purchLine.canEditLedgerDimensionDefaultAccount())
      #    {
      #        purchLine_LedgerDimension.allowEdit(true
      #            && (! isRU || this.allowEditLedgerAccount_RU())
      #        );
      #
      #    }
      #    else
      #    {
      #        if (purchLine.IsFinalized == NoYes::No)
      #        {
      #            if (!isRU || purchLine_W.MarkupCode_RU)
      #            {
      #                purchLine.LedgerDimension = 0;
      #            }
      #        }
      #        purchLine_LedgerDimension.allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #enableLinePBAActions
      #public void enableLinePBAActions()
      #{
      #    boolean isPBAExecuteButtonEnabled;
      #    isPBAExecuteButtonEnabled = purchTableForm.isPBAExecuteButtonEnabled(purchLine);
      #
      #    pbaExecute.enabled(isPBAExecuteButtonEnabled);
      #}
    ENDSOURCE
    SOURCE #enableMarkupCode_RU
      #public void enableMarkupCode_RU()
      #{
      #    if (isRU)
      #    {
      #        purchLine_W_ds.object(fieldNum(PurchLine_W, MarkupCode_RU))
      #            .enabled(purchLine.isMarkupCodeEnabled_RU());
      #    }
      #}
    ENDSOURCE
    SOURCE #enableProjSalesPrice
      #public void enableProjSalesPrice()
      #{
      #    boolean mustDefaultCostPriceAsSalesPrice;
      #    boolean isTiedToItemReq;
      #
      #    if (purchLine.ProjId)
      #    {
      #        if (!purchLine.ItemId && ProjParameters::find().DefaultCostPriceAsSalesPrice)
      #        {
      #            mustDefaultCostPriceAsSalesPrice = true;
      #        }
      #
      #        if(purchTable.isProjectSalesItemReqPO())
      #        {
      #            isTiedToItemReq = true;
      #        }
      #
      #        if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(purchLine.ProjId).ProjInvoiceProjId))
      #        {
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(false);
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(true);
      #        }
      #        else
      #        {
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(!mustDefaultCostPriceAsSalesPrice);
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(mustDefaultCostPriceAsSalesPrice);
      #        }
      #
      #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesPrice)).allowEdit(!mustDefaultCostPriceAsSalesPrice && !isTiedToItemReq);
      #    }
      #}
    ENDSOURCE
    SOURCE #enableRetentionProject
      #void enableRetentionProject()
      #{
      #    if(isConfigurationkeyEnabled(configurationKeyNum(PSAAPRetainage)))
      #    {
      #        if(purchLine.ProjId)
      #        {
      #            purchLine_PSARetainScheduleId.visible(true);
      #        }
      #        else
      #        {
      #            purchLine_PSARetainScheduleId.visible(false);
      #        }
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #enableServiceFields_BR
      #public void enableServiceFields_BR()
      #{
      #    InventTable inventTable;
      #    boolean     enable;
      #
      #    select firstonly ItemType from inventTable where inventTable.ItemId == purchLine.ItemId;
      #
      #    enable = inventTable.ItemType == ItemType::Service;
      #
      #    purchLine_ds.object(fieldNum(PurchLine, TaxServiceCode_BR)).allowEdit(enable);
      #}
    ENDSOURCE
    SOURCE #enableTMSFields
      #public void enableTMSFields()
      #{
      #    TMSTransportationTemplateId transTempId;
      #    TMSCarrierCode              carrierCode;
      #    TMSCarrierGroupCode         carrierGroupCode;
      #    TMSModeCode                 modeCode;
      #    boolean                     modeCodeEnabled;
      #
      #    transTempId         = tmsPurchTable.TransportationTemplateId;
      #    carrierCode         = tmsPurchTable.CarrierCode;
      #    carrierGroupCode    = tmsPurchTable.CarrierGroupCode;
      #    modeCode            = tmsPurchTable.ModeCode;
      #    modeCodeEnabled     = tmsPurchTable.ModeCode != '' && tmsPurchTable.CarrierCode == '';
      #
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, ModeCode)).allowEdit(!(carrierCode || transTempId || carrierGroupCode));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierCode)).allowEdit(!(transTempId ||carrierGroupCode || modeCodeEnabled));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierServiceCode)).allowEdit(!(transTempId || carrierGroupCode || modeCodeEnabled));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierGroupCode)).allowEdit(!(transTempId || carrierCode || modeCode));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, TransportationTemplateId)).allowEdit(!(carrierCode || carrierGroupCode || modeCode));
      #}
    ENDSOURCE
    SOURCE #endDiscount
      #public void endDiscount()
      #{
      #    purchTable.updateFinalDisc();
      #    purchtable_ds.refresh();
      #
      #}
    ENDSOURCE
    SOURCE #filenameLookupFilename
      #str filenameLookupFilename()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #filenameLookupFilter
      #FilenameFilter filenameLookupFilter()
      #{
      #    return ["@SYS54806",'*.*',"@SYS98008",'*.jpg', "@MCR33266",'*.gif', "@SYS98008",'*.jpg',"@MCR33267",'*.tif',"@MCR33268",'*.bmp'];
      #}
    ENDSOURCE
    SOURCE #filenameLookupInitialPath
      #str filenameLookupInitialPath()
      #{
      #    return filePath;
      #}
    ENDSOURCE
    SOURCE #filenameLookupTitle
      #str filenameLookupTitle()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #filePathLookupTitle
      #str filePathLookupTitle()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #fillPackageTree
      #/// <summary>
      #/// Fill Package Tree
      #/// </summary>
      #void fillPackageTree()
      #{
      #    ImageRes    imageRes    = imageListAppl_PurchTableForm.image(#imageFolder);
      #
      #    TreeItemIdx     purchIdx,packageIdx,packageLineIdx;
      #    PurchLine       purchLineSearch;
      #    RetailPackagePurch packagePurch;
      #    ;
      #    packageTree.deleteAll();
      #
      #    purchIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                               "@RET4405" + purchTable.PurchId,
      #                                               FormTreeAdd::Root,
      #                                               "@SYS15812",
      #                                               imageRes,
      #                                               true);
      #
      #
      #    while select packagePurch
      #    where packagePurch.PurchId == purchTable.PurchId
      #    {
      #        packageIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                                     "@RET4406" + packagePurch.PackageId + '  ' +
      #                                                     RetailPackageTable::find(packagePurch.PackageId).PackageName +
      #                                                     '  ' + "@RET4407" + num2str(packagePurch.Qty,2,2,0,0),
      #                                                     purchIdx,
      #                                                     packagePurch,
      #                                                     imageRes,
      #                                                     true);
      #
      #        while select ItemId, PurchQty from purchLineSearch
      #        where purchLineSearch.PurchId           == purchTable.PurchId &&
      #              purchLineSearch.RetailPackageId   == packagePurch.PackageId &&
      #              purchLineSearch.rboPackageLineNum == packagePurch.LineNum
      #        {
      #            packageLineIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                                             purchLineSearch.ItemId + '  ' +
      #                                                             InventTable::find(purchLineSearch.ItemId).defaultProductName() +
      #                                                             '  ' + "@RET4407" + num2str(purchLineSearch.PurchQty,2,2,0,0),
      #                                                             packageIdx,
      #                                                             "@SYS7407",
      #                                                             imageRes,
      #                                                             false);
      #        }
      #
      #    }
      #
      #    SysFormTreeControl::expandTree(packageTree, packageTree.getRoot(), 1);
      #
      #
      #}
    ENDSOURCE
    SOURCE #formBOEJournalClosed_IN
      #/// <summary>
      #/// BOE Journal form close event handler
      #/// </summary>
      #public void formBOEJournalClosed_IN()
      #{
      #    purchTable_ds.research(true);
      #}
    ENDSOURCE
    SOURCE #formControlIsDataBound
      #private boolean  formControlIsDataBound(Object  _formControl)
      #{
      #    FormControlType formControlType = SysFormRun::controlType(classIdGet(_formControl));
      #    boolean         ret             = false;
      #
      #    if (formControlType == FormControlType::CheckBox
      #    ||  formControlType == FormControlType::ComboBox
      #    ||  formControlType == FormControlType::ListBox
      #    ||  formControlType == FormControlType::RadioButton
      #    ||  formControlType == FormControlType::String
      #    ||  formControlType == FormControlType::StaticText
      #    ||  formControlType == FormControlType::Date
      #    ||  formControlType == FormControlType::Integer
      #    ||  formControlType == FormControlType::Real
      #    ||  formControlType == FormControlType::Time
      #    ||  formControlType == FormControlType::Image
      #    ||  formControlType == FormControlType::Grid
      #    ||  formControlType == FormControlType::TabPage)
      #    {
      #        ret = true;
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #handleSecurity
      #void handleSecurity(FormDataSource _fds, boolean _hasAccess)
      #{
      #    if (_fds && !_fds.allowCheck() && !_hasAccess)
      #    {
      #        _fds.query().dataSourceNo(1).enabled(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #hasTableAccess
      #boolean hasTableAccess(TableId _tableId, AccessType _neededAccessLevel = AccessType::View)
      #{
      #    DictTable dictTable = new DictTable(_tableId);
      #
      #    if (dictTable)
      #    {
      #        return dictTable.rights() >= _neededAccessLevel;
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #hideQualityManagement
      #void hideQualityManagement()
      #{
      #    status_qualityOrderStatusDisplay.visible(false);
      #    statusLine_qualityOrderStatusDisplay.visible(false);
      #    purchTable_qualityOrderStatusDisplay.visible(false);
      #    purchLine_qualityOrderStatusDisplay.visible(false);
      #
      #    lineStripProductQualitySeparator.visible(false);
      #    inventNonConformanceTableTableHeader.visible(false);
      #    inventQualityOrderTableTableHeader.visible(false);
      #    inventNonConformanceTableLine.visible(false);
      #    inventQualityOrderTableLine.visible(false);
      #}
    ENDSOURCE
    SOURCE #init
      #public void  init()
      #{
      #    Object              caller;
      #    boolean             wasCalledFromPurchLineBackOrderListPage = this.isCalledFromPurchLineBackOrderListPage();
      #    boolean             isFrenchRegulatoryEnabled = PublicSectorUtils::isFrenchRegulatoryEnabled();
      #
      #    imageListAppl_PurchTableForm = ImageListAppl_PurchTableForm::construct();
      #
      #    #ISOCountryRegionCodes
      #
      #    isPurchLine_INEnabled   = PurchLine_IN::isExtensionEnabled();
      #    isPurchLine_WEnabled    = PurchLine_W::isExtensionEnabled();
      #    isPurchTableEnabled_W   = PurchTable_W::isExtensionEnabled();
      #    isPurchTableEnabled_BR   = PurchTable_BR::isExtensionEnabled();
      #    isPurchTableEnabled_RU   = PurchTable_RU::isExtensionEnabled();
      #
      #    isCalledFromLP = TradeFormHelper::isCalledFromForm(element.args(), formStr(PurchTableListPage));
      #
      #    if (element.args())
      #    {
      #        if (!element.args().record() && element.args().lookupRecord())
      #        {
      #            //Called from EP
      #            element.args().record(element.args().lookupRecord());
      #            element.args().lookupRecord(null);
      #        }
      #    }
      #
      #    if (element.args() && !isCalledFromLP)
      #    {
      #        element.args().copyCallerQuery(CopyCallerQuery::No);
      #    }
      #
      #    zakatParameterEnabled = LedgerParameters::find().IsZakatEnabled_SA;
      #    // </GSA
      #    this.initCalledFromVendorSearch();
      #    super();
      #    isDocuActionTemplate = DocuActionForTemplate::createTemplateOnMenuButton(mbTemplatesButton, purchTable.TableId);
      #    FormSecurity::setFormDataSourceMaxAccessRight(this);
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(RAsset)))
      #    {
      #        itemTypeCache = new Map(Types::String, Types::Enum);
      #    }
      #
      #    isRU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #
      #    if (isRU)
      #    {
      #        itemInventDimSetupCache = new Map(Types::String, Types::Enum);
      #    }
      #
      #    advanceHoldersEnabled = EmplParameters_RU::enableAdvanceHolders();
      #
      #    purchTableBudgetCheckResult.imageList(imageListAppl_PurchTableForm.imageList());
      #    purchLineBudgetCheckResult.imageList(imageListAppl_PurchTableForm.imageList());
      #
      #    dimensionDefaultingControllerHeader = DimensionDefaultingController::constructInGroupWithValues(false, true, true, 0, this, groupFinancialDimensionHeader , "@SYS101181");
      #    dimensionDefaultingControllerHeader.parmAttributeValueSetDataSource(purchTable_ds, fieldStr(PurchTable, DefaultDimension));
      #
      #    DimensionDefaultingController::initContainerId(groupFinancialDimensionLine, 2);
      #    dimensionDefaultingControllerLine = DimensionDefaultingController::constructInGroupWithValues(false, true, true, 0, this, groupFinancialDimensionLine , "@SYS101181");
      #    dimensionDefaultingControllerLine.parmAttributeValueSetDataSource(purchLine_ds, fieldStr(PurchLine, DefaultDimension));
      #
      #    ledgerDefaultAccountControllerLine = LedgerDimensionDefaultAccountController::construct(purchLine_ds, fieldStr(PurchLine, LedgerDimension));
      #    ledgerDefaultAccountControllerLine.parmControl(purchLine_LedgerDimension);
      #
      #    // Initialization specifically for projects
      #    // Only show purchase orders associated to projects if form is called from the project main menu
      #    if (element.args().parmEnumType() == enumNum(PurchTableFormId) && element.args().parmEnum() == PurchTableFormId::Project)
      #    {
      #        if (! element.args().record()) // called from menu
      #        {
      #            purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable, ProjId)).value(SysQuery::valueNotEmptyString());
      #        }
      #
      #        isProjectForm = true;
      #    }
      #
      #    // Initialization for call from PuchLineBackOrderListForm
      #    if (wasCalledFromPurchLineBackOrderListPage)
      #    {
      #        this.applyBackOrderLinesSelection();
      #        purchTableForm = PurchTableForm::construct(PurchTableFormId::None, element.args().record());
      #    }
      #    else
      #    {
      #        purchTableForm = PurchTableForm::constructFromArgs(this.args());
      #    }
      #
      #    purchTableForm.parmPurchTableFormRun(element);
      #    purchTableForm.parmDimensionDefaultingControllerHeader(dimensionDefaultingControllerHeader);
      #
      #    TaxVATNumTable::enableLookupVATNum(vatNum);
      #
      #    element.updateDesign(InventDimFormDesignUpdate::Init);
      #    lineSpec.visibleColsValue(8+conLen(inventDimFormSetup.dimFieldsActive(inventDimFormSetup.parmDimParmVisibleGrid())));
      #
      #    purchTable_ds.object(fieldNum(PurchTable, PurchaseType)).allowEdit(purchTableForm.editPurchaseType());
      #    purchTable_ds.query(purchTableForm.queryPurchTable(purchTable_ds.query()));
      #    purchLine_ds.query(purchTableForm.queryPurchLine(purchLine_ds.query()));
      #
      #    groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));
      #
      #    if (!TaxParameters::find().CashDiscOnInvoice)
      #    {
      #        purchTable_ds.object(fieldNum(PurchTable, CashDiscPercent)).allowEdit(false);
      #    }
      #
      #    interCompanySalesCache = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Container);
      #
      #    if (!InventParameters::find().UseQualityManagement)
      #    {
      #        element.hideQualityManagement();
      #    }
      #
      #    //Hide 1099 Tab if neither 1099G or 1099S keys are enabled
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector))
      #            && !(isConfigurationkeyEnabled(configurationKeyNum(Tax1099G)) || isConfigurationkeyEnabled(configurationKeyNum(Tax1099S))))
      #    {
      #        tabLineTax1099.visible(false);
      #    }
      #
      #    // Hide the Environment tab
      #    environment.visible(false);
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        taxWithholdParameters   = TaxWithholdParameters_IN::find();
      #        taxParameters           = TaxParameters::find();
      #        eximParameters          = EximParameters_IN::find();
      #
      #        taxExciseTypeController = TaxExciseTypeController_IN::construct(exciseNone_IN,
      #                                                                        exciseManufacture_IN,
      #                                                                        exciseTraders_IN,
      #                                                                        taxInformation_IN_ECCNumber,
      #                                                                        taxInformation_IN_ManECCRegistrationNumberTable,
      #                                                                        taxInformation_IN_TraderECCRegistrationNumberTable,
      #                                                                        purchLine_IN_DS);
      #        taxExciseTypeController.parmFieldNumDirectSettlement(fieldNum(PurchLine_IN, DirectSettlement_IN));
      #        taxExciseTypeController.parmFieldNumDSA(fieldNum(PurchLine_IN, dsa_in));
      #
      #        element.setVisible_IN();
      #        element.updateDesign_IN();
      #        element.setTaxWithholdVisible_IN();
      #    }
      #
      #    if (LedgerParameters::find().IsEncumbranceProcessEnabled == NoYes::No)
      #    {
      #        buttonSubLedgerJournalLines.visible(false);
      #        encumbranceSummary.visible(false);
      #        ledgerTransact.visible(false);
      #    }
      #    else
      #    {
      #        buttonSubLedgerJournalLines.visible(true);
      #        encumbranceSummary.visible(true);
      #        ledgerTransact.visible(true);
      #    }
      #
      #    purchParameters = PurchParameters::find();
      #    if (purchParameters.ChangeRequestEnabled == NoYes::No &&
      #        purchParameters.ChangeRequestAllowOverride == NoYes::No)
      #    {
      #        workflowEnabled = false;
      #    }
      #    else
      #    {
      #        workflowEnabled = true;
      #    }
      #
      #    element.design().workflowEnabled(workflowEnabled);
      #
      #    bankLGFeatureChecker    = BankLGFeatureChecker::construct();
      #    enableLGFeature         = bankLGFeatureChecker.checkFeatureEnabled();
      #    bankLGRequestForm.visible(enableLGFeature);
      #
      #    bankLCImportFeatureChecker = BankLCImportFeatureChecker::construct();
      #    enableLCFeature            = bankLCImportFeatureChecker.checkFeatureEnabled();
      #    purchTable_DS.object(fieldNum(PurchTable, BankDocumentType)).visible(enableLCFeature || enableLGFeature);
      #    buttonCreateBankLCImport.visible(enableLCFeature);
      #
      #    zakat_SA.visible(zakatParameterEnabled);
      #
      #    headerForeignTrade_ListCode.visible(IntrastatParameters::find().euSalesListTransferPurchases);
      #
      #    lineDeliveryType.imageList(imageListAppl_PurchTableForm.imageList());
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
      #    {
      #        packageTree.setImagelist(imageListAppl_PurchTableForm.imageList());
      #        packageTree.setStateImagelist(imageListAppl_PurchTableForm.imageList());
      #    }
      #
      #    // Needed to check validity of address
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidFrom));
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidTo));
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, CountryRegionId));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidFrom));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidTo));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, CountryRegionId));
      #
      #
      #    //if the Purchase Requisition control is enabled, then disable it if the commitments feature is enabled.
      #    if (purchReq_PurchReqId.enabled())
      #    {
      #        purchReq_PurchReqId.enabled(!isFrenchRegulatoryEnabled);
      #    }
      #
      #    //Make the commitments fields mandatory and visible if the feature is enabled, otherwise hide them and make them non-mandatory.
      #    purchCommitmentLineLookup_PSN.visible(isFrenchRegulatoryEnabled);
      #    purchCommitmentLineLookup_PSN.mandatory(isFrenchRegulatoryEnabled);
      #
      #
      #    purchCommitmentLineLookup2_PSN.visible(isFrenchRegulatoryEnabled);
      #    purchCommitmentLineLookup2_PSN.mandatory(isFrenchRegulatoryEnabled);
      #
      #    commitment_PSN.visible(isFrenchRegulatoryEnabled);
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
      #    {
      #        element.disableConsInvoiceControl_JP();
      #    }
      #
      #    if (BrazilParameters::isEnabled())
      #    {
      #        salesPurchOperationTypeController_BR = new SalesPurchOperationTypeController_BR(this.name());
      #        purchTable_BR_DS.object(fieldNum(PurchTable_BR, cfpsId_BR)).visible(BrazilParameters::isCFPSEnabled_BR());
      #    }
      #
      #    if (VendAdvanceInvoice::isDeactivated())
      #    {
      #        prepayPurchTableHeading.visible(false);
      #        buttonRemovePurchPrepayTable.visible(false);
      #        buttonUpdatePrepayInvoice.visible(false);
      #    }
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
      #    {
      #        purchTable_DS.object(fieldNum(PurchTable, StatProcId)).visible(false);
      #        purchLine_DS.object( fieldNum(PurchLine,  StatProcId)).visible(false);
      #    }
      #
      #    if (element.args().parmEnumType() == enumNum(FormOpenMode))
      #    {
      #        caller = element.args().caller();
      #        if (caller && caller is SysSetupFormRun)
      #        {
      #            skipLinkActive = element.args().parmEnum() == FormOpenMode::ForNew;
      #        }
      #    }
      #
      #    if (RetailSMB::IsRetailSMBEnabled())
      #    {
      #        RetailSMB::SetVisible(element);
      #    }
      #    MCRPriceHistory.visible(purchParameters.MCREnablePriceDetails);
      #}
      #
      #
      #
    ENDSOURCE
    SOURCE #initCalledFromVendorSearch
      #private void initCalledFromVendorSearch()
      #{
      #    Object                      myCaller;
      #    VendTmpCurrentVendorResult  vendTmpCurrentVendorResult;
      #
      #    wasCalledFromVendorSearch = false;
      #
      #    if (element.args())
      #    {
      #        myCaller = element.args().caller();
      #        if (myCaller && myCaller is FormRun)
      #        {
      #            if (element.args().caller().name() == formStr(VendSearchResults))
      #            {
      #                wasCalledFromVendorSearch   = true;
      #                vendTmpCurrentVendorResult  = element.args().record();
      #                vendAccountSearch           = vendTmpCurrentVendorResult.VendorAccountNum;
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #interCompanyIsPriceDiscSearchNeeded
      #RecId interCompanyIsPriceDiscSearchNeeded()
      #{
      #    return interCompanyIsPriceDiscSearchNeeded;
      #}
    ENDSOURCE
    SOURCE #interCompanyRefreshCache
      #void interCompanyRefreshCache()
      #{
      #    interCompanySalesCache = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Container);
      #}
    ENDSOURCE
    SOURCE #inventDimSetupObject
      #Object inventDimSetupObject()
      #{
      #    return inventDimFormSetup;
      #}
    ENDSOURCE
    SOURCE #invoiceMatchingAccess
      #public void invoiceMatchingAccess()
      #{
      #    invoiceMatching.visible(VendParameters::find().editUseInvoiceMatching());
      #}
    ENDSOURCE
    SOURCE #isCalledFromPurchLineBackOrderListPage
      #private boolean isCalledFromPurchLineBackOrderListPage()
      #{
      #    return TradeFormHelper::isCalledFromForm(element.args(), formStr(PurchLineBackOrderListPage));
      #}
    ENDSOURCE
    SOURCE #lineTaxTransSource
      #public void lineTaxTransSource()
      #{
      #    element.automaticTotalDiscount();
      #
      #    PurchTotals::showTaxLine(menuitemDisplayStr(TaxTmpWorkPurchOrder), purchTable,purchLine);
      #}
    ENDSOURCE
    SOURCE #markupTransFormClosed
      #public void markupTransFormClosed()
      #{
      #    // Update budget check result for changes from edit
      #    purchLine_ds.updateBudgetCheckResultDisplay();
      #
      #    if (isPurchLine_INEnabled)
      #    {
      #        purchLine_IN_ds.reread();
      #        purchLine_IN_ds.refresh();
      #    }
      #    if (isPurchLine_WEnabled)
      #    {
      #        purchLine_W_ds.reread();
      #        purchLine_W_ds.refresh();
      #    }
      #
      #    if(purchTable.MCRDropShipment)
      #    {
      #        purchLine_ds.research();
      #    }
      #
      #    purchTable_ds.reread();
      #    purchTable_ds.refresh();
      #    purchTable_ds.selectionChanged();
      #}
    ENDSOURCE
    SOURCE #multiLineDiscount
      #/// <summary>
      #/// Calculates multi line discounts.
      #/// </summary>
      #public void multiLineDiscount()
      #{
      #    element.automaticTotalDiscount();
      #
      #    if (purchTable.updateMultiLineDisc())
      #    {
      #        purchLine_ds.research(true);
      #    }
      #}
    ENDSOURCE
    SOURCE #nextGroup
      #void  nextGroup()
      #{
      #    if (!PurchLine::exist(purchTable.PurchId))
      #    {
      #        purchLine_ds.create();
      #    }
      #
      #    purchLine_ItemId.setFocus();
      #}
    ENDSOURCE
    SOURCE #numberSeqFormHandler
      #NumberSeqFormHandler numberSeqFormHandler()
      #{
      #    // Activate number sequence handler
      #    if (!numberSeqFormHandler)
      #    {
      #        numberSeqFormHandler = NumberSeqFormHandler::newForm(EMSParameter::numRefFlowId().NumberSequenceId,
      #                                                         element,
      #                                                         emsPurchOrderFlowRelation_ds,
      #                                                         fieldNum(EMSPurchOrderFlowRelation, FlowId));
      #    }
      #    return numberSeqFormHandler;
      #}
    ENDSOURCE
    SOURCE #packageAllowEdit
      #/// <summary>
      #/// Package Allow Edit
      #/// </summary>
      #/// <param name="allowEdit">
      #/// True to allow Edit, False otherwise
      #/// </param>
      #void packageAllowEdit(boolean allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit());
      #    purchLine_ds.object(fieldNum(PurchLine, VariantId)).allowEdit(allowEdit);
      #    if (!pdsIsCWItem(purchLine.ItemId))
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, PurchQty)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, PurchQty)).allowEdit());
      #    }
      #    purchLine_ds.object(fieldNum(PurchLine, PurchUnit)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, PurchUnit)).allowEdit());
      #    inventDim_ds.allowEdit(allowEdit && inventDim_ds.allowEdit());
      #    retailPackagePurch_ds.object(fieldNum(RetailPackagePurch, Qty)).allowEdit(allowEdit);
      #
      #}
    ENDSOURCE
    SOURCE #parmPostalAddressLocation
      #public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = 0)
      #{
      #    if (!_postalAddressLocation)
      #    {
      #        // Set location by active datasource
      #        if (element.dataSource().name() == purchLine_ds.name())
      #        {
      #            _postalAddressLocation = purchLine.deliveryLocation();
      #        }
      #        else
      #        {
      #            _postalAddressLocation = purchTable.deliveryLocation();
      #        }
      #    }
      #
      #    postalAddressLocation = _postalAddressLocation;
      #    return postalAddressLocation;
      #}
    ENDSOURCE
    SOURCE #pbaConfigureLine
      #void pbaConfigureLine()
      #{
      #    PBATablePBAInstance   pbaTablePBAInstance;
      #
      #    purchLine_DS.write();
      #
      #    if (PCRuntimeLibrary::isConstraintBasedConfigurable(purchLine.ItemId))
      #    {
      #        PCExecuteVariantConfiguration::execute(purchLine, purchLine.ItemId, inventDim.ConfigId);
      #    }
      #    else
      #    {
      #        if (!autoConfig )
      #        {
      #            PBAExecute::execute(purchLine,pbaTablePBAInstance, '');
      #        }
      #
      #        autoConfig = false;
      #    }
      #
      #    purchline_ds.research(true);
      #}
    ENDSOURCE
    SOURCE #PrintManagement
      #/// <summary>
      #/// Launch the print management setup form.
      #/// </summary>
      #public void PrintManagement()
      #{
      #    PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();
      #
      #    setupContext.addHierarchyContext(PrintMgmtHierarchyType::Purch, PrintMgmtNodeType::PurchTable);
      #    setupContext.parmCaller(element);
      #    setupContext.parmReferencedTableBuffer(purchTable_ds.cursor());
      #    setupContext.parmCountryRegionId(LogisticsPostalAddress::findRecId(purchTable.DeliveryPostalAddress).CountryRegionId);
      #    PrintMgmt::launchSetup(setupContext);
      #}
    ENDSOURCE
    SOURCE #purchLineResearch
      #void purchLineResearch()
      #{
      #    purchLine_ds.research();
      #}
    ENDSOURCE
    SOURCE #purchTable
      #PurchTable purchTable()
      #{
      #    return purchTable;
      #}
    ENDSOURCE
    SOURCE #refreshPurchLine_IN
      #public void refreshPurchLine_IN()
      #{
      #    purchLine_ds.reread();
      #    purchLine_ds.refresh();
      #    purchLine_IN_ds.reread();
      #    purchLine_IN_ds.refresh();
      #    purchLine_W_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #removeAgreementLink
      #public void removeAgreementLink()
      #{
      #    PurchTableForm_DlvScheduleSyncEnabled purchTableFormDlvSchedule;
      #    PurchLine       origPurchLine = purchLine.orig().data();
      #    boolean doNotAsk;
      #
      #
      #    if (purchLine.unLinkAgreementLinePrompt())
      #    {
      #        // When the user manually removes a link to an agreement line, then also prevent automatic (re)linking of agreement lines
      #        purchLine.AgreementSkipAutoLink = NoYes::Yes;
      #
      #        if (purchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
      #        {
      #            purchTableFormDlvSchedule = purchTableForm as PurchTableForm_DlvScheduleSyncEnabled;
      #            purchTableFormDlvSchedule.parmOrderLineOrig(origPurchLine);
      #            if (purchTableFormDlvSchedule.deliveryLinesSync(purchLine, doNotAsk))
      #            {
      #                // Need to update delivery lines on grid.
      #                purchLine_DS.executeQuery();
      #            }
      #        }
      #        purchLine_DS.research(true);
      #        this.enableAgreementButtons();
      #    }
      #}
    ENDSOURCE
    SOURCE #resetAssetContainers
      #/// <summary>
      #///     Resets the asset containers to empty.
      #/// </summary>
      #public void resetAssetContainers()
      #{
      #    assetRules              = conNull();
      #    assetQualifierList      = new List(Types::Container);
      #    selectedAssetQualifier  = '';
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    super();
      #    docuActionTemplateUndefined.visible(!isDocuActionTemplate);
      #
      #    if (RetailSMB::IsRetailSMBEnabled())
      #    {
      #        RetailUtils::HidePart(element, identifierStr(PurchEncumbranceSummaryPart));
      #    }
      #}
    ENDSOURCE
    SOURCE #selectControl
      #public boolean selectControl(FormControl _control)
      #{
      #    boolean  ok;
      #
      #    ok = super(_control);
      #
      #    if (ok  &&  workflowEnabled && _control  &&  element.formControlIsDataBound(_control))
      #    {
      #        element.toggleWorkflow_ds(_control);
      #    }
      #
      #    return ok;
      #}
    ENDSOURCE
    SOURCE #setAccountingDistributionView
      #public void setAccountingDistributionView(AccountingDistributionView    _accountingDistributionView)
      #{
      #    purchTableForm.subscribeToAccDistViewEvents(_accountingDistributionView);
      #}
    ENDSOURCE
    SOURCE #setAllowEdit1099GFields
      #/// <summary>
      #/// Sets the 1099G fields to be editable if G-2 is selected
      #/// </summary>
      #/// <remarks>
      #/// When G-2 is selected, the fields are set as editable, when it is not selected they are uneditable
      #/// </remarks>
      #void setAllowEdit1099GFields()
      #{
      #    boolean     canEdit;
      #    boolean     canEditTax1099;
      #    #Tax1099
      #
      #    canEditTax1099 = purchLine.allowEditTax1099();
      #
      #    canEdit = purchTableForm.can1099GFieldsBeEdited(purchLine) && canEditTax1099;
      #
      #    tax1099GFields.allowEdit(canEdit);
      #
      #    canEdit = purchTableForm.can1099G1FieldsBeEdited(purchLine) && canEditTax1099;
      #
      #    tax1099G1Fields.allowEdit(canEdit);
      #}
    ENDSOURCE
    SOURCE #setAllowEdit1099SFields
      #/// <summary>
      #/// Sets the editable state of S-2 fields based on the value of S-2
      #/// </summary>
      #/// <remarks>
      #/// When S-2 is selected the fields are editable, when it is not selected they are not editable.
      #/// </remarks>
      #void setAllowEdit1099SFields()
      #{
      #    boolean canEdit;
      #
      #    #Tax1099
      #
      #    canEdit = purchTableForm.can1099SFieldsBeEdited(purchLine) && purchLine.allowEditTax1099();
      #
      #    tax1099SFields.allowEdit(canEdit);
      #}
    ENDSOURCE
    SOURCE #setAllowEditTax1099
      #/// <summary>
      #/// Sets the editable status of tax1099Amount and tax1099StateAmount based upon the invoice status
      #/// </summary>
      #/// <remarks>
      #/// If the record is marked as Invoiced then the fields are not editable.
      #/// </remarks>
      #void setAllowEditTax1099()
      #{
      #    boolean canEdit;
      #    Tax1099Fields tax1099Fields;
      #    #Tax1099
      #
      #    canEdit = purchLine.allowEditTax1099();
      #
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099Fields)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099Amount)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099State)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099StateAmount)).allowEdit(canEdit);
      #
      #    //Amounts on setup tab are not editable for 1099-S
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
      #
      #        if (canEdit && (tax1099Fields.Tax1099Box == #S_2))
      #        {
      #            line1099Fields_Tax1099Amount.allowEdit(false);
      #            line1099Fields_Tax1099StateAmount.allowEdit(false);
      #        }
      #        else
      #        {
      #            line1099Fields_Tax1099Amount.allowEdit(true);
      #            line1099Fields_Tax1099StateAmount.allowEdit(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setCFOP_BR
      #public RefRecId setCFOP_BR(boolean _userInteraction = false)
      #{
      #    CFOPValidation_BR           cfopValidation;
      #    RefRecId                    cfopTableRecId;
      #
      #    cfopValidation  = CFOPValidation_BR::construct(purchTable);
      #
      #    cfopTableRecId = cfopValidation.getDefaultCFOP(_userInteraction);
      #
      #    return cfopTableRecId;
      #}
      #
    ENDSOURCE
    SOURCE #setControls
      #void setControls()
      #{
      #    // Disable the Substance and Destination Process fields if the Source Process is not setup yet
      #    flow_SubstanceId.enabled(emsFlow.SourceProcessId ? true : false);
      #    flow_DestinationProcessId.enabled(emsFlow.SourceProcessId ? true : false);
      #}
    ENDSOURCE
    SOURCE #setEditCommitmentLineAllowed
      #/// <summary>
      #/// Enables or disables editability of the commitment line field.
      #/// </summary>
      #/// <param name="_allowEdit">
      #/// Whether to enable editing.
      #/// </param>
      #void setEditCommitmentLineAllowed(boolean _allowEdit)
      #{
      #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, PurchCommitmentLine_PSN)).allowEdit(_allowEdit);
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #setEditItemCategoryAllowed
      #/// <summary>
      #/// Enables or disables editing of the item and procurement category fields.
      #/// </summary>
      #/// <param name="allowEdit">
      #/// Whether to enable editing.
      #/// </param>
      #void setEditItemCategoryAllowed(boolean allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(allowEdit);
      #
      #    if (BrazilParameters::isEnabled())
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(false);
      #    }
      #    else
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(allowEdit);
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #setEditLinenumberAllowed
      #/// <summary>
      #/// Enables or disables editing of the line number field.
      #/// </summary>
      #/// <param name="_allowEdit">
      #/// A bolean specifying whether editing is allowed.
      #/// </param>
      #void setEditLinenumberAllowed(boolean _allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, LineNumber)).allowEdit(_allowEdit);
      #}
    ENDSOURCE
    SOURCE #setEximFieldsAccess_IN
      #public void setEximFieldsAccess_IN()
      #{
      #    boolean           isVisible;
      #    boolean           isInvoice;
      #
      #    isVisible = (taxParameters.EximIncentiveSchemes_IN && purchTable_W.CustomsImportOrder_IN);
      #    isInvoice = (purchLine.PurchQty > 0);
      #
      #    exim_IN.visible(isVisible);
      #    eximPurchLine_IN_ApplyDEPB.visible(isVisible && eximParameters.ActivateEPCG);
      #    incentiveSchemeGroup_IN.visible(isVisible);
      #
      #    exim_IN.allowEdit(isInvoice);
      #    eximPurchLine_IN_ApplyDEPB.allowEdit(isInvoice);
      #    incentiveSchemeGroup_IN.enabled(isInvoice);
      #}
    ENDSOURCE
    SOURCE #setIsPwpField
      #public void setIsPwpField()
      #{
      #    if (!isConfigurationkeyEnabled(configurationKeyNum(Project3)))
      #    {
      #        return;
      #    }
      #
      #    if (ProjLineProperty::find(purchline.ProjLinePropertyId).ToBeInvoiced)
      #    {
      #        purchline_ds.object(fieldNum(PurchLine, IsPwp)).allowEdit(true);
      #    }
      #    else
      #    {
      #        purchline_ds.object(fieldNum(PurchLine, IsPwp)).allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #setLineDefaults
      #/// <summary>
      #/// Sets default values to be used when creating an order line.
      #/// </summary>
      #public void setLineDefaults()
      #{
      #    Object      callerFormObject;
      #
      #    // Make sure this was called via a form.
      #    if (element.args().caller() && element.args().caller() is FormRun)
      #    {
      #        if (element.args().caller().name() == formStr(ReqSupplyDemandSchedule))
      #        {
      #            callerFormObject = element.args().caller();
      #
      #            if (formHasMethod(callerFormObject, identifierStr(parmItemId)))
      #            {
      #                defaultItemId = callerFormObject.parmItemId();
      #            }
      #
      #            if (formHasMethod(callerFormObject, identifierStr(defaultInventDim)))
      #            {
      #                defaultInventDim = callerFormObject.defaultInventDim();
      #            }
      #
      #            if (formHasMethod(callerFormObject, identifierStr(getFromDate)))
      #            {
      #                defaultDate = callerFormObject.getFromDate();
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdEnabled_IN
      #void setTaxWithholdEnabled_IN()
      #{
      #
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).enabled(!purchTable_W.tdsGroup_IN &&
      #                                                                    taxWithholdParameters.tcsActivate);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).enabled(!purchTable_W.tcsGroup_IN &&
      #                                                                    taxWithholdParameters.tdsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).enabled(!purchLine_IN.tdsGroup_IN    &&
      #                                                                   taxWithholdParameters.tcsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).enabled(!purchLine_IN.tcsGroup_IN    &&
      #                                                                   taxWithholdParameters.tdsActivate);
      #    buttonWithholdTax_IN.enabled((purchLine_IN.tdsGroup_IN || purchLine_IN.tcsGroup_IN) &&
      #                                 (taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate));
      #    if (purchLine.InventRefId && purchLine.InventRefTransId && !purchTable.isInterCompanyOrder())
      #    {
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).enabled(!purchLine.InventRefId      &&
      #                                                                        !purchLine.InventRefTransId &&
      #                                                                         taxWithholdParameters.tcsActivate);
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).enabled(!purchLine.InventRefId      &&
      #                                                                        !purchLine.InventRefTransId &&
      #                                                                         taxWithholdParameters.tdsActivate);
      #        purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).enabled(!purchLine.InventRefId        &&
      #                                                                      !purchLine.InventRefTransId   &&
      #                                                                       taxWithholdParameters.tcsActivate);
      #        purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).enabled(!purchLine.InventRefId        &&
      #                                                                      !purchLine.InventRefTransId   &&
      #                                                                       taxWithholdParameters.tdsActivate);
      #    }
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, SoftwareDeclReceived_IN)).enabled((purchLine_IN.tdsGroup_IN != ''));
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdVisible_IN
      #void setTaxWithholdVisible_IN()
      #{
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).visible(taxWithholdParameters.tdsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).visible(taxWithholdParameters.tdsActivate);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).visible(taxWithholdParameters.tcsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).visible(taxWithholdParameters.tcsActivate);
      #    withholdingTax_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #    buttonWithholdTax_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #    withholdingTax.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #}
    ENDSOURCE
    SOURCE #setTitleText
      #public void setTitleText()
      #{
      #    headerTitle.text(strFmt('%1 : %2 - %3', purchTable.PurchId,
      #                                            purchTable.InvoiceAccount,
      #                                            purchTable.vendTable_InvoiceAccount().name()));
      #}
    ENDSOURCE
    SOURCE #setupAsset
      #/// <summary>
      #///     Sets asset group on the line based on asset rules defined.
      #/// </summary>
      #/// <param name = "_purchLine">
      #///     A <c>Purchline</c> buffer based on which asset rules needs to be looked up.
      #/// </param>
      #/// <returns>
      #///     true if an asset group can be set and if no user selection is required; otherwise, false.
      #/// </returns>
      #boolean setupAsset(PurchLine _purchLine)
      #{
      #    container       optionContainer;
      #    container       assetQualifierContainer;
      #    int             i;
      #    boolean         ret;
      #    str             temp;
      #    ListEnumerator  valueList;
      #
      #    ret = true;
      #
      #    //Find asset information only for lines which are being created or lines which already have asset information set
      #    //For purchase lines where asset information was not set when created, there should not be any re-evaluation for asset rules.
      #    if (_purchLine.ProcurementCategory
      #        && purchTable.PurchaseType == PurchaseType::Purch
      #        && (!purchLine.RecId || purchLine.CreateFixedAsset)
      #        && !assetRules)
      #    {
      #        if (AssetParameters::canAssetBeAutoCreated())
      #        {
      #            assetRules = PurchTableForm::setupAssetGroup(_purchLine);
      #        }
      #
      #        //Load assetQualifierList
      #        if (conLen(assetRules) > 0)
      #        {
      #            optionContainer = conPeek(assetRules, #AssetOptionContainerPosition);
      #
      #            if (conLen(optionContainer) != 0)
      #            {
      #                //Load asset qualifier options
      #                if (!_purchLine.AssetGroup)
      #                {
      #                    //Asset group does not exist but qualifiers exist; User needs to select a qualifier
      #                    ret = checkFailed("@SYS136416");
      #                }
      #
      #                assetQualifierList = new List(Types::Container);
      #                for (i = 1; i < conLen(optionContainer); i += 3)
      #                {
      #                    assetQualifierContainer = [conPeek(optionContainer, i), conPeek(optionContainer, i+1)];
      #                    assetQualifierList.addEnd(assetQualifierContainer);
      #
      #                    valueList = assetQualifierList.getEnumerator();
      #
      #                    temp = conPeek(assetQualifierContainer, #AssetOptionContainerGroupPosition);
      #
      #                    if (_purchLine.AssetGroup == temp)
      #                    {
      #                        selectedAssetQualifier = conPeek(assetQualifierContainer, #AssetOptionContainerTextPosition);
      #                    }
      #                }
      #            }
      #        }
      #    }
      #
      #    if (assetQualifierList && !assetQualifierList.empty())
      #    {
      #        //Qualifier options exist, so load asset info controls
      #        element.design().controlName(#grpAssetQualifier).visible(true);
      #        txtAssetQualifierQuestion.text(conPeek(assetRules, #AssetQualifierTextPosition));
      #        editAssetQualifier.text(selectedAssetQualifier);
      #        editAssetQualifier.mandatory(true);
      #    }
      #    else
      #    {
      #        element.design().controlName(#grpAssetQualifier).visible(false);
      #        editAssetQualifier.mandatory(false);
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #setupEnvironmentalTab
      #/// <summary>
      #/// Set the environmetal tab visibility and the enabled state.
      #/// </summary>
      #/// <remarks>
      #/// Environmental tab is visible for selected vendor and items. Environmental tab is enabled when a <c>PurchLine</c> record exists in the form.
      #/// </remarks>
      #public void setupEnvironmentalTab()
      #{
      #    // Environment tab is only shown for selected vendor and items
      #    environment.visible(isConfigurationkeyEnabled(configurationKeyNum(EMS)) &&
      #                         EMSActivation::isActive(purchTable.OrderAccount , purchLine.ItemId , purchLine.InventDimId));
      #
      #    environment.enabled(purchLine.RecId != 0);
      #    environmentActionPane.enabled(purchLine.RecId != 0);
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(psaPwp)))
      #    {
      #        if (ProjTable::setFieldPwpThresholdPercent(ProjTable::find(purchLine.ProjId)))
      #        {
      #            purchLine_IsPwp.visible(true);
      #            psaPwpPercent.visible(true);
      #        }
      #        else
      #        {
      #            purchLine_IsPwp.visible(false);
      #            psaPwpPercent.visible(false);
      #        }
      #
      #        element.setIsPwpField();
      #
      #        if (purchLine.IsPwp)
      #        {
      #            buttonSubledgerdistribution.enabled(false);
      #            buttonSourceDocumentDistributionHeader.enabled(false);
      #        }
      #        else
      #        {
      #            buttonSubledgerdistribution.enabled(true);
      #            buttonSourceDocumentDistributionHeader.enabled(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setVisible_IN
      #private void setVisible_IN()
      #{
      #    TaxParameters       taxParametersLoc = TaxParameters::find();
      #    boolean             isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();
      #
      #    exciseNone_IN.visible(true);
      #    exciseTraders_IN.visible(false);
      #    exciseManufacture_IN.visible(false);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, CustomsImportOrder_IN)).visible(taxParametersLoc.Customs_IN);
      #
      #    companyInformation.visible(isTaxParametersMarked);
      #    tabTaxInformation_IN.visible(isTaxParametersMarked || TaxWithholdParameters_IN::checkTaxParameters());
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, AssessableValue_IN)).visible(isTaxParametersMarked);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, MaximumRetailPrice_IN)).visible(isTaxParametersMarked);
      #    excise_IN.visible(taxParametersLoc.Excise_IN);
      #    customs_IN.visible(taxParametersLoc.Customs_IN);
      #    exim_IN.visible(taxParametersLoc.Customs_IN && taxParametersLoc.EximIncentiveSchemes_IN);
      #    serviceTax_IN.visible(taxParametersLoc.ServiceTax_IN);
      #    indiaSalesTax.visible(taxParametersLoc.SalesTax_IN);
      #    indiaVAT.visible(taxParametersLoc.vat_in);
      #}
    ENDSOURCE
    SOURCE #setWidthHeight
      #void setWidthHeight()
      #{
      #    element.design(1).width(element.design(1).widthValue());
      #    element.design(1).height(element.design(1).heightValue());
      #}
    ENDSOURCE
    SOURCE #shouldHeaderChangeRequestsBeEnabled
      #protected boolean shouldHeaderChangeRequestsBeEnabled()
      #{
      #    return purchTable.ChangeRequestRequired;
      #}
    ENDSOURCE
    SOURCE #shouldHeaderInterCompanyBeEnabled
      #protected boolean shouldHeaderInterCompanyBeEnabled()
      #{
      #    return purchTable.isInterCompanyOrder();
      #}
    ENDSOURCE
    SOURCE #shouldLineInterCompanyBeEnabled
      #protected boolean shouldLineInterCompanyBeEnabled()
      #{
      #    return purchTable.isInterCompanyOrder() && !purchLine.isCategoryBased();
      #}
    ENDSOURCE
    SOURCE #showDeliveryAddressFiscalInformation_BR
      #/// <summary>
      #/// Shows or hides Address fiscal information depending on the Purchase type.
      #/// The fields should not be showed if the Purchase type is ReturnItem
      #/// </summary>
      #public void showDeliveryAddressFiscalInformation_BR()
      #{
      #    if(purchTable.PurchaseType == PurchaseType::ReturnItem)
      #    {
      #        headerDlvAddressFiscalInformation_BR.visible(true);
      #        lineDlvAddressFiscalInformation_BR.visible(true);
      #    }
      #    else
      #    {
      #        headerDlvAddressFiscalInformation_BR.visible(false);
      #        lineDlvAddressFiscalInformation_BR.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #showInactiveAddressBar
      #public void showInactiveAddressBar()
      #{
      #    LogisticsLocationEntity::showHideEffectiveAddressMessageBar(element, logisticsPostalAddressHeader, logisticsPostalAddressLine);
      #}
    ENDSOURCE
    SOURCE #tmsSetCarrierFieldsFromDlvMode
      #public void tmsSetCarrierFieldsFromDlvMode(DlvModeId   _dlvModeId)
      #{
      #    TMSCarrierService carrierService;
      #
      #    carrierService = TMSCarrierService::findByDlvModeId(_dlvModeId);
      #
      #    tmsPurchTable.CarrierCode           = carrierService.CarrierCode;
      #    tmsPurchTable.CarrierServiceCode    = carrierService.CarrierServiceCode;
      #    tmsPurchTable.ModeCode              = TMSCarrier::find(carrierService.CarrierCode).ModeCode;
      #
      #    tmsPurchTable_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #tmsUpdatePurchTable
      #/// <summary>
      #/// Updates purchase order when transportation fields are updated
      #/// </summary>
      #public void tmsUpdatePurchTable()
      #{
      #    purchTable.DlvMode = TMSCarrierService::findDlvModeId(tmsPurchTable.CarrierCode, tmsPurchTable.CarrierServiceCode);
      #
      #    purchTable_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #toggleWorkflow_ds
      #private void  toggleWorkflow_ds(Object  _formControl)
      #{
      #    Object  parentControl;
      #
      #    int     dataSourceId;
      #    int     oldWorkflow_ds;
      #
      #    // The reference fields does not point to a datasource in the design,
      #    // but the reference group (parent control) does
      #    parentControl = _formControl.parentControl();
      #    if (parentControl  &&  parentControl is FormReferenceGroupControl)
      #    {
      #        dataSourceId = parentControl.dataSource();
      #    }
      #    else
      #    {
      #        dataSourceId = _formControl.dataSource();
      #    }
      #
      #    oldWorkflow_ds = element.design().workflowDatasource();
      #
      #    // Return if the form datasource isn't changed or it is empty
      #    if (!dataSourceId || dataSourceId == oldWorkflow_ds)
      #    {
      #        return;
      #    }
      #
      #    // Distinguish between header and line-item workflow
      #    if (dataSourceId == purchLine_ds.id()
      #    ||  dataSourceId == purchLineForeignTradeCategory_ds.id()
      #    ||  dataSourceId == inventDim_ds.id()
      #    ||  dataSourceId == emsPurchOrderFlowRelation_ds.id()
      #    ||  dataSourceId == emsFlow_ds.id())
      #    {
      #        // Return if the workflow datasource isn't changed
      #        if (oldWorkflow_ds == purchLine_ds.id())
      #        {
      #            return;
      #        }
      #
      #        // Only enable "line-items" when the header already has been submitted
      #        if (!element.canSubmitToWorkflow())
      #        {
      #            element.design().workflowDatasource(purchLine_ds.id());
      #            element.design().workflowType(workFlowTypeStr(PurchLineTemplate));
      #
      #            element.updateWorkflowControls();
      #        }
      #    }
      #    else
      #    {
      #        // Return if the workflow datasource isn't changed
      #        if (oldWorkflow_ds == purchTable_ds.id())
      #        {
      #            return;
      #        }
      #
      #        element.design().workflowDatasource(purchTable_ds.id());
      #        element.design().workflowType(workFlowTypeStr(PurchTableTemplate));
      #
      #        element.updateWorkflowControls();
      #    }
      #}
    ENDSOURCE
    SOURCE #updateControlsForFrenchConfirmedPO
      #/// <summary>
      #/// Enables or disables specific controls for purchase orders that have been confirmed at some point in the past.
      #/// </summary>
      #/// <remarks>
      #/// This is only used for the French regulatory feature.
      #/// </remarks>
      #public void updateControlsForFrenchConfirmedPO()
      #{
      #    boolean canEnable;
      #
      #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
      #    {
      #        canEnable = purchTable.canModifyPurchaseOrder();
      #
      #        purchLine_ds.allowDelete(canEnable);
      #        purchLine_ds.allowCreate(canEnable);
      #
      #        // Header buttons
      #        buttonPurchCancel.enabled(canEnable);
      #        purchaseCalculate.enabled(canEnable);
      #        purchOrderMiscCharges.enabled(canEnable);
      #
      #        // Grid buttons
      #        lineStripNew.enabled(canEnable);
      #        buttonLineQuickQuote.enabled(canEnable);
      #        lineStripDelete.enabled(canEnable);
      #        buttonLineExpandBOM.enabled(canEnable);
      #        markupTrans_LinePurchTable.enabled(canEnable);
      #
      #        // Grid fields
      #        purchLine_PurchQtyGrid.allowEdit(canEnable);
      #        purchLine_PurchPriceGrid.allowEdit(canEnable);
      #        purchLine_LineDiscGrid.allowEdit(canEnable);
      #        purchLine_LinePercentGrid.allowEdit(canEnable);
      #        purchLine_LineAmountGrid.allowEdit(canEnable);
      #        purchLine_PurchUnitGrid.allowEdit(canEnable);
      #        purchCommitmentLineLookup_PSN.allowEdit(canEnable);
      #
      #        // Line details tab fields
      #        lineSalesTax_TaxItemGroup.allowEdit(canEnable);
      #        lineSalesTax_TaxGroup.allowEdit(canEnable);
      #        lineDisc.allowEdit(canEnable);
      #        linePercent.allowEdit(canEnable);
      #        multiLnDisc.allowEdit(canEnable);
      #        multiLnPercent.allowEdit(canEnable);
      #        purchLine_PriceUnit.allowEdit(canEnable);
      #        purchLine_PurchMarkup.allowEdit(canEnable);
      #        projectCostPrice_PurchQty.allowEdit(canEnable);
      #        projectCostPrice_PurchPrice.allowEdit(canEnable);
      #        projectCostPrice_LineAmount.allowEdit(canEnable);
      #        purchCommitmentLineLookup2_PSN.allowEdit(canEnable);
      #    }
      #}
    ENDSOURCE
    SOURCE #updateDesign
      #void updateDesign(InventDimFormDesignUpdate mode)
      #{
      #    InventMovement movement = InventMovement::construct(purchLine);
      #    Set            validInventDimDSset;
      #    InventDimControlIdCollection inventDimControlIdCollection;
      #    boolean emptyLine;
      #
      #    switch (mode)
      #    {
      #        case InventDimFormDesignUpdate::Init:
      #            if (!inventDimFormSetup)
      #            {
      #                validInventDimDSset = new Set(Types::String);
      #                validInventDimDSset.add(inventDim_ds.name());
      #                inventDimControlIdCollection = InventDimControlIdCollection::construct();
      #                inventDimControlIdCollection.add(storageDimensionsLine.id(), false);
      #                inventDimControlIdCollection.add(trackingDimesions.id(), false);
      #                inventDimControlIdCollection.add(productDimensions.id(), false);
      #                inventDimControlIdCollection.add(inventoryDimensionsGrid.id(), true);
      #                inventDimFormSetup = InventDimCtrl_Frm_Mov_OrderLine::newFromFormMovement(element, movement, validInventDimDSset
      #                , inventDimControlIdCollection
      #                );
      #
      #            }
      #        case InventDimFormDesignUpdate::Active,
      #             InventDimFormDesignUpdate::FieldChange:
      #            emptyLine = purchLine.ItemId == '' && purchLine.ProcurementCategory == 0;
      #            storageDimensionsLine.allowEdit(!emptyLine);
      #            trackingDimesions.allowEdit(!emptyLine);
      #            productDimensions.allowEdit(!emptyLine);
      #            inventoryDimensionsGrid.allowEdit(!emptyLine);
      #            if (!emptyLine)
      #            {//For performance reasons, only call the inventDimFormSetup if the order line has an item ID or Category ID.
      #                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
      #                inventDimFormSetup.formSetControls(mode == InventDimFormDesignUpdate::Active);
      #            }
      #            break;
      #
      #        default : throw error(strFmt("@SYS54195",funcName()));
      #    }
      #
      #    purchLine_DS.updateDesignForProject();
      #}
    ENDSOURCE
    SOURCE #updateDesign_IN
      #public void updateDesign_IN()
      #{
      #    if(!taxParameters)
      #    {
      #        taxParameters = TaxParameters::find();
      #    }
      #    if (taxParameters.ServiceTax_IN)
      #    {
      #        taxItemGroupHeadingRev = TaxItemGroupHeading::find(purchLine.TaxItemGroup);
      #    }
      #    if (purchTable_W.CustomsImportOrder_IN)
      #    {
      #        if (TaxParameters::find().ServiceTax_IN)
      #        {
      #            purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
      #        }
      #        else
      #        {
      #            purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(false);
      #        }
      #
      #    }
      #    else
      #    {
      #        if (taxParameters.ServiceTax_IN)
      #        {
      #            if (taxItemGroupHeadingRev.ServiceTaxBasis_IN == ServiceTaxBasis_IN::CashBasis)
      #            {
      #                purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(false);// Legacy Cash behaviour kept intact.
      #            }
      #            else if (taxItemGroupHeadingRev.ReverseChargePercentage_IN != 0) // POTBasis
      #            {
      #                purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #updateFormState
      #public void updateFormState(SourceDocumentLineRecId _sourceDocumentLineRecId)
      #{
      #    // Accounting distribution form has closed - update budget check result for changes from edit
      #    purchLine_ds.updateBudgetCheckResultDisplay();
      #}
    ENDSOURCE
    SOURCE #updateRFIDTagging
      #void  updateRFIDTagging()
      #{
      #    RFIDItemTaggingLevel    taggingLevel;
      #    boolean                 itemTagging;
      #    boolean                 caseTagging;
      #    boolean                 palletTagging;
      #
      #    if (inventDimFormSetup.parmDimParmEnabled().InventSerialIdFlag)
      #    {
      #        itemTagging = true;
      #        caseTagging = true;
      #    }
      #    else
      #    {
      #        itemTagging = false;
      #        caseTagging = false;
      #    }
      #
      #    if (inventDimFormSetup.parmDimParmEnabled().wmsPalletIdFlag
      #        &&  purchLine.inventTable().PalletTagging)
      #    {
      #        palletTagging = true;
      #    }
      #    else
      #    {
      #        palletTagging = false;
      #    }
      #
      #    if (itemTagging  ||  caseTagging)
      #    {
      #        taggingLevel = purchLine.inventTable().ItemTaggingLevel;
      #
      #        switch (taggingLevel)
      #        {
      #            case RFIDItemTaggingLevel::None :
      #                itemTagging = false;
      #                caseTagging = false;
      #                break;
      #
      #            case RFIDItemTaggingLevel::ItemLevel :
      #                caseTagging = false;
      #                break;
      #
      #            case RFIDItemTaggingLevel::CaseLevel :
      #                itemTagging = false;
      #                break;
      #        }
      #    }
      #
      #    purchLine_ds.object(fieldNum(PurchLine, ItemTagging)).allowEdit     ( itemTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, ItemTagging)).skip          (!itemTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, CaseTagging)).allowEdit     ( caseTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, CaseTagging)).skip          (!caseTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, PalletTagging)).allowEdit   ( palletTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, PalletTagging)).skip        (!palletTagging);
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          Index               #PurchIdx
          StartPosition       #Last
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PurchId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OrderAccount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.reread();
                #    purchLine_ds.refresh();
                #    purchTable_ds.rereadReferenceDataSources();
                #    if (isPurchTableEnabled_W)
                #    {
                #        purchTable_W_ds.refresh();
                #    }
                #    dimensionDefaultingControllerHeader.activated();
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable.enableDataSourceFields_BR();
                #        purchTable_BR_ds.refresh();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Email
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LogisticsElectronicAddressLookup lookup = LogisticsElectronicAddressLookup::newParameters(_formControl);
                #
                #    lookup.addParty(purchTable.contactPerson().Party);
                #    lookup.addParty(purchTable.vendTable_OrderAccount().Party);
                #
                #    lookup.parmMethodType(LogisticsElectronicAddressMethodType::Email);
                #    lookup.performFormLookup();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (TaxParameters::isCustomsEnable_IN())
                #    {
                #        if (PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
                #        {
                #            //When user changes the currency code. MRP defaulted from item is converted using Customs exchange rate for Export orders.
                #            purchLine_IN.MaximumRetailPrice_IN = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchTable.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
                #        }
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Payment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    boolean allowEditEmplAccount_RU;
                #
                #    super();
                #
                #    if (advanceHoldersEnabled)
                #    {
                #        allowEditEmplAccount_RU = PaymTerm::isEmplAccountUsed_RU(purchTable.Payment);
                #        purchTable_W_ds.object(fieldNum(PurchTable_W, EmplAccount_RU)).allowEdit(allowEditEmplAccount_RU);
                #        purchTable_ds.object(fieldNum(PurchTable, CashDisc)).allowEdit(!allowEditEmplAccount_RU);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CashDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    CashDisc    cashDisc;
                #
                #    super();
                #
                #    cashDisc = CashDisc::find(purchTable.CashDisc);
                #    purchTable.CashDiscPercent = cashDisc.Percent;
                #
                #    purchTable.dataSource().refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VendGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    dimensionDefaultingControllerHeader.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DlvMode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.tmsSetCarrierFieldsFromDlvMode(purchTable.DlvMode);
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchaseType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the purchase lines when the purchase type is changed.
                #/// </summary>
                #/// <remarks>
                #/// This method calls the <c>modifyPurchaseType</c> method of the <c>PurchTableType</c> class to
                #/// so that the fixed asset information is cleared if necessary. The purchase line data source
                #/// is refreshed as the information may have been modified.
                #/// </remarks>
                #public void modified()
                #{
                #    super();
                #
                #    purchTableType = purchTable.type();
                #    purchTableType.modifyPurchaseType();
                #    element.configBankDocumentControls();
                #    purchLine_ds.refresh();
                #    element.enableAdvanceAction();
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable.enableDataSourceFields_BR();
                #        purchTable_ds.rereadReferenceDataSources();
                #        element.showDeliveryAddressFiscalInformation_BR();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD URL
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LogisticsElectronicAddressLookup lookup = LogisticsElectronicAddressLookup::newParameters(_formControl);
                #
                #    lookup.addParty(purchTable.contactPerson().Party);
                #    lookup.addParty(purchTable.vendTable_OrderAccount().Party);
                #
                #    lookup.parmMethodType(LogisticsElectronicAddressMethodType::URL);
                #    lookup.performFormLookup();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymentSched
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    if (purchTable.PaymentSched)
                #    {
                #        buttonPaymentSchedule.enabled(true);
                #    }
                #    else
                #    {
                #        buttonPaymentSchedule.enabled(false);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSiteId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ContactPersonId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if (purchTable.InventSiteId)
                #    {
                #        InventLocation::lookupBySiteIdAllTypes(_formControl, purchTable.InventSiteId);
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    dimensionDefaultingControllerHeader.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VATNum
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::jumpRefVATNum(purchTable, element);
                #    else
                #        super();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::lookupVATNum(vatNum,purchTable);
                #    else
                #        super(_formControl, _filterStr);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD FixedDueDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    PaymCalendarAdjustedDate        paymCalendarAdjustedDate;
                #
                #    super();
                #
                #    // perform the payment calendar work only for the required countries
                #    if (SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
                #    {
                #        paymCalendarAdjustedDate = PaymCalendarSourcePurchaseOrder::getAdjustedDate(purchTable);
                #
                #        purchTable.FixedDueDate = PaymCalendarProcessor::getAdjustedDueDate(purchTable.FixedDueDate, priorDueDate, paymCalendarAdjustedDate);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ContractNum_SA
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(
                #    FormControl _formControl,
                #    str         _filterStr)
                #{
                #    VendContractZakat_SA::lookupContracts(_formControl, purchTable.OrderAccount);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD DeliveryPostalAddress
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable_ds.cacheCalculateMethod(tableMethodStr(PurchTable, deliveryCNPJCPFNUM_BR));
                #        purchTable_ds.cacheCalculateMethod(tableMethodStr(PurchTable, deliveryIENum_BR));
                #    }
                #
                #    purchTable_ds.refresh();
                #
                #    element.showInactiveAddressBar();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #    LogisticsLocationSelectionLookup_Purch lookup;
                #
                #    lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);
                #
                #    lookup.parmInventSiteId(purchTable.InventSiteId);
                #    lookup.parmInventLocationId(purchTable.InventLocationId);
                #
                #    lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
                #    lookup.parmReturnLocation(false);
                #
                #    ret = lookup.performFormLookup();
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD BankDocumentType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.configBankDocumentControls();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountingDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret = true;
                #
                #    if(!purchTable.checkAccountingDateFiscalYear())
                #    {
                #        purchTable.AccountingDate = purchTable.orig().AccountingDate;
                #        ret = false;
                #        Box::warning("@SYS335906");
                #    }
                #    else
                #    {
                #        ret = super();
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
                #    dimensionDefaultingControllerLine.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #reread_BR
          #public void reread_BR()
          #{
          #    purchTable_BR_ds.reread();
          #    purchTable_BR_ds.rereadReferenceDataSources();
          #    purchtable_BR_ds.refresh();
          #}
        ENDSOURCE
        SOURCE #enableJournalButtons
          #/// <summary>
          #///     Enables journal buttons.
          #/// </summary>
          #public void enableJournalButtons()
          #{
          #    #ISOCountryRegionCodes
          #
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        purchTableForm.parmButtonUpdateInvoiceRegistration_IN(buttonUpdateInvoiceRegistration_IN);
          #        purchTableForm.parmButtonUpdateBillOfEntry_IN(buttonUpdateBillOfEntry_IN);
          #        purchTableForm.parmButtonJournalBillOfEntry_IN(buttonJournalBillOfEntry_IN);
          #    }
          #
          #    // Enable journal buttons
          #    purchTableForm.enableUpdateJournalButtons(purchTable,
          #                                              buttonUpdatePurchaseOrder,
          #                                              buttonUpdateReceiptsList,
          #                                              buttonUpdatePackingSlip,
          #                                              buttonUpdateInvoice,
          #                                              buttonProformaPurchaseOrder,
          #                                              buttonProformaReceiptsList,
          #                                              buttonProformaPackingSlip,
          #                                              buttonProformaInvoice
          #                                              ,buttonUpdateInvoice4Paym_RU,
          #                                              buttonUpdateFacture_RU,
          #                                              factureEditLinesVend_RU,
          #                                              buttonProformaInvoice4Paym_RU,
          #                                              buttonProformaFacture_RU,
          #                                              factureEditLinesVend_Proforma_RU
          #                                              , buttonConfirmationRequest,
          #                                              mcrButtonDeliverMenuItemButton,
          #                                              mcrButtonReleaseMenuItemButton,
          #                                              mcrButtonProformaDeliver,
          #                                              mcrButtonProformaRelease);
          #    // Re-enable journal buttons when multiple orders are selected.
          #    buttonConfirm.enabled(buttonUpdatePurchaseOrder.enabled());
          #}
        ENDSOURCE
        SOURCE #enableDistributionTemplate
          #/// <summary>
          #/// Enables the <c>AccountingDistributionTemplate</c> field based on the purchase order header state.
          #/// </summary>
          #public void enableDistributionTemplate()
          #{
          #    distributionTemplateHeader.allowEdit(purchTable.canApplyAllocationOrDistributionTemplate());
          #}
          #
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    logisticsPostalAddressHeader_ds.validTimeStateUpdate(ValidTimeStateUpdate::Correction);
          #    logisticsPostalAddressHeader_ds.query().validTimeStateDateTimeRange(DateTimeUtil::minValue(), DateTimeUtil::maxValue());
          #    super();
          #}
        ENDSOURCE
        SOURCE #updateBudgetCheckResultDisplay
          #/// <summary>
          #/// Updates budget check result display cache.
          #/// </summary>
          #public void updateBudgetCheckResultDisplay()
          #{
          #    if (this.cacheCalculateMethod(tableMethodStr(PurchTable, displayBudgetCheckResult)))
          #    {
          #        purchTable_ds.refresh();
          #        // Must refresh form cache for ALL purchase order lines.
          #        purchLine_ds.research(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    Query  query;
          #
          #    switch(element.args().dataset())
          #    {
          #        case tableNum(CostControlTransCommittedCost):
          #            purchTable_ds.autoQuery(false);
          #
          #            query   = new Query();
          #            queryBuildRangeProj = query.addDataSource(tableNum(PurchTable)).addRange(fieldNum(PurchTable, PurchId));
          #            purchTable_ds.query(query);
          #            break;
          #    }
          #
          #    super();
          #
          #    if ((TradeFormHelper::isCalledFromForm(element.args(), formStr(VendTable))
          #        || TradeFormHelper::isCalledFromForm(element.args(), formStr(VendTableListPage)))
          #        && element.args().record().TableId == tableNum(VendTable))
          #    {
          #        this.query().dataSourceTable(tableNum(PurchTable)).clearDynalinks();
          #    }
          #
          #    if(InventParameters::find().UseQualityManagement)
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, qualityOrderStatusDisplay), false);
          #    }
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, displayBudgetCheckResult), false);
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, displayDocumentStatus));
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, agreementDocumentTitle_RU), true);
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, deliveryCNPJCPFNUM_BR));
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, deliveryIENum_BR));
          #    }
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, editReasonComment));
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    List                    purchTable2LineUpdateFields;
          #    ListEnumerator          purchTable2LineUpdateFieldsEnumerator;
          #    PurchTable2LineField    purchTable2LineField;
          #
          #    ret = super();
          #
          #    copyTaxGroupToMarkupTrans = DialogButton::No;
          #    if (ret && purchTable.TaxGroup != purchTable.orig().TaxGroup)
          #    {
          #        copyTaxGroupToMarkupTrans   = MarkupTrans::promptCopyTaxGroupToMarkupTrans(purchTable.TableId, purchTable.RecId);
          #        ret                         = copyTaxGroupToMarkupTrans != DialogButton::Cancel;
          #    }
          #
          #    if (ret)
          #    {
          #        purchTable2LineUpdatePrompt = PurchTable2LineUpdatePrompt::newExecuteExtendedPrompt(purchTable, copyTaxGroupToMarkupTrans);
          #        // If the purchTable2LineUpdatePrompt object is null no fields are to be updated.
          #        if(purchTable2LineUpdatePrompt)
          #        {
          #            ret = purchTable2LineUpdatePrompt.parmExtendedPromptReturnValue();
          #        }
          #    }
          #
          #    if (isRU
          #        && ret
          #        && purchTable2LineUpdatePrompt)
          #    {
          #        purchTable2LineUpdateFields = List::create(purchTable2LineUpdatePrompt.packedSalesPurchTableToLineUpdateFields());
          #
          #        purchTable2LineUpdateFieldsEnumerator = purchTable2LineUpdateFields.getEnumerator();
          #
          #        while (purchTable2LineUpdateFieldsEnumerator.moveNext())
          #        {
          #            purchTable2LineField = purchTable2LineUpdateFieldsEnumerator.current();
          #            if (purchTable2LineField.parmFieldId()          == PurchTable::fieldIdToInternalFieldId_W(fieldNum(PurchTable_RU, InventProfileId_RU), tableNum(PurchTable_RU))
          #                && purchTable2LineField.parmUpdateLines()   == NoYes::No)
          #            {
          #                // must be checked for possible inconsistence if user did not select to propagate inventProfileId to the order lines
          #                // otherwise it will be checked on sales order validateWrite() method
          #                ret = purchTable.checkInventProfile_RU(true);
          #            }
          #        }
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #void  write()
          #{
          #    DialogButton            copyAddress     = DialogButton::No;
          #    boolean                 convertCurrency = false;
          #    boolean                 rollBackCurrencyChange;
          #    TradeCurencyConversion  tradeCurrencyConversion;
          #    LogisticsPostalAddressRecId originalDeliveryPostalAddress;
          #    boolean                     mustReread;
          #    TMSPurchTable           newTMSPurchTable;
          #
          #    if (purchTable.checkUpdate())
          #    {
          #        if (PurchLine::exist(purchTable.PurchId) || MarkupTrans::exist(purchTable.TableId, purchTable.RecId))
          #        {
          #            if (purchTable.CurrencyCode != purchTable.orig().CurrencyCode)
          #            {
          #                [convertCurrency, tradeCurrencyConversion] = PurchTable::promptConvertCurrencyCode(purchTable);
          #                rollBackCurrencyChange = !convertCurrency;
          #            }
          #        }
          #
          #        if (PurchLine::exist(purchTable.PurchId))
          #        {
          #            if (purchTable.DeliveryPostalAddress != purchTable.orig().DeliveryPostalAddress)
          #            {
          #                copyAddress = PurchTable::promptCopyDeliveryAddress();
          #                originalDeliveryPostalAddress = purchTable.orig().DeliveryPostalAddress;
          #            }
          #        }
          #
          #        ttsbegin;
          #
          #        if (convertCurrency)
          #        {
          #            if (isConfigurationkeyEnabled(configurationKeyNum(LedgerAdv2BudgetCtrl)))
          #            {
          #                purchTable.convertCurrencyCode(purchTable.CurrencyCode, tradeCurrencyConversion, purchTable.AccountingDate);
          #            }
          #            else
          #            {
          #                purchTable.convertCurrencyCode(purchTable.CurrencyCode, tradeCurrencyConversion);
          #            }
          #        }
          #        else
          #        {
          #            if (rollBackCurrencyChange)
          #            {
          #                // Cancel has been choosen in the dialogue:
          #                // Currency code should not be recalculated, in fact all changes in currency code should be
          #                // rolled back...
          #                purchTable.CurrencyCode = purchTable.orig().CurrencyCode;
          #            }
          #        }
          #
          #        dimensionDefaultingControllerHeader.writing();
          #
          #        if (TaxThaiGovCertificationFeatureChecker::isTaxBranchEnabled())
          #        {
          #            purchTable_W.TaxBranch = TaxBranchType::getTaxBranchRecIdByDefaultDimension(purchTable.DefaultDimension);
          #        }
          #
          #        if (copyTaxGroupToMarkupTrans == DialogButton::Yes || copyTaxGroupToMarkupTrans == DialogButton::YesToAll)
          #        {
          #            MarkupTrans::updateTaxGroup(purchTable.TableId, purchTable.RecId, purchTable.TaxGroup, purchTable.orig().TaxGroup, copyTaxGroupToMarkupTrans,
          #                purchTable.isInvoiceMatched());
          #            copyTaxGroupToMarkupTrans = DialogButton::No;
          #        }
          #
          #        super();
          #        if(SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(PurchTable_Intrastat)))
          #        {
          #           purchtable_Intrastat.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_W)
          #        {
          #            purchTable_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_RU)
          #        {
          #            purchTable_RU.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_BR)
          #        {
          #            purchTable_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #
          #        if (copyAddress != DialogButton::Cancel  &&  copyAddress != DialogButton::No)
          #        {
          #            purchTable.copyAddressToLine(copyAddress, originalDeliveryPostalAddress);
          #        }
          #
          #        if (purchTable2LineUpdatePrompt)
          #        {
          #            purchTable2LineUpdatePrompt.run();
          #            purchTable2LineUpdatePrompt = null;
          #            mustReread = true;
          #        }
          #
          #        if (!tmsPurchTable.isTmp()) // No need to query for TMSPurchTable if it is disabled
          #        {
          #            newTMSPurchTable = TMSPurchTable::find(purchTable.PurchId);
          #
          #            tmsPurchTable.data(newTMSPurchTable);
          #            tmsPurchTable.reread();
          #        }
          #
          #        ttscommit;
          #
          #        if (mustReread)
          #        {
          #            purchLine_ds.research();
          #        }
          #        if (BrazilParameters::isEnabled())
          #        {
          #            purchLine_ds.research(true);
          #        }
          #    }
          #    defaultPurchLine.clear();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #}
        ENDSOURCE
        SOURCE #delete
          #void  delete()
          #{
          #    if (purchTable.checkDelete())
          #    {
          #        if (purchTableType)
          #        {
          #            purchTableType.formMethodDataSourceDelete(element, purchTable_ds);
          #        }
          #
          #        super();
          #
          #        dimensionDefaultingControllerHeader.deleted();
          #    }
          #}
        ENDSOURCE
        SOURCE #create
          #void  create(boolean  append = true)
          #{
          #    PurchTable      newPurchTable;
          #    TMSPurchTable   newTMSPurchTable;
          #    boolean         purchTableFormCreate;
          #    QueryBuildDataSource    purchTableDS;
          #
          #    element.editPurch(true);
          #
          #    if (wasCalledFromVendorSearch)
          #    {
          #        purchTableFormCreate = purchTableForm.createFromVendorSearch(vendAccountSearch);
          #    }
          #    else
          #    {
          #        purchTableFormCreate = purchTableForm.create();
          #    }
          #    if (purchTableFormCreate)
          #    {
          #        if(skipLinkActive)
          #        {
          #            skipLinkActive = false;
          #            if (!linkActiveHeaderExecuted)
          #            {
          #                this.linkActive();
          #            }
          #        }
          #        newPurchTable = purchTableForm.purchTable();
          #        if (newPurchTable.ProjId && element.args().dataset() == tableNum(ProjTable))
          #        {
          #            purchTableDS = purchTable_ds.queryRun().query().dataSourceTable(tableNum(PurchTable));
          #            purchTableDS.addRange(fieldNum(PurchTable, PurchId)).value(newPurchTable.PurchId);
          #        }
          #        element.setLineDefaults();
          #
          #        if (newPurchTable)
          #        {
          #            dimensionDefaultingControllerHeader.activated();
          #            if (purchTable.AccountingDate)
          #            {
          #                dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #            }
          #
          #            super(append);
          #            purchTable.data(newPurchTable);
          #            if (isPurchTableEnabled_W || isPurchTableEnabled_RU || isPurchTableEnabled_BR)
          #            {
          #                purchTable.SysExtensionSerializerMap::unpackAll();
          #            }
          #            purchTable_ds.rereadReferenceDataSources();
          #
          #            lineViewTab.setFocus();
          #
          #            if (!tmsPurchTable.isTmp()) // No need to query for TMSPurchTable if it is disabled
          #            {
          #                newTMSPurchTable = TMSPurchTable::find(purchTable.PurchId);
          #
          #                tmsPurchTable.data(newTMSPurchTable);
          #                tmsPurchTable.reread();
          #            }
          #        }
          #        else
          #        {
          #            element.editPurch(purchTableForm.editHeaderAllowed(), purchTableForm.deleteHeaderAllowed());
          #        }
          #    }
          #    else
          #    {
          #        if(TradeFormHelper::isCalledFromForm(element.args()))
          #        {
          #            element.close();
          #        }
          #        else
          #        {
          #            this.editPurch();
          #        }
          #    }
          #
          #    skipLinkActive = false;
          #}
        ENDSOURCE
        SOURCE #active
          #int  active()
          #{
          #    int                                 ret;
          #    PurchTotals                         purchTotals;
          #    boolean                             editHeaderAllowed;
          #    boolean                             deleteHeaderAllowed;
          #    boolean                             allowEditDeliveryPostalAddress;
          #
          #    purchTableForm.purchTable(purchTable);
          #
          #    editHeaderAllowed   = purchTableForm.editHeaderAllowed();
          #    deleteHeaderAllowed = purchTableForm.deleteHeaderAllowed();
          #
          #    element.editPurch(editHeaderAllowed, deleteHeaderAllowed);
          #
          #    ret = super();
          #
          #    dimensionDefaultingControllerHeader.activated();
          #
          #    if (purchTable.AccountingDate)
          #    {
          #        dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #    }
          #
          #    if (purchTable.RecId)
          #    {
          #        purchTable_ds.enableDistributionTemplate();
          #    }
          #
          #    interCompanyAllowIndirectCreationOrig.visible(purchTable.interCompanyAllowIndirectCreationOrig() ? true : false);
          #
          #    purchTableForm.setHeaderAccess();
          #    allowEditDeliveryPostalAddress = purchTable_ds.object(fieldNum(PurchTable, DeliveryPostalAddress)).allowEdit();
          #    logisticsLocationSelectHeader.enabled(allowEditDeliveryPostalAddress);
          #    dirPartyPostalAddressNewHeader.enabled(allowEditDeliveryPostalAddress);
          #
          #    if (isRU)
          #    {
          #        purchTable_ds.object(fieldNum(PurchTable, PostingProfile)).allowEdit(! purchTable_W.EmplAccount_RU);
          #    }
          #
          #    if (tmpPurchTableTaxTransForm && !tmpPurchTableTaxTransForm.closed())
          #    {
          #        purchTotals = PurchTotals::newPurchTable(purchTable);
          #        purchTotals.calc();
          #        tmpPurchTableTaxTransForm.pushTaxObject(purchTotals.tax());
          #    }
          #    if (TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        if ( tmpPurchTableTaxWithholdTransForm && !tmpPurchTableTaxWithholdTransForm.closed())
          #        {
          #            purchTotals = PurchTotals::newPurchTable(purchTable);
          #            purchTotals.calc();
          #            tmpPurchTableTaxWithholdTransForm.pushTaxObject(purchTotals.taxWithhold_IN());
          #        }
          #    }
          #
          #    element.interCompanyRefreshCache();
          #
          #    if (isRU)
          #    {
          #        element.enabledVATTaxAgent_RU();
          #    }
          #
          #    purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(purchTable.ProjId ? true : false);
          #    if (purchTable.ProjId && !purchTable.isProjectSalesItemReqPO())
          #    {
          #        headerInquiry_CostControlCommittedCost.enabled(true);
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #        {
          #            if ((purchTable.PurchStatus == PurchStatus::Received) ||
          #                (purchTable.PurchStatus == PurchStatus::Invoiced))
          #            {
          #                purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(false);
          #            }
          #            else
          #            {
          #                purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(true);
          #            }
          #        }
          #    }
          #    else
          #    {
          #        headerInquiry_CostControlCommittedCost.enabled(false);
          #    }
          #
          #    element.configBankDocumentControls();
          #    element.setTitleText();
          #    element.showInactiveAddressBar();
          #
          #    if (zakatParameterEnabled)
          #    {
          #        element.enableContractNumber_SA();
          #    }
          #
          #    buttonSourceDocumentDistributionHeader.enabled(purchTable.SourceDocumentLine ? true : false);
          #
          #    element.updateControlsForFrenchConfirmedPO();
          #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #    {
          #        retailAddItemMenuItem.enabled(editPurchOrder.enabled()
          #            && !purchTable.MCRDropShipment);
          #
          #        retailSumLines_ds.executeQuery();
          #
          #        if (rboItemPackage.isActivePage() && treeView.value())  //Only fills the package tree when package tab is chosen and user has selected tree view
          #            element.fillPackageTree();
          #
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchTableForm.activate_BR();
          #        element.showDeliveryAddressFiscalInformation_BR();
          #    }
          #
          #    if (TaxParameters::isCustomsEnable_IN())
          #    {
          #        customsImportAssessableValue_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::Yes && TaxParameters::find().Customs_IN == NoYes::Yes);
          #        purchLine_CustomsMaxRetailPrice_IN.visible(PurchTable::find(purchTable.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes && TaxParameters::find().Customs_IN == NoYes::Yes);
          #        purchLine_MaximumRetailPrice_IN.enabled(PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::No);
          #    }
          #    if (TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        element.setTaxWithholdEnabled_IN();
          #    }
          #
          #    purchTable_ds.enableJournalButtons();
          #
          #    element.enableTMSFields();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void linkActive()
          #{
          #    ProjTable                       projTableLink;
          #    ProjTable                       projTableLinkQuery;
          #    ProjInvoiceTable                projInvoiceTableLink;
          #    QueryBuildRange                 projIdPurchTable;
          #    ProjWIPTable                    projWIPTable;
          #    CostControlTransCommittedCost   costControlTransCommittedCost;
          #    PurchLine                       purchLineLink;
          #    QueryBuildDataSource            purchTableDS;
          #    QueryBuildDataSource            queryBuildDataSource;
          #    InterCompanyPurchSalesReference interCompanyPurchReference;
          #
          #    if (skipLinkActive)
          #    {
          #        return;
          #    }
          #
          #    // Initialize QueryBuildDataSource as table PurchTable.
          #    purchTableDS = purchTable_ds.query().dataSourceTable(tableNum(PurchTable));
          #
          #    switch(element.args().dataset())
          #    {
          #        case tableNum(InterCompanyPurchSalesReference):
          #            // Clear dynalinks, since multiple order can be shown
          #            purchTableDS.clearDynalinks();
          #            // Show all orders referenced from the original order
          #            interCompanyPurchReference  = element.args().record() as InterCompanyPurchSalesReference;
          #            queryBuildDataSource        = purchTableDS.addDataSource(tableNum(InterCompanyPurchSalesReference));
          #            queryBuildDataSource.relations(true);
          #            queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
          #            queryBuildDataSource.addRange(fieldNum(InterCompanyPurchSalesReference, SalesId)).value(interCompanyPurchReference.SalesId);
          #            break;
          #
          #        case tableNum(CostControlTransCommittedCost):
          #            costControlTransCommittedCost = element.args().record();
          #            queryBuildRangeProj.value(queryValue(costControlTransCommittedCost.RefId));
          #            break;
          #
          #
          #        case tableNum(ProjTable):
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projTableLink = element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Id.
          #            while select PurchId from purchLineLink group by PurchId
          #                where purchLineLink.ProjId  == projTableLink.ProjId
          #                  && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // Find all records in PurchLine that matches the sub-projects of the Project Id.
          #            while select ProjId from projTableLinkQuery
          #                where projTableLinkQuery.ParentId == projTableLink.ProjId
          #                join PurchId from purchLineLink group by PurchId
          #                    where purchLineLink.ProjId == projTableLinkQuery.ProjId
          #                        && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // Clear the dynalinks to remove the dynalink range by Project Id in PurchTable.
          #            if (purchTableDS.findRange(fieldNum(PurchTable,PurchId)))
          #            {
          #                purchTableDS.clearDynalinks();
          #            }
          #
          #            break;
          #
          #        case tableNum(ProjInvoiceTable):
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projInvoiceTableLink   = element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Ids related to a Project Contract.
          #            while select ProjId from projTableLink
          #                where projTableLink.ProjInvoiceProjId   == projInvoiceTableLink.ProjInvoiceProjId
          #                join PurchId from purchLineLink
          #                    where purchLineLink.ProjId == projTableLink.ProjId
          #                      && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // If no matching records foung in PurchLine, look for records in PurchTable.
          #            if (!purchTableDS.findRange(fieldNum(PurchTable, PurchId)))
          #            {
          #                while select ProjId from projTableLink
          #                    where projTableLink.ProjInvoiceProjId   == projInvoiceTableLink.ProjInvoiceProjId
          #                {
          #                    purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,ProjId)).value(projTableLink.ProjId);
          #                }
          #            }
          #            break;
          #
          #        case tableNum(ProjWIPTable)     :
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projWIPTable   =   element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Ids related to an estimate project.
          #            while select ProjId from projTableLink
          #                where projTableLink.wipProject  == projWIPTable.ProjId
          #                join PurchId from purchLineLink
          #                    where purchLineLink.ProjId == projTableLink.ProjId
          #                      && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // If no matching records foung in PurchLine, look for records in PurchTable.
          #            if (!purchTableDS.findRange(fieldNum(PurchTable, PurchId)))
          #            {
          #                while select ProjId from projTableLink
          #                    where projTableLink.wipProject  == projWIPTable.ProjId
          #                {
          #                    purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,ProjId)).value(projTableLink.ProjId);
          #
          #                }
          #            }
          #            break;
          #    }
          #
          #    if (purchTableForm.linkActive())
          #    {
          #        purchTableForm.purchTable(element.args().record());
          #        purchTable_ds.query(purchTableForm.queryPurchTable(purchTable_ds.query()));
          #    }
          #
          #    if (purchTableType)
          #    {
          #        purchTableType.formMethodDataSourceLinkActive(element, purchTable_ds);
          #    }
          #
          #    super();
          #    linkActiveHeaderExecuted = true;
          #}
        ENDSOURCE
        SOURCE #editPurch
          #void  editPurch()
          #{
          #    purchTableForm.purchTable(purchTable);
          #
          #    element.editPurch(purchTableForm.editHeaderAllowed(), purchTableForm.deleteHeaderAllowed());
          #
          #    if (isRU)
          #    {
          #        element.enableInvoice4PaymButtons();
          #    }
          #}
        ENDSOURCE
        SOURCE #editHeader
          #void editHeader()
          #{
          #    this.editPurch();
          #}
        ENDSOURCE
        SOURCE #reReadLines
          #void  reReadLines()
          #{
          #    purchLine_ds.executeQuery();
          #    this.editPurch();
          #}
        ENDSOURCE
        SOURCE #leave
          #public boolean leave()
          #{
          #    // PBA begin
          #    if( ! purchLine.PBAItemLine::checkMandatory() )
          #    {
          #        return false;
          #    }
          #    // PBA end
          #
          #    return super();
          #}
        ENDSOURCE
        SOURCE #setTouched
          #/// <summary>
          #/// Reset some informtaion when the current record is updated.
          #/// </summary>
          #void setTouched()
          #{
          #    purchIdTouched = purchTable.PurchId;
          #}
        ENDSOURCE
        SOURCE #reReadPackages
          #/// <summary>
          #/// Re-Read Packages
          #/// </summary>
          #void  reReadPackages()
          #{
          #    retailPackagePurch_ds.executeQuery();
          #}
        ENDSOURCE
        SOURCE #onSummaryRecordsInvalid
          #/// <summary>
          #///     Refreshes the summary factboxes to show updated record
          #/// </summary>
          #/// <param name="_tableId">
          #///     Table id of the table whose record became invalid
          #/// </param>
          #public void onSummaryRecordsInvalid(TableId _tableId)
          #{
          #    PartList                partList;
          #    FormRun                 formPart;
          #    str                     formName;
          #    int                     counter;
          #    PurchTotalsSummary      purchTotalsSummary;
          #    PurchEncumbranceSummary purchEncumbranceSummary;
          #
          #    if (purchParameters.AutomaticFactBoxUpdateOnPO_PSN && isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        switch(_tableId)
          #        {
          #            case tableNum(PurchTotalsSummary):
          #                purchTotalsSummary = PurchTotalsSummary::findByPurchId(purchTable.PurchId);
          #                formName = formStr(PurchTotalsSummaryPart);
          #                break;
          #
          #            case tableNum(PurchEncumbranceSummary):
          #                purchEncumbranceSummary = PurchEncumbranceSummary::findByPurchId(purchTable.PurchId);
          #                formName = formStr(PurchEncumbranceSummaryPart);
          #                break;
          #        }
          #
          #        if ((purchTotalsSummary && purchTotalsSummary.IsValid) || (purchEncumbranceSummary && !purchEncumbranceSummary.IsValid))
          #        {
          #            partList = new PartList(element);
          #            for(counter = 1; counter <= partList.partCount(); counter++)
          #            {
          #                if(partList.getPartById(counter).name() == formName)
          #                {
          #                    formPart = partList.getPartById(counter);
          #                    formPart.dataSource().reread();
          #                    formPart.dataSource().refresh();
          #                    break;
          #                }
          #            }
          #        }
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine
          Table               #PurchLine
          Index               #PurchLineIdx
          JoinSource          #PurchTable
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD ItemId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    InventLookup lookup;
                #
                #    lookup = new InventLookup(_formControl, new Query(), formStr(InventItemIdLookupPurchase));
                #    lookup.run();
                #}
              ENDSOURCE
              SOURCE #modified
                #void  modified()
                #{
                #    ItemId                  itemId;
                #    LedgerDimensionAccount  ledgerDimension;
                #    RefRecId                sourceDocumentLine;
                #    InventTable     inventTableLoc;
                #
                #    super();
                #
                #    itemId              = purchLine.ItemId;
                #    ledgerDimension     = purchLine.LedgerDimension;
                #    sourceDocumentLine  = purchLine.SourceDocumentLine;
                #
                #    purchTableForm.resetPurchLine(purchLine);
                #
                #    purchLine.ItemId    = itemId;
                #    purchLine.LedgerDimension = ledgerDimension;
                #    purchLine.SourceDocumentLine = sourceDocumentLine;
                #
                #    purchLine_ds.itemIdModified();
                #
                #    element.enableLinePBAActions();
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    element.enableProjSalesPrice();
                #
                #    element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
                #
                #    if (TaxParameters::checkTaxParameters_IN())
                #    {
                #        inventTableLoc                  = InventTable::find(purchLine.ItemId);
                #        inventTableLoc                      = InventTable::find(purchLine.ItemId);
                #        purchLine_IN.ExciseTariffCodes_IN      = inventTableLoc.ExciseTariffCodes_IN;
                #        purchLine_IN.CustomsTariffCodeTable_IN = inventTableLoc.CustomsImportTariffCodeTable_IN;
                #        purchLine_IN.ServiceCodeTable_IN       = inventTableLoc.ServiceCodeTable_IN;
                #        if (PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
                #        {
                #            //MRP defaulted from item is converted using Customs exchange rate for Import orders.
                #            purchLine_IN.MaximumRetailPrice_IN = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchTable.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
                #        }
                #        purchLine_IN_DS.enableExciseFields_IN();
                #        purchLine_ds.rereadReferenceDataSources();
                #    }
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        if (purchLine.inventTable().ItemType != ItemType::Service)
                #        {
                #            purchLine.LedgerDimension = SalesPurchOperationType_BR::find(purchTable_BR.SalesPurchOperationType_BR).LedgerDimension;
                #        }
                #
                #        purchLine.setCFOP_BR();
                #
                #        element.enableServiceFields_BR();
                #    }
                #}
                #
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Name
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // Do not default Name from category when modified.
                #    keepName = true;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PriceUnit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.refresh();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchPrice
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.refresh();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LinePercent
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LineDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LineAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.active();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchUnit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    PurchLine::modifyPurchQty(purchLine, inventDim, !purchLine.MatchingAgreementLine);
                #    interCompanyIsPriceDiscSearchNeeded = purchLine.RecId;
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VendAccount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        purchLine_ds.refresh();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchQty
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    TaxParameters   taxParametersLoc = TaxParameters::find();
                #    boolean         isCustomsEnabled = TaxParameters::isCustomsEnable_IN();
                #    boolean         isExciseEnabled  = TaxParameters::isExciseEnable_IN();
                #    ;
                #    super();
                #
                #    purchLine.purchQtyModifiedInteraction(inventDim);
                #
                #    purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
                #    purchLine.modifyWMSLocation(inventDim, false);
                #
                #    interCompanyIsPriceDiscSearchNeeded = purchLine.RecId;
                #
                #    element.checkCreditNoteLine();
                #
                #    if (isCustomsEnabled || isExciseEnabled)
                #    {
                #        if (taxParametersLoc.Excise_IN)
                #        {
                #            if (purchLine.PurchQty >= 0)
                #            {
                #                purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #            }
                #        }
                #        element.enableFieldsActive_IN();
                #
                #        purchLine_IN_DS.enableExciseFields_IN();
                #
                #        if (TaxParameters::find().EximIncentiveSchemes_IN
                #            && purchLine.PurchQty < 0)
                #        {
                #            eximPurchLine_IN.EximPorts                  = 0;
                #            eximPurchLine_IN.EximIncentiveSchemeGroup   = 0;
                #            eximPurchLine_IN.EximProductGroupTable      = 0;
                #            eximPurchLine_IN.ApplyDEPB            = NoYes::No;
                #            eximPurchLine_IN_ds.refresh();
                #        }
                #
                #        element.setEximFieldsAccess_IN();
                #    }
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchMarkup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MultiLnDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MultiLnPercent
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxItemGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #    if(TaxItemGroupHeading::find(purchLine.TaxItemGroup).ReverseChargePercentage_IN)
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
                #    }
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Tax1099Amount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && ret && purchLine.Tax1099Amount == 0.0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::No)
                #    {
                #        ret = checkFailed(strFmt("@SPS1165","@SYS23907", "@SPS1100"));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjTransId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ProjItemTrans::jumpRefTransId(purchLine, element);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ReturnActionId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #    purchLine.returnActionChanged(inventDim);
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjCategoryId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_DS.updateDesignForProject();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(purchLine.ProjId).ProjInvoiceProjId))
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(false);
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(true);
                #    }
                #    else
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(!purchLine.isInvoiceMatched());
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(purchLine.isInvoiceMatched());
                #    }
                #
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the <c>AssetId</c> field value on the <c>PurchLine</c> table buffer.
                #/// </summary>
                #/// <remarks>
                #/// This method calls the
                #/// <c>setAllowEditAssetFields</c> method of the <c>purchTableForm</c> class to correctly
                #/// set the <c>allowEdit</c> property of the fixed asset fields.
                #/// </remarks>
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #
                #    purchLine.setDepreciationStartDate();
                #    element.enableDepreciationStartDate();
                #
                #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #
                #    purchline_ds.enableDistributionTemplate();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetTransTypePurch
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.enableDepreciationStartDate();
                #}
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetBookId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #
                #    purchLine.setDepreciationStartDate();
                #    element.enableDepreciationStartDate();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ItemTagging
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.updateRFIDTagging();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CaseTagging
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.updateRFIDTagging();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ActivityNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(purchLine.ProjId));
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CreateFixedAsset
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the <c>CreateFixedAssetField</c> field value on the <c>PurchLine</c> table buffer.
                #/// </summary>
                #/// <remarks>
                #/// This method broadcasts the change in value of the <c>CreateFixedAssetField</c> field by
                #/// calling <c>createFixedAssetModified</c> on the data source. Then it calls the
                #/// <c>setAllowEditAssetFields</c> method of the <c>purchTableForm</c> class to correctly
                #/// set the <c>allowEdit</c> property of the fixed asset fields.
                #/// </remarks>
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.createFixedAssetModified();
                #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #    purchLine_ds.enableDistributionTemplate();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD ProcurementCategory
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return EcoResCategory::resolveCategoryHierarchyRole(
                #        _formReferenceControl,
                #        EcoResCategoryNamedHierarchyRole::Procurement);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchTable.MatchingAgreement)
                #    {
                #        return EcoResCategory::lookupCategoryHierarchyRole(
                #            _formReferenceControl,
                #            EcoResCategoryNamedHierarchyRole::Procurement,
                #            false, true, true, null, 0, 0, 0, purchTable.MatchingAgreement);
                #    }
                #    else
                #    {
                #        return EcoResCategory::lookupCategoryHierarchyRole(
                #            _formReferenceControl,
                #            EcoResCategoryNamedHierarchyRole::Procurement);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    PurchCategory               procurementCategory;
                #    ItemFreeTxt                 name;
                #    LedgerDimensionAccount      ledgerDimension;
                #
                #    name                = purchLine.Name;
                #
                #    procurementCategory = purchLine.ProcurementCategory;
                #    ledgerDimension     = purchLine.LedgerDimension;
                #
                #    purchTableForm.resetPurchLine(purchLine);
                #
                #    purchLine.ProcurementCategory       = procurementCategory;
                #    purchLine.LedgerDimension           = ledgerDimension;
                #
                #    super();
                #
                #    // Name is defaulted from category in super(). So we revert to saved value, if needed.
                #    if (keepName)
                #    {
                #        purchLine.Name  = name;
                #    }
                #
                #    // Enabled/disable fields
                #    purchLine_ds.changedInventoriedStatus();
                #
                #    element.enableLinePBAActions();
                #    element.enableForeignTrade_RU();
                #
                #    if (purchLine.isCategoryBased())
                #    {
                #        if (purchTable.MatchingAgreement)
                #        {
                #            purchLine.SalesPurchLine::autoMatchAgreementLine(purchTable.MatchingAgreement);
                #        }
                #
                #        if (purchLineForeignTradeCategory.PurchLineDataAreaId == '')
                #        {//Only create a new record if no one exist
                #            purchLineForeignTradeCategory_ds.allowCreate(true);
                #            purchLineForeignTradeCategory_ds.create();
                #            purchLineForeignTradeCategory_ds.allowEdit(true);
                #            purchLineForeignTradeCategory_ds.allowCreate(false);
                #        }
                #    }
                #    else
                #    {
                #        purchLineForeignTradeCategory.clearFormFields();
                #        purchLineForeignTradeCategory_ds.allowEdit(false);
                #        purchLineForeignTradeCategory_ds.refresh();
                #    }
                #
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    dimensionDefaultingControllerLine.activated();
                #
                #    element.enableProjSalesPrice();
                #
                #    element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #    EcoResCategory  ecoResCategory;
                #    EcoResCategory  ecoResCategoryChildren;
                #    AgreementLine   agreementLineLocal;
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchTable.MatchingAgreement)
                #    {
                #        select RecId from ecoResCategory
                #            where ecoResCategory.RecId == purchLine.ProcurementCategory
                #                join Category from agreementLineLocal
                #                where ecoResCategory.RecId == agreementLineLocal.Category
                #                && agreementLineLocal.Agreement == purchTable.MatchingAgreement;
                #
                #        if (!ecoResCategory.RecId)
                #        {
                #            select RecId from ecoResCategory
                #                join Category from agreementLineLocal
                #                where ecoResCategory.RecId == agreementLineLocal.Category
                #                && agreementLineLocal.Agreement == purchTable.MatchingAgreement
                #                    exists join ParentCategory, RecId from ecoResCategoryChildren
                #                    where ecoResCategoryChildren.CategoryHierarchy == ecoResCategory.CategoryHierarchy
                #                    && (ecoResCategoryChildren.NestedSetLeft >= ecoResCategory.NestedSetLeft
                #                    && ecoResCategoryChildren.NestedSetRight <= ecoResCategory.NestedSetRight)
                #                    && (ecoResCategory.RecId == purchLine.ProcurementCategory || ecoResCategoryChildren.RecId == purchLine.ProcurementCategory);
                #        }
                #
                #        if (ecoResCategory.RecId || ecoResCategoryChildren.RecId)
                #        {
                #            ret = super();
                #        }
                #        else
                #        {
                #            ret = false;
                #        }
                #    }
                #    else
                #    {
                #        ret = super();
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return ledgerDefaultAccountControllerLine.resolveReference();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD Tax1099Fields
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchLine.Tax1099Amount != 0.0 && !purchLine.Tax1099Fields)
                #    {
                #        ret = checkFailed(strFmt("@SYS86315", "@SYS23885"));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        element.setAllowEdit1099GFields();
                #        element.setAllowEdit1099SFields();
                #
                #        Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(purchLine.Tax1099Fields).Tax1099Box, tax1099BoxDetail.RecId);
                #        tax1099BoxDetail_ds.executeQuery();
                #        element.redraw();
                #    }
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD DeliveryPostalAddress
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #
                #    element.showInactiveAddressBar();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #    LogisticsLocationSelectionLookup_Purch lookup;
                #
                #    lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);
                #
                #    lookup.parmInventSiteId(inventDim.InventSiteId);
                #    lookup.parmInventLocationId(inventDim.InventLocationId);
                #
                #    lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
                #    lookup.parmReturnLocation(false);
                #
                #    ret = lookup.performFormLookup();
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD itemPBAId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    PBAVersion::lookupPBAId(_formControl, purchLine.ItemId);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxServiceCode_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    NoYes                   serviceCodeOnDlvAddress;
                #    LogisticsPostalAddress  logisticsPostalAddress;
                #
                #    serviceCodeOnDlvAddress = purchTable_BR.ServiceCodeOnDlvAddress_BR;
                #    logisticsPostalAddress = LogisticsLocationEntity::location2PostalAddress(purchLine.deliveryLocation());
                #
                #    TaxServiceCode_BR::lookup(_formControl, serviceCodeOnDlvAddress,
                #                              logisticsPostalAddress.CountryRegionId,
                #                              logisticsPostalAddress.State,
                #                              logisticsPostalAddress.City);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD CFOPTable_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common                      ret;
                #    CFOPAttributesDeterminer_BR cfopAttributes;
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        cfopAttributes     = CFOPAttributesDeterminer_BR::construct(purchLine);
                #
                #        ret = CFOPTable_BR::lookupCFOPTable(_formReferenceControl, cfopAttributes);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD VariantId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #/// <summary>
                #/// Variant ID - Jump Ref
                #/// </summary>
                #public void jumpRef()
                #{
                #    Args args = new Args();
                #
                #    args.caller(element);
                #    args.record(InventTable::find(purchLine.ItemId));
                #    args.lookupRecord(EcoResDistinctProductVariant::find(InventDimCombination::findVariantId(purchLine.VariantId).DistinctProductVariant));
                #
                #    new MenuFunction(menuitemDisplayStr(EcoResProductVariantsAction), MenuItemType::Display).run(args);
                #}
              ENDSOURCE
              SOURCE #modified
                #/// <summary>
                #/// Variant ID - Modified
                #/// </summary>
                #public void modified()
                #{
                #    InventDim               combInventDim;
                #    InventDim               inventDimOrig;
                #    List                    dimProductFields;
                #    ListEnumerator          enumerator;
                #    FieldId                 inventDimFieldId;
                #    InventDimGroupSetup     inventDimGroupSetup;
                #    boolean                 priceDiscSearchNeeded = false;
                #
                #    super();
                #
                #    combInventDim = InventDimCombination::findVariantId(purchLine.VariantId).inventDim();
                #
                #    if (combInventDim)
                #    {
                #        inventDimOrig.data(inventDim);
                #
                #        inventDim.InventSizeId  = combInventDim.InventSizeId;
                #        inventDim.InventColorId = combInventDim.InventColorId;
                #        inventDim.InventStyleId = combInventDim.InventStyleId;
                #        inventDim.ConfigId      = combInventDim.ConfigId;
                #
                #        // set Name according to VariantId
                #        purchLine.InventDimId    = InventDim::findOrCreate(inventDim).InventDimId;
                #        purchLine.initFromProductDimensions(inventDim);
                #        // Get the active dimension fields from the item's product dimension group and loop over them
                #        inventDimGroupSetup = InventDimGroupSetup::newItemId(purchLine.ItemId);
                #        dimProductFields = inventDimGroupSetup.ecoResProductDimGroupSetup().activeDimensionFields();
                #        enumerator = dimProductFields.getEnumerator();
                #
                #        if (enumerator)
                #        {
                #            while (enumerator.moveNext() && !priceDiscSearchNeeded)
                #            {
                #                inventDimFieldId = enumerator.current();
                #
                #                // If a dimension was changed
                #                if (inventDimOrig.(inventDimFieldId) != inventDim.(inventDimFieldId))
                #                {
                #                    // and it is active for price search
                #                    if (InventDim::mustUseFieldPurchPriceDisc(inventDimFieldId, inventDimGroupSetup))
                #                    {
                #                        priceDiscSearchNeeded = true;
                #                    }
                #                }
                #            }
                #
                #            // then trigger price recalculation
                #            if (priceDiscSearchNeeded)
                #            {
                #                purchLine.modifyInventDim(inventDim, inventDimFieldId, !purchLine.MatchingAgreementLine);
                #            }
                #
                #            // Update item name
                #            purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #        }
                #    }
                #}
              ENDSOURCE
              SOURCE #lookup
                #/// <summary>
                #/// Variant ID - Lookup
                #/// </summary>
                #/// <param name="_formControl">
                #/// Form String Control
                #/// </param>
                #/// <param name="_filterStr">
                #/// Filter String
                #/// </param>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    PurchLine::lookupRetailVariantId(_formControl, purchLine.ItemId);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipment
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipComment
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipStatus
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PDSCalculationId
            PROPERTIES
              AllowEdit           #No
              Skip                #Yes
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD ProjWorker
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    HcmWorkerLookup workerLookup;
                #    ProjParameters  projParameters = ProjParameters::find();
                #    boolean         includeTerminated = true;
                #
                #    if (projParameters.ShowInactiveEmployees == NoYes::No)
                #    {
                #        includeTerminated = false;
                #    }
                #    workerLookup = HcmWorkerLookup::newCustomOptions(
                #        false, // includeEmployees
                #        true, // includeContractors
                #        true, // includeActive
                #        false, // includePending
                #        includeTerminated, // includeTerminated
                #        true, // includeOnlyCurrentLegalEntity
                #        true, // lock workerTypeFilters
                #        true, // lock workerStatusFilters
                #        true); // lock legalEntityFilters
                #
                #    return workerLookup.lookupWorker(_formReferenceControl);
                #}
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD PurchCommitmentLine_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #/// <summary>
                #/// Adds the 'View details' link to the commitment context menu.
                #/// </summary>
                #public void jumpRef()
                #{
                #    PurchCommitmentHeader_PSN::jumpRefPurchCommitment(purchLine.PurchCommitmentLine_PSN);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common commitmentLookupTableBuffer;
                #
                #    PurchCommitmentLineLookup_PSN   purchCommitmentLineLookupClass = PurchCommitmentLineLookup_PSN::construct(_formReferenceControl, purchLine);
                #
                #    commitmentLookupTableBuffer = purchCommitmentLineLookupClass.performFormLookup();
                #
                #    return commitmentLookupTableBuffer;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #reread
          #public void reread()
          #{
          #    // Current price references may need to be deleted.
          #    purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #updateDesignForProject
          #public void updateDesignForProject()
          #{
          #    if (purchLine.ProjId == '' || purchLine.isProjItemBased())
          #    {
          #        purchLine_DS.object(fieldNum(PurchLine, ProjWorker)).allowEdit(false);
          #    }
          #    else
          #    {
          #        purchLine_DS.object(fieldNum(PurchLine, ProjWorker)).allowEdit(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #deleteMarked
          # public void deleteMarked()
          #{
          #    purchTableForm.parmInPurchlineDeleteMarked(true);
          #
          #    super();
          #
          #    purchTable.type().updateDistribution();
          #
          #    purchTableForm.parmInPurchlineDeleteMarked(false);
          #}
        ENDSOURCE
        SOURCE #ICMSCreditInstallments_BR
          #//BP Deviation documented
          #display ICMSCreditInstallments_BR ICMSCreditInstallments_BR(PurchLine _purchLine)
          #{
          #    if (!BrazilParameters::isEnabled() || (!_purchLine.AssetId && !_purchLine.AssetGroup))
          #        return false;
          #
          #    if (!_purchLine.CreateFixedAsset)
          #        return AssetTable::find(_purchLine.AssetId).ICMSCreditInstallments_BR;
          #    else
          #        return AssetGroup::find(_purchLine.AssetGroup).ICMSCreditInstallments_BR;
          #}
          #
        ENDSOURCE
        SOURCE #PISCOFINSReceivableLongTerm_BR
          #//BP Deviation documented
          #display NoYes PISCOFINSReceivableLongTerm_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSReceivableLongTerm_BR();
          #}
          #
        ENDSOURCE
        SOURCE #ICMSReceivableLongTerm_BR
          #//BP Deviation documented
          #display NoYes ICMSReceivableLongTerm_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.ICMSReceivableLongTerm_BR();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Activates the <c>PurchLine</c> datasource.
          #/// </summary>
          #/// <returns>
          #/// An integer value indicating if the method is successful. It always returns 1.
          #/// </returns>
          #/// <remarks>
          #/// This method calls the <c>setAllowEditAssetFields</c> method of the <c>PurchTableForm</c> class
          #/// to ensure that the fixed asset fields are available to be edited.
          #/// </remarks>
          #int  active()
          #{
          #    int     ret;
          #    boolean allowEdit;
          #    boolean allowEditDeliveryPostalAddress;
          #    #ISOCountryRegionCodes
          #
          #    ret = super();
          #    dimensionDefaultingControllerLine.activated();
          #    dimensionDefaultingControllerLine.setEditability(!purchLine.IsInvoiceMatched);
          #    if (purchTable.AccountingDate)
          #    {
          #        dimensionDefaultingControllerLine.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #    }
          #
          #    purchTableForm.purchTable(purchTable);
          #
          #    element.setEditItemCategoryAllowed(purchLine.RecId == 0);
          #    element.setEditLinenumberAllowed(purchTableForm.editLineNumberAllowed(purchLine));
          #    element.showInactiveAddressBar();
          #
          #    allowEdit = purchTableForm.editLineAllowed(purchLine) || purchLine.editableInWorkflow();
          #
          #    purchLine_ds.allowCreate(purchTableForm.createLineAllowed(purchLine));
          #    purchLine_ds.allowEdit  (allowEdit);
          #    purchLine_ds.allowDelete(purchTableForm.deleteLineAllowed(purchLine));
          #
          #    inventDim_ds.allowEdit  (allowEdit);
          #
          #    element.checkCreditNoteLine();
          #
          #    element.updateDesign(InventDimFormDesignUpdate::Active);
          #
          #    purchLine_ds.object(fieldNum(PurchLine, PurchReceivedNow)).allowEdit(purchLine.purchReceivedNowAllowEdit());
          #
          #    element.setAllowEditTax1099();
          #
          #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        element.setAllowEdit1099GFields();
          #        element.setAllowEdit1099SFields();
          #        element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
          #    }
          #    element.updateRFIDTagging();
          #
          #    if (isRU)
          #    {
          #        element.enabledVATTaxAgent_RU();
          #        element.enableMarkupCode_RU();
          #        element.enableForeignTrade_RU();
          #    }
          #
          #    purchTableForm.interCompanySetLineAccess(purchLine);
          #    purchTableForm.directDeliverySetLineAccess(purchLine);
          #    allowEditDeliveryPostalAddress = purchLine_ds.object(fieldNum(PurchLine, DeliveryPostalAddress)).allowEdit();
          #    logisticsLocationSelectLine.enabled(allowEditDeliveryPostalAddress);
          #    dirPartyPostalAddressNewLine.enabled(allowEditDeliveryPostalAddress);
          #
          #    if (purchLine.ProjId)
          #    {
          #        if (purchLine.purchTable().isProjectSalesItemReqPO() ||
          #            purchLine.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
          #        {
          #            lineInquiry_CostControlCommittedCost.enabled(false);
          #        }
          #        else
          #        {
          #            lineInquiry_CostControlCommittedCost.enabled(true);
          #        }
          #    }
          #    else
          #    {
          #        lineInquiry_CostControlCommittedCost.enabled(false);
          #    }
          #
          #    element.resetAssetContainers();
          #
          #    if(tabLineFixedAsset.isActivePage())
          #    {
          #        element.setupAsset(purchLine);
          #    }
          #    else
          #    {
          #        element.design().controlName(#grpAssetQualifier).visible(false);
          #    }
          #
          #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
          #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
          #    {
          #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
          #    }
          #
          #    // If the date is not set
          #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
          #    {
          #        if(!purchLine.DepreciationStartDate)
          #        {
          #            purchLine.setDepreciationStartDate();
          #        }
          #        element.enableDepreciationStartDate(false);
          #    }
          #
          #    if (purchLine.RecId)
          #    {
          #        purchLine_ds.enableDistributionTemplate();
          #    }
          #
          #    element.setupEnvironmentalTab();
          #
          #    element.enableLedgerDimensionDefaultAccount();
          #
          #    element.enableRetentionProject();
          #
          #    element.enableProjSalesPrice();
          #
          #    element.updateControlsForFrenchConfirmedPO();
          #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #    {
          #        allowEdit = allowEdit && (!purchLine.RetailPackageId);    //User may not be allowed to edit purchase order lines that belong to a package
          #        element.packageAllowEdit(allowEdit);
          #    }
          #
          #    if (ret && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        element.enableFieldsActive_IN();
          #        element.updateDesign_IN();
          #        if (taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate)
          #        {
          #            element.setTaxWithholdEnabled_IN();
          #        }
          #        purchLine_IN_ds.enableExciseFields_IN();
          #    }
          #
          #
          #    isWHSPurchLineEnabled = WHSPurchLine::isExtensionRecordNeeded(purchLine);
          #    crossDock.enabled(isWHSPurchLineEnabled);
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        element.enableServiceFields_BR();
          #    }
          #
          #    return ret;
          #}
          #
          #
        ENDSOURCE
        SOURCE #initInventDim
          #/// <summary>
          #/// Updates <c>InventDim</c> with new data which has been set due to modification of <c>PurchLine</c>.
          #/// </summary>
          #private void initInventDim()
          #{
          #    inventDim.data(InventDim::find(purchLine.InventDimId));
          #
          #    // Override the initial value if a default is provided.
          #    if (defaultInventDim && purchLine.ItemId == defaultItemId)
          #    {
          #        inventDim.initFromInventDim(defaultInventDim);
          #    }
          #}
        ENDSOURCE
        SOURCE #lineDeliveryTypeImage
          #//BP Deviation documented
          #display LineDeliveryTypeImage lineDeliveryTypeImage(PurchLine _purchLine)
          #{
          #    return imageListAppl_PurchTableForm.image(_purchLine.lineDeliveryImageRessNo());
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    logisticsPostalAddressLine_ds.validTimeStateUpdate(ValidTimeStateUpdate::Correction);
          #    logisticsPostalAddressLine_ds.query().validTimeStateDateTimeRange(DateTimeUtil::minValue(), DateTimeUtil::maxValue());
          #
          #    super();
          #
          #    if (isCalledFromLP)
          #    {
          #        isCalledFromLP = false;
          #        if (purchTable && TradeFormHelper::isEditableNotGridView(element.args()))
          #        {
          #            purchLine_PurchQtyGrid.setFocus();
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #updateBudgetCheckResultDisplay
          #/// <summary>
          #/// Updates budget check result display cache.
          #/// </summary>
          #public void updateBudgetCheckResultDisplay()
          #{
          #    if (Ledger::isLedgerBudgetControlEnabled())
          #    {
          #        if (this.cacheCalculateMethod(tableMethodStr(PurchLine, displayBudgetCheckResult)))
          #        {
          #            purchLine_ds.refresh();
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #enableBudgetControlLineInquiry
          #/// <summary>
          #/// Eanbles the <c>BudgetControlLine</c> inquiry button.
          #/// </summary>
          #private void enableBudgetControlLineInquiry()
          #{
          #    budgetControlLine.enabled(budgetControlLine.visible() && purchLine.IsModified);
          #}
        ENDSOURCE
        SOURCE #editAssetQualifier
          #// BP deviation documented
          #edit AssetRuleAssetQualifier editAssetQualifier(boolean set, AssetRuleAssetQualifier _qualifier)
          #{
          #    if(set)
          #    {
          #        if(AssetRuleTmpAssetQualifierLookup::getAssetGroupFromQualifier(_qualifier, assetQualifierList) != '')
          #        {
          #            selectedAssetQualifier = _qualifier;
          #        }
          #    }
          #    return  selectedAssetQualifier;
          #}
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean ret = true;
          #    str warning = purchLine.type(purchTable).getDeleteWarning();
          #
          #    if (warning != "")
          #    {
          #        ret = (Box::yesNo(warning, DialogButton::No) == DialogButton::Yes)
          #            && purchLine.validateDelete();
          #    }
          #    else
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #itemIdModified
          #void itemIdModified()
          #{
          #    purchLine.itemIdChanged(purchTable.MatchingAgreement);
          #
          #    this.changedInventoriedStatus();
          #    isWHSPurchLineEnabled = WHSPurchLine::isExtensionRecordNeeded(purchLine);
          #    crossDock.enabled(isWHSPurchLineEnabled);
          #
          #    // Reread ReferenceGroup controls, e.g. to show the category name.
          #    purchLine_ds.rereadReferenceDataSources();
          #
          #    element.enableLedgerDimensionDefaultAccount();
          #
          #    dimensionDefaultingControllerLine.activated();
          #    element.enableMarkupCode_RU();
          #    element.enableForeignTrade_RU();
          #}
        ENDSOURCE
        SOURCE #changedInventoriedStatus
          #/// <summary>
          #/// Updates the form to reflect the current inventoried status inventoried status, i.e. after a change to the itemid, category, or inventoried field.
          #/// </summary>
          #void changedInventoriedStatus()
          #{
          #    // Update inventDim with new data which has been set due to modification
          #    this.initInventDim();
          #    purchLine.modifyInventDim(inventDim, fieldNum(InventDim,InventLocationId), !purchLine.MatchingAgreementLine);
          #
          #    InventMovement::bufferSetTransQtyUnit(purchLine);
          #    // Update inventdim fields
          #    element.updateDesign(InventDimFormDesignUpdate::FieldChange);
          #    // Update tagging fields based on dimension settings.
          #    element.updateRFIDTagging();
          #
          #    // Disable category editing if itemid is selected
          #    purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(purchLine.ItemId == '');
          #    // Disable itemid editing if only a category is selected
          #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(!purchLine.isCategoryBased());
          #
          #    // Update allow edit for scrap
          #    element.checkCreditNoteLine();
          #    // Update allow edit for inventory fields
          #    purchTableForm.interCompanySetLineAccess(purchLine);
          #    purchTableForm.directDeliverySetLineAccess(purchLine);
          #
          #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
          #}
        ENDSOURCE
        SOURCE #create
          #void  create(boolean append = true)
          #{
          #    element.setEditItemCategoryAllowed(true);
          #    distributionTemplateLine.allowEdit(true);
          #
          #    dimensionDefaultingControllerLine.activated();
          #
          #    if (!purchTableForm.canNewLineBeAppended(purchLine))
          #    {
          #        append = false;
          #    }
          #
          #    purchTableForm.purchLine_CreatePreSuper(purchLine);
          #
          #    if (purchTable.checkUpdate())
          #    {
          #        super(append);
          #    }
          #
          #    if (purchTable && tabPageDetails.isActivePage())
          #    {
          #        purchLine_ItemId.setFocus();
          #    }
          #
          #    // Invoke postSuper to store an initialized purchLine used for further creation. Only store it if an item
          #    // has not been defined or we have a default item.
          #    if ((!purchLine.ItemId && !purchLine.ProcurementCategory)
          #        || (defaultItemId && defaultItemId == purchLine.ItemId))
          #    {
          #        purchTableForm.purchLine_CreatePostSuper(purchLine);
          #    }
          #
          #    // filter exists on ItemId
          #    if (purchLine.ItemId)
          #    {
          #        this.itemIdModified();
          #    }
          #
          #    // filter exists on ProcurementCategory
          #    if (purchLine.ProcurementCategory)
          #    {
          #        this.changedInventoriedStatus();
          #    }
          #
          #    this.createFixedAssetModified();
          #}
        ENDSOURCE
        SOURCE #createFixedAssetModified
          #/// <summary>
          #/// Broadcasts that the <c>CreateFixedAsset</c> field value has changed to the <c>purchLine</c> table buffer.
          #/// </summary>
          #void createFixedAssetModified()
          #{
          #    purchLine.modifyCreateFixedAsset();
          #}
        ENDSOURCE
        SOURCE #delete
          #void  delete()
          #{
          #    PurchId purchId;
          #    boolean mustFormResearchAfterDelete = purchTableForm.mustFormResearchAfterDelete(purchLine);
          #
          #    if (purchLine.checkDelete(true, purchTable))
          #    {
          #        purchId = purchLine.PurchId;
          #
          #        ttsbegin;
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #        {
          #            purchLine.type(purchTable).deleteRetailSumLinesFromPurch();
          #        }
          #
          #        //This is a performance optimization. Indicates we can skip updating the purchTable
          #        //header distribution on this line because we are in a multiselect delete of lines.
          #        //Update will be done at the end in PurchLine_ds.deleteMarked()
          #        if (purchTableForm.parmInPurchlineDeleteMarked())
          #        {
          #            purchLine.SkipDistributionUpdate = NoYes::Yes;
          #        }
          #
          #        // Current price references may need to be deleted.
          #        purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
          #
          #        super();
          #        purchTable_ds.onSummaryRecordsInvalid(tableNum(PurchTotalsSummary));
          #
          #        ttscommit;
          #
          #        dimensionDefaultingControllerLine.deleted();
          #
          #        if ( mustFormResearchAfterDelete )
          #        {
          #            purchLine_ds.research(true);
          #        }
          #
          #        if (purchId && PurchTable::exist(purchId))
          #        {
          #            purchTable_ds.reread();
          #            purchTable_ds.refresh();
          #        }
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #        {
          #            retailSumLines_ds.research();
          #        }
          #        element.setupEnvironmentalTab();
          #    }
          #}
        ENDSOURCE
        SOURCE #enableDistributionTemplate
          #/// <summary>
          #/// Enables the <c>AccountingDistributionTemplate</c> field based on the purchase order line state.
          #/// </summary>
          #public void enableDistributionTemplate()
          #{
          #    if (purchLine.canApplyAllocationOrDistributionTemplate())
          #    {
          #        distributionTemplateLine.allowEdit(true);
          #    }
          #    else
          #    {
          #        distributionTemplateLine.allowEdit(false);
          #    }
          #}
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    if (purchTable
          #       && (defaultPurchLine.PurchId != purchTable.PurchId
          #       || (defaultPurchLine.PurchId == purchTable.PurchId
          #       && purchTableRecVersion      != purchTable.RecVersion)))
          #    {
          #        defaultPurchLine.initFromPurchTable(purchTable);
          #        defaultPurchLine.initFromVendTable(purchTable.vendTable_OrderAccount());
          #        purchTableRecVersion = purchTable.RecVersion;
          #    }
          #
          #    purchLine.data(defaultPurchLine);
          #    if (isPurchLine_INEnabled || isPurchLine_WEnabled)
          #    {
          #        // The defaulted extension table record are packed in defaultPurchLine
          #        // and been copied to purchLine.PackedExtensions field. Unpack it to apply
          #        // these default value to extension table data source.
          #        purchLine.SysExtensionSerializerMap::unpackAll();
          #    }
          #
          #    // For category based lines Name should be kept if manually modified.
          #    keepName = false;
          #
          #    if (defaultItemId)
          #    {
          #        purchLine.ItemId = defaultItemId;
          #    }
          #
          #    if (defaultDate)
          #    {
          #        purchLine.ShippingDateRequested = defaultDate;
          #    }
          #
          #    if (TaxParameters::isServiceTaxEnable_IN())
          #    {
          #        purchLine_IN.IsRecoverableServiceTax_IN = NoYes::Yes;
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    super();
          #
          #    this.query().dataSourceTable(tableNum(PurchLine)).addRange(fieldNum(PurchLine,IsDeleted)).value(queryValue(NoYes::No));
          #
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, whsGetLoads));
          #
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, receivedInTotal), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, invoicedInTotal), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, itemName), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, displayBudgetCheckResult), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, calcPendingQtyPurchDisplay));
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, getPurchReqItemName), false);
          #    if (InventParameters::find().UseQualityManagement)
          #    {
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, qualityOrderStatusDisplay), false);
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, deliveryCNPJCPFNUM_BR));
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, deliveryIENum_BR));
          #    }
          #
          #    purchLine.setDepreciationStartDate(true);
          #    element.enableDepreciationStartDate();
          #
          #    element.invoiceMatchingAccess();
          #}
        ENDSOURCE
        SOURCE #leave
          #public boolean leave()
          #{
          #    boolean ret;
          #
          #    // PBA begin
          #    if( !purchLine.PBAItemLine::checkMandatory() )
          #    {
          #        return false;
          #    }
          #    // PBA end
          #
          #    ret = super();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void  linkActive()
          #{
          #    #ISOCountryRegionCodes
          #    super();
          #
          #    /* Set Caption */
          #    if (!purchLine && purchTable)
          #    {
          #        purchTableForm.purchTable(purchTable);
          #        purchLine_ds.create();
          #    }
          #
          #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
          #    {
          #        if(!purchLine.DepreciationStartDate)
          #        {
          #            purchLine.setDepreciationStartDate();
          #        }
          #        element.enableDepreciationStartDate(false);
          #    }
          #}
        ENDSOURCE
        SOURCE #purchTable_ds
          #FormDataSource purchTable_ds()
          #{
          #    return purchTable_ds;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    //Set SubLedgerDistributions and SubLedgerJournalLines as needing to be created/updated
          #    purchTable_ds.setTouched();
          #
          #    ret = element.setupAsset(purchLine);
          #
          #    purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #    if (!purchLine.isAgreementLinkValid(true))
          #    {
          #        ret = purchLine.unLinkAgreementLinePrompt(0, tableNum(PurchLine), false);
          #    }
          #
          #    copyTaxGroupToMarkupTrans = DialogButton::No;
          #    if (ret && purchLine.TaxGroup != purchLine.orig().TaxGroup)
          #    {
          #        copyTaxGroupToMarkupTrans   = MarkupTrans::promptCopyTaxGroupToMarkupTrans(purchLine.TableId, purchLine.RecId);
          #        ret                         = copyTaxGroupToMarkupTrans != DialogButton::Cancel;
          #    }
          #
          #
          #    ret = super() && ret;
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #void  write()
          #{
          #    PurchLine       localPurchLine;
          #    boolean         agreementWasChanged = (purchLine.MatchingAgreementLine != purchLine.orig().MatchingAgreementLine);
          #    boolean         isPurchLineReread;
          #    boolean         isPurchLineRefreshed;
          #
          #    PurchLineWritePreSuperInputContract     inputContractPre = PurchLineWritePreSuperInputContract::construct();
          #    PurchLineWritePreSuperOutputContract    outputContractPre;
          #    PurchLineWritePostSuperInputContract    inputContractPost = PurchLineWritePostSuperInputContract::construct();
          #    PurchLineWritePostSuperOutputContract   outputContractPost;
          #
          #    boolean             newTax1099Detail;
          #    Tax1099Fields       tax1099Fields;
          #
          #    newTax1099Detail = tax1099BoxDetail.RecId;
          #
          #    dimensionDefaultingControllerLine.writing();
          #
          #    inputContractPre.parmPurchTable(purchTable);
          #    inputContractPre.parmPurchLine(purchLine);
          #    outputContractPre   = purchTableForm.purchLine_WritePreSuper(inputContractPre);
          #    autoConfig          = outputContractPre.parmAutoConfig();
          #
          #    if (outputContractPre.parmPurchTableCheckUpdate())
          #    {
          #        buf2Buf(outputContractPre.parmPurchLine(), purchLine);
          #
          #        if (PurchLine::hasExensionTableEnabled())
          #        {
          #            purchLine.SysExtensionSerializerMap::unPackAll();
          #        }
          #
          #        purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && (purchLine.Tax1099Fields || purchLine.Tax1099RecId))
          #        {
          #            //Must make sure we write tax1099Detail only when we are writing purchLine to maintain relationship
          #            if (purchLine.Tax1099Fields)
          #            {
          #                tax1099Fields = outputContractPre.parmTax1099Fields();
          #            }
          #
          #            if (tax1099Fields && (tax1099Fields.Tax1099Box == #G_1
          #                                    || tax1099Fields.Tax1099Box == #G_2
          #                                    || tax1099Fields.Tax1099Box == #S_2))
          #            {
          #                try
          #                {
          #                    tax1099BoxDetail_ds.write(true);
          #
          #                    if (!newTax1099Detail)
          #                    {
          #                        purchLine.Tax1099RecId = tax1099BoxDetail.RecId;
          #                    }
          #                }
          #                catch
          #                {
          #                    return;
          #                }
          #            }
          #            else
          #            {
          #                if (tax1099BoxDetail)
          #                {
          #                    tax1099BoxDetail.delete();
          #                }
          #                purchLine.Tax1099RecId = 0;
          #            }
          #        }
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)) && outputContractPre.parmRetailSumLinesHasChanged())
          #        {
          #            retailSumLines_ds.research();
          #        }
          #
          #        if (isWHSPurchLineEnabled && !whsPurchLine.RecId)
          #        {
          #            purchLine.PackedWHSLine = buf2Con(whsPurchLine);
          #        }
          #
          #        super();
          #
          #        if (isWHSPurchLineEnabled)
          #        {
          #            whsPurchLine.data(WHSPurchLine::find(purchLine.InventTransId));
          #        }
          #
          #        if(SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(PurchLine_Intrastat)))
          #        {
          #           purchLine_Intrastat.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #        if (isPurchLine_INEnabled)
          #        {
          #            purchLine_IN.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #        if (isPurchLine_WEnabled)
          #        {
          #            purchLine_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #
          #        inputContractPost.parmPurchTableCheckUpdate(outputContractPre.parmPurchTableCheckUpdate());
          #        inputContractPost.parmPurchLine(purchLine);
          #        inputContractPost.parmAutoConfig(autoConfig);
          #
          #        if (copyTaxGroupToMarkupTrans == DialogButton::Yes || copyTaxGroupToMarkupTrans == DialogButton::YesToAll)
          #        {
          #            inputContractPost.parmCopyTaxGroupToMarkupTrans(copyTaxGroupToMarkupTrans);
          #            copyTaxGroupToMarkupTrans = DialogButton::No;
          #        }
          #
          #        purchTable_ds.onSummaryRecordsInvalid(tableNum(PurchTotalsSummary));
          #
          #        if (purchLine.isCategoryBased() && !purchLineForeignTradeCategory.PurchLineInventTransId)
          #        {
          #            purchLineForeignTradeCategory.initFromPurchLine(purchLine);
          #            purchLineForeignTradeCategory_ds.write();
          #            inputContractPost.parmUpdatePendingRegistrationsNonStocked(true);
          #        }
          #
          #        outputContractPost = purchTableForm.purchLine_WritePostSuper(inputContractPost);
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)) && outputContractPost.parmRetailSumLinesHasChanged())
          #        {
          #            retailSumLines_ds.research();
          #            purchLine_ds.reread();
          #            isPurchLineReread = true;
          #            purchLine_ds.refresh();
          #            isPurchLineRefreshed = true;
          #        }
          #
          #        if (purchLine.InventDimId != inventDim.InventDimId)
          #        {
          #            inventDim.data(InventDim::find(purchLine.InventDimId));
          #            inventDim_ds.setCurrent();
          #        }
          #
          #        purchTableForm.refreshDeliverySchedule(purchLine, agreementWasChanged && !purchLine.MatchingAgreementLine);
          #
          #        if (TaxParameters::isCustomsEnable_IN()
          #            && purchTable_W.CustomsImportOrder_IN
          #            && TaxParameters::find().EximIncentiveSchemes_IN
          #            && eximPurchLine_IN)
          #        {
          #            eximPurchLine_IN.write();
          #        }
          #
          #        if (purchTable.InterCompanyOrder)
          #        {
          #            localPurchLine.data(purchLine.data());
          #            purchLine_ds.executeQuery();
          #            purchLine_ds.findRecord(localPurchLine);
          #        }
          #
          #        if (!(isPurchLineReread && isPurchLineRefreshed))
          #        {
          #            // update purchase order line budget check result display.
          #            purchLine_ds.updateBudgetCheckResultDisplay();
          #        }
          #        purchTable_ds.reread();
          #        purchTable_ds.refresh();
          #        purchLine_ds.reread();
          #        purchLine_ds.refresh();
          #    }
          #    else
          #    {
          #        outputContractPost = purchTableForm.purchLine_WritePostSuper(inputContractPost);
          #        purchLine_ds.reread();
          #        purchTable_ds.reread();
          #    }
          #
          #    if (isRU)
          #    {
          #        element.enableInvoice4PaymButtons();
          #    }
          #
          #    interCompanyIsPriceDiscSearchNeeded = 0;
          #
          #
          #    if (outputContractPost.parmCreditNoteCashDiscMessage())
          #    {
          #        info("@SYS99051");
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLineForeignTradeCategory
          Table               #PurchLineForeignTradeCategory
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #allowEdtItemCodeId
          #void allowEdtItemCodeId()
          #{
          #    if (purchLine.isCategoryBased())
          #    {
          #        if (purchLine.receivedInTotal()    != 0
          #        ||  purchLine.registered()         != 0
          #        ||  purchLine.invoicedInTotal()    != 0)
          #        {
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).allowEdit(false);
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).skip(true);
          #        }
          #        else
          #        {
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).allowEdit(true);
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).skip(false);
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int     ret;
          #    boolean allowEditLine;
          #
          #    ret = super();
          #
          #    if (purchLine.isCategoryBased())
          #    {
          #        allowEditLine = purchTableForm.editLineAllowed(purchLine);
          #        purchLineForeignTradeCategory_ds.allowEdit(allowEditLine);
          #        if (allowEditLine)
          #        {
          #            purchLineForeignTradeCategory_ds.allowEdtItemCodeId();
          #        }
          #    }
          #    else
          #    {
          #        purchLineForeignTradeCategory_ds.allowEdit(false);
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (purchLine.RecId && purchLine.isCategoryBased())
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    boolean             isPurchLineResearch;
          #    PurchTableVersion   purchTableVersion;
          #
          #    if (purchLine.RecId && purchLine.isCategoryBased())
          #    {
          #        if (!purchTable.ChangeRequestRequired && purchTable.DocumentState == VersioningDocumentState::Confirmed)
          #        {
          #            purchTableVersion = PurchTableVersion::findLatest(purchTable.PurchId, purchTable.DataAreaId);
          #            if (purchTableVersion && purchTableVersion.IsArchived == NoYes::No)
          #                isPurchLineResearch = true;
          #        }
          #
          #        super();
          #
          #        if (isPurchLineResearch)
          #            purchLine_ds.research(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    if (purchLine.isCategoryBased())
          #    {
          #        super(_append);
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    super();
          #
          #    this.query().dataSourceTable(this.table()).addRange(fieldNum(PurchLineForeignTradeCategory, IsDeleted)).value(queryValue(NoYes::No));
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          JoinSource          #PurchLine
          LinkType            #InnerJoin
          DelayActive         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD inventBatchId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventBatchId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventBatchId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD wMSLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,wmsLocationId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,wmsLocationId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD wMSPalletId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,wmsPalletId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,wmsPalletId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD inventSerialId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSerialId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSerialId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventLocationId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine.setAddressFromInventDim(inventDim);
                #    purchLine_ds.rereadReferenceDataSources();
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #    RetailStoreTable                    rboStoreTable;
                #    RetailChannelTable                  retailChannelTable;
                #    RetailChannelAssortedProductView    retailChannelAssortedProductView;
                #    InventTable                         inventTable;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventLocationId));
                #    }
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
                #        && ret)
                #    {
                #        select firstonly InventLocation, RecId, PoItemFilter, StoreNumber from rboStoreTable where
                #            rboStoreTable.InventLocation == inventDim.InventLocationId;
                #
                #        if (rboStoreTable.RecId && rboStoreTable.PoItemFilter == true)
                #        {
                #            select firstonly RecId
                #                from retailChannelTable
                #                    where retailChannelTable.RecId == rboStoreTable.RecId
                #                join omOperatingUnitId, ProductID, InventLocationDataAreaId from retailChannelAssortedProductView
                #                    where retailChannelAssortedProductView.omOperatingUnitId == retailChannelTable.omOperatingUnitID
                #                join ItemId, Product, DataAreaId from inventTable
                #                    where inventTable.Product == retailChannelAssortedProductView.ProductID &&
                #                    inventTable.DataAreaId == retailChannelAssortedProductView.InventLocationDataAreaId &&
                #                    inventTable.DataAreaId == purchLine.DataAreaId &&
                #                    inventTable.ItemId == purchLine.ItemId;
                #
                #
                #            if (!retailChannelTable)
                #            {
                #                return checkFailed(strFmt("@RET4631", purchLine.ItemId, rboStoreTable.StoreNumber));
                #            }
                #        }
                #    }
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD configId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,ConfigId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if(!EcoResProductMasterConfigurationMgr::configure(  _formControl,
                #                                                        purchLine.ItemId,
                #                                                        InventDim::findOrCreate(inventDim).InventDimId,
                #                                                        purchLine.deliveryDate(),
                #                                                        purchLine.ItemBOMId,
                #                                                        purchLine.QtyOrdered))
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,ConfigId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSizeId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSizeId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSizeId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventColorId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventColorId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventColorId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSiteId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSiteId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSiteId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine.setAddressFromInventDim(inventDim);
                #    purchLine_ds.rereadReferenceDataSources();
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventGtdId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,
                #                              fieldNum(InventDim, InventGtdId_RU));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,
                #                                                fieldNum(InventDim, InventGtdId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventProfileId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim, fieldNum(InventDim, InventProfileId_RU));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim, fieldNum(InventDim, InventProfileId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventOwnerId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim, fieldNum(InventDim, InventOwnerId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,
                #                            fieldNum(InventDim, InventOwnerId_RU));
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventStyleId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventStyleId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventStyleId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventStatusId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim, InventStatusId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim, InventStatusId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #//    super();
          #}
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    purchLine_ds.initInventDim();
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #FiscalEstablishment
          #display FiscalEstablishmentId_BR FiscalEstablishment()
          #{
          #    return inventDim.inventSite().fiscalEstablishment().FiscalEstablishmentId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EMSPurchOrderFlowRelation
          Table               #EMSPurchOrderFlowRelation
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    hasEMSAccess = element.hasTableAccess(this.table());
          #    element.handleSecurity(this, hasEMSAccess);
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceCreatePre();
          #
          #    super(_append);
          #
          #    element.numberSeqFormHandler().formMethodDataSourceCreate();
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceDelete();
          #    super();
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceWrite();
          #    super();
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    isValid = super();
          #
          #    if (isValid)
          #    {
          #        isValid = element.numberSeqFormHandler().formMethodDataSourceValidateWrite(isValid);
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #
          #    emsPurchOrderFlowRelation.RefRecId = purchLine.RecId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EMSFlow
          Table               #EMSFlow
          AllowCheck          #No
          JoinSource          #EMSPurchOrderFlowRelation
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD SubstanceId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    // The lookup should only be available if Source is set, otherwise this field is disabled.
                #    // The lookup should only show the substances associated to the source, as well as with destination
                #    // if the destination has a value.
                #    SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tableNum(EMSSubstance), _formControl);
                #    Query                query;
                #    QueryBuildDataSource qbsEMSSubstance, qbsEMSProcessReference;
                #    QueryBuildRange      queryBuildRange;
                #
                #    if (emsFlow.SourceProcessId != '' && emsFlow.IsAccidental == false)
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSSubstance, SubstanceId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSSubstance, Description));
                #
                #        query = new Query();
                #        qbsEMSSubstance = query.addDataSource(tableNum(EMSSubstance));
                #        qbsEMSProcessReference = qbsEMSSubstance.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #
                #        if (emsFlow.DestinationProcessId != '')
                #        {
                #            queryBuildRange.value(
                #                    strFmt('((%2.%3 == \"%5\") && (%2.%4 == \"%6\")) && ((%1.%7 == %2.%7) || (%1.%8 == %2.%8))',
                #                       query.dataSourceTable(tableNum(EMSSubstance)).name(),
                #                       query.dataSourceTable(tableNum(EMSProcessReference)).name(),
                #                       fieldStr(EMSProcessReference,SourceProcessId),
                #                       fieldStr(EMSProcessReference,DestinationProcessId),
                #                       emsFlow.SourceProcessId,
                #                       emsFlow.DestinationProcessId,
                #                       fieldStr(EMSSubstance, SubstanceId),
                #                       fieldStr(EMSSubstance, SubstanceCategoryId)));
                #        }
                #        else
                #        {
                #             queryBuildRange.value(
                #                    strFmt('(%2.%3 == \"%5\") && ((%1.%6 == %2.%6) || (%1.%7 == %2.%7))',
                #                       query.dataSourceTable(tableNum(EMSSubstance)).name(),
                #                       query.dataSourceTable(tableNum(EMSProcessReference)).name(),
                #                       fieldStr(EMSProcessReference,SourceProcessId),
                #                       fieldStr(EMSProcessReference,DestinationProcessId),
                #                       emsFlow.SourceProcessId,
                #                       fieldStr(EMSSubstance, SubstanceId),
                #                       fieldStr(EMSSubstance, SubstanceCategoryId)));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    emsFlow.UnitOfMeasure = EMSSubstance::find(emsFlow.SubstanceId).UnitOfMeasure;
                #    emsFlow_UnitOfMeasure.value(emsFlow.UnitOfMeasure);
                #    if (UnitOfMeasureConverter::canBeConverted(
                #            UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
                #            emsFlow.UnitOfMeasure))
                #    {
                #        emsFlow.UnitOfMeasure = UnitOfMeasure::findBySymbol(purchLine.PurchUnit).RecId;
                #        emsFlow.SubstanceEntryQty = purchLine.PurchQty;
                #    }
                #    else
                #    {
                #        emsFlow.SubstanceEntryQty = 0;
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD SourceProcessId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(EMSProcess), _formControl);
                #    Query                   query;
                #    QueryBuildDataSource    qbsEMSProcess, qbsEMSProcessReference;
                #    QueryBuildRange         queryBuildRange;
                #    EMSSubstanceCategoryId  substanceCategoryId;
                #
                #    if (emsFlow.DestinationProcessId != '')
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,ProcessId));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,Description));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,SourceProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,DestinationProcessId));
                #        queryBuildRange.value(queryValue(emsFlow.DestinationProcessId));
                #        if (emsFlow.SubstanceId != '')
                #        {
                #            queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #            substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #            queryBuildRange.value(
                #                  strFmt('(%1 == "%3") || (%2 == "%4")',
                #                       fieldStr(EMSProcessReference,SubstanceId),
                #                       fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                       emsFlow.SubstanceId,
                #                       substanceCategoryId));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #    else if (emsFlow.SubstanceId != '')
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,ProcessId));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,Description));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,SourceProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #        substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #        queryBuildRange.value(
                #              strFmt('(%1 == "%3") || (%2 == "%4")',
                #                   fieldStr(EMSProcessReference,SubstanceId),
                #                   fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                   emsFlow.SubstanceId,
                #                   substanceCategoryId));
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // This should control and disable the Substance and Destination if the
                #    // Source is cleared out.
                #    element.setControls();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DestinationProcessId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    // The lookup should only be available if Source is set, otherwise this field is disabled.
                #    // The lookup should only show the processes associated to the source, as well as with the substance
                #    // if the substance has a value.
                #
                #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(EMSProcess), _formControl);
                #    Query                   query;
                #    QueryBuildDataSource    qbsEMSProcess, qbsEMSProcessReference;
                #    QueryBuildRange         queryBuildRange;
                #    EMSSubstanceCategoryId  substanceCategoryId;
                #
                #    if (emsFlow.SourceProcessId != '' && emsFlow.IsAccidental == false)
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,DestinationProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SourceProcessId));
                #        queryBuildRange.value(queryValue(emsFlow.SourceProcessId));
                #
                #        if (emsFlow.SubstanceId != '')
                #        {
                #            queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #            substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #            queryBuildRange.value(
                #                  strFmt('(%1 == "%3") || (%2 == "%4")',
                #                       fieldStr(EMSProcessReference,SubstanceId),
                #                       fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                       emsFlow.SubstanceId,
                #                       substanceCategoryId));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    hasEMSAccess = element.hasTableAccess(this.table());
          #    element.handleSecurity(this, hasEMSAccess);
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    // Because of the join type between EMSFlow and EMSInvoiceRegisterFlowRelation tables,
          #    // the FlowId is not set during EMSFlow.initValue that's why setting FlowID is
          #    // intentionally done in this method, before writing to the table.
          #    emsFlow.FlowId = !emsFlow.FlowId ? emsPurchOrderFlowRelation.FlowId : emsFlow.FlowId;
          #
          #    isValid = super();
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    super(_append);
          #
          #    // This should control and disable the Substance and Destination since the
          #    // Source is still empty at this point.
          #    element.setControls();
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #
          #    super();
          #
          #    // Set the sourceProcessId if only one is available.
          #    if (EMSProcessRelation::typeLikeCount(EMSRelationTypes::Vendor,
          #                                      tableNum(VendTable),
          #                                      VendTable::find(purchTable.OrderAccount).RecId) == 1)
          #    {
          #        emsFlow.SourceProcessId = EMSProcessRelation::find(EMSRelationTypes::Vendor,
          #                                          tableNum(VendTable),
          #                                          VendTable::find(purchTable.OrderAccount).RecId).ProcessID;
          #    }
          #    // Set the substanceId if only one is available.
          #    if (EMSSubstance::itemLikeCount(purchLine.ItemId, purchLine.InventDimId) == 1)
          #    {
          #        emsFlow.SubstanceId = EMSSubstance::findbyItemId(purchLine.ItemId, purchLine.InventDimId).SubstanceId;
          #        emsFlow.UnitOfMeasure = EMSSubstance::find(emsFlow.SubstanceId).UnitOfMeasure;
          #        if (UnitOfMeasureConverter::canBeConverted(
          #                UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
          #                emsFlow.UnitOfMeasure))
          #        {
          #            emsFlow.UnitOfMeasure = UnitOfMeasure::findBySymbol(purchLine.PurchUnit).RecId;
          #            emsFlow.SubstanceEntryQty = purchLine.PurchQty;
          #        }
          #    }
          #    // Set the destinationprocessId if only one is available.
          #    if (EMSProcessReference::destinationProcessLikeCount(emsFlow.SourceProcessId, emsFlow.SubstanceId) == 1)
          #    {
          #        emsFlow.DestinationProcessId = EMSProcessReference::find(emsFlow.SourceProcessId, emsFlow.SubstanceId).DestinationProcessId;
          #    }
          #
          #
          #    emsFlow.FlowOriginType = EMSFlowOriginType::PurchaseOrder;
          #    emsFlow.TransactionCurrencyAmount = purchLine.LineAmount;
          #    emsFlow.TransactionCurrency       = purchLine.CurrencyCode;
          #    emsFlow.TransDate                 = purchLine.DeliveryDate;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    emsFlow.ScopeType = EMSProcessReference::find(emsFlow.SourceProcessId, emsFlow.SubstanceId).ScopeType;
          #    super();
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    flow_SourceProcessId.allowEdit(!emsFlow.IsProcessed);
          #    flow_SubstanceId.allowEdit(!emsFlow.IsProcessed);
          #    flow_SubstanceEntryQty.allowEdit(!emsFlow.IsProcessed);
          #    emsFlow_UnitOfMeasure.allowEdit(!emsFlow.IsProcessed);
          #    flow_DestinationProcessId.allowEdit(!emsFlow.IsProcessed);
          #    flow_FromDateTime.allowEdit(!emsFlow.IsProcessed);
          #    flow_ToDateTime.allowEdit(!emsFlow.IsProcessed);
          #    flow_Amount.allowEdit(!emsFlow.IsProcessed);
          #    emsFlow_TransactionCurrency.allowEdit(!emsFlow.IsProcessed);
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceDelete();
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PDSAdvancedPriceInfo
          Table               #PDSAdvancedPriceInfo
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (!#PDSPotencyEnabled)
          #    {
          #        pdsAdvancedPriceInfo_DS.joinSource(null);
          #        pdsAdvancedPriceInfo_DS.linkType(QueryDataLinkType::None);
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    //super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_Intrastat
          Table               #PurchTable_Intrastat
          JoinSource          #PurchTable
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_Intrastat
          Table               #PurchLine_Intrastat
          JoinSource          #PurchLine
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_BR
          Table               #PurchTable_BR
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CFPSId_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    CFPSTable_BR::lookup(_formControl, SalesPurchBoth_BR::Purch);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD SalesPurchOperationType_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    CFOPAttributesDeterminer_BR cfopAttributesDeterminer;
                #    boolean                     ret;
                #
                #    cfopAttributesDeterminer = CFOPAttributesDeterminer_BR::construct(purchLine);
                #
                #    ret = salesPurchOperationTypeController_BR.validate(purchTable_BR.SalesPurchOperationType_BR, cfopAttributesDeterminer);
                #
                #    if (ret && !purchTable.createInventTrans_BR())
                #    {
                #        if (Box::yesNo("@GLS104", DialogButton::No) == DialogButton::No)
                #        {
                #            return false;
                #        }
                #    }
                #
                #    return super() && ret;
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    CFOPAttributesDeterminer_BR cfopAttributesDeterminer;
                #    SalesPurchOperationTypeController_BR s;
                #
                #    cfopAttributesDeterminer = CFOPAttributesDeterminer_BR::construct(purchLine);
                #    s = new SalesPurchOperationTypeController_BR (element.name());
                #    return s.lookupReference(_formReferenceControl, cfopAttributesDeterminer);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_BR)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RetailPackagePurch
          Table               #RetailPackagePurch
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PackageId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Qty
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Package Purchase - Qty - Modified
                #/// </summary>
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.reReadLines();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD QtyReceived
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Package Purch - Qty Received - Modified
                #/// </summary>
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.reReadLines();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #delete
          #/// <summary>
          #/// Retail Package Purch - Delete
          #/// </summary>
          #public void delete()
          #{
          #    super();
          #
          #    purchTable_ds.reread();
          #    purchTable_ds.reReadLines();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RetailSumLines
          Table               #RetailSumLines
          Index               #PurchLineIdx
          CounterField        #LineNum
          AllowCheck          #No
          JoinSource          #PurchTable
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD ItemId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Sum Lines - Item ID - Modified
                #/// </summary>
                #public void modified()
                #{
                #    ;
                #
                #    retailSumLines_DS.inventLocationIdActive();
                #
                #    super();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #/// <summary>
          #/// Retail Sum Lines - Write
          #/// </summary>
          #public void write()
          #{
          #    super();
          #
          #    purchLine_ds.refresh();
          #    purchLine_ds.research();
          #    purchLine_ds.active();
          #
          #}
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Retail Sum LInes - Active
          #/// </summary>
          #/// <returns>
          #/// boolean
          #/// </returns>
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    this.inventLocationIdActive();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #inventLocationIdActive
          #/// <summary>
          #/// Retail Sum Lines - Invent Location ID active
          #/// </summary>
          #void inventLocationIdActive()
          #{
          #    InventDimGroupFieldSetup inventDimGroupFieldSetup = InventDimGroupSetup::newItemId(retailSumLines.ItemId).getFieldSetup(fieldNum(InventDim,InventLocationId));
          #
          #    fshSumLines_InventLocationId.allowEdit(inventDimGroupFieldSetup.isActive());
          #}
        ENDSOURCE
        SOURCE #initValue
          #/// <summary>
          #/// Retail Sum Lines - Initilize Value
          #/// </summary>
          #public void initValue()
          #{
          #    super();
          #
          #    retailSumlines.InventLocationId = purchTable.InventLocationId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EximPurchLine_IN
          Table               #EximPurchLine_IN
          Index               #PurchLineRecIdx
          AllowCheck          #No
          AllowDelete         #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD EximIncentiveSchemeGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (eximPurchLine_IN.EximIncentiveSchemeGroup)
                #    {
                #        eximPurchLine_IN.EximPorts = EximIncentiveSchemeGroup_IN::find(eximPurchLine_IN.EximIncentiveSchemeGroup).EximPortId;
                #    }
                #
                #    eximPurchLine_IN_ds.object(fieldNum(EximPurchLine_IN, ApplyDEPB)).allowEdit(element.enableApplyDEPB_IN());
                #    eximPurchLine_IN_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #    if (ret)
          #    {
          #        eximPurchLine_IN_ApplyDEPB.allowEdit(element.enableApplyDEPB_IN());
          #    }
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #prev
          #int prev()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.prev();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #next
          #int next()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.next();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #last
          #int last()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.last();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #first
          #int first()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.first();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    purchLine_ds.create();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Tax1099BoxDetail
          Table               #Tax1099BoxDetail
          AllowCheck          #No
          JoinSource          #PurchLine
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD State
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    tax1099BoxDetail.Tax1099StateTaxID = VendStateTaxID::findByVendState(purchTable.InvoiceAccount,tax1099BoxDetail.State).StateTaxID;
                #
                #    element.redraw();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    Tax1099BoxDetail::lookupTax1099State(_formControl, purchTable.InvoiceAccount);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    Tax1099BoxDetail::jumpRefTax1099State(purchTable.InvoiceAccount,tax1099BoxDetail.State);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write(boolean _tax1099DetailRequired = false)
          #{
          #
          #    Tax1099Fields tax1099Fields;
          #
          #    if (_tax1099DetailRequired)
          #    {
          #        //Called as a child record for PurchLine
          #        super();
          #        tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
          #
          #        if (tax1099Fields.Tax1099Box == #G_2)
          #        {
          #            if(tax1099BoxDetail.Tax1099TaxYear > year(systemDateGet()) && tax1099BoxDetail.Tax1099TaxYear < (year(systemDateGet()) + 15))
          #            {
          #                warning("@SPS2");
          #            }
          #        }
          #    }
          #
          #    else if(purchLine.validateWrite())
          #    {
          #        purchline_ds.write();
          #    }
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean         isValid;
          #    Tax1099Fields   tax1099Fields;
          #
          #
          #    isValid = super();
          #    tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
          #
          #    if(isValid)
          #    {
          #        if (isValid && tax1099Fields.Tax1099Box == #G_1)
          #        {
          #            if ((abs(tax1099BoxDetail.Tax1099StateTaxWithheld) > abs(purchLine.Tax1099Amount)))
          #            {
          #                isValid = checkFailed(strFmt("@SPS1943"));
          #            }
          #        }
          #
          #        if (tax1099Fields.Tax1099Box == #S_2)
          #        {
          #            if ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc ==""))
          #            {
          #                isValid = checkFailed("@SPS3");
          #            }
          #        }
          #
          #        else if (tax1099Fields.Tax1099Box == #G_2)
          #        {
          #            if ((tax1099BoxDetail.Tax1099TaxYear < (year(systemDateGet())-15)) || (tax1099BoxDetail.Tax1099TaxYear > (year(systemDateGet()) + 10)) )
          #            {
          #                isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(systemDateGet()) - 15), int2str(year(systemDateGet()) + 10)));
          #            }
          #        }
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RAssetPurchTrans
          Table               #RAssetPurchTrans
          Index               #TableRecAssetIdx
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret = super();
          #
          #    rassetpurchTrans_ds.allowDelete(rAssetPurchTrans.Posted ?
          #                                    false :
          #                                    purchTableForm.editLineAllowed(purchLine) && (element.allowEditAsset_RU() || purchLine.ProcurementCategory));
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    super();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #    purchTable_ds.selectionChanged();
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    super();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #    purchTable_ds.selectionChanged();
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #    rAssetPurchTrans.initFromPurchLine(purchLine);
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    boolean allowEdit;
          #
          #    super();
          #
          #    allowEdit = purchTableForm.editLineAllowed(purchLine) && (element.allowEditAsset_RU() || purchLine.ProcurementCategory);
          #
          #    rassetpurchTrans_ds.allowEdit(allowEdit);
          #    rassetpurchTrans_ds.allowCreate(allowEdit);
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxInformation_IN
          Table               #TaxInformation_IN
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine_IN
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD SalesTaxRegistrationNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.SalesTaxRegistrationNumber).RegistrationNumber,
                #        TaxType_IN::SalesTax,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TIN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.tin).RegistrationNumber,
                #        TaxType_IN::VAT,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TAN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxWithholdRegNumbers_IN::jumpRef(
                #        TaxWithholdRegNumbers_IN::find(taxInformation_IN.tin).RegistrationNumber,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ManECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ManECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TraderECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TraderECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD IECRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.iecRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Customs,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD STCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.stcRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::ServiceTax,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ECCNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.eccNumber).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_IN
          Table               #PurchLine_IN
          JoinSource          #PurchLine
          LinkType            #Passive
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD CompanyLocation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRefLocationAddressForm(purchLine_IN.CompanyLocation_IN, this);
                #}
                #
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_IN_DS.object(fieldNum(PurchLine_IN, TaxInformation_IN)).modified();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::locationLookup(_formReferenceControl, CompanyInfo::find().RecId);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD CustomsTariffCodeTable_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return CustomsTariffCodeTable_IN::resolveCustomsTariffCode(_formReferenceControl, Direction_IN::Import);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = CustomsTariffCodeTable_IN::lookupDirectionImportExport(_formReferenceControl, enum2str(Direction_IN::Import));
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD DirectSettlement_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (purchLine_IN.DirectSettlement_IN != DirectSettlement_IN::PLA)
                #    {
                #        purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #    }
                #    element.enableFieldsActive_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ExciseRecordType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (purchLine_IN.ExciseRecordType_IN != ExciseRecordType_IN::RG23C)
                #    {
                #        purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #    }
                #    element.enableFieldsActive_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ExciseType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_IN_ds.enableExciseFields_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD TaxInformation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRef(purchLine_IN.TaxInformation_IN, this);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    taxInformation_IN_DS.linkActive();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::lookup(_formReferenceControl, purchline_IN.CompanyLocation_IN);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    if (ret)
          #    {
          #        purchLine_IN_ds.rereadReferenceDataSources();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    if (purchLine.RecId && purchLine_IN.RecId)
          #    {
          #        purchLine.type().update_IN();
          #    }
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #leaveRecord
          #public boolean leaveRecord(boolean _forceUpdate = false)
          #{
          #    boolean ret;
          #
          #    if (purchLine_IN.PurchLine)
          #    {
          #        ret = super(_forceUpdate);
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (purchLine_IN.PurchLine)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #exciseNone_IN
          #edit ExciseNone_IN exciseNone_IN(
          #    boolean         _set,
          #    ExciseNone_IN   _exciseNone_IN)
          #{
          #    ExciseNone_IN           exciseNone;
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseNone(_set,_exciseNone_IN, purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseNone = taxExciseTypeController.exciseRecordType2ExciseNone(purchLine_IN.ExciseRecordType_IN);
          #    return exciseNone;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchLine_INEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #exciseManufacture_IN
          #edit ExciseManufacture_IN exciseManufacture_IN(
          #    boolean                 _set,
          #    ExciseManufacture_IN    _exciseManufacture_IN)
          #{
          #    ExciseManufacture_IN    exciseManufacture;
          #
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseManufacture(
          #        _set,
          #        _exciseManufacture_IN,
          #        purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseManufacture = taxExciseTypeController.exciseRecordType2ExciseManufacture(purchLine_IN.ExciseRecordType_IN);
          #
          #    return exciseManufacture;
          #}
        ENDSOURCE
        SOURCE #exciseTraders_IN
          #edit ExciseTraders_IN exciseTraders_IN(
          #    boolean          _set,
          #    ExciseTraders_IN _exciseTraders_IN)
          #{
          #    ExciseTraders_IN        exciseTraders;
          #
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseTraders(_set,_exciseTraders_IN, purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseTraders = taxExciseTypeController.exciseRecordType2ExciseTraders(purchLine_IN.ExciseRecordType_IN);
          #
          #    return exciseTraders;
          #}
        ENDSOURCE
        SOURCE #enableExciseFields_IN
          #public void enableExciseFields_IN()
          #{
          #    if (TaxParameters::isExciseEnable_IN())
          #    {
          #        taxExciseTypeController.buildUI(
          #            purchLine_IN.ExciseType_IN,
          #            purchLine_IN.ExciseRecordType_IN,
          #            purchLine.ItemId,
          #            purchLine.PurchQty > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax);
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_W
          Table               #PurchLine_W
          JoinSource          #PurchLine
          LinkType            #Passive
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CountryRegionName_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    PurchLine::lookupCountryRegionName_RU(_formControl, purchTable.LanguageId);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MarkupCode_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.enableLedgerDimensionDefaultAccount();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    MarkupTable::serviceMarkupCodeLookup_RU(_formControl);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #
          #    if (purchLine_W.PurchLine)
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchLine_WEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_W
          Table               #PurchTable_W
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_W)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_RU
          Table               #PurchTable_RU
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD AgreementHeaderExt_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // force a refresh because the agreement document title is indirectly related on a different datasource
                #    purchTable_DS.cacheCalculateMethod(tableMethodStr(PurchTable, agreementDocumentTitle_RU));
                #    purchTable_DS.refresh();
                #}
                #
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = PurchAgreementHeaderExt_RU::purchAgreementReferenceLookup(_formReferenceControl,
                #        purchTable.OrderAccount,
                #        purchTable.AccountingDate,
                #        purchTable.InvoiceAccount);
                #
                #    return ret;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    PurchAgreementHeaderExt_RU::purchAgreementJumpRef(purchTable_RU.AgreementHeaderExt_RU);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_RU)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #WHSLoadLine
          Table               #WHSLoadLine
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    if (tabLoad.isActivePage())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TMSPurchTable
          Table               #TMSPurchTable
          AllowCheck          #No
          JoinSource          #PurchTable
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CarrierCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    tmsPurchTable.ModeCode  = TMSCarrier::find(tmsPurchTable.CarrierCode).ModeCode;
                #
                #    if (!tmsPurchTable.CarrierCode
                #    || !TMSCarrierService::exist(tmsPurchTable.CarrierServiceCode, tmsPurchTable.CarrierCode))
                #    {
                #        tmsPurchTable.CarrierServiceCode    = "";
                #    }
                #
                #    tmsPurchTable_ds.refresh();
                #
                #    element.tmsUpdatePurchTable();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CarrierServiceCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    element.tmsUpdatePurchTable();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ModeCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    purchTable_ds.reread();
                #    purchTable_ds.refresh();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #/// <summary>
          #/// Determines whether the current record is valid and ready to be written to the database.
          #/// </summary>
          #/// <returns>
          #/// true if the record is valid; otherwise, false.
          #/// </returns>
          #/// <remarks>
          #/// Some purchase table records don't have a corresponding tms transportation table record
          #/// so call super only if corresponding record exists
          #/// </remarks>
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (tmsPurchTable.CarrierCode != "" && tmsPurchTable.CarrierServiceCode == "")
          #    {
          #        ret = checkFailed("@TRX733");
          #    }
          #
          #    if (ret
          #    && tmsPurchTable.CarrierCode
          #    && tmsPurchTable.CarrierServiceCode
          #    && !TMSCarrierService::exist(tmsPurchTable.CarrierServiceCode, tmsPurchTable.CarrierCode))
          #    {
          #        ret = checkFailed("@TRX734");
          #    }
          #
          #    if (ret && tmsPurchTable.RecId != 0)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #write
          #/// <summary>
          #///    Persists a record in the database when super is called.
          #/// </summary>
          #/// <remarks>
          #/// Some purchase table records don't have a corresponding tms transportation table record
          #/// so call write method and not super and it will update database properly
          #/// </remarks>
          #public void write()
          #{
          #    if (!tmsPurchTable.RecId)
          #    {
          #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
          #    }
          #
          #    tmsPurchTable.write();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableTMSFields();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchRFQReplyLinePurchLine
          Table               #PurchRFQReplyLinePurchLine
          Index               #PurchRFQReplyLineIdx
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    return true;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    // Commented out call to Super() to avoid unintentional insert of new record
          #    // or updating an existing record ( Kernel behavior caused by Outerjoin to PurchLine)
          #
          #    //super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #WHSPurchLine
          Table               #WHSPurchLine
          AllowCheck          #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #
          #    if (whsPurchLine.RecId)
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    if (whsPurchLine.RecId)
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LogisticsPostalAddressHeader
          Table               #LogisticsPostalAddress
          JoinSource          #PurchTable
          JoinRelation        #DeliveryPostalAddress
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LogisticsPostalAddressLine
          Table               #LogisticsPostalAddress
          JoinSource          #PurchLine
          JoinRelation        #DeliveryPostalAddress
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustomsTariffCodeTable_IN
          Table               #CustomsTariffCodeTable_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ExciseTariffCodes_IN
          Table               #ExciseTariffCodes_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #SalesTaxFormTypes_IN
          Table               #SalesTaxFormTypes_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #SalesTaxFormTypes_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ServiceCodeTable_IN
          Table               #ServiceCodeTable_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #ServiceCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDREFERENCEDATASOURCES
  
  JOINS
    PurchLine PurchTable
    PurchLineForeignTradeCategory PurchLine
    InventDim PurchLine
    EMSPurchOrderFlowRelation PurchLine
    EMSFlow EMSPurchOrderFlowRelation
    PDSAdvancedPriceInfo PurchLine
    PurchTable_Intrastat PurchTable
    PurchLine_Intrastat PurchLine
    PurchTable_BR PurchTable
    RetailPackagePurch PurchLine
    RetailSumLines PurchTable
    EximPurchLine_IN PurchLine
    Tax1099BoxDetail PurchLine
    RAssetPurchTrans PurchLine
    TaxInformation_IN PurchLine_IN
    PurchLine_IN PurchLine
    PurchLine_W PurchLine
    PurchTable_W PurchTable
    PurchTable_RU PurchTable
    WHSLoadLine PurchLine
    TMSPurchTable PurchTable
    PurchRFQReplyLinePurchLine PurchLine
    WHSPurchLine PurchLine
    LogisticsPostalAddressHeader PurchTable
    LogisticsPostalAddressLine PurchLine
    CustomsTariffCodeTable_IN PurchLine_IN
    ExciseTariffCodes_IN PurchLine_IN
    SalesTaxFormTypes_IN PurchLine_IN
    ServiceCodeTable_IN PurchLine_IN
  ENDJOINS
  
  PARTREFERENCES
    PARTREFERENCE #PurchLatestOrdersPart
      PROPERTIES
        Name                #PurchLatestOrdersPart
        MenuItemName        #PurchLatestOrdersPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.OrderAccount
        ElementPosition     #536870911
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
    PARTREFERENCE #PurchTotalsSummaryPart
      PROPERTIES
        Name                #PurchTotalsSummaryPart
        MenuItemName        #PurchTotalsSummaryPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.PurchId
        ElementPosition     #1073741822
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
    PARTREFERENCE #PurchEncumbranceSummaryPart
      PROPERTIES
        Name                #PurchEncumbranceSummaryPart
        MenuItemName        #PurchEncumbranceSummaryPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.PurchId
        ElementPosition     #1610612733
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS15812
      TitleDatasource     #PurchTable
      DataSource          #PurchTable
      HideIfEmpty         #No
      WorkflowEnabled     #Yes
      WorkflowDatasource  #PurchTable
      WorkflowType        #PurchTableTemplate
      Style               #DetailsFormTransaction
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #1073741822
          HierarchyParent     #FSHSum
          Style               #Strip
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPaneHeader
          AutoDeclaration     #Yes
          ElementPosition     #357913941
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #EnvironmentActionPane
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Environment
          Style               #Strip
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #LineOverviewActionStrip
          ElementPosition     #1073741822
          HierarchyParent     #LineViewLines
          Style               #Strip
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #RAssetActionPane
          ElementPosition     #1073741822
          HierarchyParent     #Asset_RU
          Style               #Strip
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Customs
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1932735276
          HierarchyParent     #ActionPaneHeader
          Caption             #@GLS5007
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #EnvironmentActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #General
          AutoDeclaration     #Yes
          ElementPosition     #1717986912
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS114913
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #GeneralSMB
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #Retail
          ElementPosition     #1825361094
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS114913
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Invoice
          AutoDeclaration     #Yes
          ElementPosition     #1288490184
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS14204
        ENDPROPERTIES
        
        METHODS
          SOURCE #selectionChanged
            #public void selectionChanged()
            #{
            #    PurchLine purchLineLoc;
            #
            #    super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAAPRetainage)))
            #    {
            #        if(!buttonUpdateInvoice.enabled())
            #        {
            #            select firstonly purchLineLoc
            #                where purchLineLoc.PurchId == purchTable.PurchId &&
            #                      purchLineLoc.psaTotalRetainAmount > 0;
            #
            #            if(purchLineLoc)
            #            {
            #                buttonUpdateInvoice.enabled(true);
            #            }
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #LineOverviewActionTab
          ElementPosition     #1431655764
          HierarchyParent     #LineOverviewActionStrip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Manage
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS115306
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Purchase
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS53872
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #PurchOrder
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS25545
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #RAssetActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #RAssetActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Receive
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS52744
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Retail
          AutoDeclaration     #Yes
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1503238548
          HierarchyParent     #ActionPaneHeader
          Caption             #@RET4885
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #TMS
          ElementPosition     #1646404124
          HierarchyParent     #ActionPaneHeader
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #WHS
          ElementPosition     #1574821336
          HierarchyParent     #ActionPaneHeader
          Caption             #@WAX13
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroupTMS
          HelpText            #@TRX617
          ElementPosition     #1610612733
          HierarchyParent     #TMS
          Caption             #@TRX597
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroupWHS
          ElementPosition     #1431655764
          HierarchyParent     #WHS
          Caption             #@SYS40422
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsGenerate
          ElementPosition     #1288490187
          HierarchyParent     #Customs
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsJournal
          ElementPosition     #1717986916
          HierarchyParent     #Customs
          Caption             #@SYS2827
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsMaintain
          ElementPosition     #858993458
          HierarchyParent     #Customs
          Caption             #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #EnvironmentButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Functions
          ElementPosition     #1610612733
          HierarchyParent     #Retail
          Caption             #@RET4211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #FunctionsSMB
          ElementPosition     #1431655764
          HierarchyParent     #GeneralSMB
          Caption             #@RET4211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralMaintain
          ElementPosition     #1533916890
          HierarchyParent     #General
          Caption             #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralRelatedInfo
          ElementPosition     #1840700268
          HierarchyParent     #General
          Caption             #@SYS111665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralSetup
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #General
          Caption             #@SYS342635
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralSetupSMB
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #GeneralSMB
          Caption             #@SYS342635
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralVendor
          ElementPosition     #920350134
          HierarchyParent     #General
          Caption             #@SYS8079
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Inquiries
          Visible             #No
          ElementPosition     #1073741822
          HierarchyParent     #Retail
          Caption             #@RET5171
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #IntercompanyTracing
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1227133512
          HierarchyParent     #Manage
          Caption             #@SYS317473
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceBill
          ElementPosition     #805306365
          HierarchyParent     #Invoice
          Caption             #@SYS114665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceChange
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Invoice
          Caption             #@SYS317554
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceIntroduce
          AutoDeclaration     #Yes
          ElementPosition     #1342177275
          HierarchyParent     #Invoice
          Caption             #@SYS317556
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceJournals
          ElementPosition     #1879048185
          HierarchyParent     #Invoice
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceJournalsSMB
          ElementPosition     #1073741823
          HierarchyParent     #GeneralSMB
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceProcess
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #Invoice
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceProcessSMB
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #GeneralSMB
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceSettle
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Invoice
          Caption             #@SYS114666
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewActionButtonGroup
          ElementPosition     #1610612733
          HierarchyParent     #LineOverviewActionTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewCoreActionButtonGroup
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #LineOverviewActionTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewWHS
          ElementPosition     #1879048189
          HierarchyParent     #LineOverviewActionTab
          Caption             #@WAX374
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageBankDocument
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #Manage
          Caption             #@SYS313653
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageBudget
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #Manage
          Caption             #@SYS80981
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageHistory
          ElementPosition     #1840700268
          HierarchyParent     #Manage
          Caption             #@SYS35017
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageView
          ElementPosition     #613566756
          HierarchyParent     #Manage
          Caption             #@SYS53394
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #MCRPurchaseRelease
          ElementPosition     #2004318066
          HierarchyParent     #Purchase
          Caption             #@SYS16190
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #MCRReceiveDeliver
          ElementPosition     #1932735281
          HierarchyParent     #Receive
          Caption             #@SYS78211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Post
          ElementPosition     #1073741822
          HierarchyParent     #TMS
          Caption             #@SYS41360
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ProductLabels
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #Retail
          Caption             #@RET4915
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseAccounting
          ElementPosition     #1717986912
          HierarchyParent     #Purchase
          Caption             #@SYS314071
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseCalculate
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Purchase
          Caption             #@SYS1085
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseCreate
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #Purchase
          Caption             #@SYS112171
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseGenerate
          AutoDeclaration     #Yes
          ElementPosition     #1503238548
          HierarchyParent     #Purchase
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseJournals
          ElementPosition     #1932735279
          HierarchyParent     #Purchase
          Caption             #@SYS2827
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchasePrepay
          AutoDeclaration     #Yes
          ElementPosition     #1288490184
          HierarchyParent     #Purchase
          Caption             #@SYS319483
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseTax
          ElementPosition     #858993456
          HierarchyParent     #Purchase
          Caption             #@SYS333536
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderAttachments
          ElementPosition     #1908874352
          HierarchyParent     #PurchOrder
          Caption             #@SYS316708
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderCopy
          AutoDeclaration     #Yes
          ElementPosition     #1193046470
          HierarchyParent     #PurchOrder
          Caption             #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderList
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1670265058
          HierarchyParent     #PurchOrder
          Caption             #@SYS118440
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderMaintain
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #PurchOrder
          Caption             #@SYS316703
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderMiscCharges
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #Purchase
          Caption             #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderNew
          ElementPosition     #477218588
          HierarchyParent     #PurchOrder
          Caption             #@SYS2055
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderView
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrder
          Caption             #@SYS53394
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #RAssetButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #RAssetActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveDelivery
          ElementPosition     #1503238551
          HierarchyParent     #Receive
          Caption             #@SYS4508
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveJournals
          ElementPosition     #1717986916
          HierarchyParent     #Receive
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveProcess
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #Receive
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveQualityManagement
          ElementPosition     #1288490187
          HierarchyParent     #Receive
          Caption             #@SYS113616
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ShowGroup
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #PurchOrder
          Caption             #@SYS317437
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Flow
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentGroup
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGroup
          VisibleRows         #10
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid1
          ElementPosition     #1610612733
          HierarchyParent     #FSHSum
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridAsset
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #Asset_RU
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridLoads
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GroupLoads
          DataSource          #WHSLoadLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #LineSpec
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #LineViewLines
          VisibleRows         #5
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #PackageGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGroup1
          DataSource          #RetailPackagePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Account
          VerticalSpacing     #5
          ElementPosition     #715827882
          HierarchyParent     #Vendor
          FrameType           #None
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AdministrationForSubcontract
          ElementPosition     #2139095038
          HierarchyParent     #TabLineGeneral
          Caption             #@SYS40777
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AdministrationGroup
          ElementPosition     #1431655764
          HierarchyParent     #GroupSetupMid
          DataSource          #PurchTable
          DataGroup           #Administration
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Agreement_RU
          CountryRegionCodes  #RU
          ElementPosition     #1932735281
          HierarchyParent     #GroupGeneralRight
          DataSource          #PurchTable_RU
          DataGroup           #Agreement_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Asset_RU
          CountryRegionCodes  #RU
          Height              #Column height
          ConfigurationKey    #RAsset
          ElementPosition     #1879048189
          HierarchyParent     #TabLineFixedAsset
          Caption             #@GLS106645
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Barcode
          ElementPosition     #1073741822
          HierarchyParent     #TabLinePicking
          DataSource          #PurchLine
          DataGroup           #Barcode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BaseInfo
          ElementPosition     #1073741822
          HierarchyParent     #GroupGeneralLeft
          Caption             #@SYS15812
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ChooseGroup
          ElementPosition     #1717986916
          HierarchyParent     #RBOItemPackage
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Commitment_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1968526675
          HierarchyParent     #GeneralLeft
          Caption             #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CompanyInformation
          AutoDeclaration     #Yes
          ElementPosition     #314964266
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS81121
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ConfirmingPO
          ElementPosition     #2143289342
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable
          DataGroup           #ConfirmingPO
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ConsTarget_JP
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          ElementPosition     #2013265918
          HierarchyParent     #GroupGeneralLeft
          DataSource          #PurchTable
          DataGroup           #ConsTarget_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ContactInfo
          ElementPosition     #1073741822
          HierarchyParent     #GroupGeneralMid
          Caption             #@SYS21663
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CrossDock
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #TabLinePicking
          DataSource          #WHSPurchLine
          DataGroup           #CrossDock
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Crossdocking
          ElementPosition     #715827882
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #Crossdocking
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CrossdockingDates
          ElementPosition     #1073741823
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #CrossdockingDates
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Currency
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable
          DataGroup           #Currency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Customs_IN
          AutoDeclaration     #Yes
          ElementPosition     #816043782
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5007
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CustReference
          ElementPosition     #1431655763
          HierarchyParent     #GeneralMid
          DataSource          #PurchLine
          DataGroup           #DeliveryRef
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DateAndTime
          ElementPosition     #1840700268
          HierarchyParent     #GroupSetupRight
          Caption             #@SYS112412
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DateAndTimeLine
          ElementPosition     #1757032074
          HierarchyParent     #TabLineSetup
          Caption             #@SYS112412
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Delivery
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryExt
          DataSource          #PurchTable
          DataGroup           #Delivery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Delivery_RU
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryExt
          FrameType           #None
          DataSource          #PurchTable_RU
          DataGroup           #Delivery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryDateLine
          ElementPosition     #1073741822
          HierarchyParent     #TabLineDelivery
          Caption             #@SYS16056
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryExt
          ElementPosition     #1073741822
          HierarchyParent     #TabHeaderDelivery
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryHeader
          ElementPosition     #858993458
          HierarchyParent     #LineViewHeader
          Caption             #@SYS4508
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryLine
          ElementPosition     #1610612734
          HierarchyParent     #TabLineDelivery
          Caption             #@SYS4508
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryLineForSubcontracts
          ElementPosition     #2146435070
          HierarchyParent     #TabLineSetup
          Caption             #@SYS4508
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Dimension
          ElementPosition     #1431655764
          HierarchyParent     #TabHeaderDimension
          DataSource          #PurchTable
          DataGroup           #Dimension
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DIOTInformation_MX
          CountryRegionCodes  #MX
          ElementPosition     #1952257860
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #DIOTInformation_MX
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Disc
          ElementPosition     #1073741822
          HierarchyParent     #TabLinePriceDisc
          Caption             #@SYS11829
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DiscMarkup
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable
          DataGroup           #DiscountMiscCharges
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DiscountsHeader
          ElementPosition     #1288490187
          HierarchyParent     #LineViewHeader
          Caption             #@SYS335044
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DossierImportation
          ElementPosition     #2075900857
          HierarchyParent     #LineViewHeader
          Caption             #Dossier d'importation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #EnvironmentGroup
          ElementPosition     #1610612733
          HierarchyParent     #Environment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Excise_IN
          AutoDeclaration     #Yes
          ElementPosition     #687194763
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5005
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Exim_IN
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS61737
          DataSource          #EximPurchLine_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformation
          ElementPosition     #1193046470
          HierarchyParent     #TabHeaderFiscalInformation_BR
          Caption             #@GLS56
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformation_BR
          ElementPosition     #1431655764
          HierarchyParent     #TabLineFiscalInformation_BR
          DataSource          #PurchLine
          DataGroup           #FiscalInformation_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformationGroup_BR
          CountryRegionCodes  #BR
          ElementPosition     #2013265917
          HierarchyParent     #TabLineFixedAsset
          Caption             #@GLS56
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FixedAssets
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTrade
          ElementPosition     #429496729
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTrade_RU
          ElementPosition     #858993458
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine_W
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTradeCategory
          ElementPosition     #1288490187
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLineForeignTradeCategory
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTradeForSubContracts
          ElementPosition     #1993133258
          HierarchyParent     #TabLineProduct
          Caption             #@SYS27650
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FSHConcession
          ElementPosition     #1431655764
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #RetailConcession
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #g1099Fields
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #TabLineTax1099
          DataSource          #PurchLine
          DataGroup           #g1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralReference
          ElementPosition     #1073741822
          HierarchyParent     #GeneralMid
          Caption             #@SYS21697
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralRight
          ElementPosition     #1717986916
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGroup
          ElementPosition     #1431655764
          HierarchyParent     #TabPageGrid
          Style               #BorderlessGridContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGroup1
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #858993458
          HierarchyParent     #RBOItemPackage
          FrameType           #None
          DataSource          #RetailPackagePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #715827882
          HierarchyParent     #Account
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupAddressLeft
          ElementPosition     #858993458
          HierarchyParent     #HeaderAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupaddressMid
          ElementPosition     #1288490187
          HierarchyParent     #HeaderAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDistributionTemplateHeader
          ElementPosition     #1073741822
          HierarchyParent     #TabFinancialDimensionsHeader
          FrameType           #None
          DataSource          #PurchTable
          LeftMargin          #10
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDistributionTemplateLine
          ElementPosition     #1073741822
          HierarchyParent     #TabFinancialDimensionsLine
          FrameType           #None
          DataSource          #PurchLine
          LeftMargin          #10
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupEmail
          ElementPosition     #1610612733
          HierarchyParent     #ContactInfo
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupFinancialDimensionHeader
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          ElementPosition     #1610612733
          HierarchyParent     #TabFinancialDimensionsHeader
          FrameType           #None
          DataSource          #PurchTable
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupFinancialDimensionLine
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          ElementPosition     #1610612733
          HierarchyParent     #TabFinancialDimensionsLine
          FrameType           #None
          DataSource          #PurchLine
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralLeft
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralMid
          ElementPosition     #1288490187
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralRight
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineProject
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLineDeliveryAddressRef
          ElementPosition     #1288490187
          HierarchyParent     #TabLineAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLoads
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #TabLoad
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineProject
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupNotificationToTheCentralBank
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #GroupSetupRight
          DataSource          #PurchTable
          DataGroup           #NotificationToTheCentralBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupRight
          ElementPosition     #1717986916
          HierarchyParent     #TabLineProject
          FrameType           #None
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupLeft
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupMid
          ElementPosition     #1288490187
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupRight
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupURL
          ElementPosition     #1073741822
          HierarchyParent     #ContactInfo
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupWithholdingTax
          ElementPosition     #601295417
          HierarchyParent     #TabTaxInformation_IN
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #grpAssetQualifier
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          Caption             #@SYS136021
          Columnspace         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          ElementPosition     #1610612733
          HierarchyParent     #SalesTaxLine
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #GSTHSTTaxType_CA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAddress
          Width               #Column width
          ElementPosition     #1610612734
          HierarchyParent     #TabHeaderAddress
          FrameType           #None
          Caption             #@SYS9362
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAddressDisplayForSubcontracts
          ElementPosition     #1879048190
          HierarchyParent     #HeaderAddress
          Caption             #@SYS36203
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAttention
          ElementPosition     #1717986916
          HierarchyParent     #HeaderAddress
          DataSource          #PurchTable
          DataGroup           #Attention
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderDlvAddressFiscalInformation_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          ElementPosition     #1932735281
          HierarchyParent     #HeaderAddress
          Caption             #@GLS368
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderForeignTrade
          ElementPosition     #1431655764
          HierarchyParent     #TabHeaderForeignTrade
          FrameType           #None
          DataSource          #PurchTable
          Columns             #Auto
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderInfo
          Width               #Column width
          ElementPosition     #1073741822
          HierarchyParent     #TabPageDetails
          FrameType           #None
          Style               #DetailTitleContainer
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderInterCompany
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1533916890
          HierarchyParent     #GroupSetupRight
          FrameType           #None
          Caption             #@SYS74106
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #IndiaSalesTax
          AutoDeclaration     #Yes
          ElementPosition     #515396072
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS5878
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #IndiaVAT
          AutoDeclaration     #Yes
          ElementPosition     #472446400
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5004
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterestAndFine_BR
          ElementPosition     #1503238551
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable_BR
          DataGroup           #InterestAndFine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Intrastat
          ElementPosition     #1789569705
          HierarchyParent     #TabHeaderForeignTrade
          FrameType           #None
          DataSource          #PurchTable_Intrastat
          DataGroup           #Intrastat
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Intrastat1
          ElementPosition     #1073741822
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine_Intrastat
          DataGroup           #Intrastat
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventoryDimensionsGrid
          AutoDeclaration     #Yes
          ElementPosition     #904203640
          HierarchyParent     #LineSpec
          BackgroundColor     #Window background
          DataSource          #InventDim
          DataGroup           #InventoryDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventProfile_RU
          ElementPosition     #1859754391
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_RU
          DataGroup           #InventProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InvoiceMatching
          AutoDeclaration     #Yes
          ElementPosition     #585677358
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #InvoiceMatching
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ItemOrderCreation
          ElementPosition     #1789569705
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #ItemOrderCreation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ItemReference
          AllowEdit           #No
          ElementPosition     #1838782871
          HierarchyParent     #TabLineProduct
          DataSource          #PurchLine
          DataGroup           #ItemReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Line1099Fields
          ElementPosition     #2130706430
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineAddress
          Width               #Column width
          ElementPosition     #1546188222
          HierarchyParent     #TabLineAddress
          FrameType           #None
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineAddressDisplayForSubcontracts
          ElementPosition     #1460288877
          HierarchyParent     #TabLineAddress
          Caption             #@SYS36203
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDeliveryAddress
          ElementPosition     #858993458
          HierarchyParent     #TabLineAddress
          Caption             #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDeliveryAddressForSubcontracts
          ElementPosition     #1374389532
          HierarchyParent     #TabLineAddress
          Caption             #@SYS88743
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDlvAddressFiscalInformation_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          ElementPosition     #1431655764
          HierarchyParent     #LineAddress
          Caption             #@GLS368
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineIntercompany
          ElementPosition     #1789569704
          HierarchyParent     #GeneralMid
          DataSource          #PurchLine
          DataGroup           #Intercompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineInventory
          ElementPosition     #390451572
          HierarchyParent     #TabLineSetup
          Caption             #@SYS981
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineInventoryForSubcontracts
          ElementPosition     #2145386494
          HierarchyParent     #TabLineSetup
          Caption             #@SYS981
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LinePosting_RU
          ElementPosition     #1879048190
          HierarchyParent     #TabLineDelivery
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineSalesTax
          ElementPosition     #1073741822
          HierarchyParent     #SalesTaxLine
          DataSource          #PurchLine
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Markup_RU
          ElementPosition     #2041482145
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine_W
          DataGroup           #Markup_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MCRDropShip
          ElementPosition     #2013265918
          HierarchyParent     #TabLineDelivery
          DataSource          #PurchLine
          DataGroup           #MCRDropShip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Measurement
          ElementPosition     #1717986916
          HierarchyParent     #TabLineForeignTrade
          Caption             #@SYS34825
          DataSource          #PurchLineForeignTradeCategory
          DataGroup           #Measurement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OrderLine
          ElementPosition     #1431655764
          HierarchyParent     #GeneralLeft
          Caption             #@SYS22920
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Payment
          ElementPosition     #1073741822
          HierarchyParent     #PaymentExt
          DataSource          #PurchTable
          DataGroup           #Payment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Payment_RU
          ElementPosition     #1610612734
          HierarchyParent     #PaymentExt
          FrameType           #None
          DataSource          #PurchTable_W
          DataGroup           #Payment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentExt
          ElementPosition     #1431655762
          HierarchyParent     #TabHeaderPriceCalc
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PhysDims
          ElementPosition     #1073741822
          HierarchyParent     #TabLoad
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PlannedOrderLine
          AllowEdit           #No
          ElementPosition     #1431655764
          HierarchyParent     #PlannedOrderReferenceLine
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #PlannedOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PlannedOrderReferenceLine
          ElementPosition     #1563636529
          HierarchyParent     #TabLineProduct
          Caption             #@SYS24657
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Posting
          ElementPosition     #1610612733
          HierarchyParent     #GroupSetupLeft
          DataSource          #PurchTable
          DataGroup           #Posting
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PostingLine
          ElementPosition     #1464193395
          HierarchyParent     #TabLineSetup
          Caption             #@SYS5943
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Potency
          ElementPosition     #1879048189
          HierarchyParent     #TabLinePriceDisc
          DataSource          #PDSAdvancedPriceInfo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Price
          ElementPosition     #1610612734
          HierarchyParent     #TabLinePriceDisc
          Caption             #@SYS12983
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Price_RU
          ElementPosition     #1145324610
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable_RU
          DataGroup           #Price_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductDimensions
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ProductLeft
          Caption             #@SYS133228
          DataSource          #InventDim
          DataGroup           #ProductDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineProduct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineProduct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectCostPrice
          ConfigurationKey    #ProjBasic
          ElementPosition     #1073741822
          HierarchyParent     #GroupRight
          DataSource          #PurchLine
          DataGroup           #ProjectCostPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectIdentification
          ConfigurationKey    #ProjBasic
          ElementPosition     #1431655764
          HierarchyParent     #GroupLeft
          DataSource          #PurchLine
          DataGroup           #ProjectIdentification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectSalesPrice
          ConfigurationKey    #ProjBasic
          ElementPosition     #1073741822
          HierarchyParent     #GroupMid
          DataSource          #PurchLine
          DataGroup           #ProjectSalesPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Project-salestax
          ConfigurationKey    #ProjBasicTimeMaterial
          ElementPosition     #1610612733
          HierarchyParent     #GroupMid
          DataSource          #PurchLine
          DataGroup           #ProjectSalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjTransaction
          ElementPosition     #1610612733
          HierarchyParent     #GroupRight
          DataSource          #PurchLine
          DataGroup           #ProjTransaction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchLine_AttentionInfo
          ElementPosition     #1717986916
          HierarchyParent     #TabLineAddress
          Caption             #@SYS107382
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchLine_DeliveryPostalAddressGrp
          ElementPosition     #1610612734
          HierarchyParent     #LineDeliveryAddress
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #4
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchReq
          ElementPosition     #1789569705
          HierarchyParent     #GeneralLeft
          DataSource          #PurchLine
          DataGroup           #PurchReq
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchRFQReplyLine
          ElementPosition     #954437176
          HierarchyParent     #GeneralLeft
          DataSource          #PurchRFQReplyLinePurchLine
          DataGroup           #PurchRFQReplyLineRFQ
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchTable_DeliveryPostalAddressGrp
          ElementPosition     #1610612734
          HierarchyParent     #GroupAddressLeft
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #4
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #QtyUnitLine
          ElementPosition     #988972731
          HierarchyParent     #LineSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Reasons
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS111245
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ReductionEntry_JP
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          ConfigurationKey    #Asset
          ElementPosition     #1744830461
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          Caption             #@SYS4004969
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Reference
          ElementPosition     #1717986916
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS15217
          DataSource          #PurchTable
          DataGroup           #ExternalReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #References
          ElementPosition     #613566756
          HierarchyParent     #GroupSetupRight
          Caption             #@SYS14018
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailHeader
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1861152492
          HierarchyParent     #LineViewHeader
          Caption             #@RET3066
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ReturnedItem
          ElementPosition     #780903144
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #ReturnedItem
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RFIDTagging
          ElementPosition     #1610612733
          HierarchyParent     #TabLinePicking
          DataSource          #PurchLine
          DataGroup           #RFIDTagging
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTax
          ElementPosition     #1073741822
          HierarchyParent     #GroupSetupLeft
          DataSource          #PurchTable
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTaxLine
          ElementPosition     #976128930
          HierarchyParent     #TabLineSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceRef
          ElementPosition     #1632087567
          HierarchyParent     #TabLineAddress
          Caption             #@PSA10204
          DataSource          #PurchLine
          DataGroup           #DeliveryRef
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #944892801
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS63865
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #status
          ElementPosition     #1610612733
          HierarchyParent     #GroupGeneralMid
          Caption             #@SYS36398
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #statusLine
          ElementPosition     #1288490187
          HierarchyParent     #GeneralRight
          Caption             #@SYS36398
          DataSource          #PurchLine
          DataGroup           #Status
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #StorageDimensions
          ElementPosition     #858993458
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS108783
          DataSource          #PurchTable
          DataGroup           #Inventory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #StorageDimensionsLine
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #ProductMid
          Caption             #@SYS108783
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TAMRebate1
          ElementPosition     #1849222027
          HierarchyParent     #TabLinePriceDisc
          DataSource          #PurchLine
          DataGroup           #TAMRebate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099G1Fields
          AutoDeclaration     #Yes
          ElementPosition     #1312351117
          HierarchyParent     #TabLineTax1099
          Caption             #@SPS1936
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099G1Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099GFields
          AutoDeclaration     #Yes
          ElementPosition     #1550960411
          HierarchyParent     #TabLineTax1099
          Caption             #@SPS1093
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099GFields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099SFields
          AutoDeclaration     #Yes
          ElementPosition     #1849222028
          HierarchyParent     #TabLineTax1099
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099SFields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TMSTransportation
          ElementPosition     #1879048189
          HierarchyParent     #TabHeaderDelivery
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TMSTransportationHeader
          ElementPosition     #2004318069
          HierarchyParent     #LineViewHeader
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TrackingDimesions
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #ProductLeft
          Caption             #@SYS317445
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Transport
          ElementPosition     #1610612733
          HierarchyParent     #TabHeaderDelivery
          DataSource          #PurchTable
          DataGroup           #Transport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TreeGroup
          AutoDeclaration     #Yes
          Visible             #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1288490187
          HierarchyParent     #RBOItemPackage
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VATTaxAgent_RU
          AutoDeclaration     #Yes
          ElementPosition     #2001521866
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_RU
          DataGroup           #VATTaxAgent_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VendInvoiceDeclaration
          ElementPosition     #920350134
          HierarchyParent     #GroupSetupRight
          DataSource          #PurchTable
          DataGroup           #VendInvoiceDeclaration
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Vendor
          ElementPosition     #1610612733
          HierarchyParent     #GroupGeneralLeft
          Caption             #@SYS8079
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VendorHeader
          ElementPosition     #1717986916
          HierarchyParent     #LineViewHeader
          Caption             #@SYS128916
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #GroupWithholdingTax
          DataSource          #TaxInformation_IN
          DataGroup           #WithholdingTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1503238551
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_W
          DataGroup           #WithholdingTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_IN1
          AutoDeclaration     #Yes
          ElementPosition     #1342177277
          HierarchyParent     #SalesTaxLine
          DataSource          #PurchLine_IN
          DataGroup           #WithholdingTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdTax
          CountryRegionCodes  #TH,SA,GB,IE,BR
          ElementPosition     #1220161162
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #WithholdingTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonHeaderTradeAgreements
          AutoDeclaration     #Yes
          HelpText            #@SYS69472
          ElementPosition     #715827882
          HierarchyParent     #GeneralVendor
          Text                #@SYS13768
          ButtonDisplay       #Text & Image above
          NormalImage         #12430
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventory
          AutoDeclaration     #Yes
          HelpText            #@SYS69645
          ElementPosition     #1227133512
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS981
          ButtonDisplay       #Text & Image left
          NormalImage         #10932
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventorySMB
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS69645
          ElementPosition     #1380525201
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS981
          ButtonDisplay       #Text & Image left
          NormalImage         #10932
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #CreateActivity
          AutoDeclaration     #Yes
          HelpText            #@SYS26027
          ElementPosition     #1073741823
          HierarchyParent     #GeneralVendor
          Text                #@SYS38378
          ButtonDisplay       #Text & Image left
          NormalImage         #10197
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #GeneralVendorCases
          HelpText            #@SYS131506
          ElementPosition     #1431655764
          HierarchyParent     #GeneralVendor
          Text                #@SYS191442
          ButtonDisplay       #Text & Image left
          NormalImage         #11229
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripFinancials
          HelpText            #@SYS316591
          ElementPosition     #920350134
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS80043
          ButtonDisplay       #Text & Image left
          NormalImage         #10694
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    purchTableForm.enableLineCreditInvoiceButton(purchLine, buttonCustVendCreditInvoicingLines);
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPWP)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSubledgerdistribution.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSubledgerdistribution.enabled(true);
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripFinancialsSMB
          Visible             #No
          HelpText            #@SYS316591
          ElementPosition     #1073741823
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS80043
          ButtonDisplay       #Text & Image left
          NormalImage         #10694
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    purchTableForm.enableLineCreditInvoiceButton(purchLine, buttonCustVendCreditInvoicingLines);
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPWP)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSubledgerdistribution.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSubledgerdistribution.enabled(true);
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripProduct
          HelpText            #@SYS317849
          ElementPosition     #1533916890
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS317847
          ButtonDisplay       #Text & Image left
          NormalImage         #12422
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripPurchLine
          HelpText            #@SYS328718
          ElementPosition     #511305630
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS22957
          ButtonDisplay       #Text & Image left
          NormalImage         #11046
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxParameters::isCustomsEnable_IN())
            #    {
            #        purchTableForm.enableEximInquiry_IN(purchLine.PurchQty,
            #                                            purchTable_W.CustomsImportOrder_IN,
            #                                            eximAA_IN,
            #                                            eximDFIA_IN,
            #                                            eximDEPB_IN,
            #                                            eximEPCG_IN);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripPurchLineSMB
          Visible             #No
          HelpText            #@SYS328718
          ElementPosition     #766958445
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS22957
          ButtonDisplay       #Text & Image left
          NormalImage         #11046
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxParameters::isCustomsEnable_IN())
            #    {
            #        purchTableForm.enableEximInquiry_IN(purchLine.PurchQty,
            #                                            purchTable_W.CustomsImportOrder_IN,
            #                                            eximAA_IN,
            #                                            eximDFIA_IN,
            #                                            eximDEPB_IN,
            #                                            eximEPCG_IN);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripUpdate
          HelpText            #@SYS28285
          ElementPosition     #1840700268
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS58728
          ButtonDisplay       #Text & Image left
          NormalImage         #12545
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripUpdateSMB
          Visible             #No
          HelpText            #@SYS28285
          ElementPosition     #1991994805
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS58728
          ButtonDisplay       #Text & Image left
          NormalImage         #12545
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ManageBudgetMenuButton
          HelpText            #@SYS310258
          ElementPosition     #1431655764
          HierarchyParent     #ManageBudget
          Text                #@SYS80981
          ButtonDisplay       #Text & Image above
          NormalImage         #10915
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #mbTemplatesButton
          AutoDeclaration     #Yes
          HelpText            #@SYS345469
          ElementPosition     #954437176
          HierarchyParent     #PurchOrderAttachments
          Text                #@SYS345468
          NormalImage         #12723
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #AdministrationGroup_Requester
          ElementPosition     #1879048185
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          ReferenceField      #Requester
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #AdministrationGroup_WorkerPurchPlacer
          ElementPosition     #805306365
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          ReferenceField      #WorkerPurchPlacer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #CopyOfPurchTable_DossierImportation
          ElementPosition     #1431655764
          HierarchyParent     #DossierImportation
          DataSource          #PurchTable
          ReferenceField      #DossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Customs_IN_CustomsTariffCodeTable_IN
          ElementPosition     #1610612733
          HierarchyParent     #Customs_IN
          DataSource          #PurchLine_IN
          ReferenceField      #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #EMSFlow_UnitOfMeasure
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          ReferenceField      #UnitOfMeasure
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Excise_IN_ExciseTariffCodes_IN
          ElementPosition     #1331873693
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          ReferenceField      #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximIncentiveSchemeGroup
          ElementPosition     #715827882
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximIncentiveSchemeGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximPorts
          ElementPosition     #1073741823
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximPorts
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximProductGroupTable
          ElementPosition     #1431655764
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximProductGroupTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #FiscalInformation_BR1_CFOPTable_BR
          ElementPosition     #613566756
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          ReferenceField      #CFOPTable_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #g1099Fields_Tax1099Fields
          ElementPosition     #2013265918
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          ReferenceField      #Tax1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Line1099Fields_Tax1099Fields
          ElementPosition     #1789569705
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          ReferenceField      #Tax1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Purch_ProcurementCategory
          ElementPosition     #715827882
          HierarchyParent     #OrderLine
          DataSource          #PurchLine
          ReferenceField      #ProcurementCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchCommitmentLineLookup_PSN
          AutoDeclaration     #Yes
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #946588185
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchCommitmentLineLookup2_PSN
          AutoDeclaration     #Yes
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1431655764
          HierarchyParent     #Commitment_PSN
          DataSource          #PurchLine
          ReferenceField      #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_CFOPTable_BR
          ElementPosition     #715827882
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #CFOPTable_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_CompanyLocation_IN
          HelpText            #@GLS222760
          ElementPosition     #858993458
          HierarchyParent     #CompanyInformation
          DataSource          #PurchLine_IN
          ReferenceField      #CompanyLocation_IN
          Label               #@SYS33556
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_DeliveryPostalAddress
          ElementPosition     #858993458
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          DataSource          #PurchLine
          ReferenceField      #DeliveryPostalAddress
          ReplacementFieldGroup #LocationReference
          Label               #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdCountryRegionToRemittance
          ElementPosition     #1840700268
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          ReferenceField      #TaxWithholdCountryRegionToRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdNatureOfRemittance
          ElementPosition     #1227133512
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          ReferenceField      #TaxWithholdNatureOfRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_ProcurementCategory
          ElementPosition     #791178185
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #ProcurementCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_Requester
          ElementPosition     #1610612733
          HierarchyParent     #PurchLine_AttentionInfo
          DataSource          #PurchLine
          ReferenceField      #Requester
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_SalesTaxFormTypes_IN
          ElementPosition     #1610612734
          HierarchyParent     #IndiaSalesTax
          DataSource          #PurchLine_IN
          ReferenceField      #SalesTaxFormTypes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchTable_DeliveryPostalAddress
          ElementPosition     #858993458
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          DataSource          #PurchTable
          ReferenceField      #DeliveryPostalAddress
          ReplacementFieldGroup #LocationReference
          Label               #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchTable_SalesPurchOperationType_BR
          ElementPosition     #715827882
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          ReferenceField      #SalesPurchOperationType_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #ServiceTax_IN_ServiceCodeTable_IN
          ElementPosition     #1073741823
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          ReferenceField      #ServiceCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ECCNumber
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #878516035
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ECCNumber
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_IECRegistrationNumberTable
          ElementPosition     #1073741822
          HierarchyParent     #Customs_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #IECRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ManECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #1054219242
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ManECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_SalesTaxRegistrationNumber
          HelpText            #@GLS5917
          ElementPosition     #1073741822
          HierarchyParent     #IndiaSalesTax
          DataSource          #TaxInformation_IN
          ReferenceField      #SalesTaxRegistrationNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_STCRegistrationNumberTable
          ElementPosition     #715827882
          HierarchyParent     #ServiceTax_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #STCRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_TraderECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #1229922449
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #TraderECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_TaxInformation_IN
          ElementPosition     #1717986916
          HierarchyParent     #CompanyInformation
          DataSource          #PurchLine_IN
          ReferenceField      #TaxInformation_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VAT_TIN
          ElementPosition     #286331152
          HierarchyParent     #IndiaVAT
          DataSource          #TaxInformation_IN
          ReferenceField      #TIN
          ReplacementFieldGroup #Identification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #DetailsTab
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #TabPageDetails
          ShowTabs            #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #HeaderDetailsTab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #HeaderView
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #LineDetailsTab
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #LineViewLineDetails
          Style               #IndexTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #LineViewTab
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #LineView
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #MainTab
          Width               #Column width
          Height              #Column height
          ElementPosition     #715827882
          ShowTabs            #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #tabChanged
            #public void tabChanged(int _fromTab, int _toTab)
            #{
            #    super(_fromTab, _toTab);
            #    element.lock();
            #
            #    // Buttons to show in Grid View
            #    editDetailsButton.visible(tabPageGrid.isActivePage());
            #    purchOrderList.visible(tabPageGrid.isActivePage());
            #
            #    // Buttons to show in Details View
            #    editPurchOrder.visible(!tabPageGrid.isActivePage());
            #    showGroup.visible(!tabPageGrid.isActivePage());
            #
            #    element.unLock();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Environment
          AutoDeclaration     #Yes
          Visible             #No
          NeededPermission    #Manual
          ConfigurationKey    #EMS
          SecurityKey         #EMSJournals
          ElementPosition     #1994091957
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS137477
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #FSHSum
          Height              #Column height
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1930178752
          HierarchyParent     #LineDetailsTab
          Caption             #@RET4160650
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #HeaderView
          ElementPosition     #1610612733
          HierarchyParent     #DetailsTab
          BackgroundColor     #Dyn Background blue
          LeftMargin          #0
          RightMargin         #0
          Style               #DetailsFormDetails
          PanelStyle          #DetailsHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineView
          ElementPosition     #1073741822
          HierarchyParent     #DetailsTab
          BackgroundColor     #Dyn Background blue
          LeftMargin          #0
          RightMargin         #0
          Style               #DetailsFormDetails
          PanelStyle          #DetailsLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewHeader
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #LineViewTab
          Caption             #@SYS16574
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          FastTabExpanded     #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewLineDetails
          Width               #Column width
          Height              #Column height
          ElementPosition     #1717986916
          HierarchyParent     #LineViewTab
          Caption             #@SYS23823
          DataSource          #PurchLine
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          FastTabExpanded     #No
          Scrollbars          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewLines
          Height              #Column height
          ElementPosition     #1288490187
          HierarchyParent     #LineViewTab
          Caption             #@SYS9664
          FastTabExpanded     #Always
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #RBOItemPackage
          AutoDeclaration     #Yes
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1917396112
          HierarchyParent     #LineDetailsTab
          Caption             #@RET4999
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #/// <summary>
            #/// Retail Item Package - Page Activated
            #/// </summary>
            #public void pageActivated()
            #{
            #    ;
            #    if (treeView.value())
            #        element.fillPackageTree();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabFinancialDimensionsHeader
          AutoDeclaration     #Yes
          ElementPosition     #1789569700
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS101181
          DataSource          #PurchTable
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingControllerHeader.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabFinancialDimensionsLine
          AutoDeclaration     #Yes
          ElementPosition     #1981309312
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS101181
          DataSource          #PurchLine
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingControllerLine.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderAddress
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS9362
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderDelivery
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4508
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderDimension
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1879048185
          HierarchyParent     #HeaderDetailsTab
          Caption             #@SYS14926
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderFiscalInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #2058005158
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@GLS56
          DataSource          #PurchTable
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderForeignTrade
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS27650
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderGeneral
          AutoDeclaration     #Yes
          ElementPosition     #357913940
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2952
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          FastTabExpanded     #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderPriceCalc
          AutoDeclaration     #Yes
          ElementPosition     #1252698790
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS328717
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderSetup
          AutoDeclaration     #Yes
          ElementPosition     #626349395
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2186
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineAddress
          AutoDeclaration     #Yes
          ConfigurationKey    #TradeMultiShipTo
          ElementPosition     #613566756
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS9362
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineDelivery
          ElementPosition     #882002211
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4508
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineFiscalInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #2070656729
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@GLS56
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineFixedAsset
          AutoDeclaration     #Yes
          ElementPosition     #1955744032
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS12578
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #    element.setupAsset(purchLine);
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineForeignTrade
          ElementPosition     #1942961392
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS27650
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineGeneral
          AutoDeclaration     #Yes
          ElementPosition     #81808900
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2952
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLinePicking
          AutoDeclaration     #Yes
          ElementPosition     #1035393900
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS132701
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLinePriceDisc
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS328717
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineProduct
          ElementPosition     #728610522
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS103105
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineProject
          AutoDeclaration     #Yes
          ElementPosition     #1380525201
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4534
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineSetup
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2186
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineTax1099
          AutoDeclaration     #Yes
          CountryRegionCodes  #US
          ElementPosition     #1968526672
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS118159
          DataSource          #PurchLine
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLoad
          AutoDeclaration     #Yes
          ConfigurationKey    #WHSandTMS
          ElementPosition     #2046754813
          HierarchyParent     #LineDetailsTab
          Caption             #@WAX312
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    whsLoadLine_ds.executeQuery();
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPageDetails
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MainTab
          Style               #DetailsFormDetails
          PanelStyle          #Details
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPageGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #MainTab
          ViewEditMode        #Edit
          Style               #DetailsFormGrid
          PanelStyle          #Grid
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabTaxInformation_IN
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #2109070187
          HierarchyParent     #LineDetailsTab
          Caption             #@SYS33652
          DataSource          #PurchLine_IN
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Zakat_SA
          AutoDeclaration     #Yes
          CountryRegionCodes  #SA
          ElementPosition     #1968526670
          HierarchyParent     #HeaderDetailsTab
          Caption             #@SYS321586
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BudgetControl
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS137083
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #858993458
          HierarchyParent     #ManageBudgetMenuButton
          Text                #@SYS317355
          ButtonDisplay       #Text & Image left
          NormalImage         #12313
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable)
            #    {
            #        // Submit to source document processor for an on-demand GL budget check
            #        SourceDocumentProcessorFacade::submitOnDemandSourceDocumentImpl(
            #            purchTable,
            #            false,
            #            SourceDocumentHeader::find(purchTable.SourceDocumentHeader).AccountingStatus,
            #            null,
            #            curUserId());
            #
            #        purchTable_ds.updateBudgetCheckResultDisplay();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BudgetControlLine
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS137084
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #757935402
          HierarchyParent     #LineStripFinancials
          Text                #@SYS317355
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.budgetControlLine();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyCustInvoiceJournal
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS85665
          ElementPosition     #1789569705
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS15721
          ButtonDisplay       #Text & Image left
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    TradeInterCompany::construct(purchTable).formRun(formStr(CustInvoiceJournal),element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyCustPackingSlipJournal
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS85660
          ElementPosition     #1431655764
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS23155
          ButtonDisplay       #Text & Image left
          NormalImage         #10667
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    TradeInterCompany::construct(purchTable).formRun(formStr(CustPackingSlipJournal),element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyInventOnHandReserve
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS21870
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1768515938
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS7120
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    PurchTableForm::interCompanyInventOnHandReserve(purchLine);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyInventTrans
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS28328
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1642193371
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS1084
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    PurchTableForm::openIterCompanyInventTransForm(purchLine);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanySalesFormLetter_Pickinglist
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS94424
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1227133512
          HierarchyParent     #ReceiveProcess
          Text                #@SYS114678
          ButtonDisplay       #Text & Image left
          NormalImage         #10602
          ImageLocation       #EmbeddedResource
          Big                 #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    if (!purchTable.RecId && !purchTable.InterCompanySalesId)
            #    {
            #        throw(error("@SYS28047"));
            #    }
            #
            #    TradeInterCompany::construct(purchTable).menuFunction(classStr(SalesFormLetter_PickingList),MenuItemType::Action,element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanySalesTable
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS75330
          ElementPosition     #715827882
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS93291
          ButtonDisplay       #Text & Image above
          NormalImage         #10604
          ImageLocation       #EmbeddedResource
          Big                 #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    if (purchTable.PurchaseType == PurchaseType::ReturnItem)
            #    {
            #        TradeInterCompany::construct(purchTable).formRun(formStr(ReturnTable),element);
            #    }
            #    else
            #    {
            #        TradeInterCompany::construct(purchTable).formRun(formStr(SalesTable),element);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #CreateLink
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS306899
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1687308579
          HierarchyParent     #LineStripUpdate
          Text                #@SYS132301
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    element.createAgreementLink();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #EndDiscAction
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS68934
          ConfigurationKey    #PriceDisc
          ElementPosition     #1610612733
          HierarchyParent     #PurchaseCalculate
          Text                #@SYS6465
          ButtonDisplay       #Text & Image left
          NormalImage         #10831
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void  clicked()
            #{
            #    super();
            #
            #    element.endDiscount();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #MultiLineDiscAction
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS68933
          ConfigurationKey    #PriceDisc
          ElementPosition     #1073741822
          HierarchyParent     #PurchaseCalculate
          Text                #@SYS11440
          ButtonDisplay       #Text & Image left
          NormalImage         #10647
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    element.multiLineDiscount();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PBAExecute
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS40755
          ElementPosition     #325957337
          HierarchyParent     #LineStripProduct
          Text                #@SYS40223
          ShowShortCut        #No
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.pbaConfigureLine();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintMgmt
          NeededPermission    #Manual
          HelpText            #@SYS68918
          ConfigurationKey    #LogisticsBasic
          SecurityKey         #VendMisc
          ElementPosition     #1073741822
          HierarchyParent     #GeneralSetup
          Text                #@SYS54502
          ButtonDisplay       #Text & Image above
          NormalImage         #10698
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable_ds.cursor() == null)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    element.PrintManagement();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintMgmtSMB
          NeededPermission    #Manual
          HelpText            #@SYS68918
          ConfigurationKey    #LogisticsBasic
          SecurityKey         #VendMisc
          ElementPosition     #1073741822
          HierarchyParent     #GeneralSetupSMB
          Text                #@SYS54502
          ButtonDisplay       #Text & Image above
          NormalImage         #10698
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable_ds.cursor() == null)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    element.PrintManagement();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #RemoveLink
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS306901
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1994091957
          HierarchyParent     #LineStripUpdate
          Text                #@SYS67038
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    element.removeAgreementLink();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #AdministrationGroup_ChangeRequestRequired
          ElementPosition     #1610612730
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #ChangeRequestRequired
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Excise_IN_CENVATCreditAvailed_IN
          ElementPosition     #2045532401
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #CENVATCreditAvailed_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Excise_IN_Consignment_IN
          ElementPosition     #1841629913
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #Consignment_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #EximPurchLine_IN_ApplyDEPB
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          DataField           #ApplyDEPB
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #FixedAssets_CreateFixedAsset
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #CreateFixedAsset
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatTriangul
          ElementPosition     #1879048190
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatTriangularDeal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatTriangul1
          Visible             #No
          ElementPosition     #1946157054
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatTriangularDeal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ICMSReceivableLongTerm_BR
          HelpText            #@GLS676
          ElementPosition     #1073741822
          HierarchyParent     #FiscalInformationGroup_BR
          Label               #@GLS321
          DataSource          #PurchLine
          DataMethod          #ICMSReceivableLongTerm_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #InclTax
          ElementPosition     #1431655764
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #InclTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipment
          ElementPosition     #858993458
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PISCOFINSReceivableLongTerm_BR
          HelpText            #@GLS62986
          ElementPosition     #1610612733
          HierarchyParent     #FiscalInformationGroup_BR
          Label               #@GLS62984
          DataSource          #PurchLine
          DataMethod          #PISCOFINSReceivableLongTerm_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_DSA_IN
          ElementPosition     #1943581157
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #DSA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_IN_SoftwareDeclReceived_IN
          ElementPosition     #920350134
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          DataField           #SoftwareDeclReceived_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_IsPwp
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #PSAPwp
          ElementPosition     #2147473406
          HierarchyParent     #LineSpec
          BackgroundColor     #Window background
          DataSource          #PurchLine
          DataField           #IsPwp
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSourceDocumentDistributionHeader.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSourceDocumentDistributionHeader.enabled(true);
            #        }
            #    }
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_AgreementIsLinked
          ElementPosition     #1840700268
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #PurchTable
          DataMethod          #AgreementIsLinked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_CustomsImportOrder_IN
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Group
          DataSource          #PurchTable_W
          DataField           #CustomsImportOrder_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_MCRDropShipment
          ElementPosition     #2070787801
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #PurchTable
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_MCRDropShipment_Status
          AllowEdit           #No
          ElementPosition     #1923787428
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_OneTimeVendor
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Account
          DataSource          #PurchTable
          DataField           #OneTimeVendor
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_ServiceCodeOnDlvAddress_BR
          ElementPosition     #1789569705
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #ServiceCodeOnDlvAddress_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_VendFinalUser_BR
          ElementPosition     #1431655764
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #VendFinalUser_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #RAssetPurchTrans_Posted
          ElementPosition     #715827880
          HierarchyParent     #GridAsset
          BackgroundColor     #Window background
          DataSource          #RAssetPurchTrans
          DataField           #Posted
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #SalesTax_UnitedVATInvoice_LT
          HelpText            #@GLS220218
          ElementPosition     #1610612734
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #UnitedVATInvoice_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ServiceTax_IN_IsRecoverableServiceTax_IN
          ElementPosition     #1789569705
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          DataField           #IsRecoverableServiceTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_Blocked
          ElementPosition     #1342177275
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #Blocked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_Complete
          ElementPosition     #1610612730
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #Complete
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_IsFinalized
          ElementPosition     #536870910
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #IsFinalized
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #TreeView
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #ChooseGroup
          Label               #@RET4404
          LabelAlignment      #Right
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #/// <summary>
            #/// Tree View - Clicked
            #/// </summary>
            #public void clicked()
            #{
            #    super();
            #
            #    if (this.value())
            #    {
            #        gridGroup1.visible(false);
            #        treeGroup.visible(true);
            #        element.fillPackageTree();
            #    }
            #    else
            #    {
            #        treeGroup.visible(false);
            #        gridGroup1.visible(true);
            #    }
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLine_DeliveryType
          ElementPosition     #1073741820
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #DeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLine_LineDeliveryType
          ElementPosition     #1342177275
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #LineDeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLineForSubcontracts_DeliveryType
          ElementPosition     #1610612734
          HierarchyParent     #DeliveryLineForSubcontracts
          DataSource          #PurchLine
          DataField           #DeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_DirectSettlement_IN
          ElementPosition     #1739678669
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #DirectSettlement_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_ExciseType_IN
          AutoDeclaration     #Yes
          ElementPosition     #585677356
          HierarchyParent     #Excise_IN
          Label               #@GLS5244
          DataSource          #PurchLine_IN
          DataField           #ExciseType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseManufacture_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1535776181
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseManufacture_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseNone_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1433824937
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseNone_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseTraders_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1637727425
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseTraders_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FiscalInformation_BR1_M_taxationOrigin_BR
          AllowEdit           #No
          ElementPosition     #920350134
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #taxationOrigin_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FixedAssets_AssetTransTypePurch
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetTransTypePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #HeaderForeignTrade_ListCode
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #ListCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipStatus
          ElementPosition     #1288490187
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_OperationType_MX
          ElementPosition     #1808407280
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #OperationType_MX
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1921432735
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_VATGoodsType_IN
          ElementPosition     #906715316
          HierarchyParent     #IndiaVAT
          DataSource          #PurchLine_IN
          DataField           #VATGoodsType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchStatus
          Left                #Right edge
          Skip                #Yes
          ElementPosition     #1610612734
          HierarchyParent     #HeaderInfo
          ShowLabel           #No
          DataSource          #PurchTable
          DataField           #PurchStatus
          ViewEditMode        #View
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchaseType
          ElementPosition     #1431655764
          HierarchyParent     #BaseInfo
          DataSource          #PurchTable
          DataField           #PurchaseType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchaseTypeGrid
          AutoDeclaration     #Yes
          ElementPosition     #766958445
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #PurchaseType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchStatusGrid
          ElementPosition     #1073741823
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1994091957
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_State
          ElementPosition     #920350134
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DocumentState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ServiceTax_IN_GTAServiceCategory_IN
          AutoDeclaration     #Yes
          ElementPosition     #1550960411
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          DataField           #GTAServiceCategory_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_DocumentState
          ElementPosition     #1073741820
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #DocumentState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_PurchStatus
          ElementPosition     #536870910
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #status
          DataSource          #PurchTable
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_PurchStatus
          ElementPosition     #805306365
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_WorkflowState
          ElementPosition     #1073741820
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #WorkflowState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Attachments
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrderAttachments
          Text                #@SYS316708
          ButtonDisplay       #Text & Image above
          NormalImage         #10442
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #2853
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeletePurchOrder
          ElementPosition     #1476395004
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteRAsset
          NeededPermission    #Delete
          HelpText            #@SYS331950
          ElementPosition     #1610612734
          HierarchyParent     #RAssetButtonGroup
          Text                #@SYS311855
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          NeedsRecord         #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EditPurchOrder
          AutoDeclaration     #Yes
          NeededPermission    #Update
          ElementPosition     #536870910
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS317438
          ButtonDisplay       #Text & Image above
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #4471
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EnvironmentDeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #EnvironmentButtonGroup
          Text                #@SYS26394
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EnvironmentNewButton
          ElementPosition     #1073741822
          HierarchyParent     #EnvironmentButtonGroup
          Text                #@SYS60080
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #HeaderViewButton
          ElementPosition     #1073741822
          HierarchyParent     #ShowGroup
          NormalImage         #12133
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          Command             #1320
          ToggleButton        #Radio
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    // Since the client doesn't reactivate the controls that were previously hidden we must force update to default dimensions
            #    dimensionDefaultingControllerHeader.activated(true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineAttachmentsStrip
          ElementPosition     #1241513979
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS114630
          ShowShortCut        #No
          NeedsRecord         #Yes
          Command             #2853
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineStripDelete
          AutoDeclaration     #Yes
          HelpText            #@SYS328874
          ElementPosition     #1717986916
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS135131
          ButtonDisplay       #Text & Image left
          NormalImage         #11400
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineStripNew
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS319116
          ButtonDisplay       #Text & Image left
          NormalImage         #10009
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineViewButton
          ElementPosition     #1610612733
          HierarchyParent     #ShowGroup
          NormalImage         #12134
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          Command             #1321
          ToggleButton        #Radio
          ToggleValue         #On
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewPurchOrder
          HelpText            #@SYS26198
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderNew
          Text                #@SYS25545
          ButtonDisplay       #Text & Image above
          NormalImage         #10874
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Big                 #Yes
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #newRAsset
          NeededPermission    #Create
          HelpText            #@GLS220512
          ElementPosition     #1073741822
          HierarchyParent     #RAssetButtonGroup
          Text                #@SYS2318
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Refresh
          HelpText            #@SYS315818
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderList
          ButtonDisplay       #Text & Image left
          NormalImage         #11437
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          KeyTip              #@SYS315818
          Command             #2875
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SendToExcel
          DisplayTarget       #Client
          ElementPosition     #1610612734
          HierarchyParent     #PurchOrderList
          ButtonDisplay       #Text & Image left
          NormalImage         #10156
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Big                 #Yes
          KeyTip              #@SYS315819
          NeedsRecord         #Yes
          Command             #4436
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SumLineDelete
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Text                #@SYS135131
          ButtonDisplay       #Text & Image left
          NormalImage         #11400
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SumLineNew
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          Text                #@SYS319116
          ButtonDisplay       #Text & Image left
          NormalImage         #10009
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #ConfirmedDlv
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryDateLine
          DataSource          #PurchLine
          DataField           #ConfirmedDlv
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Delivery_ConfirmedDlvEarliest
          ElementPosition     #1073741823
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #ConfirmedDlvEarliest
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Delivery_DeliveryDate
          ElementPosition     #715827882
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DeliveryDate
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DeliveryDate
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryDateLine
          DataSource          #PurchLine
          DataField           #DeliveryDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DeliveryLineForSubcontracts_ConfirmedDlv
          ElementPosition     #1073741823
          HierarchyParent     #DeliveryLineForSubcontracts
          DataSource          #PurchLine
          DataField           #ConfirmedDlv
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DepreciationStartDate
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #DepreciationStartDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Group1_PriceAgreementDate_RU
          ElementPosition     #1431655764
          HierarchyParent     #Price_RU
          DataSource          #PurchTable_RU
          DataField           #PriceAgreementDate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #HeaderDelivery_ConfirmedDlvEarliest
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryHeader
          DataSource          #PurchTable
          DataField           #ConfirmedDlvEarliest
          FastTabSummary      #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #HeaderDelivery_DeliveryDate
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryHeader
          DataSource          #PurchTable
          DataField           #DeliveryDate
          FastTabSummary      #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LoadSchedShipDate
          ElementPosition     #1136903103
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadSchedShipDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Payment_FixedDueDate
          ElementPosition     #644245092
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #FixedDueDate
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #enter
            #public void enter()
            #{
            #    super();
            #
            #    priorDueDate = this.dateValue();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Posting_AccountingDate
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #1789569705
          HierarchyParent     #Posting
          DataSource          #PurchTable
          DataField           #AccountingDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchLine_PriceAgreementDate_RU
          ElementPosition     #2013265917
          HierarchyParent     #Price
          DataSource          #PurchLine_W
          DataField           #PriceAgreementDate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchTable_DeliveryDateGrid
          ElementPosition     #1380525201
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DeliveryDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INT64EDIT
        PROPERTIES
          Name                #PurchLine_LineNumber
          ElementPosition     #452101820
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #LineNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #ICMSCreditInstallments_BR
          ElementPosition     #1879048189
          HierarchyParent     #FiscalInformationGroup_BR
          DataSource          #PurchLine
          DataMethod          #ICMSCreditInstallments_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #Tax1099GFields_Tax1099TaxYear
          ElementPosition     #1073741822
          HierarchyParent     #Tax1099GFields
          LimitText           #4
          DataSource          #Tax1099BoxDetail
          DataField           #Tax1099TaxYear
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AdvanceInvoiceCreate_CZ
          HelpText            #@GLS220282
          ElementPosition     #1879048190
          HierarchyParent     #InvoiceProcess
          Text                #@GLS107927
          ButtonDisplay       #Text & Image above
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #CzVendAdvanceInvoiceCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AgreementLine
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #LineStripUpdate
          Text                #@SYS26568
          DataSource          #PurchLine
          MenuItemName        #PurchAgreementLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AllocateMarkup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderMiscCharges
          Text                #@SYS313571
          ButtonDisplay       #Text & Image left
          NormalImage         #10440
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MarkupAllocation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BankLGRequestForm
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ManageBankDocument
          ButtonDisplay       #Text & Image above
          NormalImage         #12519
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #BankLGRequestForm
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BudgetCheckResultsInquiryHeader
          ElementPosition     #1288490187
          HierarchyParent     #ManageBudgetMenuButton
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemName        #BudgetCheckResults
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BudgetCheckResultsInquiryLine
          AutoDeclaration     #Yes
          ElementPosition     #884257969
          HierarchyParent     #LineStripFinancials
          Text                #@SYS128629
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #BudgetCheckResults
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonAccountingDistributionButtonView
          HelpText            #@SYS333722
          ElementPosition     #1073741823
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS323891
          ButtonDisplay       #Text & Image left
          NormalImage         #12439
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistributionsDocumentView
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonConfirm
          AutoDeclaration     #Yes
          ElementPosition     #1521134249
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Confirm
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    PurchTable      purchTableSelection;
            #    Common          firstDatasourceCursor;
            #    boolean         tax1099SFieldsOK = true;
            #    int             originalPosition;
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            #    {
            #        originalPosition = purchTable_DS.getPosition();
            #        element.lockWindowUpdate(true);
            #        firstDatasourceCursor = purchTable_ds.getFirst(true);
            #
            #        for (purchTableSelection = (firstDatasourceCursor ? firstDatasourceCursor : purchTable_ds.cursor()) ; purchTableSelection && tax1099SFieldsOK == true ; purchTableSelection = purchTable_ds.getNext())
            #        {
            #            tax1099SFieldsOK = Tax1099BoxDetail::checkTax1099Fields(purchTableSelection.PurchId);
            #        }
            #
            #        purchTable_DS.setPosition(originalPosition);
            #        element.lockWindowUpdate(false);
            #
            #        if(tax1099SFieldsOK)
            #        {
            #            super();
            #        }
            #
            #        purchTable_ds.updateBudgetCheckResultDisplay();
            #    }
            #    else
            #    {
            #        try
            #        {
            #            super();
            #
            #            purchTable_ds.updateBudgetCheckResultDisplay();
            #
            #            purchTableForm.parmIsHeaderVersioned(true);
            #        }
            #        catch
            #        {
            #            purchTable_ds.updateBudgetCheckResultDisplay();
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonConfirmationRequest
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PurchOrder_ConfRequest
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonCreateBankLCImport
          AutoDeclaration     #Yes
          HelpText            #@SYS316146
          ConfigurationKey    #BankDocument
          ElementPosition     #1073741822
          HierarchyParent     #ManageBankDocument
          ButtonDisplay       #Text & Image above
          NormalImage         #12518
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #BankLCImport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonCreateBudgetTransfer
          AutoDeclaration     #Yes
          HelpText            #@SYS306914
          ElementPosition     #631612835
          HierarchyParent     #LineStripFinancials
          Text                #@SYS306913
          NeedsRecord         #Yes
          MenuItemName        #BudgetCreateTransfer
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    element.budgetCreateTransfer();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCustVendCreditInvoicingHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceIntroduce
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #CustVendCreditInvoicing
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCustVendCreditInvoicingLines
          AutoDeclaration     #Yes
          ElementPosition     #1642193371
          HierarchyParent     #LineStripFinancials
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #CustVendCreditInvoicing
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonDeliverySchedule
          AutoDeclaration     #Yes
          ElementPosition     #268435455
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemName        #PurchDeliverySchedule
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (PurchTableForm::openDeliveryScheduleForm(this, purchLine).closedOk())
            #    {
            #        purchLine_ds.research(true);
            #        purchTable_ds.reread();
            #        purchTable_ds.refresh();
            #    }
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonFinalizePurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchTableFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonHeaderFiscalDocumentText_BR
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #BR
          HelpText            #@GLS63737
          ElementPosition     #1610612734
          HierarchyParent     #PurchOrderAttachments
          NormalImage         #10099
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #FiscalDocumentText_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonInventPackingSlipExtJour
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #ReceiveJournals
          NormalImage         #12830
          ImageLocation       #EmbeddedResource
          MenuItemName        #PLInventPackingSlipExtJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalBillOfEntry_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsJournal
          ButtonDisplay       #Text & Image above
          NormalImage         #10739
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #CustomsBillOfEntryJournal_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalConfirmationReq
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #PurchaseJournals
          Text                #@SYS4004797
          ButtonDisplay       #Text & Image above
          NormalImage         #10725
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #VendConfirmationRequestJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #InvoiceJournals
          ButtonDisplay       #Text & Image above
          NormalImage         #10733
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureJournalVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalFacture_RU_SMB
          AutoDeclaration     #Yes
          ElementPosition     #429496729
          HierarchyParent     #InvoiceJournalsSMB
          ButtonDisplay       #Text & Image above
          NormalImage         #10733
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureJournalVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceJournals
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseJournals
          ButtonDisplay       #Text & Image above
          NormalImage         #10498
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoice4PaymJournal_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoiceSMB
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #InvoiceJournalsSMB
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ReceiveJournals
          ButtonDisplay       #Text & Image left
          NormalImage         #10667
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #VendPackingSlipJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPendingInvoice
          AutoDeclaration     #Yes
          HelpText            #@SYS112154
          ElementPosition     #1610612733
          HierarchyParent     #InvoiceJournals
          Text                #@SYS114694
          ButtonDisplay       #Text & Image above
          NormalImage         #10675
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendUnpostedInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseJournals
          Text                #@SYS310758
          ButtonDisplay       #Text & Image above
          NormalImage         #10725
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendPurchOrderJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ReceiveJournals
          Text                #@SYS114691
          ButtonDisplay       #Text & Image left
          NormalImage         #10739
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #VendReceiptsJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineExpandBOM
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #LineStripPurchLine
          MenuItemType        #Action
          MenuItemName        #PurchLineExplodeBOM
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineFiscalDocumentText_BR
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #BR
          HelpText            #@GLS63738
          ElementPosition     #1319807653
          HierarchyParent     #LineStripPurchLine
          ButtonDisplay       #Text & Image left
          NormalImage         #10099
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          NeedsRecord         #Yes
          MenuItemName        #FiscalDocumentText_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineLot
          AutoDeclaration     #Yes
          ElementPosition     #1136903103
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventLot
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineOnHand
          AutoDeclaration     #Yes
          ElementPosition     #1010580536
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventOnhand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineOnHandSMB
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #ButtonLineInventorySMB
          DataSource          #PurchLine
          MenuItemName        #InventOnhand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonLineQuickQuote
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS54992
          ButtonDisplay       #Text & Image left
          NormalImage         #12489
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #PurchQuickQuote
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineTransact
          AutoDeclaration     #Yes
          ElementPosition     #1263225670
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineTransactSMB
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #ButtonLineInventorySMB
          DataSource          #PurchLine
          MenuItemName        #InventTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonOriginalSalesTable
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS93292
          ButtonDisplay       #Text & Image above
          NormalImage         #10664
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #SalesTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    TradeInterCompany::construct(purchTable).referenceForm();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPaymentSchedule
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceBill
          ButtonDisplay       #Text & Image left
          NormalImage         #10673
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #VendPaymSchedule
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    CustVendPaymSched   custVendPaymSched;
            #
            #    element.automaticTotalDiscount();
            #
            #    if (purchTable.PaymentSched && !VendPaymSched::exist(purchTable.TableId,purchTable.RecId))
            #    {
            #        custVendPaymSched = CustVendPaymSched::construct(SysModule::Vend,purchTable);
            #        custVendPaymSched.copyPaymSched(PaymSched::find(purchTable.PaymentSched));
            #        purchTable.createPaymentSched();
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #InvoiceProcess
          Text                #@GLS116069
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Facture_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1476395006
          HierarchyParent     #InvoiceProcess
          Text                #@SYS4701
          ButtonDisplay       #Text & Image above
          NormalImage         #10703
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #1252698793
          HierarchyParent     #PurchaseGenerate
          Text                #@GLS116067
          ButtonDisplay       #Text & Image left
          NormalImage         #12380
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Invoice4Paym_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaPackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10704
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_PackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaPurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #PurchaseGenerate
          Text                #@SYS114652
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #ReceiveProcess
          Text                #@SYS53077
          ButtonDisplay       #Text & Image above
          NormalImage         #10707
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_ReceiptsList
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchAgreement
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchAgreement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchCancel
          AutoDeclaration     #Yes
          ElementPosition     #1879048188
          HierarchyParent     #PurchOrderMaintain
          ButtonDisplay       #Text & Image left
          NormalImage         #10017
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchCancel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchTableCompare
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ManageHistory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchTableCompare
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchTableVersion
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ManageHistory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchTableVersion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonRemovePurchPrepayTable
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #PurchasePrepay
          ButtonDisplay       #Text & Image left
          Big                 #Yes
          MenuItemType        #Action
          MenuItemName        #PurchPrepayRemove
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonRequestChange
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #PurchOrderMaintain
          Big                 #Yes
          AutoRefreshData     #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #purchRequestChange
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonSourceDocumentDistributionHeader
          AutoDeclaration     #Yes
          HelpText            #@SYS136029
          ElementPosition     #715827882
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS304290
          ButtonDisplay       #Text & Image left
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistPurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonSubledgerdistribution
          AutoDeclaration     #Yes
          HelpText            #@SYS136029
          ElementPosition     #378967701
          HierarchyParent     #LineStripFinancials
          DataSource          #PurchLine
          MenuItemName        #AccountingDistPurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    // Ensure there is a record existing with an amount to distribute
            #    if (!purchLine.SourceDocumentLine)
            #    {
            #        info("@SYS311174");
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonSubLedgerJournalLines
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS135346
          ButtonDisplay       #Text & Image left
          NormalImage         #12429
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #SubledgerJournalAccEntry_PurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    buttonSubLedgerJournalLines.dataSource(purchTable_ds.id());
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateBillOfEntry_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsGenerate
          ButtonDisplay       #Text & Image above
          NormalImage         #10738
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_BillOfEntry_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1207959550
          HierarchyParent     #InvoiceProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Facture_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceProcess
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #894784852
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          NormalImage         #12519
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice4Paym_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoiceRegistration_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsMaintain
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #CustomsInvoiceRegistrate_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoiceSMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #InvoiceProcessSMB
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10665
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePrepayInvoice
          AutoDeclaration     #Yes
          ElementPosition     #2013265918
          HierarchyParent     #InvoiceProcess
          ButtonDisplay       #Text & Image below
          NormalImage         #12310
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PrepayInvoice_Action
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #686001720
          HierarchyParent     #PurchaseGenerate
          Text                #@SYS4006395
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    purchTable_ds.updateBudgetCheckResultDisplay();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10738
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_ReceiptsList
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonWithholdTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #2143289342
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS33817
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #TaxWithholdTmpWorkTrans_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    if (!tmpPurchTableTaxWithholdTransForm || (tmpPurchTableTaxWithholdTransForm && tmpPurchTableTaxWithholdTransForm.closed()))
            #    {
            #        tmpPurchTableTaxWithholdTransForm = PurchTotals::showWithholdTaxLine_IN(purchTable,purchLine);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CaseButton
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #GeneralVendorCases
          ButtonDisplay       #Text & Image left
          NormalImage         #12198
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #CaseDetail
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ContactPerson
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #GeneralVendor
          ButtonDisplay       #Text & Image left
          NormalImage         #11118
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #ContactPerson
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Cov
          ElementPosition     #1610612734
          HierarchyParent     #InvoiceBill
          ButtonDisplay       #Text & Image left
          NormalImage         #10474
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #LedgerCoverage
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            #    {
            #        if (purchTable.checkMarkupTrans())
            #        {
            #            super();
            #        }
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Create
          ElementPosition     #920350134
          HierarchyParent     #CreateActivity
          Text                #@SYS114625
          NormalImage         #10430
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmactivitiesactionNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CreateCase
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #GeneralVendorCases
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemName        #CaseDetailNewPurchase
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CreateTask
          ElementPosition     #1840700268
          HierarchyParent     #CreateActivity
          Text                #@SYS114680
          NormalImage         #10431
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmActivitiesTaskNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustomsImportAssessableValue_IN
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #LineStripPurchLine
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #CustomsImportAssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DirPartyPostalAddressNewHeader
          AutoDeclaration     #Yes
          HelpText            #@SYS342027
          ElementPosition     #1717986916
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          Text                #@SYS111834
          ButtonDisplay       #Image only
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          MenuItemName        #CompanyDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DirPartyPostalAddressNewLine
          AutoDeclaration     #Yes
          HelpText            #@SYS342027
          ElementPosition     #1717986916
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          Text                #@SYS111834
          ButtonDisplay       #Image only
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          MenuItemName        #CompanyDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DocuActionTemplateUndefined
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #mbTemplatesButton
          NeedsRecord         #Yes
          MenuItemName        #DocuActionTemplateUndefined
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EditDetailsButton
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS340465
          ElementPosition     #805306365
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS317438
          ButtonDisplay       #Text & Image above
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          OpenMode            #Edit
          CopyCallerQuery     #Yes
          MenuItemName        #PurchTable_Action
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EncumbranceSummary
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ManageView
          ButtonDisplay       #Text & Image left
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistributionOrderSummary
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ExciseRegisterBalance_IN
          ElementPosition     #1521134245
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS5618
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #ExciseRegisterBalance_In
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximAA_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61753
          ElementPosition     #1789569700
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61755
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximImportDetailsAA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximDEPB_IN
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61906
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #EximPurchLine_IN
          MenuItemName        #EximDEPBEntitlementDetails_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximDFIA_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61754
          ElementPosition     #1968526670
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61756
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximImportDetailsDFIA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximEPCG_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS62208
          ElementPosition     #2058005155
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS62209
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximEPCGImportTrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_Proforma_RU
          AutoDeclaration     #Yes
          HelpText            #@GLS104543
          ElementPosition     #1744830462
          HierarchyParent     #InvoiceProcess
          Text                #@GLS116069
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #FactureEditLinesVend_Proforma_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_RU
          AutoDeclaration     #Yes
          HelpText            #@GLS104543
          ElementPosition     #1342177278
          HierarchyParent     #InvoiceProcess
          Text                #@GLS104802
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureEditLinesVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #HeaderInquiry_CostControlCommittedCost
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1610612730
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          NormalImage         #11032
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #costcontrolCommittedCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #IncentiveSchemeGroup_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61731
          ElementPosition     #1700091215
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61496
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #EximPurchLine_IN
          MenuItemName        #EximIncentiveSchemeGroupsForm_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixedAction
          ElementPosition     #1946157048
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS5951
          SaveRecord          #No
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixedActionSMB
          ElementPosition     #1503238548
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS5951
          SaveRecord          #No
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimTracking
          AutoDeclaration     #Yes
          ElementPosition     #2021161072
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS5951
          DataSource          #PurchLine
          MenuItemName        #InventDimTracking
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventMarking
          AutoDeclaration     #Yes
          ElementPosition     #757935402
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #inventmarking
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventNonConformanceTableLine
          AutoDeclaration     #Yes
          ElementPosition     #976128930
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #InventNonConformanceTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventNonConformanceTableTableHeader
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ReceiveQualityManagement
          ButtonDisplay       #Text & Image above
          NormalImage         #11134
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #InventNonConformanceTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventOnhandInterCompany
          AutoDeclaration     #Yes
          ElementPosition     #1515870804
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventOnhandInterCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventQualityOrderTableLine
          AutoDeclaration     #Yes
          ElementPosition     #1171354716
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #InventQualityOrderTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventQualityOrderTableTableHeader
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ReceiveQualityManagement
          ButtonDisplay       #Text & Image above
          NormalImage         #11135
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #InventQualityOrderTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventReserve
          AutoDeclaration     #Yes
          ElementPosition     #631612835
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventReserve
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventTransPick
          AutoDeclaration     #Yes
          ElementPosition     #1380525201
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemName        #InventTransPick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransact
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS115715
          NormalImage         #10859
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineAmounts_PSN
          ElementPosition     #1610612734
          HierarchyParent     #ManageView
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #TradeAmountsSummary_PSN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    SourceDocumentProcessorCaller processorCaller = null;
            #
            #    if (purchTable.RecId > 0 && purchTable.DocumentState < VersioningDocumentState::Confirmed && !AccountingDistribution::existEventAndSourceDocumentLine(AccountingEvent::findBySourceDocumentHeader(purchTable.SourceDocumentHeader).RecId, purchTable.SourceDocumentLine))
            #    {
            #        purchTable.checkFullyDistributedAndQualified(processorCaller);
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineFinalize
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #LineStripUpdate
          MenuItemType        #Action
          MenuItemName        #PurchLineFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineFinalizeSMB
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #LineStripUpdateSMB
          MenuItemType        #Action
          MenuItemName        #PurchLineFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineInquiry_CostControlCommittedCost
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1894838507
          HierarchyParent     #LineStripFinancials
          SaveRecord          #No
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #costcontrolCommittedCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineQuantity
          ElementPosition     #1073741820
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableLineQuantity
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineTaxTransSource
          AutoDeclaration     #Yes
          ElementPosition     #1452709520
          HierarchyParent     #LineStripFinancials
          DataSource          #PurchLine
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.lineTaxTransSource();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineTaxTransSourceSMB
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #LineStripFinancialsSMB
          DataSource          #PurchLine
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.lineTaxTransSource();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LogisticsLocationSelectHeader
          AutoDeclaration     #Yes
          NeededPermission    #Update
          HelpText            #@SYS342026
          ElementPosition     #1288490187
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          ButtonDisplay       #Image only
          MenuItemName        #LogisticsLocationSelect
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LogisticsLocationSelectLine
          AutoDeclaration     #Yes
          HelpText            #@SYS342026
          ElementPosition     #1288490187
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          ButtonDisplay       #Image only
          MenuItemName        #LogisticsLocationSelect
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_HeadingPurchTable
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderMiscCharges
          Text                #@SYS313570
          ButtonDisplay       #Text & Image left
          NormalImage         #10639
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #MarkupTrans_HeadingPurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_LinePurchTable
          AutoDeclaration     #Yes
          ElementPosition     #1136903103
          HierarchyParent     #LineStripFinancials
          Text                #@SYS313570
          DataSource          #PurchLine
          MenuItemName        #MarkupTrans_LinePurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_LinePurchTableSMB
          AutoDeclaration     #Yes
          ElementPosition     #805306366
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS313570
          DataSource          #PurchLine
          MenuItemName        #MarkupTrans_LinePurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonDeliverMenuItemButton
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MCRReceiveDeliver
          Text                #@MCR12185
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_PackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonProformaDeliver
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #MCRReceiveDeliver
          Text                #@MCR35779
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_ProformaPackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonProformaRelease
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #MCRPurchaseRelease
          Text                #@MCR35591
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_Proforma_PurchOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonReleaseMenuItemButton
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MCRPurchaseRelease
          Text                #@MCR10650
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    // js-moved from confirm button
            #    purchTable_ds.updateBudgetCheckResultDisplay();
            #
            #    purchTable_ds.reread();
            #    purchTable_ds.refresh();
            #    purchTable_ds.reReadLines();
            #    purchTable_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRPriceHistory
          AutoDeclaration     #Yes
          ElementPosition     #1487579812
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemName        #MCRPriceHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MenuItemButton
          ElementPosition     #1431655764
          HierarchyParent     #ButtonGroupWHS
          ButtonDisplay       #Text & Image above
          NormalImage         #3488
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #whsloadplanningworkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OfbuttonJournalPendingInvoiceSMB
          AutoDeclaration     #Yes
          HelpText            #@SYS112154
          ElementPosition     #1288490187
          HierarchyParent     #InvoiceJournalsSMB
          Text                #@SYS114694
          ButtonDisplay       #Text & Image above
          NormalImage         #10675
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendUnpostedInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OrderReferences
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableReferences
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsApprovedVendorListByVend
          ElementPosition     #2013265915
          HierarchyParent     #GeneralRelatedInfo
          Text                #@PRO2880
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemName        #PdsInventInquiryApprovedVendorListByVend
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    VendTable       vendTable;
            #    Args            args = new Args();
            #    MenuFunction    menuFunction = new MenuFunction(
            #        menuitemDisplayStr(PdsInventInquiryApprovedVendorListByVend),
            #        MenuItemType::Display);
            #
            #    vendTable = purchTable.vendTable_OrderAccount();
            #    if (vendTable)
            #    {
            #        args.caller(this);
            #        args.record(vendTable);
            #        menuFunction.run(args);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsMRCDocumentLog
          AutoDeclaration     #Yes
          ElementPosition     #2054114788
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PdsMRCVendorHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsMRCDocuments
          AutoDeclaration     #Yes
          ElementPosition     #2043130216
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image left
          MenuItemName        #pdsMRCDocument
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsResetShelfDates
          AutoDeclaration     #Yes
          ElementPosition     #821096685
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchLine
          MenuItemName        #PdsResetShelfDates
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsResetVendBatchInfo
          AutoDeclaration     #Yes
          ElementPosition     #1002159032
          HierarchyParent     #LineStripUpdate
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #pdsresetvendorBatchInfo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PlannedOrder
          ElementPosition     #1342177275
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          NormalImage         #10687
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #ReqTransPoPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PmfMultiDimProcessInventory
          AutoDeclaration     #Yes
          ElementPosition     #1305333192
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #PmfMultiDimProcessInventory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PmfPackOnHand
          AutoDeclaration     #Yes
          ElementPosition     #1347440714
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchLine
          MenuItemName        #PmfPackOnHand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Postings
          ElementPosition     #805306365
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTablePostings
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PrepayPurchTableHeading
          AutoDeclaration     #Yes
          Enabled             #No
          HelpText            #@SYS330181
          ElementPosition     #1073741822
          HierarchyParent     #PurchasePrepay
          NormalImage         #12310
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableHeadingPrepay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmTable_PurchCreate
          ElementPosition     #1879048185
          HierarchyParent     #ButtonHeaderTradeAgreements
          Text                #@SYS319115
          MenuItemName        #PriceDiscAdmTable_PurchCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscTable_Purch
          ElementPosition     #536870910
          HierarchyParent     #ButtonHeaderTradeAgreements
          MenuItemName        #PriceDiscTable_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ProjBudgetDisplay
          ElementPosition     #2021161076
          HierarchyParent     #LineStripFinancials
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #ProjBudgetDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ProjBudgetDisplay1
          ElementPosition     #1717986916
          HierarchyParent     #ManageBudgetMenuButton
          NormalImage         #10001
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #ProjBudgetDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllHeader
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderCopy
          Text                #@SYS317844
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllLines
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS317844
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllLinesSMB
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS317844
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalHeader
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderCopy
          Text                #@SYS317845
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalLines
          AutoDeclaration     #Yes
          ElementPosition     #626349395
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS317845
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalLinesSMB
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS317845
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreateFromSalesorderPurchase
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderNew
          Text                #@SYS114686
          ButtonDisplay       #Text & Image left
          NormalImage         #10454
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchCreateFromSalesorderPurchase
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreditNoteHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseCreate
          Text                #@SYS8125
          ButtonDisplay       #Text & Image above
          NormalImage         #10534
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCreditNoteHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreditNoteLines
          AutoDeclaration     #Yes
          ElementPosition     #357913940
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS8125
          DataSource          #PurchTable
          MenuItemName        #PurchCreditNoteLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchEndDisc
          ElementPosition     #1610612730
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_EndDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchJournalAutoSummary_Purch
          ElementPosition     #1610612733
          HierarchyParent     #GeneralSetup
          Text                #@SYS114681
          ButtonDisplay       #Text & Image above
          NormalImage         #10819
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchJournalAutoSummary_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchJournalAutoSummary_PurchSMB
          ElementPosition     #1610612733
          HierarchyParent     #GeneralSetupSMB
          Text                #@SYS114681
          ButtonDisplay       #Text & Image above
          NormalImage         #10819
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchJournalAutoSummary_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineCopy
          AutoDeclaration     #Yes
          ElementPosition     #676059664
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS35635
          SaveRecord          #No
          DataSource          #PurchLine
          MenuItemName        #PurchLineCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineCopySMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS35635
          SaveRecord          #No
          DataSource          #PurchLine
          MenuItemName        #PurchLineCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineDisc
          ElementPosition     #1073741820
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_LineDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineSplit_PL
          ElementPosition     #775480202
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #PlPurchLineSplit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchMultiLineDisc
          ElementPosition     #1342177275
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_MultiLineDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchPrice
          ElementPosition     #805306365
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_PricePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchUpdateRemain
          AutoDeclaration     #Yes
          ElementPosition     #766958445
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemName        #PurchUpdateRemain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchUpdateRemainSMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #LineStripUpdateSMB
          DataSource          #PurchLine
          MenuItemName        #PurchUpdateRemain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchVoidFiscalDocument_BR
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseCreate
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchVoidFiscalDocument_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RecordEvent
          ElementPosition     #1533916890
          HierarchyParent     #CreateActivity
          Text                #@SYS114679
          NormalImage         #10432
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmactivitieseventNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Register
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #TradeOrderLineRegister
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RenumberLineNumber
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #TradeLineRenumbering
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    purchLine_ds.research(true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqMultiLevelPegging
          ElementPosition     #1952257860
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #ReqMultiLevelPegging
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqTransExplosion
          AutoDeclaration     #Yes
          ElementPosition     #1757032074
          HierarchyParent     #LineStripProduct
          DataSource          #PurchLine
          MenuItemName        #ReqTransexplosion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqTransNet
          AutoDeclaration     #Yes
          ElementPosition     #1561806288
          HierarchyParent     #LineStripProduct
          MenuItemName        #ReqTransNet
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailAddItemMenuItem
          AutoDeclaration     #Yes
          ConfigurationKey    #Retail
          ElementPosition     #1503238551
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11373
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #RetailAddItems
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailBuyersPush
          HelpText            #@RET800
          ElementPosition     #1431655764
          HierarchyParent     #Functions
          Text                #@RET992
          NormalImage         #12796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailBuyersPush
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailBuyersPushSMB
          HelpText            #@RET800
          ElementPosition     #1431655764
          HierarchyParent     #FunctionsSMB
          Text                #@RET992
          NormalImage         #12796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailBuyersPush
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailConcessionFeesOverview
          ElementPosition     #1431655764
          HierarchyParent     #Inquiries
          NormalImage         #10772
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailConcessionFeesOverview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPackagePurchQuick
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #2117657481
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchTable
          MenuItemName        #RetailPackagePurchQuick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPackagePurchQuickSMB
          HelpText            #@RET4401
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1932735279
          HierarchyParent     #LineStripPurchLineSMB
          DataSource          #PurchTable
          MenuItemName        #RetailPackagePurchQuick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintItemLabel
          HelpText            #@RET3836
          ElementPosition     #1610612733
          HierarchyParent     #ProductLabels
          Text                #@RET3836
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleItemsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintShelfLabel
          HelpText            #@RET3837
          ElementPosition     #1073741822
          HierarchyParent     #ProductLabels
          Text                #@RET3837
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleShelfsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ScheduleAppointment
          ElementPosition     #1227133512
          HierarchyParent     #CreateActivity
          Text                #@SYS114626
          NormalImage         #10433
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmActivitiesAppointmentNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ServicingViewActivities
          AllowEdit           #No
          ElementPosition     #613566756
          HierarchyParent     #CreateActivity
          Text                #@SYS114624
          NormalImage         #10434
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #ActivitiesMain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SuppItemCalc_Purch
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #LineStripPurchLine
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SuppItemCalc_Purch
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SuppItemTable_Purch
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GeneralMaintain
          Text                #@SYS58282
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #SuppItemTable_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysSendMail
          ElementPosition     #1610612733
          HierarchyParent     #GroupEmail
          ButtonDisplay       #Image only
          NormalImage         #2631
          ImageLocation       #EmbeddedResource
          Border              #Flat
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SysSendMail
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysUrlLookup
          ElementPosition     #1610612733
          HierarchyParent     #GroupURL
          ButtonDisplay       #Image only
          NormalImage         #2632
          ImageLocation       #EmbeddedResource
          Border              #Flat
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SysUrlLookup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxTransSource
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseTax
          ButtonDisplay       #Text & Image above
          NormalImage         #10827
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    if (!tmpPurchTableTaxTransForm || (tmpPurchTableTaxTransForm && tmpPurchTableTaxTransForm.closed()))
            #    {
            #        tmpPurchTableTaxTransForm = PurchTotals::showTax(menuitemDisplayStr(TaxTmpWorkPurchOrder), purchTable, element);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench
          ElementPosition     #1610612730
          HierarchyParent     #ButtonGroupTMS
          ButtonDisplay       #Text & Image above
          NormalImage         #11092
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #tmsraterouteWorkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_Rate
          AutoDeclaration     #Yes
          HelpText            #@TRX609
          ElementPosition     #536870910
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX509
          ButtonDisplay       #Text & Image above
          NormalImage         #12203
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #TMSRateRouteWorkbench_rate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_RateRoute
          AutoDeclaration     #Yes
          HelpText            #@TRX612
          ElementPosition     #1342177275
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX531
          ButtonDisplay       #Text & Image above
          NormalImage         #10796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_rateroute
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_RateShop
          AutoDeclaration     #Yes
          HelpText            #@TRX610
          ElementPosition     #805306365
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX510
          ButtonDisplay       #Text & Image above
          NormalImage         #12138
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_rateshop
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_Route
          AutoDeclaration     #Yes
          HelpText            #@TRX611
          ElementPosition     #1073741820
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX519
          ButtonDisplay       #Text & Image above
          NormalImage         #12132
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_route
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRouteWorkbench
          ElementPosition     #1879048185
          HierarchyParent     #ButtonGroupTMS
          ButtonDisplay       #Text & Image above
          NormalImage         #12304
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsrouteworkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSSendPurchaseOrderElectronically
          ElementPosition     #1431655764
          HierarchyParent     #Post
          ButtonDisplay       #Text & Image below
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #TMSSendPurchaseOrderElectronically
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Totals
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrderView
          ButtonDisplay       #Text & Image above
          NormalImage         #10832
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTotals
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    PartList partList;
            #    FormRun formPart;
            #    int counter;
            #
            #    element.automaticTotalDiscount();
            #
            #    if (purchTable.checkMarkupTrans())
            #    {
            #        super();
            #    }
            #    // Refresh the Totals Fact Box
            #    partList = new PartList(element);
            #    for(counter = 1; counter <= partList.partCount(); counter++)
            #    {
            #        if(partList.getPartById(counter).name() == formStr(PurchTotalsSummaryPart))
            #        {
            #            formPart = partList.getPartById(counter);
            #            purchTable_ds.active();
            #            break;
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TradeBLWIChangeCode
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceChange
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #TradeBLWIChangePurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (! purchTable.RecId)
            #    {
            #        purchTable.write();
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TransportationDocument
          ElementPosition     #1431655764
          HierarchyParent     #ReceiveDelivery
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #TransportationDocument
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendOpenTrans
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceSettle
          Text                #@SYS3500
          ButtonDisplay       #Text & Image above
          NormalImage         #10793
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #VendOpenTrans
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxWithholdParameters_IN::checkTaxParameters())
            #    {
            #        TaxWithholdUncommitted_IN::deleteForDocumentHeader(purchTable.TableId, purchTable.RecId);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #WHSWorkTable
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #LineOverviewWHS
          ButtonDisplay       #Text & Image left
          NormalImage         #3462
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #whsworktable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #WMSOrderAllowCreate
          AutoDeclaration     #Yes
          ElementPosition     #378967701
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #WMSOrderAllowCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #DeliveryLine_OverDeliveryPct
          ElementPosition     #536870910
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #OverDeliveryPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #DeliveryLine_UnderDeliveryPct
          ElementPosition     #805306365
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #UnderDeliveryPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Flow_Amount
          AutoDeclaration     #Yes
          ElementPosition     #1789569700
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #TransactionCurrencyAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Flow_SubstanceEntryQty
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SubstanceEntryQty
          MinNoOfDecimals     #2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_LinePercent
          ElementPosition     #1879048188
          HierarchyParent     #Grid1
          ShowZero            #No
          DataSource          #RetailSumLines
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchPrice
          ElementPosition     #1610612730
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchQty
          ElementPosition     #1073741820
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099Amount
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099StateAmount
          ElementPosition     #1879048190
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099StateAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #HeaderDiscMarkup_DiscPercent
          ElementPosition     #1431655764
          HierarchyParent     #DiscountsHeader
          DataSource          #PurchTable
          DataField           #DiscPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ItemVolume
          ConfigurationKey    #WHSandTMS
          ElementPosition     #1610612733
          HierarchyParent     #PhysDims
          DataSource          #PurchLine
          DataMethod          #whsItemUnitVolume
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ItemWeight
          ConfigurationKey    #WHSandTMS
          ElementPosition     #1073741822
          HierarchyParent     #PhysDims
          DataSource          #PurchLine
          DataMethod          #whsItemGrossWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099Amount
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099StateAmount
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099StateAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LineDisc
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #715827882
          HierarchyParent     #Disc
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LineInventoryForSubcontracts_RemainInven
          ElementPosition     #2080374782
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #RemainInventFinancial
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LinePercent
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1073741823
          HierarchyParent     #Disc
          ShowZero            #No
          Label               #@SYS333047
          DataSource          #PurchLine
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadGrossWeight
          ElementPosition     #1894838505
          HierarchyParent     #GridLoads
          Label               #@SYS53799
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadGrossWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadNetWeight
          ElementPosition     #2021161072
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadNetWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadVolume
          ElementPosition     #631612835
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadVolume
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadWeight
          ElementPosition     #505290268
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MultiLnDisc
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #Disc
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #MultiLnDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MultiLnPercent
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1789569705
          HierarchyParent     #Disc
          ShowZero            #No
          Label               #@SYS22555
          DataSource          #PurchLine
          DataField           #MultiLnPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PDSAdvancedPriceInfo_CalculatedLineAmount
          ElementPosition     #1638869097
          HierarchyParent     #LineSpec
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedLineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PDSAdvancedPriceInfo_CalculatedUnitPrice
          ElementPosition     #1299792732
          HierarchyParent     #LineSpec
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedUnitPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Potency_CalculatedLineAmount
          ElementPosition     #1717986916
          HierarchyParent     #Potency
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedLineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Potency_CalculatedUnitPrice
          ElementPosition     #1288490187
          HierarchyParent     #Potency
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedUnitPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_LineAmount
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #LineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_PurchPrice
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_PurchQty
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PSAPwpPercent
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          ConfigurationKey    #PSAPwp
          ElementPosition     #2147479550
          HierarchyParent     #LineSpec
          Label               #@PSA11212
          DataSource          #PurchLine
          DataMethod          #psaPwpPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_AssessableValue_IN
          ElementPosition     #2146684926
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_IN
          DataField           #AssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_CustomsMaxRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #Price
          DataSource          #PurchLine_IN
          DataField           #CustomsMaxRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_InventInvoiceNow
          Visible             #No
          ElementPosition     #1923787432
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #InventInvoiceNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LineAmountGrid
          AutoDeclaration     #Yes
          ElementPosition     #1582356370
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LineDiscGrid
          AutoDeclaration     #Yes
          ElementPosition     #1356305460
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LinePercentGrid
          AutoDeclaration     #Yes
          ElementPosition     #1469330915
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_MaximumRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1744830461
          HierarchyParent     #Price
          DataSource          #PurchLine_IN
          DataField           #MaximumRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_NonRecoverablePercent_IN
          ElementPosition     #1527099480
          HierarchyParent     #IndiaVAT
          DataSource          #PurchLine_IN
          DataField           #NonRecoverablePercent_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWInventReceivedNow
          ElementPosition     #2147459070
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PdsCWInventReceivedNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWQty
          ElementPosition     #1073741822
          HierarchyParent     #QtyUnitLine
          DataSource          #PurchLine
          DataField           #PdsCWQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PriceUnit
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Price
          DataSource          #PurchLine
          DataField           #PriceUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchDeviationQty_RU
          ElementPosition     #2090571558
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_W
          DataField           #DeviationQty_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchMarkup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Price
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchMarkup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchPriceGrid
          AutoDeclaration     #Yes
          ElementPosition     #1243280005
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchQtyGrid
          AutoDeclaration     #Yes
          ElementPosition     #1017229095
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchReceivedNow
          ElementPosition     #2034458190
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchReceivedNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_Remainder
          Visible             #No
          ElementPosition     #1767200083
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #Remainder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_TaxWithholdBaseCur_TH
          ElementPosition     #1695381825
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #TaxWithholdBaseCur_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RBOPackagePurch_Qty
          ElementPosition     #1073741823
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #Qty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RBOPackagePurch_QtyReceived
          ElementPosition     #1431655764
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #QtyReceived
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RealEdit
          ElementPosition     #1610612734
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #QtyOrdered
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ReductionEntryAmount
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          HelpText            #@SYS4006148
          ConfigurationKey    #Asset
          ElementPosition     #1610612733
          HierarchyParent     #ReductionEntry_JP
          DataSource          #PurchLine
          DataMethod          #reductionEntryAmount_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #PurchLine_LedgerDimension
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PostingLine
          DataSource          #PurchLine
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerDefaultAccountControllerLine.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    ledgerDefaultAccountControllerLine.loadAutoCompleteData(_e);
            #    super(_e);
            #}
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #    ledgerDefaultAccountControllerLine.loadSegments();
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #    ledgerDefaultAccountControllerLine.segmentValueChanged(_e);
            #}
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = ledgerDefaultAccountControllerLine.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LinePurchLineSplit
          CountryRegionCodes  #PL
          ElementPosition     #725769933
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS4000283
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsAccountingSeparator
          ElementPosition     #252645134
          HierarchyParent     #LineStripFinancials
          Text                #@SYS314071
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsBudgetSeparator
          ElementPosition     #505290268
          HierarchyParent     #LineStripFinancials
          Text                #@SYS80981
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsChargesSeparator
          ElementPosition     #1010580536
          HierarchyParent     #LineStripFinancials
          Text                #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsChargesSeparatorSMB
          ElementPosition     #536870910
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsTaxSeparator
          ElementPosition     #1263225670
          HierarchyParent     #LineStripFinancials
          Text                #@SYS28668
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsTaxSeparatorSMB
          ElementPosition     #1073741822
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS28668
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripGeneralRelatedInfoSeparator
          ElementPosition     #1768515938
          HierarchyParent     #LineStripFinancials
          Text                #@SYS111665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryInterCompanySeparator
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1389548237
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS316397
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryMaintainSeparator
          ElementPosition     #505290268
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryNewSeparator
          ElementPosition     #252645134
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS5480
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryRegulatorySeparator
          ElementPosition     #2032145644
          HierarchyParent     #ButtonLineInventory
          Text                #@PDS1378
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryTraceSeparator
          ElementPosition     #1894838505
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS26038
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryViewSeparator
          ElementPosition     #884257969
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS53654
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryViewSeparatorSMB
          ElementPosition     #858993458
          HierarchyParent     #ButtonLineInventorySMB
          Text                #@SYS53654
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductProductModelSeparator
          ElementPosition     #306783376
          HierarchyParent     #LineStripProduct
          Text                #@SYS316395
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductQualitySeparator
          AutoDeclaration     #Yes
          ElementPosition     #345131298
          HierarchyParent     #LineStripProduct
          Text                #@SYS113616
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductRequirementsSeparator
          ElementPosition     #1468006396
          HierarchyParent     #LineStripProduct
          Text                #@SYS118437
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineAttachmentsSeparator
          ElementPosition     #1163220305
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS316600
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineBOMSeparator
          ElementPosition     #805306365
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS69965
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCalculateSeparator
          ElementPosition     #984263335
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS117
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCopySeparator
          ElementPosition     #447392425
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCopySeparatorSMB
          ElementPosition     #429496728
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineDisplaySeparator
          CountryRegionCodes  #IN
          ElementPosition     #1923787427
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS53465
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineNewSeparator
          ElementPosition     #178956970
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS5480
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripRetailPackagePurchQuick
          ElementPosition     #2087831318
          HierarchyParent     #LineStripPurchLine
          Text                #@RET3014
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripRetailPackagePurchQuickSMB
          ElementPosition     #1717986912
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@RET3014
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateAgreementSeparator
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1533916890
          HierarchyParent     #LineStripUpdate
          Text                #@SYS190134
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateLineNumberSeparator
          ElementPosition     #306783378
          HierarchyParent     #LineStripUpdate
          Text                #@SYS40505
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateProcessSeparator
          ElementPosition     #1073741823
          HierarchyParent     #LineStripUpdate
          Text                #@SYS122441
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateUpdateSeparator
          ElementPosition     #613566756
          HierarchyParent     #LineStripUpdate
          Text                #@SYS71207
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateUpdateSeparatorSMB
          ElementPosition     #715827882
          HierarchyParent     #LineStripUpdateSMB
          Text                #@SYS71207
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ViewStrip
          CountryRegionCodes  #IN
          ElementPosition     #1386916516
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS316707
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ViewStripSMB
          CountryRegionCodes  #IN
          ElementPosition     #1288490184
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS316707
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #txtAssetQualifier
          ElementPosition     #858993458
          HierarchyParent     #grpAssetQualifier
          Text                #@SYS136020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #txtAssetQualifierQuestion
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #grpAssetQualifier
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_ItemBuyerGroupId
          ElementPosition     #536870910
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #ItemBuyerGroupId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_LanguageId
          ElementPosition     #1342177275
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #LanguageId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_PurchPoolId
          ElementPosition     #1073741820
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #PurchPoolId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Carrier
          ElementPosition     #884257969
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarrierCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CarrierService
          ElementPosition     #1010580536
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarrierServiceCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CompanyAddress
          HelpText            #@SYS840
          ElementPosition     #1288490187
          HierarchyParent     #CompanyInformation
          Label               #@SYS36203
          DataSource          #PurchLine_IN
          DataMethod          #displayAddress_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ContactInfo_Email
          ElementPosition     #1073741822
          HierarchyParent     #GroupEmail
          DataSource          #PurchTable
          DataField           #Email
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ContactInfo_URL
          ElementPosition     #1073741822
          HierarchyParent     #GroupURL
          DataSource          #PurchTable
          DataField           #URL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Currency_CurrencyCode
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Currency
          DataSource          #PurchTable
          DataField           #CurrencyCode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_ConsigneeAccount_RU
          ElementPosition     #1610612733
          HierarchyParent     #Delivery_RU
          DataSource          #PurchTable_RU
          DataField           #ConsigneeAccount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_ConsignorAccount_RU
          ElementPosition     #1073741822
          HierarchyParent     #Delivery_RU
          DataSource          #PurchTable_RU
          DataField           #ConsignorAccount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_DlvMode
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DlvMode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_DlvTerm
          ElementPosition     #1789569705
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DlvTerm
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DistributionTemplateHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GroupDistributionTemplateHeader
          Label               #@sys30829
          DataSource          #PurchTable
          DataMethod          #templateName
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AccountingDistributionTemplate::lookupTemplateName(distributionTemplateHeader);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean                 ret;
            #    AccountingDistributionTemplate    distributionTemplate;
            #
            #    if (this.text())
            #    {
            #        distributionTemplate = AccountingDistributionTemplate::findByName(this.text());
            #
            #        if (distributionTemplate)
            #        {
            #            ret = super();
            #        }
            #        else
            #        {
            #            ret = checkFailed(strFmt("@SYS302773", this.text()));
            #            this.text('');
            #        }
            #    }
            #    else
            #    {
            #        ret = super();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DistributionTemplateLine
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GroupDistributionTemplateLine
          Label               #@sys30829
          DataSource          #PurchLine
          DataMethod          #templateName
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AccountingDistributionTemplate::lookupTemplateName(distributionTemplateLine);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean                 ret;
            #    AccountingDistributionTemplate    distributionTemplate;
            #
            #    if (this.text())
            #    {
            #        distributionTemplate = AccountingDistributionTemplate::findByName(this.text());
            #
            #        if (distributionTemplate)
            #        {
            #            ret = super();
            #        }
            #        else
            #        {
            #            ret = checkFailed(strFmt("@SYS302773", this.text()));
            #            this.text('');
            #        }
            #    }
            #    else
            #    {
            #        ret = super();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editAssetQualifier
          AutoDeclaration     #Yes
          Width               #100
          AlignControl        #No
          ElementPosition     #1717986916
          HierarchyParent     #grpAssetQualifier
          DisplayHeight       #1
          ShowLabel           #No
          DataSource          #PurchLine
          DataMethod          #editAssetQualifier
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AssetRuleTmpAssetQualifierLookup::lookupAssetQualifier(this, assetQualifierList);
            #}
            #
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine.AssetGroup        = AssetRuleTmpAssetQualifierLookup::getAssetGroupFromQualifier(selectedAssetQualifier, assetQualifierList);
            #    purchLine.DefaultDimension  = purchLine.copyDimension(purchLine.DefaultDimension);
            #    purchLine.CreateFixedAsset  = NoYes::Yes;
            #    purchLine_ds.refresh();
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editContactPersonName
          ElementPosition     #1431655764
          HierarchyParent     #Vendor
          LookupButton        #Always
          DataSource          #PurchTable
          DataMethod          #editContactPersonName
          PresenceDataSource  #PurchTable
          PresenceDataField   #ContactPersonId
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    purchTable_ContactPersonId.jumpRef();
            #}
          ENDSOURCE
          SOURCE #lookup
            #void lookup()
            #{
            #    ContactPerson::lookupVendContactPerson(purchTable_ContactPersonId,
            #                                           purchTable.OrderAccount,
            #                                           this,
            #                                           purchTable.ContactPersonId);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonCode
          ElementPosition     #1073741822
          HierarchyParent     #Reasons
          Label               #@SYS114840
          DataSource          #PurchTable
          DataMethod          #editReasonCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #/// <summary>
            #/// Adds the 'Go to Main Table Form' option to the context menu for reason code field.
            #/// </summary>
            #public void jumpRef()
            #{
            #    //Pass the account type of Vendor, so that the relevant form shows.
            #    ReasonTable::jumpRef(ReasonCodeAccountTypeAll::Vend, this.valueStr());
            #}
          ENDSOURCE
          SOURCE #lookup
            #/// <summary>
            #/// Constructs a lookup for the reason code field.
            #/// </summary>
            #/// <remarks>
            #/// The lookup shows the appropriate reason codes (if any) given the offset and main account selections.
            #/// </remarks>
            #public void lookup()
            #{
            #    //Calls the lookup method passing Vendor as both main and offset account types; boolean values of true
            #    //and false are passed for them respectively, since the offset account is not present in this journal.
            #    ReasonFormTable::reasonCodeLookup(this, LedgerJournalACType::Vend, LedgerJournalACType::Vend, true, false);
            #}
          ENDSOURCE
          SOURCE #validate
            #/// <summary>
            #/// Validate existence of vendor type reason code in ReasonTable.
            #/// </summary>
            #/// <returns>
            #/// A boolean indicating whether the reason code was valid for vendor type reason or not.
            #/// </returns>
            #public boolean validate()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    ret = ReasonTable::validateReasonCode(this.text(), LedgerJournalACType::Vend, true, LedgerJournalACType::Vend);
            #
            #    if (ret &&
            #        BrazilParameters::isEnabled() &&
            #        purchTable_BR.InvoiceRefRecId_BR &&
            #        !strLRTrim(this.text()))
            #    {
            #        ret = checkFailed(strFmt("@SYS26332", fieldPName(ReasonTable, Reason)));
            #    }
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonComment
          ElementPosition     #1610612734
          HierarchyParent     #Reasons
          DataSource          #PurchTable
          DataMethod          #editReasonComment
        ENDPROPERTIES
        
        METHODS
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (BrazilParameters::isEnabled() && purchTable_BR.InvoiceRefRecId_BR)
            #    {
            #        if (strLen(strLRTrim(this.text())) < 15)
            #        {
            #            ret = checkFailed("@SYS4002144");
            #        }
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #EMSFlow_TransactionCurrency
          AutoDeclaration     #Yes
          ElementPosition     #1968526670
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #TransactionCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalEstablishment
          ElementPosition     #477218588
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataMethod          #FiscalEstablishment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_M_exceptionCode_BR
          AllowEdit           #No
          ElementPosition     #1533916890
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #exceptionCode_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_M_taxFiscalClassification_BR
          AllowEdit           #No
          ElementPosition     #1227133512
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #taxFiscalClassification_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_TaxServiceCode_BR
          ElementPosition     #1840700268
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataField           #TaxServiceCode_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetBookId
          AutoDeclaration     #Yes
          ElementPosition     #1342177275
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetBookId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (fixedAssets_AssetId.valueStr())
            #    {
            #        AssetBook::lookupAssetBook(this, fixedAssets_AssetId.valueStr(), curext());
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetGroup
          AutoDeclaration     #Yes
          ElementPosition     #805306365
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetId
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AssetTable::lookupInvoiceAsset(this, curext());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_DestinationProcessId
          AutoDeclaration     #Yes
          ElementPosition     #1252698790
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #DestinationProcessId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_SourceProcessId
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SourceProcessId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_SubstanceId
          AutoDeclaration     #Yes
          ElementPosition     #715827880
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SubstanceId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FlowId
          AllowEdit           #No
          ElementPosition     #357913940
          HierarchyParent     #Flow
          DataSource          #EMSPurchOrderFlowRelation
          DataField           #FlowId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTrade_CountryRegionName_RU
          ElementPosition     #1610612733
          HierarchyParent     #ForeignTrade_RU
          DataSource          #PurchLine_W
          DataField           #CountryRegionName_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTrade_InvoiceGTDId_RU
          ElementPosition     #1073741822
          HierarchyParent     #ForeignTrade_RU
          DataSource          #PurchLine_W
          DataField           #InvoiceGTDId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_CountyOrigDe
          ElementPosition     #2013265918
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #CountyOrigDest
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatProcId
          ElementPosition     #1610612734
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatProcId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_TransactionC
          ElementPosition     #1073741823
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #TransactionCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_InventLocationId
          AutoDeclaration     #Yes
          ElementPosition     #805306365
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #InventLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_ItemId
          ElementPosition     #536870910
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchUnit
          ElementPosition     #1342177275
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099State
          ElementPosition     #1610612734
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099State
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderDeliveryAddress_DeliveryName
          ElementPosition     #1073741822
          HierarchyParent     #GroupAddressLeft
          MultiLine           #Yes
          DataSource          #PurchTable
          DataField           #DeliveryName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_Port
          ElementPosition     #1073741820
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #Port
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_StatProcId
          ElementPosition     #1342177275
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #StatProcId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_TransactionCode
          ElementPosition     #536870910
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #TransactionCode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_Transport
          ElementPosition     #805306365
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #Transport
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderPurchTable_ContactPersonId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #VendorHeader
          DataSource          #PurchTable
          DataField           #ContactPersonId
          PresenceIndicatorAllowed    #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderTitle
          AutoDeclaration     #Yes
          Width               #Column width
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #HeaderInfo
          Text                #Purchase order
          ViewEditMode        #View
          Style               #TitleField
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderViewDeliveryCNPJCPFNUM_BR
          ElementPosition     #1073741822
          HierarchyParent     #HeaderDlvAddressFiscalInformation_BR
          DataSource          #PurchTable
          DataMethod          #deliveryCNPJCPFNUM_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderViewDeliveryIENum_BR
          ElementPosition     #1610612733
          HierarchyParent     #HeaderDlvAddressFiscalInformation_BR
          DataSource          #PurchTable
          DataMethod          #deliveryIENum_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #interCompanyAllowIndirectCreationOrig
          AutoDeclaration     #Yes
          AllowEdit           #No
          AlignControl        #No
          ElementPosition     #1610612733
          HierarchyParent     #HeaderInterCompany
          MultiLine           #Yes
          ShowLabel           #No
          DataSource          #PurchTable
          DataMethod          #interCompanyAllowIndirectCreationOrig
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #interCompanyOriginDisplay
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #HeaderInterCompany
          DataSource          #PurchTable
          DataMethod          #interCompanyOriginDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventDim_WHSInventStatusId
          ElementPosition     #1968526675
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventStatusId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventDim_WHSLicensePlateId
          ElementPosition     #1610612734
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #LicensePlateId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Inventory_InventLocationId
          ElementPosition     #1610612733
          HierarchyParent     #StorageDimensions
          DataSource          #PurchTable
          DataField           #InventLocationId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Inventory_InventSiteId
          ElementPosition     #1073741822
          HierarchyParent     #StorageDimensions
          DataSource          #PurchTable
          DataField           #InventSiteId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_inventBatchId
          ElementPosition     #536870910
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #inventBatchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventGtdId_RU
          ElementPosition     #1879048185
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventGtdId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventLocationId
          ElementPosition     #1073741823
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventOwnerId_RU
          ElementPosition     #1610612730
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventOwnerId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventProfileId_RU
          ElementPosition     #1073741820
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventProfileId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_inventSerialId
          ElementPosition     #805306365
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #inventSerialId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventSiteId
          ElementPosition     #715827882
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventSiteId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_wMSLocationId
          ElementPosition     #1431655764
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #wMSLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_wMSPalletId
          ElementPosition     #1789569705
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #wMSPalletId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ItemName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #678152730
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #ItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099State
          ElementPosition     #1073741823
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099State
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineDeliveryAddress_Name
          ElementPosition     #1073741822
          HierarchyParent     #LineDeliveryAddress
          MultiLine           #Yes
          DataSource          #PurchLine
          DataField           #DeliveryName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineInventory_InventTransId
          ElementPosition     #1431655764
          HierarchyParent     #LineInventory
          DataSource          #PurchLine
          DataField           #InventTransId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineSalesTax_TaxGroup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #LineSalesTax
          DataSource          #PurchLine
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineSalesTax_TaxItemGroup
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #LineSalesTax
          DataSource          #PurchLine
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineViewAddressDeliveryCNPJCPFNUM_BR
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #LineDlvAddressFiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #deliveryCNPJCPFNUM_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineViewAddressDeliveryIENum_BR
          AllowEdit           #No
          ElementPosition     #1610612733
          HierarchyParent     #LineDlvAddressFiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #deliveryIENum_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadAccountNum
          ElementPosition     #1642193371
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadAccountNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadCarNumber
          ElementPosition     #1515870804
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadOrderNum
          ElementPosition     #1768515938
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadOrderNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Loads
          AutoDeclaration     #Yes
          ElementPosition     #2147462654
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #whsGetLoads
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTractorNumber
          ElementPosition     #1263225670
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTractorNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTrailerNumber
          ElementPosition     #1389548237
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTrailerNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTypeId
          ElementPosition     #378967701
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTypeId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LogisticsPostalAddressHeader_Address
          ElementPosition     #1431655764
          HierarchyParent     #GroupaddressMid
          DataSource          #LogisticsPostalAddressHeader
          DataField           #Address
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LogisticsPostalAddressLine_Address
          ElementPosition     #1431655764
          HierarchyParent     #GroupLineDeliveryAddressRef
          DataSource          #LogisticsPostalAddressLine
          DataField           #Address
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipComment
          ElementPosition     #1717986916
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipComment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #packageName
          AllowEdit           #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1789569705
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataMethod          #packageName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_Payment
          ElementPosition     #429496728
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #Payment
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymentSched
          ElementPosition     #1288490184
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #PaymentSched
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymMode
          ElementPosition     #858993456
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #PaymMode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ActivityNumber
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ActivityNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ProjId
          ElementPosition     #613566756
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ProjId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    RecId   projRecId, smmActivityParentLink;
            #    str     currentActivityNumber;
            #
            #    ret = super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPwp)))
            #    {
            #        if (ProjTable::setFieldPwpThresholdPercent(ProjTable::find(purchLine.ProjId)))
            #        {
            #            purchLine_IsPwp.visible(true);
            #            psaPwpPercent.visible(true);
            #        }
            #        else
            #        {
            #            purchLine_IsPwp.visible(false);
            #            psaPwpPercent.visible(false);
            #        }
            #    }
            #
            #    currentActivityNumber = projectIdentification_ActivityNumber.text();
            #    if (currentActivityNumber != '')
            #    {
            #        //validate activity is associated to Project
            #        projRecId = ProjTable::find(purchLine.ProjId).RecId;
            #        smmActivityParentLink = smmActivityParentLinkTable::find(currentActivityNumber, smmActivityParentType::Project, projRecId).RecId;
            #
            #        // Clear activity number if it's no longer a valid
            #        // combination with the new project ID
            #        if (smmActivityParentLink == 0)
            #        {
            #            purchLine.ActivityNumber = '';
            #            projectIdentification_ActivityNumber.update();
            #        }
            #    }
            #
            #    return ret;
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ProjLinePropertyId
          ElementPosition     #1840700268
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ProjLinePropertyId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
            #    {
            #        element.setIsPwpField();
            #    }
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ExternalItemId
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #GeneralReference
          DataSource          #PurchLine
          DataField           #ExternalItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdAcknowledgementNumber
          ElementPosition     #1533916890
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          DataField           #TaxWithholdAcknowledgementNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ItemId
          AutoDeclaration     #Yes
          ElementPosition     #565127275
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ItemName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #OrderLine
          DataSource          #PurchLine
          DataMethod          #ItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_Name
          Width               #Column width
          ElementPosition     #1789569705
          HierarchyParent     #OrderLine
          MultiLine           #Yes
          DataSource          #PurchLine
          DataField           #Name
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PDSCalculationId
          ElementPosition     #858993458
          HierarchyParent     #Potency
          DataSource          #PurchLine
          DataField           #PDSCalculationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWUnitId
          ElementPosition     #1610612734
          HierarchyParent     #QtyUnitLine
          DataSource          #PurchLine
          DataMethod          #pdsCWUnitId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PostingProfile_RU
          ElementPosition     #1789569705
          HierarchyParent     #PostingLine
          DataSource          #PurchLine_W
          DataField           #PostingProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PSARetainScheduleId
          AutoDeclaration     #Yes
          ElementPosition     #2147466238
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PSARetainScheduleId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PurchUnitGrid
          AutoDeclaration     #Yes
          ElementPosition     #1130254550
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PurchUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ReqAttention
          ElementPosition     #1073741822
          HierarchyParent     #PurchLine_AttentionInfo
          DataSource          #PurchLine
          DataField           #ReqAttention
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ServiceAddress
          ElementPosition     #1431655764
          HierarchyParent     #LineAddressDisplayForSubcontracts
          DataSource          #PurchLine
          DataField           #ServiceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_VariantId
          ElementPosition     #847690912
          HierarchyParent     #LineSpec
          LabelAlignment      #Right
          DataSource          #PurchLine
          DataField           #VariantId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchReq_M_getPurchReqItemName
          AllowEdit           #No
          ElementPosition     #1789569705
          HierarchyParent     #PurchReq
          Label               #@SYS4003944
          DataSource          #PurchLine
          DataMethod          #getPurchReqItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchReq_PurchReqId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchReq
          DataSource          #PurchLine
          DataField           #PurchReqId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchRFQReplyLine_PurchRFQReplyRFQId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchRFQReplyLine
          DataSource          #PurchRFQReplyLinePurchLine
          DataField           #PurchRFQReplyRFQId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_CFPSId_BR
          ElementPosition     #1073741823
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #CFPSId_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ContactPersonId
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1789569705
          HierarchyParent     #Vendor
          DataSource          #PurchTable
          DataField           #ContactPersonId
          PresenceIndicatorAllowed    #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ContractNum_SA
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Zakat_SA
          DataSource          #PurchTable
          DataField           #ContractNum_SA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_CurrencyCodeGrid
          ElementPosition     #1227133512
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_DlvModeGrid
          ElementPosition     #1533916890
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DlvMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_DlvTermGrid
          ElementPosition     #1687308579
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DlvTerm
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_InvoiceAccount
          ElementPosition     #1073741823
          HierarchyParent     #Vendor
          DataSource          #PurchTable
          DataField           #InvoiceAccount
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_InvoiceAccountGrid
          ElementPosition     #613566756
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #InvoiceAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_OrderAccount
          ElementPosition     #1610612733
          HierarchyParent     #Account
          DataSource          #PurchTable
          DataField           #OrderAccount
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_OrderAccountAdv
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #OrderAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ProjId
          ElementPosition     #1431655764
          HierarchyParent     #References
          DataSource          #PurchTable
          DataField           #ProjId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchId
          ElementPosition     #715827882
          HierarchyParent     #BaseInfo
          LookupButton        #Never
          DataSource          #PurchTable
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchIdAdvanced
          AutoDeclaration     #Yes
          ElementPosition     #306783378
          HierarchyParent     #Grid
          LookupButton        #Never
          DataSource          #PurchTable
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchName
          ElementPosition     #1073741823
          HierarchyParent     #BaseInfo
          DataSource          #PurchTable
          DataField           #PurchName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ServiceAddress1
          ElementPosition     #1073741823
          HierarchyParent     #HeaderAddressDisplayForSubcontracts
          DataSource          #PurchTable
          DataField           #ServiceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_TaxGroup
          ElementPosition     #715827882
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RAssetPurchTrans_assetId
          ElementPosition     #477218586
          HierarchyParent     #GridAsset
          DataSource          #RAssetPurchTrans
          DataField           #AssetId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    ;
            #    RAssetTable::lookupAccountNum(this, curext(), RAssetTransType::Acquisition);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RBOPackagePurch_PackageId
          ElementPosition     #715827882
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #PackageId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ReductionEntryDocumentId
          AllowEdit           #No
          CountryRegionCodes  #JP
          HelpText            #@SYS4006142
          ConfigurationKey    #Asset
          ElementPosition     #1073741822
          HierarchyParent     #ReductionEntry_JP
          DataSource          #PurchLine
          DataMethod          #reductionEntryDocumentId_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Route
          ElementPosition     #757935402
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #tmsDisplayRoute
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #SalesTax_EnterpriseNumber
          ElementPosition     #1789569705
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #EnterpriseNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #SalesTax_TaxPeriodPaymentCode_PL
          ElementPosition     #477218588
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #TaxPeriodPaymentCode_PL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode
          ElementPosition     #1312351117
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode1
          Visible             #No
          ElementPosition     #1431655764
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode11
          Visible             #No
          ElementPosition     #1193046470
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #status_DocumentStatus
          ElementPosition     #805306365
          HierarchyParent     #status
          DataSource          #PurchTable
          DataMethod          #displayDocumentStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierCode
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierGroupCode
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierGroupCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    if (tmsPurchTable.RecId == 0)
            #    {
            #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
            #    }
            #
            #    ret = super();
            #
            #    element.enableTMSFields();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierServiceCode
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierServiceCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    TMSCarrierService::lookupCarrierServiceCode(this, tmsPurchTable.CarrierCode);
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_ModeCode
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #ModeCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_TransportationTemplateId
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #TransportationTemplateId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    if (tmsPurchTable.RecId == 0)
            #    {
            #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
            #    }
            #
            #    ret = super();
            #
            #    element.enableTMSFields();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VATNum
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #VATNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WHSLoadLine_LoadId
          ElementPosition     #252645134
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataField           #LoadId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TREE
        PROPERTIES
          Name                #PackageTree
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #TreeGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #CreatedDateTime
          AllowEdit           #No
          Skip                #Yes
          HelpText            #@SYS69444
          ElementPosition     #1431655764
          HierarchyParent     #DateAndTimeLine
          DataSource          #PurchLine
          DataField           #createdDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #Flow_FromDateTime
          AutoDeclaration     #Yes
          ElementPosition     #1431655760
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #FromDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #Flow_ToDateTime
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #ToDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #PurchTable_CreatedDateTime
          AllowEdit           #No
          Skip                #Yes
          HelpText            #@SYS69424
          ElementPosition     #1431655764
          HierarchyParent     #DateAndTime
          DataSource          #PurchTable
          DataField           #createdDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #lineDeliveryType
          AutoDeclaration     #Yes
          AllowEdit           #No
          Width               #16
          Height              #16
          AlignControl        #No
          ElementPosition     #226050910
          HierarchyParent     #LineSpec
          Imagemode           #Size to fit
          Label               #@sys1201
          DataSource          #PurchLine
          DataMethod          #lineDeliveryTypeImage
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #public str toolTip()
            #{
            #    DictEnum    dictEnum = new DictEnum(enumNum(LineDeliveryType));
            #
            #    return dictEnum.label() + ': ' + dictEnum.value2Name(purchLine.LineDeliveryType);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PurchLineBudgetCheckResult
          AutoDeclaration     #Yes
          PreviewPartRef      #BudgetCheckResultPreview
          HelpText            #@SYS128633
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #339076365
          HierarchyParent     #LineSpec
          Label               #@SYS342081
          DataSource          #PurchLine
          DataMethod          #displayBudgetCheckResult
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PurchTableBudgetCheckResult
          AutoDeclaration     #Yes
          PreviewPartRef      #BudgetCheckResultPreview
          HelpText            #@SYS304309
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #1476395002
          HierarchyParent     #status
          Label               #@SYS304310
          DataSource          #PurchTable
          DataMethod          #displayBudgetCheckResult
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
        CONTROL #Environment
          PROPERTIES
            Control             #Environment
            EffectiveAccess     #Update
          ENDPROPERTIES
          
        ENDCONTROL
        
      CONTROL #GroupFinancialDimensionHeader
        PROPERTIES
          Control             #GroupFinancialDimensionHeader
          EffectiveAccess     #Update
        ENDPROPERTIES
        
      ENDCONTROL
      
    CONTROL #GroupFinancialDimensionLine
      PROPERTIES
        Control             #GroupFinancialDimensionLine
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
  TABLE #BudgetSource
    PROPERTIES
      Table               #BudgetSource
      EffectiveAccess     #Read
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDTABLE
  
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #PurchCreateOrder
  PROPERTIES
    Form                #PurchCreateOrder
    AccessLevel         #Delete
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #PurchCreateOrder
  PROPERTIES
    Form                #PurchCreateOrder
    AccessLevel         #Delete
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DossierImportation
  PROPERTIES
    Name                #DossierImportation
    Origin              #{E5DBD619-3719-45EC-B3D0-B6B4A8B68558}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
    SOURCE #close
      #public void close()
      #{  //Raffraichir le form père
      #    #Task
      #    FormRun formRun;
      #    formRun = element.args().caller();
      #    if(formRun)
      #    {
      #        formRun.task(#taskF5);
      #    }
      #    super();
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #
      #    super();
      #    if(DossierImportation.RecId == 0)
      #
      #    if( DossierImportation_TypeTransport.valueStr() == "Bateau")
      #    {
      #        DossierImportation_PortOrigine.visible(true);
      #        DossierImportation_PortDestination.visible(true);
      #        DossierImportation_PortTranspordement.visible(true);
      #    }
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #DossierImportation
          Table               #DossierImportation
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD DateDebarquementDestination
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    super(_append);
          #    DossierImportation.DINumSeq = NumberSeq::newGetNum(DossierImportation::numRefNumDossier(),true).num();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          JoinSource          #DossierImportation
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #MarkupTrans
          Table               #MarkupTrans
          JoinSource          #PurchTable
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine
          Table               #PurchLine
          JoinSource          #PurchTable
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    PurchTable DossierImportation
    MarkupTrans PurchTable
    PurchLine PurchTable
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      DataSource          #DossierImportation
      Style               #SimpleListDetails
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #715827882
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
          Caption             #Dossier d'importation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #MaintainGroup
          ElementPosition     #1879048189
          HierarchyParent     #ActionPaneTab
          Caption             #Tenir à jour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewGroup
          ElementPosition     #1252698792
          HierarchyParent     #ActionPaneTab
          Caption             #Nouveau
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #CommandeFrs
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #858993458
          HierarchyParent     #Commande
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Frais
          AllowEdit           #No
          Width               #Column width
          ElementPosition     #1717986916
          HierarchyParent     #Commande
          DataSource          #MarkupTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Lignes
          AllowEdit           #No
          Width               #Column width
          ElementPosition     #1288490187
          HierarchyParent     #Commande
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Body
          ElementPosition     #1431655764
          Style               #MarginlessContainer
          DataSource          #DossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Left
          ElementPosition     #1073741822
          HierarchyParent     #General
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Right
          ElementPosition     #1610612733
          HierarchyParent     #General
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #DossierImportation_PortDestination
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1757032074
          HierarchyParent     #Left
          DataSource          #DossierImportation
          ReferenceField      #PortDestination
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #DossierImportation_PortOrigine
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1561806288
          HierarchyParent     #Left
          DataSource          #DossierImportation
          ReferenceField      #PortOrigine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #DossierImportation_PortTranspordement
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1952257860
          HierarchyParent     #Left
          DataSource          #DossierImportation
          ReferenceField      #PortTranspordement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Body
          DataSource          #DossierImportation
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Commande
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Tab
          Caption             #Commande(s) et frais
          DataSource          #PurchTable
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #General
          ElementPosition     #1073741822
          HierarchyParent     #Tab
          Caption             #Général
          DataSource          #DossierImportation
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DossierImportation_StatusDossierImportation
          ElementPosition     #1932735276
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #StatusDossierImportation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #MarkupTrans_MarkupCategory
          ElementPosition     #1288490187
          HierarchyParent     #Frais
          DataSource          #MarkupTrans
          DataField           #MarkupCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #MaintainGroup
          Text                #Supprimer
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          NeedsRecord         #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EditButton
          ElementPosition     #1073741822
          HierarchyParent     #MaintainGroup
          Text                #Midifier
          ButtonDisplay       #Text & Image above
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          Command             #4471
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateArriveeUsine
          ElementPosition     #1717986912
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DateArriveeUsine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateConfirmeLivraison
          ElementPosition     #780903144
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #DateConfirmeLivraison
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateDebarquementDestination
          ElementPosition     #1169185537
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DateDebarquementDestination
        ENDPROPERTIES
        
        METHODS
          SOURCE #textChange
            #public void textChange()
            #{
            #    super();
            #    DossierImportation.DateSortiePortAieroport =
            #    DateTimeUtil::date(DateTimeUtil::addDays(DateTimeUtil::newDateTime(DossierImportation.DateDebarquementDestination,0),DossierImportation.DelaiDouane));
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateDossier
          ElementPosition     #585677358
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #DateDossier
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateEmbarquementOrigine
          AutoDeclaration     #Yes
          ElementPosition     #751619274
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DateEmbarquementOrigine
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    DossierImportation.DateDebarquementDestination =
            #    DateTimeUtil::date(DateTimeUtil::addDays(DateTimeUtil::newDateTime(DossierImportation.DateEmbarquementOrigine,0),DossierImportation.NbJrsTransport));
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DatePrevueLivraison
          ElementPosition     #976128930
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #DatePrevueLivraison
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateSortiePortAieroport
          ElementPosition     #1503238548
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DateSortiePortAieroport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DossierImportation_DateSortieUsine
          ElementPosition     #501079516
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DateSortieUsine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchTable_AccountingDate
          ElementPosition     #920350134
          HierarchyParent     #CommandeFrs
          DataSource          #PurchTable
          DataField           #AccountingDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INT64EDIT
        PROPERTIES
          Name                #PurchLine_LineNumber
          ElementPosition     #920350134
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #LineNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #DossierImportation_DelaiDouane
          ElementPosition     #1336212042
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #DelaiDouane
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    DossierImportation.DateSortiePortAieroport =
            #    DateTimeUtil::date(DateTimeUtil::addDays(DateTimeUtil::newDateTime(DossierImportation.DateDebarquementDestination,0),DossierImportation.DelaiDouane));
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #DossierImportation_NbJrsTransport
          AutoDeclaration     #Yes
          ElementPosition     #1002159032
          HierarchyParent     #Right
          DataSource          #DossierImportation
          DataField           #NbJrsTransport
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    DossierImportation.DateDebarquementDestination =
            #    DateTimeUtil::date(DateTimeUtil::addDays(DateTimeUtil::newDateTime(DossierImportation.DateEmbarquementOrigine,0),DossierImportation.NbJrsTransport));
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MenuItemButton
          ElementPosition     #1431655764
          HierarchyParent     #NewGroup
          Text                #Nouveau
          ButtonDisplay       #Text & Image above
          NormalImage         #10583
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          OpenMode            #New
          MenuItemName        #DossierImportationQuickCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MarkupTrans_Value
          ElementPosition     #1717986916
          HierarchyParent     #Frais
          DataSource          #MarkupTrans
          DataField           #Value
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LineAmount
          ElementPosition     #1994091957
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #LineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchPrice
          ElementPosition     #1840700268
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchQty
          ElementPosition     #1227133512
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Destination
          ElementPosition     #1366580502
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #Destination
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_DINumSeq
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #390451572
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #DINumSeq
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_Origine
          ElementPosition     #1171354716
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #Origine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DossierImportation_TypeTransport
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #Left
          DataSource          #DossierImportation
          DataField           #TypeTransport
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    ret = super();
            #    if( DossierImportation_TypeTransport.valueStr() =="Bateau")
            #    {
            #        DossierImportation_PortOrigine.visible(true);
            #        DossierImportation_PortDestination.visible(true);
            #        DossierImportation_PortTranspordement.visible(true);
            #    }
            #    else
            #    {
            #        DossierImportation_PortOrigine.visible(false);
            #        DossierImportation_PortDestination.visible(false);
            #        DossierImportation_PortTranspordement.visible(false);
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #MarkupTrans_MarkupCode
          ElementPosition     #858993458
          HierarchyParent     #Frais
          DataSource          #MarkupTrans
          DataField           #MarkupCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ItemId
          ElementPosition     #613566756
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PurchUnit
          ElementPosition     #1533916890
          HierarchyParent     #Lignes
          DataSource          #PurchLine
          DataField           #PurchUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_CurrencyCode
          ElementPosition     #1840700268
          HierarchyParent     #CommandeFrs
          DataSource          #PurchTable
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_InvoiceAccount
          ElementPosition     #1227133512
          HierarchyParent     #CommandeFrs
          DataSource          #PurchTable
          DataField           #InvoiceAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchId
          ElementPosition     #613566756
          HierarchyParent     #CommandeFrs
          DataSource          #PurchTable
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchName
          ElementPosition     #1533916890
          HierarchyParent     #CommandeFrs
          DataSource          #PurchTable
          DataField           #PurchName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: CLS

; Microsoft Dynamics AX Class : NumberSeqModuleVendor déchargé
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #NumberSeqModuleVendor
    PROPERTIES
      Name                #NumberSeqModuleVendor
      Extends             #NumberSeqApplicationModule
      RunOn               #Server
      Origin              #{2D150000-0000-1000-E0DE-5FFB1D409DF5}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #public class NumberSeqModuleVendor extends NumberSeqApplicationModule
        #{
        #
        #}
      ENDSOURCE
      SOURCE #loadModule
        #/// <summary>
        #///    Configures all the data types that are being used by the module.
        #/// </summary>
        #
        #/*
        #Detailed description of how to setup references for number sequences can
        #be found i method loadModule() on the 'father' class: NumberSeqApplicationModule.
        #*/
        #protected void loadModule()
        #{
        #    NumberSeqDatatype datatype = NumberSeqDatatype::construct();
        #
        #    /*Seq Dossier importation */
        #
        #    datatype.parmDatatypeId(extendedtypenum(DINumSeq));
        #
        #    datatype.parmReferenceHelp(literalStr("@SYS53981"));
        #
        #    datatype.parmWizardIsContinuous(true);
        #
        #    datatype.parmWizardIsManual(NoYes::No);
        #
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #
        #    datatype.parmWizardHighest(999999999);
        #
        #    datatype.parmSortField(39);
        #
        #
        #
        #    this.create(datatype);
        #
        #    /* Setup Vendors numbers */
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendAccount));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        #    datatype.parmReferenceHelp(literalStr("@SYS53981"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(1);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(OneTimeSupplierAccount));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        #    datatype.parmReferenceHelp(literalStr("@SYS53982"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(2);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    /* Setup tax1099 number */
        #
        #    datatype.parmDatatypeId(extendedTypeNum(Tax1099Num));
        #    datatype.parmReferenceHelp(literalStr("@SYS53936"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(3);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    /* Setup posting numbers */
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendPromissoryNoteID));
        #    datatype.parmReferenceHelp(literalStr("@SYS71454"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(4);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    /* Setup voucher numbers */
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendExchAdjVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS54013"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(130000000);
        #    datatype.parmWizardHighest(139999999);
        #    datatype.parmSortField(5);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendPaymVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS53985"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(140000000);
        #    datatype.parmWizardHighest(149999999);
        #    datatype.parmSortField(6);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendCloseVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS54012"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(150000000);
        #    datatype.parmWizardHighest(159999999);
        #    datatype.parmSortField(7);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // remittance file numbering
        #    datatype.parmDatatypeId(extendedTypeNum(BankRemittanceFileIdVend));
        #    datatype.parmReferenceHelp(literalStr("@SYS73398"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(8);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // NumberSequences moved to Vendor module:
        #    // PurchInternalPackingSlipId, PurchInternalInvoiceId, PurchInternalCreditNoteId, PurchPackingSlipVoucher
        #    // PurchInvoiceVoucher, PurchaseOrderVoucher, PurchCreditNoteVoucher, PurchMarkupVoucher
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchInternalPackingSlipId));
        #    datatype.parmReferenceHelp(literalStr("@SYS333390"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(9);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchInternalInvoiceId));
        #    datatype.parmReferenceHelp(literalStr("@SYS53894"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(10);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchInternalCreditNoteId));
        #    datatype.parmReferenceHelp(literalStr("@SYS53897"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(11);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Setup voucher numbers
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchPackingSlipVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS53963"));
        #    datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalPackingSlipId));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(100000000);
        #    datatype.parmWizardHighest(109999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(12);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchInvoiceVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS53962"));
        #    datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalInvoiceId));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(110000000);
        #    datatype.parmWizardHighest(119999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(13);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    //Voucher for posting purchase order
        #    datatype.parmDatatypeId(extendedTypeNum(PurchaseOrderVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS135205"));
        #
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(110000000);
        #    datatype.parmWizardHighest(119999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(14);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchCreditNoteVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS53961"));
        #    datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalCreditNoteId));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(120000000);
        #    datatype.parmWizardHighest(129999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(15);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchMarkupVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS83325"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(130000000);
        #    datatype.parmWizardHighest(139999999);
        #    datatype.parmSortField(16);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchAdvanceVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS318454"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(140000);
        #    datatype.parmWizardHighest(149999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(17);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchAdvanceApplicationVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS318455"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(150000);
        #    datatype.parmWizardHighest(159999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(18);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(TaxWithholdSlipNum_TH));
        #    datatype.parmReferenceHelp(literalStr("@SYS320736"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(19);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // <GTH>
        #    datatype.parmDatatypeId(extendedTypeNum(TaxWithholdPND53Number));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        #    // Unique key for withholding tax PND 53 number.
        #    datatype.parmReferenceHelp(literalStr("@SYS4082545"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(20);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(TaxWithholdPND3Number));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        #    // Unique key for withholding tax PND 3 number.
        #    datatype.parmReferenceHelp(literalStr("@SYS4082547"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(21);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Reversal journal number
        #    datatype.parmDatatypeId(extendedTypeNum(VendUnrealizedRevId));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        #    // Select the number sequence to associate with the vendor unrealized tax reversal journal.
        #    datatype.parmReferenceHelp(literalStr("@SYS4082874"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(22);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GTH>
        #
        #    // <GJP>
        #    // Consolidation Id
        #    datatype.parmDatatypeId(extendedTypeNum(VendConsId_JP));
        #    datatype.parmReferenceHelp(literalStr("@GLS62930"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(20);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GJP>
        #    // <GIN>
        #    //Goods receipt note
        #    datatype.parmDatatypeId(extendedTypeNum(GoodsReceiptNote_IN));
        #    datatype.parmReferenceHelp(literalStr("@GLS5571"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(17);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GIN>
        #    // <GEERU>
        #    // Number sequence for purch book
        #    datatype.parmDatatypeId(extendedTypeNum(PurchBookId_RU));
        #    datatype.parmReferenceLabel(literalStr("@GLS101149"));
        #    datatype.parmReferenceHelp(literalStr("@GLS101219"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(17);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchBookVATProcessVoucher_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS101191"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(570000000);
        #    datatype.parmWizardHighest(579999999);
        #    datatype.parmSortField(18);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    // Unique key for invoice number of amountdiff
        #    datatype.parmDatatypeId(extendedTypeNum(VendAmountDiffFactureId_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS101281"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(19);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    // Number reference for payment orders
        #    datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrder_Vend_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS101370"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(20);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    // Number reference for payment orders in currency
        #    datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrderCur_Vend_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS102276"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(21);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    // RTax25 Bad debts amortisation
        #    datatype.parmDatatypeId(extendedTypeNum(RTax25DebtCreditVoucher));
        #    datatype.parmReferenceLabel(literalStr("@GLS104209"));
        #    datatype.parmReferenceHelp(literalStr("@GLS104236"));
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(580000000);
        #    datatype.parmWizardHighest(589999999);
        #    datatype.parmSortField(22);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    // Facture
        #    datatype.parmDatatypeId(extendedTypeNum(VendFactureId_RU));
        #    datatype.parmReferenceLabel(literalStr("@GLS106861"));
        #    datatype.parmReferenceHelp(literalStr("@GLS104536"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(23);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    //Invoice for payment
        #    datatype.parmDatatypeId(extendedTypeNum(PurchInternalInvoice4PaymId_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS106712"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(24);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchCorrectInvoiceVoucher_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS111937"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(140000000);
        #    datatype.parmWizardHighest(149999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(25);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #
        #    datatype.parmDatatypeId(extendedTypeNum(PurchCorrectCreditNoteVoucher_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS111938"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(150000000);
        #    datatype.parmWizardHighest(159999999);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(26);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // CostAllocationParmId_RU
        #    datatype.parmDatatypeId(extendedTypeNum(CostAllocationParmId_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS114547"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(27);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendExternalInvoiceId_RU));
        #    datatype.parmReferenceLabel(literalStr("@GLS114548"));
        #    datatype.parmReferenceHelp(literalStr("@GLS114549"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(28);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendInvoice4PaymId_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS114550"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(29);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(InventBaileeReceiptReportId_RU));
        #    datatype.parmReferenceHelp(literalStr("@GLS115613"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(30);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GEERU>
        #
        #    // <GEEU>
        #    // Advance invoices
        #    datatype.parmDatatypeId(extendedTypeNum(CzVendAdvanceInvoiceId));
        #    datatype.parmReferenceHelp(literalStr("@GLS107931"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(31);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Corrective note
        #    datatype.parmDatatypeId(extendedTypeNum(PlCorrNoteId));
        #    datatype.parmReferenceHelp(literalStr("@GLS110043"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(32);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GEEU>
        #
        #    // <GEEPL>
        #    // Internal vendor invoice number
        #    datatype.parmDatatypeId(extendedTypeNum(PlInternalInvoiceNum));
        #    datatype.parmReferenceHelp(literalStr("@GLS110457"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmIsGroupEnabled(NoYes::Yes);
        #    datatype.parmSortField(33);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GEEPL>
        #
        #    // Setup Mandat numbers
        #    datatype.parmDatatypeId(extendedTypeNum(VendDirectiveId_PSN));
        #    datatype.parmReferenceLabel(literalStr("@GLS223194"));
        #    datatype.parmReferenceHelp(literalStr("@GLS223206"));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(1);
        #    datatype.parmSortField(20);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendRoutingSlipId_PSN));
        #    datatype.parmReferenceLabel(literalStr("@GLS223208"));
        #    datatype.parmReferenceHelp(literalStr("@GLS223138"));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardLowest(1);
        #    datatype.parmSortField(21);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        #    this.create(datatype);
        #
        #    // <GEERU>
        #    datatype.parmDatatypeId(extendedTypeNum(PurchRevisionInternalInvoiceId_RU));
        #    datatype.parmReferenceHelp(literalStr("@SYS4081863"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(34);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GEERU>
        #
        #    // Setup product receipt finalization voucher
        #    datatype.parmDatatypeId(extendedTypeNum(ProductReceiptFinalizationVoucher));
        #    datatype.parmReferenceHelp(literalStr("@SYS4001134"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(35);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Setup royalty contract
        #    datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyContractCode));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        #    datatype.parmReferenceHelp(literalStr("@MCR34839"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::Yes);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(21);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Setup royalty code
        #    datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyCode));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        #    datatype.parmReferenceHelp(literalStr("@MCR34341"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::Yes);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(22);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Setup royalty claim
        #    datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyClaimId));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        #    datatype.parmReferenceHelp(literalStr("@MCR34502"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::Yes);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(23);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Setup royalty invoice ID
        #    datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyVendInvoiceId));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(TradeBroker));
        #    datatype.parmReferenceHelp(literalStr("@MCR4410250"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(26);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // Broker claim approval vendor invoice ID
        #    datatype.parmDatatypeId(extendedTypeNum(MCRBrokerClaimInvoice));
        #    datatype.parmConfigurationKeyId(configurationKeyNum(TradeBroker));
        #    datatype.parmReferenceHelp(literalStr("@MCR34344"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmWizardHighest(999999);
        #    datatype.parmSortField(36);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    // <GEEPL>
        #    datatype.parmDatatypeId(extendedTypeNum(VendOverdueVATJournalId_W));
        #    datatype.parmReferenceLabel(literalStr("@SYS4003605"));
        #    datatype.parmReferenceHelp(literalStr("@SYS4003606"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(36);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendOverdueVATVoucher_W));
        #    datatype.parmReferenceLabel(literalStr("@SYS4003535"));
        #    datatype.parmReferenceHelp(literalStr("@SYS4003607"));
        #    datatype.parmWizardIsContinuous(true);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(37);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #
        #    datatype.parmDatatypeId(extendedTypeNum(VendOverdueCITPITJournalId_W));
        #    datatype.parmReferenceLabel(literalStr("@SYS4003968"));
        #    datatype.parmReferenceHelp(literalStr("@SYS4003969"));
        #    datatype.parmWizardIsContinuous(false);
        #    datatype.parmWizardIsManual(NoYes::No);
        #    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        #    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        #    datatype.parmSortField(38);
        #
        #    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        #    this.create(datatype);
        #    // </GEEPL>
        #}
      ENDSOURCE
      SOURCE #numberSeqModule
        #/// <summary>
        #///    Retrieves the ID of the application-specific module for this class.
        #/// </summary>
        #/// <returns>
        #///    The module-specific ID.
        #/// </returns>
        #public NumberSeqModule numberSeqModule()
        #{
        #    return NumberSeqModule::Vend;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: DBT

; Microsoft Dynamics AX Table : PurchLine unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PurchLine
    EnforceFKRelation 0
    PROPERTIES
      Name                #PurchLine
      Label               #@SYS9664
      TitleField1         #PurchId
      TitleField2         #ItemId
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #VendTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetLine
      PrimaryIndex        #TransIdIdx
      ClusterIndex        #PurchLineIdx
      SingularLabel       #@SYS22957
      ModifiedDateTime    #Yes
      CreatedDateTime     #Yes
      DeveloperDocumentation  #@SYS124476
      Origin              #{2C090154-0000-1000-F7E2-8163684C696E}
      LegacyId            #340
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountingDistributionTemplate
        INT64
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #PurchLine
          Origin              #{5B324BDA-2F99-4082-AFD7-FBD86A46D095}
          LegacyId            #299
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #ActivityNumber
        STRING
        PROPERTIES
          Name                #ActivityNumber
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{609D1EAB-602F-4712-AE54-9E2026CBE7C8}
          LegacyId            #108
          ExtendedDataType    #ProjActivityNumber
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #AddressRefRecId
        INT64
        PROPERTIES
          Name                #AddressRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{886E9C4A-496C-4D16-BEFA-3A8B0AC639F1}
          LegacyId            #24
          ExtendedDataType    #AddressRefRecId
        ENDPROPERTIES
        
      FIELD #AddressRefTableId
        INT
        PROPERTIES
          Name                #AddressRefTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{877B2B29-3651-422C-8BF3-E4D8203EE2D0}
          LegacyId            #28
          ExtendedDataType    #AddressRefTableId
        ENDPROPERTIES
        
      FIELD #AgreementSkipAutoLink
        ENUM
        PROPERTIES
          Name                #AgreementSkipAutoLink
          Visible             #No
          Table               #PurchLine
          Origin              #{38C2706D-98DE-4769-BCB9-DB58C1AD1A61}
          ExtendedDataType    #AgreementSkipAutoLink
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #AssetBookId
        STRING
        PROPERTIES
          Name                #AssetBookId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{3A5F7D2D-96B7-41C1-A962-4D9F2607E1A2}
          LegacyId            #72
          ExtendedDataType    #AssetBookIdPurchSalesInvent
        ENDPROPERTIES
        
      FIELD #AssetGroup
        STRING
        PROPERTIES
          Name                #AssetGroup
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F569AF2-DD6C-493A-8AF7-6FC949F4BF84}
          LegacyId            #112
          ExtendedDataType    #AssetGroupId
        ENDPROPERTIES
        
      FIELD #AssetId
        STRING
        PROPERTIES
          Name                #AssetId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F0A28DE-F876-4CEF-8733-4FECBC85051B}
          LegacyId            #70
          ExtendedDataType    #AssetIdOpen
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #AssetTransTypePurch
        ENUM
        PROPERTIES
          Name                #AssetTransTypePurch
          Table               #PurchLine
          Origin              #{B7407292-D9AA-4090-BFEE-928D33BE0CFD}
          LegacyId            #71
          ExtendedDataType    #AssetTransTypePurchEDT
          EnumType            #AssetTransTypePurch
        ENDPROPERTIES
        
      FIELD #BarCode
        STRING
        PROPERTIES
          Name                #BarCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9E7824CE-C3B3-4B9C-AFD2-A4EB5DF3DC78}
          LegacyId            #48
          ExtendedDataType    #PurchBarCode
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #BarCodeType
        STRING
        PROPERTIES
          Name                #BarCodeType
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{818E9CE1-1EC0-49FA-9693-34DCF89C4664}
          LegacyId            #49
          ExtendedDataType    #BarcodeSetupId
        ENDPROPERTIES
        
      FIELD #Blocked
        ENUM
        PROPERTIES
          Name                #Blocked
          Table               #PurchLine
          Origin              #{88DA2A1A-8C40-484A-A732-A82C5AF96CA4}
          LegacyId            #54
          ExtendedDataType    #LineStopped
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CaseTagging
        ENUM
        PROPERTIES
          Name                #CaseTagging
          Table               #PurchLine
          Origin              #{56C1D6D4-BC94-45D0-8E65-88BC34601642}
          LegacyId            #99
          ExtendedDataType    #RFIDCaseTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CFOPTable_BR
        INT64
        PROPERTIES
          Name                #CFOPTable_BR
          Label               #@GLS200
          HelpText            #@GLS366
          Table               #PurchLine
          CountryRegionCodes  #BR
          Origin              #{2A0C1FBD-0154-1000-EAB8-D719E56D626C}
          LegacyId            #8125
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Complete
        ENUM
        PROPERTIES
          Name                #Complete
          Table               #PurchLine
          Origin              #{B19657D4-C49E-4963-B7A4-009E75051727}
          LegacyId            #55
          ExtendedDataType    #LineComplete
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ConfirmedDlv
        DATE
        PROPERTIES
          Name                #ConfirmedDlv
          Label               #@SYS4006394
          HelpText            #@SYS931
          Table               #PurchLine
          Origin              #{EC89949D-AAD8-467B-BDC9-7DAFCE70C232}
          LegacyId            #23
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxAmount
        REAL
        PROPERTIES
          Name                #ConfirmedTaxAmount
          Table               #PurchLine
          Origin              #{4785A1D2-5F91-40E9-98E3-169C65EBDA01}
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxWriteCode
        STRING
        PROPERTIES
          Name                #ConfirmedTaxWriteCode
          Table               #PurchLine
          Origin              #{591D060A-BE1E-4456-A64A-AAA5E99B787D}
          ExtendedDataType    #TaxWriteCode
        ENDPROPERTIES
        
      FIELD #CountyOrigDest
        STRING
        PROPERTIES
          Name                #CountyOrigDest
          Table               #PurchLine
          Origin              #{27D52C48-F160-4FF4-BAB8-3D5C6D57DBC9}
          LegacyId            #40
          ExtendedDataType    #AddressCountyOrigDest
        ENDPROPERTIES
        
      FIELD #CovRef
        ENUM
        PROPERTIES
          Name                #CovRef
          HelpText            #@SYS17021
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{3136AD64-C248-4B1F-AA99-433E32B6A4CD}
          LegacyId            #35
          EnumType            #PurchCovRef
        ENDPROPERTIES
        
      FIELD #CreateFixedAsset
        ENUM
        PROPERTIES
          Name                #CreateFixedAsset
          Table               #PurchLine
          Origin              #{AF71931B-C218-4E86-94E4-913C2349ED23}
          LegacyId            #111
          ExtendedDataType    #CreateFixedAsset
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS6734
          Mandatory           #Yes
          Table               #PurchLine
          Origin              #{5E2AF4E0-C06C-4C45-BD8E-22D0465B0FA2}
          LegacyId            #16
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CustomerRef
        STRING
        PROPERTIES
          Name                #CustomerRef
          Table               #PurchLine
          Origin              #{02F9E252-9A53-4372-8D5B-DE72A18F3812}
          LegacyId            #90
          ExtendedDataType    #CustRefLine
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CustPurchaseOrderFormNum
        STRING
        PROPERTIES
          Name                #CustPurchaseOrderFormNum
          Table               #PurchLine
          Origin              #{77A295AD-A570-4C2E-BC1B-D6A428F0D97F}
          LegacyId            #91
          ExtendedDataType    #CustPurchaseOrder
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #PurchLine
          Origin              #{490E3A95-65C4-48FB-995E-ACA25B7EE0CA}
          LegacyId            #140
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DeliveryDate
        DATE
        PROPERTIES
          Name                #DeliveryDate
          HelpText            #@SYS3828
          Table               #PurchLine
          Origin              #{6CA7F31F-31A9-4B99-8BB2-523D32F61690}
          LegacyId            #7
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          GroupPrompt         #@SYS7399
          Table               #PurchLine
          Origin              #{2B4FF535-9D97-406C-AFBC-A440966D2BE7}
          LegacyId            #82
          ExtendedDataType    #LogisticsDeliveryName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryPostalAddress
        INT64
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #PurchLine
          Origin              #{93B78464-7028-4AFF-925F-1CFEA5658CC9}
          LegacyId            #240
          ExtendedDataType    #LogisticsPostalAddressRecId
        ENDPROPERTIES
        
      FIELD #DeliveryType
        ENUM
        PROPERTIES
          Name                #DeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{69366177-3E01-4B82-BB02-8BA4DBD2B8D8}
          LegacyId            #89
          ExtendedDataType    #TradeLineDlvTypeId
          EnumType            #TradeLineDlvType
        ENDPROPERTIES
        
      FIELD #DepreciationStartDate
        DATE
        PROPERTIES
          Name                #DepreciationStartDate
          Table               #PurchLine
          CountryRegionCodes  #IT
          Origin              #{8726C83C-BEC8-4DF3-9F84-55C617543D26}
          LegacyId            #107
          ExtendedDataType    #AssetDepreciationStartDate
        ENDPROPERTIES
        
      FIELD #DiscAmount
        REAL
        PROPERTIES
          Name                #DiscAmount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6948BBC1-F4D5-4501-ABEC-1621A3DDB0EA}
          ExtendedDataType    #PurchDiscAmount
        ENDPROPERTIES
        
      FIELD #DiscPercent
        REAL
        PROPERTIES
          Name                #DiscPercent
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{22E14467-91AC-4958-B17B-F8E0EC90E00B}
          ExtendedDataType    #PurchDiscPercent
        ENDPROPERTIES
        
      FIELD #EditableInWorkflow
        ENUM
        PROPERTIES
          Name                #EditableInWorkflow
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{7BB901CC-1CEE-480A-9C35-8BF0A499E407}
          LegacyId            #199
          ExtendedDataType    #TradeEditableInWorkflow
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ExternalItemId
        STRING
        PROPERTIES
          Name                #ExternalItemId
          Table               #PurchLine
          Origin              #{2E3A9052-4C49-418C-8912-69D2C6254E7B}
          LegacyId            #20
          ExtendedDataType    #PurchExternalItemId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #GSTHSTTaxType_CA
        ENUM
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Table               #PurchLine
          Origin              #{87C9DB6B-4633-4212-B9D5-A43FAC93CF8B}
          LegacyId            #235
          EnumType            #GSTHSTTaxType_CA
        ENDPROPERTIES
        
      FIELD #InterCompanyInventTransId
        STRING
        PROPERTIES
          Name                #InterCompanyInventTransId
          ConfigurationKey    #TradeInterCompany
          Table               #PurchLine
          Origin              #{47749BED-DF30-49B3-9509-5A028E87D977}
          LegacyId            #79
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyOrigin
        ENUM
        PROPERTIES
          Name                #InterCompanyOrigin
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2D75D953-F707-4E7C-91BC-904F2A0B32C9}
          LegacyId            #63
          EnumType            #InterCompanyOrigin
        ENDPROPERTIES
        
      FIELD #IntrastatFulfillmentDate_HU
        DATE
        PROPERTIES
          Name                #IntrastatFulfillmentDate_HU
          Table               #PurchLine
          Origin              #{542211FA-CDC0-41D3-853D-7E325DE8E5B5}
          LegacyId            #8123
          ExtendedDataType    #IntrastatFulfillmentDate_HU
        ENDPROPERTIES
        
      FIELD #InventDimId
        STRING
        PROPERTIES
          Name                #InventDimId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{116ACE01-E66C-4CC0-9EE0-418598AA9AA0}
          LegacyId            #66
          ExtendedDataType    #InventDimId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventInvoiceNow
        REAL
        PROPERTIES
          Name                #InventInvoiceNow
          Label               #@PSA795
          HelpText            #@PSA10168
          Table               #PurchLine
          Origin              #{1DD33471-7499-4364-B993-26AA0654E1E7}
          LegacyId            #16038
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventReceivedNow
        REAL
        PROPERTIES
          Name                #InventReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS12421
          Table               #PurchLine
          Origin              #{8E19C44D-3AD8-4548-AA2C-256E9FBED92F}
          LegacyId            #31
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventRefId
        STRING
        PROPERTIES
          Name                #InventRefId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{10AAE4E5-048B-4E17-841A-647D549517AD}
          LegacyId            #50
          ExtendedDataType    #InventRefId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventRefTransId
        STRING
        PROPERTIES
          Name                #InventRefTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4D707772-F3E8-45B2-A4D4-19E7865BE9E4}
          LegacyId            #51
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventTransId
        STRING
        PROPERTIES
          Name                #InventTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{E92D1537-5337-4D27-A82D-B34E2310DDBF}
          LegacyId            #25
          ExtendedDataType    #TradeInventTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IsDeleted
        ENUM
        PROPERTIES
          Name                #IsDeleted
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{72FFDCB9-8544-41E8-9F79-16C36921452F}
          LegacyId            #148
          ExtendedDataType    #VersioningIsDeleted
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsFinalized
        ENUM
        PROPERTIES
          Name                #IsFinalized
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4C8A1AFA-7D21-489F-BB3F-67D266769EF1}
          LegacyId            #304
          ExtendedDataType    #PurchLineIsFinalized
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsInvoiceMatched
        ENUM
        PROPERTIES
          Name                #IsInvoiceMatched
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{D99708AE-A5C5-4381-A6B8-CCAD89C450FE}
          LegacyId            #306
          ExtendedDataType    #PurchLineIsInvoiceMatched
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsModified
        ENUM
        PROPERTIES
          Name                #IsModified
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4CD8EF5A-02F0-4260-B786-199BC04A66DE}
          LegacyId            #149
          ExtendedDataType    #VersioningIsModified
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsPwp
        ENUM
        PROPERTIES
          Name                #IsPwp
          Label               #@PSA3342
          HelpText            #@PSA3344
          ConfigurationKey    #PSAPwp
          Table               #PurchLine
          Origin              #{0D552294-4394-47B3-886D-BA020F914B5E}
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemBOMId
        STRING
        PROPERTIES
          Name                #ItemBOMId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{39366371-9822-4904-80FF-699D720BF2DB}
          LegacyId            #59
          ExtendedDataType    #ItemBOMId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          HelpText            #@SYS2882
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{EF3B8DF2-B0CF-4BCA-83F1-D2FB95392E8E}
          LegacyId            #3
          ExtendedDataType    #ItemIdSmall
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #itemPBAId
        STRING
        PROPERTIES
          Name                #itemPBAId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{4F3438E8-AD9E-466F-BEE4-EF1B7D8B54E1}
          LegacyId            #8001
          ExtendedDataType    #PBAId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemRefType
        ENUM
        PROPERTIES
          Name                #ItemRefType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{FD86A5EE-A9D8-411B-9FD6-7881A7F0F7EB}
          LegacyId            #52
          EnumType            #InventRefType
        ENDPROPERTIES
        
      FIELD #ItemRouteId
        STRING
        PROPERTIES
          Name                #ItemRouteId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{508BDAEA-F7E8-4EE9-A1B9-50D0B7EA0F73}
          LegacyId            #58
          ExtendedDataType    #ItemRouteId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemTagging
        ENUM
        PROPERTIES
          Name                #ItemTagging
          Table               #PurchLine
          Origin              #{8243BA22-4C78-4B37-915A-5CFC7A2D4718}
          LegacyId            #98
          ExtendedDataType    #RFIDItemTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LedgerDimension
        INT64
        PROPERTIES
          Name                #LedgerDimension
          Label               #@SYS8343
          HelpText            #@SYS7102
          Table               #PurchLine
          Origin              #{4D1B7477-A91F-4B23-B949-8FF6B7D823D6}
          LegacyId            #143
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #LineAmount
        REAL
        PROPERTIES
          Name                #LineAmount
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{3B630245-E7EC-42FC-9904-3BE783FC7710}
          LegacyId            #19
          ExtendedDataType    #PurchLineAmount
        ENDPROPERTIES
        
      FIELD #LineDeliveryType
        ENUM
        PROPERTIES
          Name                #LineDeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{05119B76-92A5-4BAF-B561-CB587FA27217}
          LegacyId            #124
          EnumType            #LineDeliveryType
        ENDPROPERTIES
        
      FIELD #LineDisc
        REAL
        PROPERTIES
          Name                #LineDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{F8EB8A78-A71E-457F-8437-717074D71B45}
          LegacyId            #18
          ExtendedDataType    #PurchLineDisc
        ENDPROPERTIES
        
      FIELD #LineHeader
        STRING
        PROPERTIES
          Name                #LineHeader
          Table               #PurchLine
          Origin              #{C3F95584-14F5-4638-BFFB-7DB3D1834F97}
          LegacyId            #60
          ExtendedDataType    #LineHeader
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #LineNumber
        INT64
        PROPERTIES
          Name                #LineNumber
          Table               #PurchLine
          Origin              #{282F8D8D-46FF-4063-B946-14EF963DC26E}
          LegacyId            #247
          ExtendedDataType    #TradeLineNumber
        ENDPROPERTIES
        
      FIELD #LinePercent
        REAL
        PROPERTIES
          Name                #LinePercent
          Table               #PurchLine
          Origin              #{1FC140A9-3419-40DE-B401-FE324935D9DA}
          LegacyId            #17
          ExtendedDataType    #PurchLinePercent
        ENDPROPERTIES
        
      FIELD #ManualEntryChangepolicy
        INT64
        PROPERTIES
          Name                #ManualEntryChangepolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4F7CACC1-DB12-45F8-9AFC-C67EFFA80AAB}
          LegacyId            #193
          ExtendedDataType    #PriceDiscPolicyManual
        ENDPROPERTIES
        
      FIELD #ManualModifiedField
        INT
        PROPERTIES
          Name                #ManualModifiedField
          Visible             #No
          Table               #PurchLine
          Origin              #{83655EEC-51A2-4712-A584-648A16C828FE}
          ExtendedDataType    #FieldId
        ENDPROPERTIES
        
      FIELD #MatchingAgreementLine
        INT64
        PROPERTIES
          Name                #MatchingAgreementLine
          Table               #PurchLine
          Origin              #{7B0A7537-F0FC-4055-9437-870ACAD809FA}
          LegacyId            #177
          ExtendedDataType    #AgreementLineRecId
        ENDPROPERTIES
        
      FIELD #MatchingPolicy
        ENUM
        PROPERTIES
          Name                #MatchingPolicy
          Label               #@SYS129852
          HelpText            #@SYS129857
          Table               #PurchLine
          Origin              #{4469D30D-D1BE-4671-8DCD-F860AF788C68}
          LegacyId            #120
          EnumType            #PurchMatchingPolicyOption
        ENDPROPERTIES
        
      FIELD #MCRDropShipComment
        STRING
        PROPERTIES
          Name                #MCRDropShipComment
          Table               #PurchLine
          Origin              #{DAD1F656-E2BB-49B7-A522-00F887C79DC8}
          LegacyId            #30002
          ExtendedDataType    #MCRDropShipComment
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #MCRDropShipment
        ENUM
        PROPERTIES
          Name                #MCRDropShipment
          Table               #PurchLine
          Origin              #{A8C38570-B5CB-41BC-8F8C-825B796AAC7E}
          LegacyId            #30001
          ExtendedDataType    #MCRDropShipment
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRDropShipStatus
        ENUM
        PROPERTIES
          Name                #MCRDropShipStatus
          Table               #PurchLine
          Origin              #{B4C0A380-BCDD-4B01-8814-ACB94169FAA6}
          LegacyId            #30003
          EnumType            #MCRDropShipStatus
        ENDPROPERTIES
        
      FIELD #MCROrderLine2PriceHistoryRef
        INT64
        PROPERTIES
          Name                #MCROrderLine2PriceHistoryRef
          Visible             #No
          Table               #PurchLine
          Origin              #{E5EC5410-40EA-43B4-A628-6347DE4CBC7F}
          ExtendedDataType    #MCROrderLinePriceHistoryReference
        ENDPROPERTIES
        
      FIELD #MultiLnDisc
        REAL
        PROPERTIES
          Name                #MultiLnDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{CB7E3D7A-8C54-41B5-8C1E-D06F8FF91819}
          LegacyId            #32
          ExtendedDataType    #PurchMultiLnDisc
        ENDPROPERTIES
        
      FIELD #MultiLnPercent
        REAL
        PROPERTIES
          Name                #MultiLnPercent
          Table               #PurchLine
          Origin              #{12539546-06F5-43F0-BC62-486BC862A43B}
          LegacyId            #33
          ExtendedDataType    #PurchMultiLnPercent
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          HelpText            #@SYS2102
          Table               #PurchLine
          Origin              #{2D2F7CD7-0DB5-47E2-839B-5262F9C630B8}
          LegacyId            #8
          ExtendedDataType    #ItemFreeTxt
          StringSize          #1000
        ENDPROPERTIES
        
      FIELD #OperationType_MX
        ENUM
        PROPERTIES
          Name                #OperationType_MX
          Table               #PurchLine
          Origin              #{CA63C1EB-A3CB-4CA9-9223-95F0CCFF70FE}
          LegacyId            #301
          EnumType            #VendorOperationType_MX
        ENDPROPERTIES
        
      FIELD #OverDeliveryPct
        REAL
        PROPERTIES
          Name                #OverDeliveryPct
          Table               #PurchLine
          Origin              #{A74C1E30-B3C5-4D9E-BF43-F7C832998351}
          LegacyId            #45
          ExtendedDataType    #PurchOverDeliveryPct
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{90696C2E-1EB1-4AD8-BC2A-CC54AD2C4F62}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PackedWHSLine
        QUEUE
        PROPERTIES
          Name                #PackedWHSLine
          SaveContents        #No
          Visible             #No
          ConfigurationKey    #WHSandTMS
          Table               #PurchLine
          Origin              #{75F21280-F3AC-4C21-86CB-0AF878F66E29}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PalletTagging
        ENUM
        PROPERTIES
          Name                #PalletTagging
          Table               #PurchLine
          Origin              #{EBB6824F-2BF6-4B7A-B468-4347AD515C5F}
          LegacyId            #100
          ExtendedDataType    #RFIDPalletTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PDSCalculationId
        STRING
        PROPERTIES
          Name                #PDSCalculationId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0492FA06-55AC-402E-817B-44579A221DB9}
          ExtendedDataType    #PDSCalculationId
        ENDPROPERTIES
        
      FIELD #PdsCWInventReceivedNow
        REAL
        PROPERTIES
          Name                #PdsCWInventReceivedNow
          Table               #PurchLine
          Origin              #{B696C285-D30B-45D7-9BDC-479BFF72C11F}
          ExtendedDataType    #PdsCWQtyReceiveNow
        ENDPROPERTIES
        
      FIELD #PdsCWQty
        REAL
        PROPERTIES
          Name                #PdsCWQty
          Table               #PurchLine
          Origin              #{A31807C3-FF1F-4775-86AB-D06A3A79873D}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventFinancial
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventFinancial
          Label               #@PDS75
          HelpText            #@PDS172
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B68825D8-D9CE-4D77-909E-77D2F2742D49}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventPhysical
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventPhysical
          Label               #@PDS96
          HelpText            #@PDS97
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F4EBDE8F-73E7-4852-AB7D-94526AB0AC9B}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PlanReference
        INT64
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS333324
          HelpText            #@SYS152559
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4DE8A903-ED64-4C20-AACC-475C33063BDE}
          LegacyId            #305
          ExtendedDataType    #PlanReferenceRefRecId
        ENDPROPERTIES
        
      FIELD #Port
        STRING
        PROPERTIES
          Name                #Port
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{7644731F-C0B5-4EDD-8396-69F1517FC57C}
          LegacyId            #69
          ExtendedDataType    #IntrastatPortId
        ENDPROPERTIES
        
      FIELD #PriceUnit
        REAL
        PROPERTIES
          Name                #PriceUnit
          HelpText            #@SYS3472
          Table               #PurchLine
          Origin              #{35313E95-FBD5-400B-B87A-3F2E4649E26E}
          LegacyId            #14
          ExtendedDataType    #PriceUnit
        ENDPROPERTIES
        
      FIELD #ProcurementCategory
        INT64
        PROPERTIES
          Name                #ProcurementCategory
          Table               #PurchLine
          Origin              #{1B8E910A-2DD0-485B-A696-5638093235A2}
          LegacyId            #123
          ExtendedDataType    #PurchCategory
        ENDPROPERTIES
        
      FIELD #ProjCategoryId
        STRING
        PROPERTIES
          Name                #ProjCategoryId
          Label               #@SYS6114
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{72B29456-33EA-48D4-B6F3-ED82DCBC4958}
          LegacyId            #64
          ExtendedDataType    #ProjCategoryId
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #ProjId
        STRING
        PROPERTIES
          Name                #ProjId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{30DBCECF-A601-4237-8C60-09AF948086A8}
          LegacyId            #65
          ExtendedDataType    #ProjId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ProjLinePropertyId
        STRING
        PROPERTIES
          Name                #ProjLinePropertyId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E2E1E1F5-1A35-435B-9CC3-720F01F043BD}
          LegacyId            #73
          ExtendedDataType    #ProjLinePropertyId
        ENDPROPERTIES
        
      FIELD #ProjSalesCurrencyId
        STRING
        PROPERTIES
          Name                #ProjSalesCurrencyId
          Label               #@SYS56480
          HelpText            #@SYS20788
          Table               #PurchLine
          Origin              #{0C441AEE-3247-46F3-ACE3-9F10E75590D6}
          LegacyId            #77
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #ProjSalesPrice
        REAL
        PROPERTIES
          Name                #ProjSalesPrice
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{318828D1-2ADF-4E7D-B7A0-48EF6A3BDC6F}
          LegacyId            #76
          ExtendedDataType    #ProjSalesPriceCost
        ENDPROPERTIES
        
      FIELD #ProjSalesUnitId
        STRING
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #PurchLine
          Origin              #{7EF04E25-6366-4359-BB27-B937E0E2D0C0}
          LegacyId            #80
          ExtendedDataType    #UnitOfMeasureSymbol
        ENDPROPERTIES
        
      FIELD #ProjTaxGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxGroupId
          HelpText            #@SYS67872
          Table               #PurchLine
          Origin              #{9DAE7F48-4B5B-4938-A1EA-0AC1A3CFCCD4}
          LegacyId            #75
          ExtendedDataType    #ProjTaxGroup
        ENDPROPERTIES
        
      FIELD #ProjTaxItemGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxItemGroupId
          HelpText            #@SYS67873
          Table               #PurchLine
          Origin              #{9C5B27FE-FD50-44F2-B6FD-D8130C62BF24}
          LegacyId            #74
          ExtendedDataType    #ProjTaxItemGroup
        ENDPROPERTIES
        
      FIELD #ProjTransId
        STRING
        PROPERTIES
          Name                #ProjTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9769B6E4-B003-49C0-82AD-CB88487FA441}
          LegacyId            #53
          ExtendedDataType    #ProjItemTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ProjWorker
        INT64
        PROPERTIES
          Name                #ProjWorker
          ConfigurationKey    #ProjBasic
          Table               #PurchLine
          Origin              #{B73AA35E-82C6-44F8-BB58-E193BBB94D9F}
          ExtendedDataType    #HcmWorkerRecId
        ENDPROPERTIES
        
      FIELD #PSARetainScheduleId
        STRING
        PROPERTIES
          Name                #PSARetainScheduleId
          Table               #PurchLine
          Origin              #{73A0AD94-C896-4977-B2E8-1F3D84A7BF63}
          LegacyId            #16032
          ExtendedDataType    #PSAPurchRetainScheduleId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PSATotalRetainAmount
        REAL
        PROPERTIES
          Name                #PSATotalRetainAmount
          Label               #@SYS3494
          ConfigurationKey    #PSAAPRetainage
          Table               #PurchLine
          Origin              #{C66C8AE2-B123-4B14-AAA0-1B2A7EE1DAC9}
          LegacyId            #16034
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #PurchaseType
        ENUM
        PROPERTIES
          Name                #PurchaseType
          Label               #@SYS1201
          HelpText            #@SYS17049
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{9D0552B7-2289-4B25-9355-1F501A1390F8}
          LegacyId            #34
          EnumType            #PurchaseType
        ENDPROPERTIES
        
      FIELD #PurchCommitmentLine_PSN
        INT64
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          Table               #PurchLine
          Origin              #{25AC9042-5188-4C14-BD78-A957DE7909B8}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          HelpText            #@SYS13121
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{F4241750-932A-4641-B5F4-9E8E90C79741}
          LegacyId            #1
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchMarkup
        REAL
        PROPERTIES
          Name                #PurchMarkup
          HelpText            #@SYS16914
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{E5502488-338A-4518-8317-2B3C961189ED}
          LegacyId            #30
          ExtendedDataType    #PurchMarkup
        ENDPROPERTIES
        
      FIELD #PurchPrice
        REAL
        PROPERTIES
          Name                #PurchPrice
          Label               #@SYS11770
          HelpText            #@SYS5369
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{DFDE0529-CB13-46DC-9228-CB25C4283D0B}
          LegacyId            #15
          ExtendedDataType    #PurchPrice
        ENDPROPERTIES
        
      FIELD #PurchQty
        REAL
        PROPERTIES
          Name                #PurchQty
          Table               #PurchLine
          Origin              #{B5A900A8-5972-4DD5-9E8E-F620CD9D53F2}
          LegacyId            #29
          ExtendedDataType    #PurchOrderedQty
        ENDPROPERTIES
        
      FIELD #PurchReceivedNow
        REAL
        PROPERTIES
          Name                #PurchReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS69028
          Table               #PurchLine
          Origin              #{B6F417AE-F0F7-4AD1-82D9-4F6D024966BC}
          LegacyId            #11
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #PurchReqId
        STRING
        PROPERTIES
          Name                #PurchReqId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{3E6BC520-E211-4B78-AAF8-CDC4487A98CC}
          LegacyId            #115
          ExtendedDataType    #PurchReqId
          StringSize          #25
        ENDPROPERTIES
        
      FIELD #PurchReqLineRefId
        GUID
        PROPERTIES
          Name                #PurchReqLineRefId
          Visible             #No
          Table               #PurchLine
          Origin              #{80D0B73F-6B7F-41B3-AA59-8F30524C514E}
          LegacyId            #106
          ExtendedDataType    #PurchReqLineRefId
        ENDPROPERTIES
        
      FIELD #PurchStatus
        ENUM
        PROPERTIES
          Name                #PurchStatus
          Label               #@SYS7161
          HelpText            #@SYS6391
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{C983A9E5-7B43-4EB2-9057-A473123B3D36}
          LegacyId            #4
          EnumType            #PurchStatus
        ENDPROPERTIES
        
      FIELD #PurchUnit
        STRING
        PROPERTIES
          Name                #PurchUnit
          Table               #PurchLine
          Origin              #{1AA19964-78F1-420C-8751-9797479F1D16}
          LegacyId            #21
          ExtendedDataType    #PurchUnit
        ENDPROPERTIES
        
      FIELD #QtyOrdered
        REAL
        PROPERTIES
          Name                #QtyOrdered
          HelpText            #@SYS8090
          Table               #PurchLine
          Origin              #{DC09ABF8-A41A-4D7B-96BA-89639920C301}
          LegacyId            #10
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RBOPackageLineNum
        REAL
        PROPERTIES
          Name                #RBOPackageLineNum
          Label               #@RET4403
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{2420D75B-F36B-4145-8013-F913D0C96767}
          LegacyId            #16054
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #Remainder
        REAL
        PROPERTIES
          Name                #Remainder
          Label               #@SYS53728
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6F085E85-8122-4E9C-B999-CD71F29C0A4F}
          LegacyId            #16036
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventFinancial
        REAL
        PROPERTIES
          Name                #RemainInventFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{367AF194-0F13-4999-8DD3-CDB0514F4763}
          LegacyId            #105
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventPhysical
        REAL
        PROPERTIES
          Name                #RemainInventPhysical
          Label               #@SYS22556
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{06C06833-3CA1-4234-97DE-DD4769CA3796}
          LegacyId            #36
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainPurchFinancial
        REAL
        PROPERTIES
          Name                #RemainPurchFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{571FDAC6-F55E-49C4-A32F-1D353316878F}
          LegacyId            #13
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #RemainPurchPhysical
        REAL
        PROPERTIES
          Name                #RemainPurchPhysical
          Label               #@SYS22556
          HelpText            #@SYS27457
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4419CD00-535D-4A2F-AFF8-AD6F960EA274}
          LegacyId            #12
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #ReqAttention
        STRING
        PROPERTIES
          Name                #ReqAttention
          Table               #PurchLine
          Origin              #{E12AF01C-723E-4CC3-B7C6-F696E247E497}
          LegacyId            #114
          ExtendedDataType    #PurchReqAttention
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #ReqPlanIdSched
        STRING
        PROPERTIES
          Name                #ReqPlanIdSched
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DA3106A6-D2BF-485B-9745-B92D9258E8EE}
          LegacyId            #56
          ExtendedDataType    #ReqPlanIdSched
        ENDPROPERTIES
        
      FIELD #ReqPOId
        STRING
        PROPERTIES
          Name                #ReqPOId
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{26B8D248-F4EB-4036-9DD7-44BDC221273D}
          LegacyId            #57
          ExtendedDataType    #ReqPOId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Requester
        INT64
        PROPERTIES
          Name                #Requester
          Table               #PurchLine
          Origin              #{190FB1EF-58D9-4282-A58E-BAAA0E090D33}
          LegacyId            #288
          ExtendedDataType    #PurchRequester
        ENDPROPERTIES
        
      FIELD #RetailLineNumEx1
        REAL
        PROPERTIES
          Name                #RetailLineNumEx1
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{B7B26FF4-D418-4BDF-A9D8-4EE8A6E7D0A1}
          LegacyId            #16051
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #RetailPackageId
        STRING
        PROPERTIES
          Name                #RetailPackageId
          Table               #PurchLine
          Origin              #{A35F2580-6940-4CED-A0F4-6652E0C496A0}
          LegacyId            #16053
          ExtendedDataType    #RetailPackageId
        ENDPROPERTIES
        
      FIELD #RetailTempValueEx2
        REAL
        PROPERTIES
          Name                #RetailTempValueEx2
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B26C2ACF-ADDB-482E-9AC4-FB1C4FDC08ED}
          LegacyId            #16058
          ExtendedDataType    #RetailTempValueEx2
        ENDPROPERTIES
        
      FIELD #ReturnActionId
        STRING
        PROPERTIES
          Name                #ReturnActionId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DEC7010C-431B-4252-89CA-2CD2E0433C35}
          LegacyId            #62
          ExtendedDataType    #PurchReturnActionId
        ENDPROPERTIES
        
      FIELD #ReturnDispositionCodeId
        STRING
        PROPERTIES
          Name                #ReturnDispositionCodeId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{FAFE2B07-8F88-49BB-9DC0-5F0917D4BA96}
          LegacyId            #110
          ExtendedDataType    #ReturnDispositionCodeId
        ENDPROPERTIES
        
      FIELD #ReturnStatus
        ENUM
        PROPERTIES
          Name                #ReturnStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{76730C7B-6DD0-4024-976C-D261A5FA0169}
          LegacyId            #109
          EnumType            #ReturnStatusLine
        ENDPROPERTIES
        
      FIELD #Scrap
        ENUM
        PROPERTIES
          Name                #Scrap
          Label               #@SYS24894
          HelpText            #@SYS29137
          Table               #PurchLine
          Origin              #{336A8658-4103-4038-A963-32058287AE8A}
          LegacyId            #61
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ServiceAddress
        STRING
        PROPERTIES
          Name                #ServiceAddress
          Label               #@SYS88743
          HelpText            #@SYS27762
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #TradeMultiShipTo
          Table               #PurchLine
          Origin              #{251F9F10-D639-4F1E-B490-A13EB9DC658A}
          LegacyId            #16037
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #ServiceDate
        DATE
        PROPERTIES
          Name                #ServiceDate
          Label               #@SYS88746
          Table               #PurchLine
          Origin              #{482E3D80-4656-4FA1-A049-10D11D97362F}
          LegacyId            #16035
          ExtendedDataType    #DlvDate
        ENDPROPERTIES
        
      FIELD #ShippingDateConfirmed
        DATE
        PROPERTIES
          Name                #ShippingDateConfirmed
          Visible             #No
          Table               #PurchLine
          Origin              #{0C3084C7-48F6-4267-84E1-609252706493}
          LegacyId            #39
          ExtendedDataType    #SalesShippingDateConfirmed
        ENDPROPERTIES
        
      FIELD #ShippingDateRequested
        DATE
        PROPERTIES
          Name                #ShippingDateRequested
          Visible             #No
          Table               #PurchLine
          Origin              #{FEF95137-DAC9-47D8-B34C-2F96FB07ECB1}
          LegacyId            #5
          ExtendedDataType    #SalesShippingDateRequested
        ENDPROPERTIES
        
      FIELD #SkipDistributionUpdate
        ENUM
        PROPERTIES
          Name                #SkipDistributionUpdate
          Visible             #No
          Table               #PurchLine
          Origin              #{86DC0751-C46F-4B40-9A07-6A91CC82DB1D}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SkipUpdate
        ENUM
        PROPERTIES
          Name                #SkipUpdate
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{828D546E-6981-4D2E-9E59-10AFACBD8460}
          LegacyId            #92
          EnumType            #InterCompanySkipUpdate
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@SYS132694
          Visible             #No
          Table               #PurchLine
          Origin              #{14BB4DB7-91CB-4D9C-8D35-DEF07A27509F}
          LegacyId            #130
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #StatisticValue_LT
        REAL
        PROPERTIES
          Name                #StatisticValue_LT
          Table               #PurchLine
          Origin              #{5A8A12FA-5824-4432-8526-1736221D24E5}
          LegacyId            #16003
          ExtendedDataType    #LtIntrastatStatisticValue
        ENDPROPERTIES
        
      FIELD #StatProcId
        STRING
        PROPERTIES
          Name                #StatProcId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{ED9720C4-1644-43A3-AEA7-BBF6D3B33E42}
          LegacyId            #68
          ExtendedDataType    #IntrastatProcId
        ENDPROPERTIES
        
      FIELD #StatTriangularDeal
        ENUM
        PROPERTIES
          Name                #StatTriangularDeal
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F9094166-7527-47B2-AEA9-AF1844AE7714}
          LegacyId            #95
          ExtendedDataType    #IntrastatTriangularDeal
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #StockedProduct
        ENUM
        PROPERTIES
          Name                #StockedProduct
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{FAD8DC13-0FEE-4AF3-8482-44A50C1BED3B}
          LegacyId            #302
          ExtendedDataType    #TradeStockedProduct
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SystemEntryChangePolicy
        INT64
        PROPERTIES
          Name                #SystemEntryChangePolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4A200910-AF60-482B-93ED-0C91396BCEC8}
          LegacyId            #194
          ExtendedDataType    #PriceDiscPolicySystem
        ENDPROPERTIES
        
      FIELD #SystemEntrySource
        ENUM
        PROPERTIES
          Name                #SystemEntrySource
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{65120059-3214-47D7-9CEE-F51E61395C60}
          LegacyId            #195
          EnumType            #PriceDiscSystemSource
        ENDPROPERTIES
        
      FIELD #TAMItemVendRebateGroupId
        STRING
        PROPERTIES
          Name                #TAMItemVendRebateGroupId
          Table               #PurchLine
          Origin              #{196F68E1-D0FF-4F4F-A9F0-89CBFDF1D0AD}
          ExtendedDataType    #TAMItemVendRebateGroupId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Tax1099Amount
        REAL
        PROPERTIES
          Name                #Tax1099Amount
          Table               #PurchLine
          Origin              #{EAF7B735-4877-4DE2-BE27-37263D7D8689}
          LegacyId            #47
          ExtendedDataType    #Tax1099Amount
        ENDPROPERTIES
        
      FIELD #Tax1099Fields
        INT64
        PROPERTIES
          Name                #Tax1099Fields
          Table               #PurchLine
          Origin              #{4EB4E706-74B7-4B05-832D-2D6DCF1FD918}
          LegacyId            #234
          ExtendedDataType    #Tax1099FieldsRecId
        ENDPROPERTIES
        
      FIELD #Tax1099RecId
        INT64
        PROPERTIES
          Name                #Tax1099RecId
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{078B518B-E652-4F12-A473-475AE0EDC4A7}
          LegacyId            #116
          ExtendedDataType    #Tax1099RecId
        ENDPROPERTIES
        
      FIELD #Tax1099State
        STRING
        PROPERTIES
          Name                #Tax1099State
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{0E7F50FA-6DD9-4C08-831B-54BBAF3DD972}
          LegacyId            #96
          ExtendedDataType    #Tax1099State
        ENDPROPERTIES
        
      FIELD #Tax1099StateAmount
        REAL
        PROPERTIES
          Name                #Tax1099StateAmount
          Table               #PurchLine
          Origin              #{492B0BCD-65CA-4046-8C9F-C0E88E61ECED}
          LegacyId            #97
          ExtendedDataType    #Tax1099StateAmount
        ENDPROPERTIES
        
      FIELD #TaxAutogenerated
        ENUM
        PROPERTIES
          Name                #TaxAutogenerated
          Table               #PurchLine
          Origin              #{C3CFBF95-A7D4-4B61-8095-DBC6855C4A70}
          LegacyId            #43
          ExtendedDataType    #TaxAutoGenerated
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          HelpText            #@SYS21920
          Table               #PurchLine
          Origin              #{7BBE9B6B-8ED8-4E1E-88AD-17E3A5E0E961}
          LegacyId            #9
          ExtendedDataType    #TaxGroup
        ENDPROPERTIES
        
      FIELD #TaxItemGroup
        STRING
        PROPERTIES
          Name                #TaxItemGroup
          Table               #PurchLine
          Origin              #{F5050A2B-96C3-4E9C-B0F6-9F918CEE7971}
          LegacyId            #37
          ExtendedDataType    #TaxItemGroup
        ENDPROPERTIES
        
      FIELD #TaxServiceCode_BR
        STRING
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #PurchLine
          Origin              #{2A111F60-0154-1000-6BAE-1254F070F8F1}
          LegacyId            #8032
          ExtendedDataType    #TaxServiceCodeId_BR
        ENDPROPERTIES
        
      FIELD #TaxWithholdBaseCur_TH
        REAL
        PROPERTIES
          Name                #TaxWithholdBaseCur_TH
          Label               #@SYS314127
          HelpText            #@SYS314128
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE
          RelationContext     #Currency
          Origin              #{D6020EA7-0556-4240-9A52-214E83553FAA}
          LegacyId            #8019
          ExtendedDataType    #TaxWithholdBaseCur
        ENDPROPERTIES
        
      FIELD #TaxWithholdGroup_TH
        STRING
        PROPERTIES
          Name                #TaxWithholdGroup_TH
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE,BR
          IgnoreEDTRelation   #Yes
          Origin              #{3B3F11A0-03F7-4AE4-9095-47B6D9DDFBB4}
          LegacyId            #8021
          ExtendedDataType    #TaxWithholdGroup
        ENDPROPERTIES
        
      FIELD #TaxWithholdItemGroupHeading_TH
        INT64
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #PurchLine
          Origin              #{E25F8E18-7A63-4E52-A6D6-F1E0C47F8F7F}
          LegacyId            #249
          ExtendedDataType    #TaxWithholdItemGroupId_TH
        ENDPROPERTIES
        
      FIELD #TransactionCode
        STRING
        PROPERTIES
          Name                #TransactionCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9982CC42-D784-49DB-8C10-70BCCA5F349D}
          LegacyId            #38
          ExtendedDataType    #IntrastatTransactionCodeId
        ENDPROPERTIES
        
      FIELD #Transport
        STRING
        PROPERTIES
          Name                #Transport
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9076F7FD-6180-4081-BBC6-C2982E3F553F}
          LegacyId            #67
          ExtendedDataType    #IntrastatTransport
        ENDPROPERTIES
        
      FIELD #UnderDeliveryPct
        REAL
        PROPERTIES
          Name                #UnderDeliveryPct
          Table               #PurchLine
          Origin              #{5C5356A3-7C79-42EF-AA7B-BEE21F71526A}
          LegacyId            #44
          ExtendedDataType    #PurchUnderDeliveryPct
        ENDPROPERTIES
        
      FIELD #VariantId
        STRING
        PROPERTIES
          Name                #VariantId
          Table               #PurchLine
          Origin              #{FB80C492-5DC3-40F7-A35F-1360A75494AD}
          LegacyId            #16052
          ExtendedDataType    #RetailVariantId
        ENDPROPERTIES
        
      FIELD #VendAccount
        STRING
        PROPERTIES
          Name                #VendAccount
          Mandatory           #Yes
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9373BFB6-8383-4032-BEA6-EAA5CC422D80}
          LegacyId            #27
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          Label               #@SYS3815
          HelpText            #@SYS9253
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E8E621B3-E01E-4C13-8F62-FFE4893EF737}
          LegacyId            #26
          ExtendedDataType    #VendGroupId
        ENDPROPERTIES
        
      FIELD #WfDeliveryDueState
        ENUM
        PROPERTIES
          Name                #WfDeliveryDueState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2FF4AD74-4931-489D-BEB8-B7A6369B8BD7}
          LegacyId            #231
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WfInvReceivedState
        ENUM
        PROPERTIES
          Name                #WfInvReceivedState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{E7C0FFF0-C383-4F0B-A1EB-EE9E360A67DF}
          LegacyId            #230
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WorkflowState
        ENUM
        PROPERTIES
          Name                #WorkflowState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0D999E14-65FD-43F7-A9AD-8926840D6981}
          LegacyId            #198
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #VendAccount
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineNumber
          #PurchId
          #VendAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressReference
        PROPERTIES
          Name                #AddressReference
          Label               #@SYS88679
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressRefRecId
          #AddressRefTableId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Label               #@SYS184156
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingAgreementLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #RetailLineNumEx1
          #RetailPackageId
          #RBOPackageLineNum
          #RetailTempValueEx2
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Attention
        PROPERTIES
          Name                #Attention
          Label               #@SYS1593
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqAttention
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Barcode
        PROPERTIES
          Name                #Barcode
          Label               #@SYS24296
        ENDPROPERTIES
        
        GROUPFIELDS
          #BarCode
          #BarCodeType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Block
        PROPERTIES
          Name                #Block
          Label               #@SYS28075
        ENDPROPERTIES
        
        GROUPFIELDS
          #Blocked
          #Complete
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BOMRoute
        PROPERTIES
          Name                #BOMRoute
          Label               #@SYS22227
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRouteId
          #ItemBOMId
          #itemPBAId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Calculated
        PROPERTIES
          Name                #Calculated
          Label               #@SYS22050
        ENDPROPERTIES
        
        GROUPFIELDS
          #DiscPercent
          #DiscAmount
          #ConfirmedTaxAmount
          #ConfirmedTaxWriteCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CaseMoreInformation
        PROPERTIES
          Name                #CaseMoreInformation
          Label               #@SYS314356
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #OverDeliveryPct
          #UnderDeliveryPct
          #DeliveryDate
          #ConfirmedDlv
          #DeliveryType
          #LineDeliveryType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryAddress
        PROPERTIES
          Name                #DeliveryAddress
          Label               #@SYS7924
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryPostalAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryRef
        PROPERTIES
          Name                #DeliveryRef
          Label               #@SYS78577
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustPurchaseOrderFormNum
          #CustomerRef
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
          #AccountingDistributionTemplate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiotInformation_MX
        PROPERTIES
          Name                #DiotInformation_MX
          Label               #@SYS312478
        ENDPROPERTIES
        
        GROUPFIELDS
          #OperationType_MX
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS11829
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineDisc
          #LinePercent
          #MultiLnDisc
          #MultiLnPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DocumentPreview
        PROPERTIES
          Name                #DocumentPreview
          Label               #@SYS117648
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FiscalInformation_BR
        PROPERTIES
          Name                #FiscalInformation_BR
          Label               #@GLS56
        ENDPROPERTIES
        
        GROUPFIELDS
          #CFOPTable_BR
          #taxationOrigin_BR
          #taxFiscalClassification_BR
          #exceptionCode_BR
          #TaxServiceCode_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets
        PROPERTIES
          Name                #FixedAssets
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #CreateFixedAsset
          #AssetGroup
          #AssetId
          #AssetBookId
          #AssetTransTypePurch
          #DepreciationStartDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets_RU
        PROPERTIES
          Name                #FixedAssets_RU
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #AssetId
          #AssetTransTypePurch
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #StatTriangularDeal
          #CountyOrigDest
          #StatisticValue_LT
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #g1099Fields
        PROPERTIES
          Name                #g1099Fields
          Label               #@SYS24226
        ENDPROPERTIES
        
        GROUPFIELDS
          #Tax1099Fields
          #Tax1099Amount
          #Tax1099State
          #Tax1099StateAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GSTHSTTaxType_CA
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Label               #@SYS313827
        ENDPROPERTIES
        
        GROUPFIELDS
          #GSTHSTTaxType_CA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #LineNumber
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #interCompanyOriginDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReference
        PROPERTIES
          Name                #InterCompanyReference
          Label               #@SYS14018
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyInventTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReturn
        PROPERTIES
          Name                #InterCompanyReturn
          Label               #@SYS95177
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnDispositionCodeId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intrastat
        PROPERTIES
          Name                #Intrastat
          Label               #@SYS6530
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #CountyOrigDest
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Inventory
        PROPERTIES
          Name                #Inventory
          Label               #@SYS981
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventTransId
          #PdsCWQty
          #QtyOrdered
          #PdsCWRemainInventPhysical
          #RemainInventPhysical
          #PdsCWInventReceivedNow
          #InventReceivedNow
          #PdsCWRemainInventFinancial
          #RemainInventFinancial
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InvoiceMatching
        PROPERTIES
          Name                #InvoiceMatching
          Label               #@SYS113690
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingPolicy
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ItemReference
        PROPERTIES
          Name                #ItemReference
          Label               #@SYS24659
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRefType
          #InventRefId
          #InventRefTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MCRDropShip
        PROPERTIES
          Name                #MCRDropShip
          Label               #@MCR23774
        ENDPROPERTIES
        
        GROUPFIELDS
          #MCRDropShipStatus
          #MCRDropShipComment
          #MCRDropShipment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PayWhenPaid
        PROPERTIES
          Name                #PayWhenPaid
          Label               #@PSA3342
        ENDPROPERTIES
        
        GROUPFIELDS
          #IsPwp
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWInventory
        PROPERTIES
          Name                #PdsCWInventory
          Label               #@PDS83
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWInventReceivedNow
          #pdsCWInvoicedInTotal
          #PdsCWRemainInventFinancial
          #pdsCWReceivedInTotal
          #PdsCWRemainInventPhysical
          #pdsCWRegistered
          #pdsCWArrived
          #pdsCWOrdered
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWMain
        PROPERTIES
          Name                #PdsCWMain
          Label               #@PDS72
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWQty
          #pdsCWUnitId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PDSPotency
        PROPERTIES
          Name                #PDSPotency
          Label               #@PSC61
        ENDPROPERTIES
        
        GROUPFIELDS
          #PDSCalculationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlannedOrder
        PROPERTIES
          Name                #PlannedOrder
          Label               #@SYS8597
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqPOId
          #ReqPlanIdSched
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlanReference
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS152559
        ENDPROPERTIES
        
        GROUPFIELDS
          #PlanReference
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS5943
        ENDPROPERTIES
        
        GROUPFIELDS
          #LedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Price
        PROPERTIES
          Name                #Price
          Label               #@SYS11865
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchPrice
          #PurchMarkup
          #PriceUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectCostPrice
        PROPERTIES
          Name                #ProjectCostPrice
          Label               #@SYS13134
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchPrice
          #LineAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectIdentification
        PROPERTIES
          Name                #ProjectIdentification
          Label               #@SYS89920
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjId
          #ActivityNumber
          #ProjCategoryId
          #ItemId
          #ProjLinePropertyId
          #ProjWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesPrice
        PROPERTIES
          Name                #ProjectSalesPrice
          Label               #@SYS5755
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjSalesCurrencyId
          #ProjSalesUnitId
          #ProjSalesPrice
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesTax
        PROPERTIES
          Name                #ProjectSalesTax
          Label               #@SYS67871
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTaxGroupId
          #ProjTaxItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjTransaction
        PROPERTIES
          Name                #ProjTransaction
          Label               #@SYS15191
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSA
        PROPERTIES
          Name                #PSA
          Label               #@PSA43
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventInvoiceNow
          #ServiceAddress
          #Remainder
          #ServiceDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSARetainage
        PROPERTIES
          Name                #PSARetainage
          Label               #@PSA2704
        ENDPROPERTIES
        
        GROUPFIELDS
          #PSARetainScheduleId
          #PSATotalRetainAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseLines
        PROPERTIES
          Name                #PurchaseLines
          Label               #@SYS9664
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxAutogenerated
          #Name
          #ExternalItemId
          #PurchaseType
          #PurchStatus
          #CovRef
          #CurrencyCode
          #LineAmount
          #VendGroup
          #VendAccount
          #LineHeader
          #TaxWithholdBaseCur_TH
          #VariantId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseQuantity
        PROPERTIES
          Name                #PurchaseQuantity
          Label               #@SYS11187
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchReceivedNow
          #RemainPurchPhysical
          #RemainPurchFinancial
          #PurchUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchCommitmentLine_PSN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchLine
        PROPERTIES
          Name                #PurchLine
          Label               #@SYS22957
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProcurementCategory
          #Name
          #ExternalItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReq
        PROPERTIES
          Name                #PurchReq
          Label               #@SYS94925
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
          #getPurchReqItemName
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReqReference
        PROPERTIES
          Name                #PurchReqReference
          Label               #@SYS110285
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Requisitioner
        PROPERTIES
          Name                #Requisitioner
          Label               #@SYS108788
        ENDPROPERTIES
        
        GROUPFIELDS
          #Requester
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnedItem
        PROPERTIES
          Name                #ReturnedItem
          Label               #@SYS24700
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnActionId
          #Scrap
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RFIDTagging
        PROPERTIES
          Name                #RFIDTagging
          Label               #@SYS90171
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemTagging
          #CaseTagging
          #PalletTagging
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxItemGroup
          #TaxGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS25587
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchStatus
          #Blocked
          #Complete
          #WorkflowState
          #qualityOrderStatusDisplay
          #IsFinalized
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TableGroup
        PROPERTIES
          Name                #TableGroup
          Label               #@SYS21958
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TAMItemVendRebateGroup
        PROPERTIES
          Name                #TAMItemVendRebateGroup
          Label               #@PRO1317
        ENDPROPERTIES
        
        GROUPFIELDS
          #TAMItemVendRebateGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WithholdingTax
        PROPERTIES
          Name                #WithholdingTax
          Label               #@SYS7372
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxWithholdGroup_TH
          #TaxWithholdItemGroupHeading_TH
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #PurchLineIdx
      PROPERTIES
        Name                #PurchLineIdx
        AllowDuplicates     #No
        Origin              #{2B0C0001-0154-1000-F795-345DCC5E696E}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #LineNumber
      ENDINDEXFIELDS
      
      #TransIdIdx
      PROPERTIES
        Name                #TransIdIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B0A0003-0154-1000-E060-C58073496449}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #InventTransId
      ENDINDEXFIELDS
      
      #PurchStatusIdx
      PROPERTIES
        Name                #PurchStatusIdx
        Origin              #{2B0E0004-0154-1000-8C84-84B92C4DD873}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #PurchStatus
      ENDINDEXFIELDS
      
      #ItemIdx
      PROPERTIES
        Name                #ItemIdx
        AllowDuplicates     #No
        Origin              #{2B070005-0154-1000-4974-656D49647800}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #ItemId
        #RecId
      ENDINDEXFIELDS
      
      #StatusItemIdx
      PROPERTIES
        Name                #StatusItemIdx
        Origin              #{2B0D0006-0154-1000-FA60-CA376FD75B74}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchStatus
        #ItemId
      ENDINDEXFIELDS
      
      #AgreementLineIdx
      PROPERTIES
        Name                #AgreementLineIdx
        Origin              #{2B10001B-0154-1000-7D23-3315EA9E2768}
        LegacyId            #27
      ENDPROPERTIES
      
      INDEXFIELDS
        #MatchingAgreementLine
      ENDINDEXFIELDS
      
      #Tax1099FieldsIdx
      PROPERTIES
        Name                #Tax1099FieldsIdx
        Origin              #{2B10002C-0154-1000-6712-5A4CA88CFD3F}
        LegacyId            #44
      ENDPROPERTIES
      
      INDEXFIELDS
        #Tax1099Fields
      ENDINDEXFIELDS
      
      #SourceDocumentLine
      PROPERTIES
        Name                #SourceDocumentLine
        AllowDuplicates     #No
        AlternateKey        #Yes
        UniqueAcrossCompanies #Yes
        Origin              #{9B96AFD2-3293-4EEE-8651-F5674F97BCE6}
        LegacyId            #49
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #CFOPTable_BRIdx
      PROPERTIES
        Name                #CFOPTable_BRIdx
        Origin              #{2B0F1F55-0154-1000-EAB8-D71998205CD0}
        LegacyId            #8021
      ENDPROPERTIES
      
      INDEXFIELDS
        #CFOPTable_BR
      ENDINDEXFIELDS
      
      #RBOPackageIdx
      PROPERTIES
        Name                #RBOPackageIdx
        Origin              #{2B0D3E84-0154-1000-2FA5-7F125BC77D61}
        LegacyId            #16004
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #RetailPackageId
        #RBOPackageLineNum
      ENDINDEXFIELDS
      
      #PurchIdLineNumIdx
      PROPERTIES
        Name                #PurchIdLineNumIdx
        Origin              #{B95E4CA5-0331-49A2-9887-E03137E74AAD}
        LegacyId            #20001
      ENDPROPERTIES
      
      INDEXFIELDS
        #LineNumber
        #PurchId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AccountingDistributionTemplate
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #AccountingDistributionTemplate
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountingDistributionTemplate
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Table               #AgreementLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #AgreementLine
          Role                #AgreementLine_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MatchingAgreementLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBook
        PROPERTIES
          Name                #AssetBook
          Table               #AssetBook
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBookTable
        PROPERTIES
          Name                #AssetBookTable
          Table               #AssetBookTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetGroup
        PROPERTIES
          Name                #AssetGroup
          Table               #AssetGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetTable
        PROPERTIES
          Name                #AssetTable
          Table               #AssetTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BarcodeSetup
        PROPERTIES
          Name                #BarcodeSetup
          Table               #BarcodeSetup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BarCodeType
            RelatedField        #barcodeSetupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BOMTable
        PROPERTIES
          Name                #BOMTable
          Table               #BOMTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemBOMId
            RelatedField        #BOMId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CFOPTable_BR
        PROPERTIES
          Name                #CFOPTable_BR
          Table               #CFOPTable_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CFOPTable_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CountyOrigDest
        PROPERTIES
          Name                #CountyOrigDest
          Table               #LogisticsAddressCounty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CountyOrigDest
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountyOrigDest
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Currency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #VendCurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueSet
          Role                #DimensionAttributeValueSet_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DeliveryPostalAddress
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsPostalAddress
          Role                #LogisticsPostalAddress_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DeliveryPostalAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatPort
        PROPERTIES
          Name                #IntrastatPort
          Table               #IntrastatPort
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Port
            RelatedField        #PortId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatStatProc
        PROPERTIES
          Name                #IntrastatStatProc
          Table               #IntrastatStatProc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #StatProcId
            RelatedField        #StatProcId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransactionCode
        PROPERTIES
          Name                #IntrastatTransactionCode
          Table               #IntrastatTransactionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransactionCode
            RelatedField        #TransactionCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransportMode
        PROPERTIES
          Name                #IntrastatTransportMode
          Table               #IntrastatTransportMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Transport
            RelatedField        #TransPortCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDim
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventDimId
            RelatedField        #inventDimId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDimCombination
        PROPERTIES
          Name                #InventDimCombination
          Table               #InventDimCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #VariantId
            RelatedField        #RetailVariantId
            SourceEDT           #RetailVariantId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventItemBarcode
        PROPERTIES
          Name                #InventItemBarcode
          Table               #InventItemBarcode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BarCode
            RelatedField        #itemBarCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventJournalTableRef
        PROPERTIES
          Name                #InventJournalTableRef
          Table               #InventJournalTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #5
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #JournalId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTransOrigin
        PROPERTIES
          Name                #InventTransOrigin
          Table               #InventTransOrigin
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventTransId
            RelatedField        #InventTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerDimension
        PROPERTIES
          Name                #LedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueCombination
          Role                #DimensionAttributeValueCombination_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCROrderLine2PriceHistoryRef
        PROPERTIES
          Name                #MCROrderLine2PriceHistoryRef
          Table               #MCROrderLine2PriceHistoryRef
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MCROrderLine2PriceHistoryRef
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRSalesLineRef
        PROPERTIES
          Name                #MCRSalesLineRef
          Table               #SalesLine
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefTransId
            RelatedField        #InventTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PBATable
        PROPERTIES
          Name                #PBATable
          Table               #PBATable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #itemPBAId
            RelatedField        #PBAId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PlanReference
        PROPERTIES
          Name                #PlanReference
          Table               #PlanReference
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PlanReference
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId1
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId1
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy
          Role                #PriceDiscChangePolicy_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SystemEntryChangePolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId2
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId2
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy_1
          Role                #PriceDiscChangePolicy_1_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ManualEntryChangepolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProcurementCategory
        PROPERTIES
          Name                #ProcurementCategory
          Table               #EcoResCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #EcoResCategory
          Role                #EcoResCategory_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProcurementCategory
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdLineRef
        PROPERTIES
          Name                #ProdLineRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdLine
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #4
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdTableRef
        PROPERTIES
          Name                #ProdTableRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdTable
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #3
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjCategory
        PROPERTIES
          Name                #ProjCategory
          Table               #ProjCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjCategoryId
            RelatedField        #CategoryId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectSalesCurrency
        PROPERTIES
          Name                #ProjectSalesCurrency
          Table               #Currency
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectSalesCurrency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjSalesCurrencyId
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxGroupHeading
        PROPERTIES
          Name                #ProjectTaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxGroupId
            RelatedField        #TaxGroup
            SourceEDT           #ProjTaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxItemGroupHeading
        PROPERTIES
          Name                #ProjectTaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxItemGroupId
            RelatedField        #TaxItemGroup
            SourceEDT           #ProjTaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjItemTrans
        PROPERTIES
          Name                #ProjItemTrans
          Table               #ProjItemTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTransId
            RelatedField        #ProjTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjLineProperty
        PROPERTIES
          Name                #ProjLineProperty
          Table               #ProjLineProperty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjLinePropertyId
            RelatedField        #LinePropertyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjSalesUnitId
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjSalesUnitId
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ProjSalesUnitId
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjTable
        PROPERTIES
          Name                #ProjTable
          Table               #ProjTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjId
            RelatedField        #ProjId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjWorker
        PROPERTIES
          Name                #ProjWorker
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #ProjWorker
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjWorker
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PSAVendorRetentionTermsTable
        PROPERTIES
          Name                #PSAVendorRetentionTermsTable
          Table               #PSAVendorRetentionTermsTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PSARetainScheduleId
            RelatedField        #VendorRetentionTermId
            SourceEDT           #PSAPurchRetainScheduleId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Table               #PurchCommitmentLine_PSN
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchCommitmentLine_PSN
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchCommitmentLine_PSN
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqLine
        PROPERTIES
          Name                #PurchReqLine
          Table               #PurchReqLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchReqLineRefId
            RelatedField        #LineRefId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqTable
        PROPERTIES
          Name                #PurchReqTable
          Table               #PurchReqTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchReqId
            RelatedField        #PurchReqId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReturnActionDefaults
        PROPERTIES
          Name                #PurchReturnActionDefaults
          Table               #ReturnActionDefaults
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchReturnActionDefaults
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ReturnActionId
            RelatedField        #ReturnActionId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #ReturnActionDefaults
            RelatedField        #Module
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchUnit
        PROPERTIES
          Name                #PurchUnit
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchUnit
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchUnit
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReqPlanSched
        PROPERTIES
          Name                #ReqPlanSched
          Table               #ReqPlanSched
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReqPlanIdSched
            RelatedField        #ReqPlanIdSched
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Requester_FK
        PROPERTIES
          Name                #Requester_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Requester
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RetailPackageTable
        PROPERTIES
          Name                #RetailPackageTable
          Table               #RetailPackageTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RetailPackageId
            RelatedField        #PackageId
            SourceEDT           #RetailPackageId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReturnDispositionCode
        PROPERTIES
          Name                #ReturnDispositionCode
          Table               #ReturnDispositionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReturnDispositionCodeId
            RelatedField        #DispositionCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RouteTable
        PROPERTIES
          Name                #RouteTable
          Table               #RouteTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemRouteId
            RelatedField        #RouteId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTableRef
        PROPERTIES
          Name                #SalesTableRef
          Table               #SalesTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #SalesId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmActivities
        PROPERTIES
          Name                #smmActivities
          Table               #smmActivities
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ActivityNumber
            RelatedField        #ActivityNumber
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #State
        PROPERTIES
          Name                #State
          Table               #LogisticsAddressState
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099State
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TAMItemVendRebateGroup
        PROPERTIES
          Name                #TAMItemVendRebateGroup
          Table               #TAMItemVendRebateGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TAMItemVendRebateGroupId
            RelatedField        #ItemVendRebateGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099BoxDetail
        PROPERTIES
          Name                #Tax1099BoxDetail
          Table               #Tax1099BoxDetail
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099BoxDetail
          Role                #Tax1099BoxDetail_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099RecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099Fields
        PROPERTIES
          Name                #Tax1099Fields
          Table               #Tax1099Fields
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099Fields
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Tax1099Fields
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
            SourceEDT           #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxItemGroupHeading
        PROPERTIES
          Name                #TaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxItemGroup
            RelatedField        #TaxItemGroup
            SourceEDT           #TaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxServiceCode_BR
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #TaxServiceCode_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchLine_TaxServiceCode_BR
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TaxServiceCode_BR
            RelatedField        #ServiceCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdGroupHeading
        PROPERTIES
          Name                #TaxWithholdGroupHeading
          Table               #TaxWithholdGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdGroup_TH
            RelatedField        #TaxWithholdGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdItemGroupHeading_TH
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #TaxWithholdItemGroupHeading_TH
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxWithholdItemGroupHeading_TH
          Role                #TaxWithholdItemGroupHeading_TH_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdItemGroupHeading_TH
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendAccount
            RelatedField        #AccountNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #MCROrderLine2PriceHistoryRef
      PROPERTIES
        Table               #MCROrderLine2PriceHistoryRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #TMSApportionedValue(PurchLine)
      PROPERTIES
        Table               #TMSApportionedValue
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WHSLoadLine
      PROPERTIES
        Table               #WHSLoadLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PDSAdvancedPriceInfo(PurchLine)
      PROPERTIES
        Table               #PDSAdvancedPriceInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchRFQReplyLinePurchLine(PurchLine)
      PROPERTIES
        Table               #PurchRFQReplyLinePurchLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #ProjCreditNoteSource(PurchLine)
      PROPERTIES
        Table               #ProjCreditNoteSource
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_Intrastat(PurchLine)
      PROPERTIES
        Table               #PurchLine_Intrastat
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_IN(PurchLine)
      PROPERTIES
        Table               #PurchLine_IN
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_W(PurchLine)
      PROPERTIES
        Table               #PurchLine_W
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustomsExportOrderTable_IN
      PROPERTIES
        Table               #CustomsExportOrderTable_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustomsImportAssessableValue_IN
      PROPERTIES
        Table               #CustomsImportAssessableValue_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EximPurchLine_IN
      PROPERTIES
        Table               #EximPurchLine_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PdsVendBatchInfo(PurchLine)
      PROPERTIES
        Table               #PdsVendBatchInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WHSPurchLine(PurchLine)
      PROPERTIES
        Table               #WHSPurchLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #AgreementLineReleasedLine(PurchLine)
      PROPERTIES
        Table               #AgreementLineReleasedLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustVendCreditInvoicingLine
      PROPERTIES
        Table               #CustVendCreditInvoicingLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EMSPurchOrderFlowRelation(PurchLine)
      PROPERTIES
        Table               #EMSPurchOrderFlowRelation
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #KanbanJobPurchaseLine(PurchLine)
      PROPERTIES
        Table               #KanbanJobPurchaseLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineForeignTradeCategory
      PROPERTIES
        Table               #PurchLineForeignTradeCategory
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineOrigin(PurchLine)
      PROPERTIES
        Table               #PurchLineOrigin
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #accountItemExtendParm_CN
        #/// <summary>
        #/// Retrieves a posting account for the purchase order line with site.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting account number for the account type for the purchase order line.
        #/// </returns>
        #LedgerDimensionDefaultAccount accountItemExtendParm_CN(InventAccountType _inventAccountType)
        #{
        #    return InventPosting::accountItemExtendParm_CN(
        #            _inventAccountType,
        #            InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #            this.ItemId,
        #            this.inventTable().itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup);
        #
        #}
      ENDSOURCE
      SOURCE #accountReceipt
        #/// <summary>
        #/// Change which account is returened when getting the ledger account so that all the fixed asset
        #/// transactions will use PurchReceiptFA account instead of the PurchReceipt account.
        #/// </summary>
        #/// <returns>
        #/// LedgerAccount for the receipt transaction
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerAccount accountReceipt()
        #{
        #    LedgerAccount                   ledgerAccount;
        #    LedgerDimensionDefaultAccount   ledgerDimension;
        #
        #    if (this.LedgerDimension && InventMovement::construct(this).mustBeBookedBalanceSheet())
        #    {
        #        ledgerDimension = this.LedgerDimension;
        #        ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(this.LedgerDimension);
        #    }
        #    else
        #    {
        #        if (this.AssetId)
        #        {
        #            ledgerDimension = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                                                                  InventAccountType::PurchReceipt,
        #                                                                                  this.ItemId,
        #                                                                                  this.inventTable().itemGroupId(),
        #                                                                                  0,                                           //V6 itemCategory
        #                                                                                  this.VendAccount,
        #                                                                                  this.VendGroup,
        #                                                                                  this.TaxGroup);
        #            ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(ledgerDimension);
        #        }
        #        else
        #        {
        #            ledgerDimension = InventPosting::accountItemLedgerDimension(InventAccountType::PurchReceipt,
        #                                                                        this.ItemId,
        #                                                                        this.inventTable().itemGroupId(),
        #                                                                        0,                                                      //V6 itemCategory
        #                                                                        this.VendAccount,
        #                                                                        this.VendGroup,
        #                                                                        this.TaxGroup);
        #            ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(ledgerDimension);
        #        }
        #    }
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #agreementSkipAutoLink
        #/// <summary>
        #/// Check whether this line should skip automatic <c>AgreementLine</c> matching
        #/// </summary>
        #/// <returns>
        #/// True if no automatic matching should be done for this line
        #/// </returns>
        #/// <remarks>
        #/// For delivery lines auto-linking should be allways skipped,
        #/// so this method always returns true for delivery lines.
        #/// </remarks>
        #public boolean agreementSkipAutoLink()
        #{
        #    return (this.AgreementSkipAutoLink || this.LineDeliveryType == LineDeliveryType::DeliveryLine);
        #}
      ENDSOURCE
      SOURCE #allowEditReturnActionId
        #boolean  allowEditReturnActionId()
        #{
        #    return this.type().allowEditReturnActionId();
        #}
      ENDSOURCE
      SOURCE #allowEditScrap
        #boolean  allowEditScrap()
        #{
        #    return this.type().allowEditScrap() && this.isStocked();
        #}
      ENDSOURCE
      SOURCE #allowEditStockedProduct
        #/// <summary>
        #/// Determines whether the <c>StockedProduct</c> field can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the line is item based, the item is of type item, not a fixed asset,
        #/// and the line has not been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #boolean allowEditStockedProduct()
        #{
        #    return this.ItemId
        #        && !this.isPackingSlipOrInvoiceUpdated()
        #        && this.AssetId == ''
        #        && !this.CreateFixedAsset
        #        && this.inventTable().ItemType == ItemType::Item;
        #}
      ENDSOURCE
      SOURCE #allowEditTax1099
        #boolean allowEditTax1099()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchStatus == PurchStatus::Invoiced)
        #    {
        #        ok = false;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #allowInventProfileIdChange_RU
        #/// <summary>
        #/// Determines if InventProfileId_RU inventory dimension could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if InventProfileId_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowInventProfileIdChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced   ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                     ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(InventDim), fieldNum(InventDim, InventProfileId_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowPostingProfileChange_RU
        #/// <summary>
        #/// Determines if PostingProfile_RU field value could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if PostingProfile_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowPostingProfileChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                    ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(PurchLine_W), fieldNum(PurchLine_W, PostingProfile_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowUpdateWithQualityOrder
        #/// <summary>
        #/// Specifies whether the update of the purchase line is enabled, even if an open quality order exists.
        #/// </summary>
        #/// <returns>
        #/// true if the update is enabled; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Normally an update is not enabled, but if the invoice posting fails, a pending invoice is saved and
        #/// the remaining quantity is reset.
        #/// </remarks>
        #boolean allowUpdateWithQualityOrder()
        #{
        #    PurchLine   purchLine_orig;
        #
        #    if (!InventParameters::find().UseQualityManagement)
        #    {
        #        // Not using quality management for this company
        #        return true;
        #    }
        #
        #    if (this.qualityOrderStatusDisplay() != InventTestOrderStatusDisplay::Open)
        #    {
        #        // No open quality order exists
        #        return true;
        #    }
        #    purchLine_orig = this.orig().data();
        #
        #    // Changing the following fields is allowed so make those equal before comparing
        #    purchLine_orig.PurchReceivedNow    = this.PurchReceivedNow;
        #    purchLine_orig.InventReceivedNow   = this.InventReceivedNow;
        #
        #    if (this.PackedExtensions               != conNull()
        #        || purchLine_orig.PackedExtensions  != conNull())
        #    {
        #        return this.SysExtensionSerializerMap::equal(purchLine_orig);
        #    }
        #
        #    return this.equal(purchLine_orig);
        #}
      ENDSOURCE
      SOURCE #amountCur
        #AmountCur amountCur(AmountMST               amountMST,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #{
        #    return this.SalesPurchLine::amountCur(amountMST, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #amountExclTax
        #AmountCur amountExclTax(AmountCur amountCur, Qty  qty, TransDate transDate, Tax _tax = null)
        #{
        #    return this.SalesPurchLine::amountExclTax(amountCur, qty, transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #amountMST
        #AmountMST amountMST(AmountCur               amountCur,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::amountMST(amountCur, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #arrived
        #//BP Deviation Documented
        #display InventQtyArrived arrived()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #arrivedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyArrived arrivedInPurchUnit()
        #{
        #    PurchQtyArrived purchQtyArrived = this.arrived();
        #
        #    if (!purchQtyArrived)
        #    {
        #        return 0;
        #    }
        #
        #    return this.unitConvertInvent2Purch(purchQtyArrived);
        #}
      ENDSOURCE
      SOURCE #assessableValue_IN
        #/// <summary>
        #/// This method is used get the assessable value.
        #/// </summary>
        #public void assessableValue_IN()
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN;
        #
        #    purchLine_IN = this.purchLine_IN();
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #            purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #        }
        #        else
        #        {
        #            value                   = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges          = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #            purchLine_IN.AssessableValue_IN = this.LineAmount + value + landingCharges;
        #        }
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #assetLedgerDimension
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger dimension so that all fixed asset
        #/// transactions will use the <c>PurchRecieptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// A <c>LedgerDimensionDefaultAccount</c> value.
        #/// </returns>
        #private LedgerDimensionDefaultAccount assetLedgerDimension()
        #{
        #    AssetTransType  assetTransType;
        #    AssetBook       assetBook;
        #
        #    assetBook = AssetBook::find(this.AssetId, this.AssetBookId);
        #    assetTransType = AssetPost::assetTransTypePurch2AssetTransType(this.AssetTransTypePurch);
        #
        #    return AssetLedgerAccounts::assetLedgerDimension(this.AssetId, this.AssetBookId, assetTransType,
        #                        assetBook.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #assetUpdateInventTrans
        #void assetUpdateInventTrans()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        AssetInventTrans::changeAssetId(
        #            InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId),
        #            this.orig().AssetId,
        #            this.AssetId,
        #            this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #associateWithAgreementLine
        #/// <summary>
        #/// Associates the purchase line with the agreement line.
        #/// </summary>
        #[SysObsoleteAttribute('There is no longer a need to create agreement link manually. Agreement link is created or deleted whenever purchase order line is created, updated or deleted based on MatchingAgreementLine value on PurchLine.', true)]
        #server public void associateWithAgreementLine()
        #{
        #    throw error(Error::wrongUseOfFunction(funcName()));
        #}
      ENDSOURCE
      SOURCE #calcGrossAmount
        #AmountCur calcGrossAmount(Qty qty   = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcGrossAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcGrossAmountExclTax
        #AmountCur  calcGrossAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcGrossAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmount
        #AmountCur  calcLineAmount(Qty  qty = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountExclTax
        #AmountCur  calcLineAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForced
        #AmountCur calcLineAmountForced(Qty _qty = this.PurchQty, PriceDiscPolicyCheckPolicy  _checkPolicy=null)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmountForced(_qty, _checkPolicy);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForcedInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity used for calculating the line amount.
        #/// </param>
        #/// <param name="_recalcValidLink">
        #/// A Boolean value that indicates whether to calculate line amount if the agreement link is valid; optional.
        #/// </param>
        #/// <returns>
        #/// The line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when there is a need for the option to dissociate agreement line via prompt if changes will make the existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountForcedInteraction(
        #    FieldId _fieldId,
        #    Qty     _qty             = this.PurchQty,
        #    boolean _recalcValidLink = true)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkRefreshed = true;
        #
        #    AmountCur   localOrigLineAmount  = this.LineAmount; //This variable is needed for the uncommitted scenario as <>.orig.LineAmont returns the db value.
        #
        #
        #    if (_recalcValidLink && this.purchTable().MatchingAgreement)
        #    {
        #        //The impact on line amount should be included in the agreement link validation.
        #        this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #        isAgreementLinkRefreshed = this.refreshAgreementLink();
        #
        #        this.LineAmount      = localOrigLineAmount;
        #    }
        #
        #    if (!isAgreementLinkRefreshed)
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmountForced(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (_fieldId)
        #                {
        #                    this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #                }
        #
        #                if (this.ManualEntryChangepolicy
        #                    && this.SystemEntryChangePolicy)
        #                {
        #                    this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #                }
        #
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmountForced(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = _recalcValidLink ? this.calcLineAmountForced(_qty) : this.LineAmount;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInclTax_RU
        #AmountCur calcLineAmountInclTax_RU(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet())
        #{
        #    return this.SalesPurchLine::calcLineAmountInclTax_RU(qty, this.taxDate(transDate));
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes
        #/// invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity to calculate line amount for.
        #/// </param>
        #/// <returns>
        #/// The calculated line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when you need the option to dissociate an agreement line via prompt if changes will make the
        #/// existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountInteraction(FieldId _fieldId, Qty _qty = this.PurchQty)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #
        #    if (this.RecId && this.purchTable().MatchingAgreement && !this.refreshAgreementLink())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmount(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmount(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = this.calcLineAmount(_qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineDisc
        #DiscAmount  calcLineDisc(Qty    qty   = this.PurchQty)
        #{
        #    return this.SalesPurchLine::calcLineDisc(qty);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscExclTax
        #DiscAmount  calcLineDiscExclTax(Qty qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineDiscExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscUnit
        #//BP Deviation Documented
        #display DiscAmount calcLineDiscUnit()
        #{
        #    if (this.PurchQty)
        #    {
        #        return this.calcLineDisc() / this.PurchQty * this.PriceUnit;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #calcPendingLineAmounts
        #/// <summary>
        #/// Calculates a sum of the <c>LineAmount</c> values that are in transaction and company currency for
        #/// all pending invoice lines that are connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_excludeTableRefId">
        #/// A <c>TableRefId</c> value for which to exclude invoices; optional.
        #/// </param>
        #/// <returns>
        #/// A container with the sum of the <c>LineAmount</c> values and the <c>LineAmount</c> values in the
        #/// default currency.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation. The exchange rate from
        #/// the <c>VendInvoiceInfoTable</c> table is used if populated; otherwise, the exchange rate is
        #/// retrieved.
        #/// </remarks>
        #public server container calcPendingLineAmounts(TradeLineRefId _excludeTableRefId = '')
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    container               lineAmounts;
        #    LineAmount              lineAmount, lineAmountMST;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #
        #    while select * from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #            (!_excludeTableRefId || vendInvoiceInfoLine.TableRefId != _excludeTableRefId)
        #        join * from vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // avoid double counting when saved document is active
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != ''
        #
        #    {
        #        lineAmount += vendInvoiceInfoLine.LineAmount;
        #        lineAmountMST += vendInvoiceInfoLine.lineAmountMST(vendInvoiceInfoTable.updateDate(), vendInvoiceInfoTable.ExchRate,
        #            vendInvoiceInfoTable.ExchRateSecondary, Currency::noYes2UnknownNoYes(vendInvoiceInfoTable.euroTriangulation));
        #    }
        #
        #    lineAmounts = [lineAmount,lineAmountMST];
        #    return lineAmounts;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for invoice lines that are connected to this
        #/// record in the <c>PurchLine</c> table that are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that indicates whether only pending invoice lines are considered connected;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingMatchedQtyInvent(boolean _pendingOnly = true)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(InventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyPurch
        #/// <summary>
        #/// Calculates the sum of the <c>ReceiveNow</c> quantity for invoice lines that are connected to this
        #/// <c>PurchLine</c> table record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that specifies whether only pending invoice lines are considered connected.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #/// A Boolean value which determines whether to consider only sub lines without a relationship to a
        #/// packing slip.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PurchQty calcPendingMatchedQtyPurch(boolean _pendingOnly = true, boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(ReceiveNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingQtyInvent()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(InventNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public server PurchQty calcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(ReceiveNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurchDisplay
        #/// <summary>
        #/// Retrieves the sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> table and the <c>VendInvoiceInfoLine</c> table are used
        #/// in the calculation.
        #/// </remarks>
        #//BP Deviation Documented
        #public display UnpostedInvoicePurchQty calcPendingQtyPurchDisplay()
        #{
        #    return this.calcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #calcPrice2LineAmount
        #AmountCur  calcPrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation)
        #{
        #    return this.SalesPurchLine::calcPrice2LineAmount(_qty, _forceLineAmountCalculation);
        #}
      ENDSOURCE
      SOURCE #calcPriceFromAmount
        #void  calcPriceFromAmount()
        #{
        #    this.SalesPurchLine::calcPriceFromAmount();
        #}
      ENDSOURCE
      SOURCE #calcProjSalesPriceIfDefault
        #private AmountCur calcProjSalesPriceIfDefault()
        #{
        #    return this.PurchQty != 0 ? (this.LineAmount / this.PurchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #calcQtyOrdered
        #InventQty   calcQtyOrdered(Qty    purchQty = this.PurchQty)
        #{
        #    return this.isStocked() ? this.SalesPurchLine::calcQtyOrdered(purchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #canAgreementBeLinked
        #/// <summary>
        #/// Determines whether the purchase line can be linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order line can be linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean canAgreementBeLinked()
        #{
        #    return this.type().canAgreementBeLinked();
        #}
      ENDSOURCE
      SOURCE #canApplyAllocationOrDistributionTemplate
        #/// <summary>
        #/// Indicates whether to use an allocation or distribution template to create the distributions of the
        #/// transaction line.
        #/// </summary>
        #/// <returns>
        #/// true if the distribution template will be used; otherwise, false.
        #/// </returns>
        #public boolean canApplyAllocationOrDistributionTemplate()
        #{
        #    boolean projMultipleFundingSources = false;
        #
        #    projMultipleFundingSources = (this.ProjId && ProjInvoiceTable::hasMultipleFundingSources(ProjTable::projInvoiceStatic(this.ProjId).ProjInvoiceProjId));
        #
        #    if (!this.hasAssetAssociated() && !this.isStocked() && !(projMultipleFundingSources) && !this.isInvoiceMatched())
        #    {
        #        return true;
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #canAutoUpdatePurchLine
        #/// <summary>
        #/// Indicates whether the table buffer is restricted by the change management functionality.
        #/// </summary>
        #/// <returns>
        #/// true if the buffer can be updated; otherwise, false.
        #/// </returns>
        #public boolean canAutoUpdatePurchLine()
        #{
        #    return !this.purchTable().ChangeRequestRequired;
        #}
      ENDSOURCE
      SOURCE #canEditDisc
        #// This method is called when setting disc fields
        #boolean canEditDisc()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canEditLedgerDimensionDefaultAccount
        #/// <summary>
        #/// Determines if the ledger dimension default account can be edited.
        #/// </summary>
        #/// <returns>
        #/// True if the ledger dimension default account is editable; otherwise false.
        #/// </returns>
        #public boolean canEditLedgerDimensionDefaultAccount()
        #{
        #    boolean             canEditLedgerDimensionDefaultAccount;
        #    #isoCountryRegionCodes
        #
        #    if (this.isStocked()            == false
        #        && this.ProjId              == ''
        #        && this.AssetGroup          == ''
        #        && this.AssetId             == ''
        #        && this.isSubcontracted()   == false
        #        && (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #            || !this.purchLine_W().MarkupCode_RU)
        #    )
        #    {
        #        canEditLedgerDimensionDefaultAccount = true;
        #    }
        #    else
        #    {
        #        canEditLedgerDimensionDefaultAccount = false;
        #    }
        #
        #    return canEditLedgerDimensionDefaultAccount;
        #}
      ENDSOURCE
      SOURCE #canFinalize
        #/// <summary>
        #///    Determines if the purchase order line can be finalized.
        #/// </summary>
        #/// <param name="_checkHeader">
        #///    Check header status.
        #/// </param>
        #/// <returns>
        #///    true if the the purchase order line can be finalized; otherwise, false.
        #/// </returns>
        #public boolean canFinalize(boolean _checkHeader = true)
        #{
        #    boolean lineCanFinalize = ( this.PurchStatus == PurchStatus::Invoiced
        #                                ||  this.PurchStatus == PurchStatus::Canceled
        #                                ||  this.IsDeleted == NoYes::Yes)
        #                                && this.IsFinalized == NoYes::No;
        #
        #    if (_checkHeader)
        #    {
        #        lineCanFinalize = lineCanFinalize
        #                            && this.purchTable().DocumentState == VersioningDocumentState::Confirmed;
        #    }
        #
        #    return lineCanFinalize;
        #}
        #
      ENDSOURCE
      SOURCE #canSubmitToWorkflow
        #/// <summary>
        #///     This method are testing if the current <c>PurchLine</c> can be submitted to workflow.
        #/// </summary>
        #/// <param name="workflowType">Workflow type</param>
        #/// <returns>
        #///     Returns true if the current record can be submitted to workflow, otherwise false.
        #/// </returns>
        #public boolean  canSubmitToWorkflow(str workflowType = '')
        #{
        #    boolean     canSubmit = false;
        #
        #    if (this.RecId
        #    &&  this.WorkflowState  == TradeWorkflowState::NotSubmitted)
        #    {
        #        canSubmit = true;
        #    }
        #
        #    return canSubmit;
        #}
      ENDSOURCE
      SOURCE #caption
        #public str caption()
        #{
        #    return strFmt("%1: %2, %3, %4",
        #        "@SYS15812", this.PurchId,
        #        strFmt("@SYS343102", this.LineNumber),
        #        this.ItemId);
        #}
      ENDSOURCE
      SOURCE #checkActivity
        #boolean checkActivity()
        #{
        #    RecId                       projRecId;
        #
        #    if (this.ActivityNumber)
        #    {
        #        if (!ProjActivity::find(this.ActivityNumber))
        #        {
        #            return checkFailed(strFmt("@SYS50966",this.ActivityNumber));
        #        }
        #
        #        //validate activity is associated to Project
        #        projRecId = ProjTable::find(this.ProjId).RecId;
        #        if (smmActivityParentLinkTable::find(this.ActivityNumber, smmActivityParentType::Project, projRecId).RecId == 0)
        #        {
        #            return checkFailed(strFmt("@SYS105858",this.ActivityNumber, this.ProjId));
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAndPromptFixedLineAmount
        #boolean checkAndPromptFixedLineAmount()
        #{
        #    return this.PriceDiscLine::checkAndPromptFixedLineAmount();
        #}
      ENDSOURCE
      SOURCE #checkAssetBookId
        #boolean checkAssetBookId()
        #{
        #    boolean ret  = true;
        #
        #    // check that AssetId is always set for current AssetBookId
        #    if (this.AssetBookId && !this.AssetId)
        #    {
        #        ret = ret && checkFailed(strFmt("@SYS71114",this.AssetId,this.AssetBookId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkCFOP_BR
        #/// <summary>
        #/// It validates if CFOP is present in CFOPMatrix with the correct attributes
        #/// (Operation ID, Transaction Type, Direction and Location)
        #/// </summary>
        #/// <returns>
        #/// It returns true if it is valid.
        #/// </returns>
        #public boolean checkCFOP_BR()
        #{
        #    boolean                     ok = true;
        #
        #    if (!this.cfopTable_BR
        #        && (this.purchTable().PurchaseType != PurchaseType::Journal)
        #        && this.inventTable().ItemType == ItemType::Item)
        #    {
        #        ok = checkFailed(strFmt("@SYS26332", fieldPName(CFOPTable_BR, cfopId)));
        #    }
        #
        #    if (this.cfopTable_BR)
        #    {
        #        ok = ok && CFOPValidation_BR::validateOnServer(this);
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkCommitmentVendorMatchesOrderAccount
        #/// <summary>
        #/// Validates that the order account for the current purchase order header matches the vendor account
        #/// on the commitment related to the current purchase order line, if the commitment has a vendor account specified.
        #/// </summary>
        #/// <param name="_newOrderAccount">
        #/// The account number that should be validated against.  If no value is specied then it will be retrieved from the purchase order header.
        #/// </param>
        #/// <returns>
        #/// true if the vendor account on the related commitment is blank or matches the order account on the purchase order header; otherwise, false.
        #/// </returns>
        #public boolean checkCommitmentVendorMatchesOrderAccount(VendAccount _newOrderAccount = '')
        #{
        #    PurchCommitmentHeader_PSN       purchCommitmentHeader;
        #    VendAccount                     orderAccount;
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        purchCommitmentHeader = this.getPurchCommitmentLine_PSN().getPurchCommitmentHeader_PSN();
        #
        #        // If the _newOrderAccount is specified, then we want to use that value, otherwise we retrieve it from the header table.
        #        if (_newOrderAccount != '')
        #        {
        #            orderAccount = _newOrderAccount;
        #        }
        #        else
        #        {
        #            orderAccount = this.purchTable().OrderAccount;
        #        }
        #
        #        // Verify that the order account on the PO matches the vendor account on the commitment.
        #        if (purchCommitmentHeader.VendorAccount != ''
        #            && orderAccount != purchCommitmentHeader.VendorAccount)
        #        {
        #            return false;
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCrossdocking
        #/// <summary>
        #///   Checks whether the relevant cross docking quantity exceeds the ordered quantity.
        #/// </summary>
        #void checkCrossdocking()
        #{
        #    RetailBuyersPushLine   buyersPushLine;
        #
        #    select firstonly buyersPushLine
        #    where buyersPushLine.RefRecId == this.RecId;
        #
        #    if (buyersPushLine && (buyersPushLine.totalQty() > this.PurchQty))
        #    {
        #        info(strFmt("@RET820",this.PurchId));
        #    }
        #}
      ENDSOURCE
      SOURCE #checkCurrencyCode
        #boolean  checkCurrencyCode()
        #{
        #    boolean  ok = true;
        #
        #    if (! Currency::exist(this.CurrencyCode))
        #    {
        #        ok = checkFailed(strFmt("@SYS1458", this.CurrencyCode));
        #    }
        #
        #    if (this.purchTable().CurrencyCode   != this.CurrencyCode)
        #    {
        #        ok = checkFailed("@SYS20793");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomerRef
        #boolean  checkCustomerRef()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId             == this.PurchId
        #           && purchLine.DeliveryPostalAddress == this.DeliveryPostalAddress
        #           && purchLine.CustomerRef         != this.CustomerRef
        #           && purchLine.RecId               != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomsTariffCode_IN
        #/// <summary>
        #/// Checks the customs tariff code to see if it is valid.
        #/// </summary>
        #/// <param name="_customsTariffCodeTableRecId">
        #/// The customs tariff code table rec id; optional.
        #/// </param>
        #/// <returns>
        #/// Returns true if the customs tariff code is valid.
        #/// </returns>
        #public boolean checkCustomsTariffCode_IN(RefRecId  _customsTariffCodeTableRecId = this.purchLine_IN().CustomsTariffCodeTable_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkCustomsTariffCode(_customsTariffCodeTableRecId, Direction_IN::Import);
        #}
      ENDSOURCE
      SOURCE #checkCustPurchaseOrderFormNum
        #boolean  checkCustPurchaseOrderFormNum()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId                     == this.PurchId
        #           && purchLine.DeliveryPostalAddress       == this.DeliveryPostalAddress
        #           && purchLine.CustPurchaseOrderFormNum    != this.CustPurchaseOrderFormNum
        #           && purchLine.RecId                       != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkDelete
        #boolean checkDelete(boolean _useWarning = true, PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).checkDelete(_useWarning);
        #}
      ENDSOURCE
      SOURCE #checkFullyDistributedAndQualified
        #/// <summary>
        #/// Checks if the purchase order line is fully distributed and fully qualified.
        #/// </summary>
        #/// <param name="_caller">
        #/// The calling source document processor.
        #/// </param>
        #/// <param name="_user">
        #/// The user that submitted the source document implementation for processing; optional.
        #/// </param>
        #/// <returns>
        #/// true if the purchase order line is fully distributed and qualified; otherwise, false.
        #/// </returns>
        #boolean checkFullyDistributedAndQualified(
        #    SourceDocumentProcessorCaller           _caller = null,
        #    UserId                                  _user = curUserId()
        #    )
        #{
        #    SourceDocumentLine  sourceDocumentLine = this.sourceDocumentLine();
        #
        #    if (sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Draft
        #        || sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::PartlyDistributed)
        #    {
        #        // Make sure the line is fully distributed
        #        SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(
        #            this, true, SourceDocumentLineAccountingStatus::FullyDistributed, _caller, _user);
        #    }
        #
        #    // Check that line distributions are fully qualified.
        #    return SourceDocumentProvider::areSourceDocLineAccDistAccountValid(
        #        SourceDocumentLine::find(this.SourceDocumentLine), true, true);
        #}
      ENDSOURCE
      SOURCE #checkIfInvoiceRegistered_IN
        #/// <summary>
        #/// Checks if the invoice is registered.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the invoice is registered.
        #/// </returns>
        #public boolean checkIfInvoiceRegistered_IN()
        #{
        #    boolean ok = true;
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #        && CustomsInvoiceRegnTrans_IN::findByPurchLineRecId(this.RecId).RecId != 0)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkInitFromInventTable
        #boolean  checkInitFromInventTable(InventTable inventTable)
        #{
        #    return this.SalesPurchLine::checkInitFromInventTable(inventTable);
        #}
      ENDSOURCE
      SOURCE #checkIntrastat
        #/// <summary>
        #///   Validates the intrastat setting on the item assosiated to the order line.
        #/// </summary>
        #/// <returns>
        #///   true if the validation passes; Otherwise, false.
        #/// </returns>
        #public boolean checkIntrastat()
        #{
        #    VendTable            vendTable;
        #    IntrastatParameters  intrastatParameters;
        #    InventTable          inventTable;
        #    boolean              ret = true;
        #    boolean              checkIntrastatLT;
        #    PurchLineForeignTradeCategory   purchLineForeignTradeCategory;
        #    #ISOCountryRegionCodes
        #
        #    vendTable           = VendTable::find(this.purchTable().OrderAccount);
        #    intrastatParameters = IntrastatParameters::find();
        #    inventTable         = this.inventTable();
        #
        #    if (! inventTable.IntrastatExclude
        #        //only perform check when vendor is from an EU country
        #        && IntrastatCountryRegionParameters::isInEU(vendTable.countryRegionId()))
        #    {
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #        {
        #            if (intrastatParameters.IntrastatFulfillmentDateEmptyWarning_HU && ! this.IntrastatFulfillmentDate_HU)
        #            {
        #                ret = checkFailed(strFmt("@SYS4080006", fieldPName(PurchLine, IntrastatFulfillmentDate_HU), this.InventTransId));
        #            }
        #        }
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        #        {
        #            if (this.ItemId)
        #            {
        #                checkIntrastatLT = Intrastat::isIntrastatLine(InventTable::find(this.ItemId));
        #            }
        #            else if (this.isCategoryBased())
        #            {
        #                purchLineForeignTradeCategory = PurchLineForeignTradeCategory::findpurchLine(this);
        #
        #                if (purchLineForeignTradeCategory.ItemCodeId)
        #                {
        #                    checkIntrastatLT = Intrastat::isIntrastatLine(purchLineForeignTradeCategory);
        #                }
        #            }
        #
        #            if (checkIntrastatLT)
        #            {
        #                if (intrastatParameters.State             && ! this.deliveryAddress().State)
        #                {
        #                    ret = checkFailed("@SYS57801");
        #                }
        #
        #                if (intrastatParameters.TransactionCode   && ! this.TransactionCode)
        #                {
        #                    ret = checkFailed(strFmt("@SYS27175"));
        #                }
        #
        #                if (intrastatParameters.TransportMode     && ! this.Transport)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107639"));
        #                }
        #
        #                if (intrastatParameters.Port              && ! this.Port)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107640"));
        #                }
        #
        #                if (this.ItemId)
        #                {
        #                    if (intrastatParameters.Weight            && ! inventTable.NetWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107646", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.IntrastatItemcode && ! inventTable.Intracode)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107643", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.AdditionalUnit    && ! inventTable.IntraUnit)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107644", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! inventTable.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107645", inventTable.ItemId));
        #                    }
        #                }
        #                else
        #                {
        #                    if (intrastatParameters.Weight            && ! purchLineForeignTradeCategory.UnitWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082092", this.ProcurementCategory));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! purchLineForeignTradeCategory.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082093", this.ProcurementCategory));
        #                    }
        #                }
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkInventReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkInventReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.QtyOrdered * this.InventReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemId
        #public server boolean checkItemId()
        #{
        #    boolean  ok = true;
        #    EcoResProductValidator productValidator;
        #    ItemId                 origItemId = this.orig().ItemId;
        #    InventTable            inventable = this.inventTable();
        #
        #
        #    if (origItemId
        #        && origItemId != this.ItemId
        #        && this.InventTransId
        #        && this.RecId)
        #    {
        #        ok = checkFailed("@SYS19376");
        #    }
        #
        #    if (this.ItemId
        #        && this.InventDimId != InventDim::inventDimIdBlank()
        #        && !inventable.inventItemPurchSetup(this.InventDimId).checkNotStopped(false))
        #    {
        #        ok = false;
        #    }
        #
        #    if (this.purchTable().isInterCompanyOrder()  &&  (!this.ItemId || inventable.interCompanyBlockedPurch()))
        #    {
        #        ok = checkFailed(strFmt("@SYS74812", this.ItemId));
        #    }
        #
        #    if (this.ItemId)
        #    {
        #        productValidator = EcoResProductValidator::construct(inventable);
        #        if (!productValidator.isEssentialFieldValuesSet())
        #        {
        #            ok = checkFailed(strFmt("@SYS4000187", productValidator.getErrorFieldList(), this.ItemId));
        #
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemPBAId
        #boolean  checkItemPBAId()
        #{
        #    boolean  ok = true;
        #
        #    if ( new DictConfigurationKey( configurationKeyNum( PBA_ProductBuilder ) ).enabled() )
        #    {
        #        if ( InventTable::find( this.ItemId ).pbaItemConfigurable == NoYes::Yes )
        #        {
        #            if ( ! PBAVersion::existsVersion(this.ItemId,this.ItemPBAId) )
        #            {
        #                ok = checkFailed(strFmt("@SYS41402",this.ItemPBAId, this.ItemId));
        #            }
        #        }
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkLine_RU
        #boolean checkLine_RU()
        #{
        #    boolean                 ret = true;
        #    CustomJournalTrans_RU   customJournalTrans;
        #    CustomJournalTable_RU   customJournalTable;
        #    container               customJournalTables;
        #    UnitOfMeasureSymbol     unitIdTo;
        #    Qty                     remainPurchPhysical, customJournalQty;
        #    List                    dimensionBoolean = new List(Types::Integer);
        #
        #    CustomJournalTrans_RU   customJournalTransUpdate;
        #    DialogButton            updateDimension;
        #
        #    if (this.RecId == 0 || ! this.InventTransId)
        #    {
        #        return true;
        #    }
        #
        #    while select sum(Qty) from customJournalTrans group by CustomJournalId
        #        where customJournalTrans.SalesPurchInventTransId            == this.InventTransId
        #            exists join customJournalTable
        #                where customJournalTable.CustomJournalId            == customJournalTrans.CustomJournalId &&
        #                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import       &&
        #                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #    {
        #        customJournalQty    += customJournalTrans.Qty;
        #        customJournalTables += customJournalTrans.CustomJournalId;
        #    }
        #    if (ret && customJournalQty != 0)
        #    {
        #        setPrefix(strFmt("@GLS115270", con2Str(customJournalTables)));
        #        ret = (Box::yesNo(strFmt("@GLS115271", con2Str(customJournalTables)), DialogButton::No, "@GLS111162") == DialogButton::Yes);
        #
        #        unitIdTo            = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent).UnitId;
        #        remainPurchPhysical = this.RemainPurchPhysical + (this.PurchQty - this.orig().PurchQty);
        #        if (InventTable::unitConvert(this.ItemId, this.PurchUnit, unitIdTo, unitIdTo, remainPurchPhysical) < customJournalQty)
        #        {
        #            error(strFmt("@GLS115274", remainPurchPhysical,
        #                                        this.PurchUnit,
        #                                        customJournalQty,
        #                                        unitIdTo));
        #            this.QtyOrdered = this.orig().QtyOrdered;
        #            this.PurchQty   = this.orig().PurchQty;
        #        }
        #        if (this.PurchPrice != this.orig().PurchPrice)
        #        {
        #            checkFailed(strFmt("@GLS115277"));
        #            this.PurchPrice = this.orig().PurchPrice;
        #            this.LineAmount = this.calcLineAmount();
        #        }
        #
        #        if (this.DefaultDimension != this.orig().DefaultDimension)
        #        {
        #            updateDimension = Box::yesNoCancel(strFmt("@GLS115280", con2Str(customJournalTables)), DialogButton::Cancel, "@GLS111162");
        #            switch (updateDimension)
        #            {
        #                case DialogButton::Yes:
        #                    ttsbegin;
        #
        #                    while select forupdate customJournalTransUpdate
        #                        where customJournalTransUpdate.SalesPurchInventTransId      == this.InventTransId
        #                            exists join customJournalTable
        #                                where customJournalTable.CustomJournalId            == customJournalTransUpdate.CustomJournalId &&
        #                                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import             &&
        #                                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #                    {
        #                        customJournalTransUpdate.DefaultDimension = this.DefaultDimension;
        #                        customJournalTransUpdate.update();
        #                    }
        #
        #                    ttscommit;
        #                    break;
        #                case DialogButton::No       :
        #                    break;
        #                case DialogButton::Cancel   :
        #                    this.DefaultDimension = this.orig().DefaultDimension;
        #                    ret = checkFailed("@GLS115281");
        #                    break;
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkLineNumber
        #/// <summary>
        #/// Indicates whether a line number is unique within the scope of an order; if it is not, issues an
        #/// error message.
        #/// </summary>
        #/// <returns>
        #/// true if the line number is unique; otherwise, false.
        #/// </returns>
        #public boolean checkLineNumber()
        #{
        #    boolean ret = true;
        #
        #    if (ret)
        #    {
        #        ret = TradeLineNumberManager::newLine(this).checkLineNumber();
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::DeliveryLine
        #     && PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).LineNumber > this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #     && this.TradeLineNumbering::getNextLineNumber(this.orig().LineNumber) < this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCode_RU
        #/// <summary>
        #/// Checks values of markup related fields
        #/// </summary>
        #/// <returns>
        #/// True if check succeed;otherwise false
        #/// </returns>
        #public boolean checkMarkupCode_RU()
        #{
        #    boolean     ret = true;
        #    MarkupTable markupTable;
        #    PurchLine_W purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (this.isMarkupCodeEnabled_RU())
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                markupTable = MarkupTable::find(MarkupModuleType::Vend, purchLine_W.MarkupCode_RU);
        #
        #                if (markupTable.CustType != MarkupType::LedgerAccount)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, CustType), MarkupType::LedgerAccount));
        #                }
        #                if (markupTable.VendType != MarkupType::CustVend)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, VendType), MarkupType::CustVend));
        #                }
        #            }
        #        }
        #        else
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                ret = checkFailed(strFmt("@SYS95333", fieldPName(PurchLine_W, MarkupCode_RU)), "@SYS19186");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMatchingPolicy
        #/// <summary>
        #/// Specifies whether the matching policy can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the changed matching policy is valid; otherwise, false.
        #/// </returns>
        #public boolean checkMatchingPolicy()
        #{
        #    boolean ok = true;
        #
        #    if (!this.RecId || this.MatchingPolicy != this.orig().MatchingPolicy)
        #    {
        #        if (PurchMatchingPolicyManager::canMatchingPolicyBeChanged(this.MatchingPolicy) == false)
        #        {
        #            ok = checkFailed(strFmt("@SYS130454", VendParameters::find().MatchingPolicy));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMaximumRetailPrice_IN
        #/// <summary>
        #/// This method is used to check the Maximum retail price.
        #/// </summary>
        #/// <param name="_maximumRetailPrice">
        #/// A maximum retail price.
        #/// </param>
        #/// <returns>
        #/// Returns true if maximum return price is greater than zero.
        #/// </returns>
        #public boolean  checkMaximumRetailPrice_IN(Price  _maximumRetailPrice = this.purchLine_IN().MaximumRetailPrice_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkMaximumRetailPrice(_maximumRetailPrice);
        #}
      ENDSOURCE
      SOURCE #checkOperationType_MX
        #public boolean checkOperationType_MX()
        #{
        #    boolean ok = true;
        #
        #    if (this.OperationType_MX == VendorOperationType_MX::Blank)
        #    {
        #        ok = checkFailed("@SYS312596");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkOverDelivery
        #boolean  checkOverDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.OverDeliveryPct < 0)
        #    {
        #        ok = checkFailed("@SYS26776");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPostingProfile_RU
        #boolean checkPostingProfile_RU()
        #{
        #    boolean                         ok = true;
        #    InventProfileCustVendLedger_RU  inventProfileCustVendLedger;
        #    Set                             inventProfileTypeSet = new Set(Types::Enum);
        #    PurchLine_W                     purchLine_W = this.purchLine_W();
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        purchLine_W.PostingProfile_RU              &&
        #        this.inventDim().InventProfileId_RU &&
        #        (!purchLine_W.orig() || purchLine_W.PostingProfile_RU != purchLine_W.orig().PostingProfile_RU))
        #    {
        #        while select InventProfileTypeAll, InventProfileId, InventProfileType
        #            from inventProfileCustVendLedger
        #            order by InventProfileTypeAll asc
        #            where inventProfileCustVendLedger.VendPostingProfile == purchLine_W.PostingProfile_RU
        #        {
        #            switch(inventProfileCustVendLedger.InventProfileTypeAll)
        #            {
        #                case InventProfileTypeAll_RU::Profile:
        #                    inventProfileTypeSet.add(InventProfile_RU::find(inventProfileCustVendLedger.InventProfileId).InventProfileType);
        #                    break;
        #                case InventProfileTypeAll_RU::Type:
        #                    inventProfileTypeSet.add(inventProfileCustVendLedger.InventProfileType);
        #                    break;
        #            }
        #        }
        #
        #        if (! inventProfileTypeSet.in(this.inventDim().inventProfile_RU().InventProfileType))
        #        {
        #            ok = checkFailed("@GLS113766");
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPriceDate
        #/// <summary>
        #/// Triggers price recalculation after a date change according to the <c>PurchPriceDateType</c>
        #/// enumeration value.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the <c>PurchLine</c> table that changed.
        #/// </param>
        #/// <remarks>
        #/// The <c>PurchPriceDateType</c> enumeration value can be set to a <c>Today</c> or <c>DeliveryDate</c>
        #/// value.
        #/// </remarks>
        #void checkPriceDate(FieldId _fieldId)
        #{
        #    PurchParameters purchParameters = PurchParameters::find();
        #
        #    if (purchParameters.PriceDateType == PurchPriceDateType::DeliveryDate
        #        && _fieldId == fieldNum(PurchLine, DeliveryDate)
        #        && !this.isLinkedToAgreement())
        #    {
        #        PurchLine::modifyPurchQty(this, this.inventDim());
        #    }
        #}
      ENDSOURCE
      SOURCE #checkProcurementCategory
        #/// <summary>
        #/// Validates that the <c>ProcurementCategory</c> field is filled correctly.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>ProcurementCategory</c> field is filled correctly; otherwise, false.
        #/// </returns>
        #boolean checkProcurementCategory()
        #{
        #    // Check that the hierarchy matches the module
        #    return !this.ProcurementCategory
        #        || EcoResCategory::checkCategoryRole(this.ProcurementCategory, EcoResCategoryNamedHierarchyRole::Procurement);
        #}
      ENDSOURCE
      SOURCE #checkProjCategory
        #boolean checkProjCategory()
        #{
        #    boolean         ok = true;
        #    ProjCategory    projCategory;
        #
        #    if (this.ProjCategoryId)
        #    {
        #        projCategory = ProjCategory::find(this.ProjCategoryId);
        #
        #        if (this.ItemId)
        #        {
        #            if (projCategory.CategoryType != ProjCategoryType::Item)
        #            {
        #                ok = checkFailed(strFmt("@SYS54897",this.ProjCategoryId));
        #            }
        #        }
        #        else
        #        {
        #            if (projCategory.CategoryType == ProjCategoryType::Revenue)
        #            {
        #                ok = checkFailed(strFmt("@SYS54897",this.ProjCategoryId));
        #            }
        #        }
        #
        #        ok = ok && projCategory.validateIfInactiveAllowed();
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchCommitmentLine
        #/// <summary>
        #/// Performs validations for the commitment line reference on the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// true if the commitment line reference is valid; otherwise, false
        #/// </returns>
        #public boolean checkPurchCommitmentLine()
        #{
        #    FiscalCalendarYear          fiscalCalendarYear;
        #    PurchCommitmentLine_PSN     purchCommitmentLine = this.getPurchCommitmentLine_PSN();
        #    PurchCommitmentHeader_PSN   purchCommitmentHeader = purchCommitmentLine.getPurchCommitmentHeader_PSN();
        #    str                         error = "@SPS2134";
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        //Verify that the vendor account on the PO matches the vendor account on the commitment.
        #        if (!this.checkCommitmentVendorMatchesOrderAccount())
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the commitment line is of the current fiscal year
        #        fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(CompanyInfo::find().RecId), this.purchTable().AccountingDate);
        #
        #        if (purchCommitmentLine.LineDate < fiscalCalendarYear.StartDate ||
        #            purchCommitmentLine.LineDate > fiscalCalendarYear.EndDate)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the entered commitment header has a status of complete.
        #        if (purchCommitmentHeader.DocumentStatus != PurchCommitmentDocumentStatus_PSN::Complete)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //
        #        //Verify that the Purchase Agreement Line on the commitment document
        #        //line matches the Purchase Order Line Purchase Agreement field, if present
        #        //
        #        if (this.MatchingAgreementLine != 0 && this.MatchingAgreementLine != purchCommitmentLine.AgreementLine)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        // validate that the source document line state is complete for the commitment line.
        #        if (purchCommitmentLine.getSourceDocumentLine().AccountingStatus != SourceDocumentLineAccountingStatus::Completed)
        #        {
        #            return checkFailed(error);
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchQty
        #boolean  checkPurchQty()
        #{
        #    boolean  ok = true;
        #
        #    if ((this.PurchQty  != 0     && this.QtyOrdered   == 0)     ||
        #        (this.PurchQty  == 0     && this.QtyOrdered   != 0)    )
        #    {
        #        ok = checkFailed(strFmt("@SYS18441",this.PurchId));
        #    }
        #    else
        #    {
        #        if (this.PurchQty  * this.QtyOrdered   < 0)
        #        {
        #            ok = checkFailed(strFmt("@SYS18442",this.PurchId));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkPurchReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchQty * this.PurchReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchType
        #boolean  checkPurchType()
        #{
        #    if (this.purchTable().PurchaseType   != this.PurchaseType)
        #    {
        #        return checkFailed("@SYS17095");
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchUnit
        #boolean checkPurchUnit()
        #{
        #    boolean  ok = true;
        #
        #    if (!UnitOfMeasureConverter::canBeConverted(
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(InventTable::find(this.ItemId).inventUnitId()),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            InventTable::itemProduct(this.ItemId)))
        #        ok = checkFailed(strFmt("@SYS28690", InventTable::find(this.ItemId).inventUnitId(), this.PurchUnit));
        #
        #    if (this.orig()
        #    &&  this.orig().PurchUnit != this.PurchUnit
        #    &&  this.orig().PurchQty  != this.RemainPurchPhysical)
        #    {
        #        ok = checkFailed("@SYS81896");
        #    }
        #
        #    if (this.RecId
        #        && this.PurchUnit != this.orig().PurchUnit
        #        && (   this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #            || this.LineDeliveryType == LineDeliveryType::DeliveryLine))
        #    {
        #        // Unit cannot be changed on a Delivery Schedule.
        #        ok = checkFailed("@SYS131415");
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.type().checkPurchUnit();
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.runPriceDiscPolicyDialog();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkRBOPackage
        #/// <summary>
        #///   Checks whether a package line have more than one related purchase order line.
        #/// </summary>
        #/// <param name="_purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="_packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <param name="_lineNum">
        #///   A <c>LineNum</c>.
        #/// </param>
        #/// <returns>
        #///   true if a package line does not have more than one related purchase order line; otherwise, false.
        #/// </returns>
        #boolean checkRBOPackage(PurchId _purchId, RetailPackageId _packageId,LineNum _lineNum)
        #{
        #    PurchLine   purchLine;
        #
        #    if (_purchId && _packageId && _lineNum)
        #    {
        #        select count(rboPackageLineNum) from purchLine
        #        index hint RBOPackageIdx
        #        where purchLine.PurchId           == _purchId   &&
        #              purchLine.RetailPackageId      == _packageId &&
        #              purchLine.rboPackageLineNum == _lineNum;
        #
        #        if (purchLine.rboPackageLineNum > 1)
        #            return checkFailed(strFmt("@RET4768",_packageId));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkReqActivity
        #boolean checkReqActivity()
        #{
        #    RequireActivity             requireActivity;
        #    boolean                     ret = true;
        #
        #    requireActivity = ProjTable::checkRequireActivity(this.ProjId,tableNum(ProjItemTrans));
        #    if (requireActivity && (!this.ActivityNumber))
        #    {
        #        ret = false;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkStatusChange
        #/// <summary>
        #/// Checks whether it is allowed to change to status on the order line.
        #/// </summary>
        #/// <returns>
        #/// true if change of status is allowed; otherwise, false.
        #/// </returns>
        #public boolean checkStatusChange()
        #{
        #    boolean ok = true;
        #    PurchLine origPurchLine = PurchLine::findRecId(this.RecId); //this.orig() cannot be used in all scenarios.
        #
        #    if (origPurchLine.RecId
        #        && this.PurchStatus              == PurchStatus::Backorder
        #        && (origPurchLine.PurchStatus    == PurchStatus::Invoiced
        #        ||  origPurchLine.PurchStatus    == PurchStatus::Canceled)
        #        && origPurchLine.isStocked() != this.inventTable().isStocked())
        #    {
        #        ok = checkFailed(strFmt("@SYS324424", fieldPName(InventModelGroup, StockedProduct)));
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkStockedProduct
        #/// <summary>
        #/// Indicates whether the <c>StockedProduct</c> field is not set for category based lines.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>StockedProduct</c> field is set to a valid value; otherwise, false.
        #/// </returns>
        #boolean  checkStockedProduct()
        #{
        #    boolean  ok = true;
        #
        #    if (this.isStocked() && this.isCategoryBased())
        #    {
        #        ok = checkFailed("@SYS134348");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkTaxItemGroup
        #boolean  checkTaxItemGroup()
        #{
        #    if (this.TaxItemGroup   && ! TaxItemGroupHeading::exist(this.TaxItemGroup))
        #    {
        #        return checkFailed(strFmt("@SYS21973", this.TaxItemGroup));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkTaxServiceCode_BR
        #/// <summary>
        #/// It validates if TaxServiceCode is required
        #/// </summary>
        #/// <returns>
        #/// It returns true if TaxServiceCode is acceptable (service item).
        #/// </returns>
        #public boolean checkTaxServiceCode_BR()
        #{
        #    boolean ok = true;
        #
        #    if (this.TaxServiceCode_BR
        #        && this.inventTable().ItemType != ItemType::Service)
        #    {
        #        ok = checkFailed("@GLS60421");
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkUnderDelivery
        #boolean  checkUnderDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.UnderDeliveryPct > 100)
        #    {
        #        ok = checkFailed("@SYS26778");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkUpdatePhysical
        #boolean checkUpdatePhysical()
        #{
        #    return this.type().checkUpdatePhysical();
        #}
      ENDSOURCE
      SOURCE #checkVendorName_IN
        #/// <summary>
        #/// Reads the table buffer and check the existence of record.
        #/// </summary>
        #/// <param name="_location">
        #/// The field is used to find the record.
        #/// </param>
        #/// <param name="_vendAccount">
        #/// The field is used to find the record.
        #/// </param>
        #/// <returns>
        #/// Returns the boolean value.
        #/// </returns>
        #public boolean checkVendorName_IN(LogisticsLocationRecId    _location = this.purchLine_IN().VendorLocation_IN,
        #                                  VendAccount               _vendAccount = this.VendAccount)
        #{
        #    return  this.purchLineView_IN().SalesPurchJournalLine_IN::checkVendorName(_location, _vendAccount);
        #}
      ENDSOURCE
      SOURCE #clearAddressReference
        #public void clearAddressReference()
        #{
        #    this.AddressRefRecId    = 0;
        #    this.AddressRefTableId  = 0;
        #}
      ENDSOURCE
      SOURCE #clearAllPriceDiscChangePolicies
        #/// <summary>
        #/// Clears all of the stored <c>PriceDiscChangePolicy</c> instances for the <c>PurchLine</c> table.
        #/// </summary>
        #/// <remarks>
        #/// Removes policies from both the manual and system groups.
        #/// </remarks>
        #void clearAllPriceDiscChangePolicies()
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.clearAllPriceDiscChangePolicies();
        #}
      ENDSOURCE
      SOURCE #clearingPeriod
        #//BP Deviation Documented
        #display ClearingPeriod clearingPeriod()
        #{
        #    return this.purchTable().payer().clearingPeriod();
        #}
      ENDSOURCE
      SOURCE #clearInventReference
        #/// <summary>
        #/// Clears the inventory reference fields on the <c>PurchLine</c> record.
        #/// </summary>
        #public void clearInventReference()
        #{
        #    this.InventRefTransId  = '';
        #    this.InventRefId       = '';
        #    this.ItemRefType       = InventRefType::None;
        #}
      ENDSOURCE
      SOURCE #companyInfo
        #/// <summary>
        #/// Retrieves the <c>CompanyInfo</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>CompanyInfo</c> record.
        #/// </returns>
        #public CompanyInfo companyInfo()
        #{
        #    return CompanyInfo::findDataArea(this.company());
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #server void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurrencyConversion = TradeCurencyConversion::ExchRate,TransDate _exchRateDate = systemDateGet())
        #{
        #    MarkupTrans     markupTrans;
        #    AgreementLine   linkedAgreementLine;
        #
        #    PurchLine_IN    purchLine_IN;
        #    #ISOCountryRegionCodes
        #
        #    ttsbegin;
        #
        #    while select forupdate markupTrans
        #          where markupTrans.TransTableId  == this.TableId &&
        #                markupTrans.TransRecId    == this.RecId   &&
        #               !markupTrans.IsDeleted
        #    {
        #        markupTrans.convertCurrencyCode(currencyCode,_exchRateDate);
        #        markupTrans.IsModified = NoYes::Yes;
        #        markupTrans.doUpdate();
        #    }
        #
        #    this.PurchPrice   = Currency::curPrice2CurPrice(this.PurchPrice, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.LineDisc     = Currency::curPrice2CurPrice(this.LineDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.MultiLnDisc  = Currency::curPrice2CurPrice(this.MultiLnDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.DiscAmount   = this.discAmount();
        #    this.PurchMarkup  = Currency::curPrice2CurPrice(this.PurchMarkup, this.CurrencyCode, currencyCode,_exchRateDate);
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.convertCurrencyCode_IN(currencyCode);
        #    }
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        this.LineAmount   = Currency::curAmount2CurAmount(this.LineAmount, this.CurrencyCode, currencyCode,_exchRateDate);
        #    }
        #    this.CurrencyCode = currencyCode;
        #
        #    switch(tradeCurrencyConversion)
        #    {
        #        case TradeCurencyConversion::ExchRate:
        #            break;
        #        case TradeCurencyConversion::TradeAgreements:
        #            if (this.LineDeliveryType == LineDeliveryType::DeliveryLine)
        #            {
        #                this.LineAmount = this.calcLineAmountForced();
        #            }
        #            else
        #            {
        #                this.SalesPurchLine::resetPriceAgreement();
        #                this.setPriceDisc(this.inventDim());
        #            }
        #            break;
        #    }
        #    this.LineAmount   = this.calcLineAmount();
        #
        #    if (   this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #        && this.MatchingAgreementLine)
        #    {
        #        // Agreement line should NOT be un-linked if it is Quantity-based AND has IsPriceInformationMandatory set to false!
        #        linkedAgreementLine = AgreementLine::find(this.MatchingAgreementLine, false);
        #
        #        if (   linkedAgreementLine.RecId
        #            && ( (linkedAgreementLine.isQuantityBased() == false) || linkedAgreementLine.IsPriceInformationMandatory))
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #    }
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs)
        #            && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN != NoYes::Yes)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode_IN
        #/// <summary>
        #/// This method is used to get the value in the converted currency.
        #/// </summary>
        #/// <param name="_currencyCode">
        #/// A currency code for conversion.
        #/// </param>
        #public server void convertCurrencyCode_IN(CurrencyCode _currencyCode)
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.MaximumRetailPrice_IN = Currency::curPrice2CurPrice(purchLine_IN.MaximumRetailPrice_IN, this.CurrencyCode, _currencyCode);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId != 0)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #            purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #        }
        #        else
        #        {
        #            value                   = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges          = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #            purchLine_IN.AssessableValue_IN = this.LineAmount + value + landingCharges;
        #        }
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #copyDimension
        #/// <summary>
        #/// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </summary>
        #/// <param name="_defaultDimension">
        #/// A dimension set to apply to the <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_dimensionCopy">
        #/// A <c>dimensionCopy</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten.
        #/// </remarks>
        #
        #public DimensionDefault copyDimension(
        #    DimensionDefault _defaultDimension,
        #    DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
        #                                                                  this.companyInfo().RecId
        #                                                                  )
        #    )
        #{
        #    return _dimensionCopy.copy(_defaultDimension);
        #}
      ENDSOURCE
      SOURCE #copyFromPurchLineHistory
        #/// <summary>
        #/// Copies data from a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record to copy data from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #/// A Boolean value that indicates whether precise copy should be made.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #/// A Boolean value that indicates whether price and discount information should be copied.
        #/// </param>
        #/// <param name="_copyQty">
        #/// A Boolean value that indicates whether quantity should be copied.
        #/// </param>
        #/// <param name="_qty">
        #/// A quantity value to be used on the copied line.
        #/// </param>
        #/// <param name="_cwQty">
        #/// The CW quantity value to be used on the copied line.
        #/// </param>
        #server void  copyFromPurchLineHistory(PurchLineHistory       _purchLineHistory,
        #                                      boolean                _copyPrecisely = true,
        #                                      boolean                _copyPriceDisc = true,
        #                                      boolean                _copyQty       = true,
        #                                      Qty                    _qty           = _purchLineHistory.PurchQty
        #                                      , PdsCWInventQty       _cwQty         = _purchLineHistory.PdsCWQty
        #                                      )
        #{
        #    InventDim   inventDim;
        #
        #    this.initFromItemOrCategory(_purchLineHistory.ItemId, _purchLineHistory.ProcurementCategory, _purchLineHistory.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLineHistory.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PdsCWQty           = _cwQty;
        #        this.PurchUnit          = _purchLineHistory.PurchUnit;
        #        this.QtyOrdered         = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLineHistory.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLineHistory.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLineHistory.PurchPrice;
        #        this.PriceUnit          = _purchLineHistory.PriceUnit;
        #        this.LinePercent        = _purchLineHistory.LinePercent;
        #        this.LineDisc           = _purchLineHistory.LineDisc;
        #        this.MultiLnDisc        = _purchLineHistory.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLineHistory.MultiLnPercent;
        #        this.PurchMarkup        = _purchLineHistory.PurchMarkup;
        #        this.LineAmount         = _purchLineHistory.LineAmount;
        #        this.DiscAmount         = _purchLineHistory.DiscAmount;
        #        this.DiscPercent        = _purchLineHistory.DiscPercent;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _purchLineHistory.Name;
        #        this.ExternalItemId     = _purchLineHistory.ExternalItemId;
        #        this.TaxGroup           = _purchLineHistory.TaxGroup;
        #        this.TaxItemGroup       = _purchLineHistory.TaxItemGroup;
        #        this.DefaultDimension   = _purchLineHistory.DefaultDimension;
        #        this.AccountingDistributionTemplate = _purchLineHistory.AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
      ENDSOURCE
      SOURCE #corItemName
        #/// <summary>
        #/// Returns the item name considering if the item is category based or not
        #/// </summary>
        #/// <returns>
        #/// Item name
        #/// </returns>
        #display public PurchLineShowItemName corItemName()
        #{
        #    PurchLineShowItemName itemName;
        #
        #    if (this.isCategoryBased())
        #    {
        #        itemName = this.Name;
        #    }
        #    else
        #    {
        #        itemName = this.itemName();
        #    }
        #    return itemName;
        #}
        #
      ENDSOURCE
      SOURCE #createAgreementLine
        #/// <summary>
        #/// Creates an agreement line
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A existing <c>AgreementLine</c> record
        #/// </param>
        #public void createAgreementLine(AgreementLine _agreementLine)
        #{
        #    PurchLine       agreementPurchLine;
        #
        #    agreementPurchLine.data(this);
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        if (!_agreementLine.isLinkValid(agreementPurchLine, false))
        #        {
        #            _agreementLine = null;
        #        }
        #    }
        #
        #    ttsbegin;
        #
        #    if (!_agreementLine)
        #    {
        #        _agreementLine = AgreementLine::findLineForAutoMatch(agreementPurchLine, this.purchTable().MatchingAgreement, true);
        #        if (_agreementLine)
        #        {
        #            agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        }
        #    }
        #
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.update();
        #        this.data(agreementPurchLine);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createFromTmpFrmVirtual
        #void createFromTmpFrmVirtual(PurchTable _purchTable, TmpFrmVirtual tmpFrmVirtual)
        #{
        #    boolean doSearchForAgreementLine = (_purchTable.MatchingAgreement != 0);
        #    while select tmpFrmVirtual
        #            where tmpFrmVirtual.Qty
        #    {
        #        try
        #        {
        #            this.clear();
        #            this.PurchId                = _purchTable.PurchId;
        #            this.ItemId                 = tmpFrmVirtual.ItemId;
        #            this.PurchQty               = tmpFrmVirtual.Qty;
        #            this.setInventDimId(tmpFrmVirtual.InventDimId);
        #
        #            if (pdsIsCWItem(this.ItemId))
        #            {
        #                this.PdsCWQty = tmpFrmVirtual.PdsCWQty;
        #            }
        #
        #            this.createLine(true,  //  validation
        #                            true,  //  initFromPurchTable
        #                            true,  //  initFromInventTableModule
        #                            true,  //  calcInventQty
        #                            true,  //  searchMarkup
        #                            true,  //  searchPrice
        #                            true,  //  ignorePurchTableInventDim
        #                            doSearchForAgreementLine    //  searchAgreementLine
        #                            );
        #
        #            tmpFrmVirtual.delete();
        #        }
        #
        #        catch (Exception::Error)
        #        {
        #            checkFailed("@SYS18447");
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #createLine
        #server public void createLine(
        #    boolean _validation                  = false,
        #    boolean _initFromPurchTable          = false,
        #    boolean _initFromItemOrCategory      = false,
        #    boolean _calcInventQty               = false,
        #    boolean _searchMarkup                = true,
        #    boolean _searchPrice                 = false,
        #    boolean _ignorePurchTableInventDim   = false,
        #    boolean _searchAgreementLine         = false,
        #    boolean _setRemain                   = true,
        #    boolean _skipPurchTableUpdate        = false,
        #    boolean _skipInterCompanyCalcDisc    = false)
        #{
        #    #ISOCountryRegionCodes
        #
        #    PurchTable          purchTable;
        #    InventTable         inventTable;
        #    AgreementLine       agreementLine;
        #
        #    boolean             dropInvent = false;
        #
        #    if (WHSInventEnabled::exist(this.ItemId) && !WHSFilter::vendFilterMatch(this.VendAccount, this.ItemId))
        #    {
        #        throw error("@WAX1003");
        #    }
        #
        #    if (_initFromPurchTable)
        #    {
        #        purchTable= this.purchTable();
        #        this.initFromPurchTable(purchTable, _ignorePurchTableInventDim);
        #    }
        #
        #    if (_initFromItemOrCategory)
        #    {
        #        if (this.ItemId)
        #        {
        #            inventTable= this.inventTable();
        #
        #            if (! this.checkInitFromInventTable(inventTable))
        #            {
        #                throw error("@SYS18447");
        #            }
        #        }
        #
        #        this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #    }
        #
        #    this.initFromVendTable(this.vendTable_OrderAccount());
        #
        #    if (_calcInventQty)
        #    {
        #        this.QtyOrdered = this.calcQtyOrdered();
        #    }
        #
        #    this.RemainPurchPhysical            = this.PurchQty;
        #    this.RemainPurchFinancial           = 0;
        #    this.RemainInventPhysical           = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial = 0;
        #    // 1877
        #
        #    if (_setRemain && pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWRemainInventPhysical = this.PdsCWQty;
        #        this.PdsCWRemainInventFinancial = 0;
        #    }
        #    this.type().initReturn();
        #
        #    if (_searchPrice)
        #    {
        #        this.setPriceDisc(this.inventDim());
        #    }
        #
        #    if (_searchAgreementLine && this.canAgreementBeLinked())
        #    {
        #        if (!purchTable.RecId)
        #        {
        #            purchTable= this.purchTable();
        #        }
        #
        #        if (purchTable.MatchingAgreement)
        #        {
        #            agreementLine = AgreementLine::findLineForAutoMatch(this, purchTable.MatchingAgreement, true);
        #            if (agreementLine)
        #            {
        #                this.initFromAgreementLine(agreementLine);
        #            }
        #        }
        #    }
        #
        #    if (_validation)
        #        if (!this.validateWrite())
        #        {
        #            throw error("@SYS18447");
        #        }
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes &&
        #        CustomsVendBOETrans_IN::findPurchLineRecId(PurchLine::findInventTransId(this.InventRefTransId).RecId).RecId != 0 &&
        #        this.PurchId == this.InventRefId)
        #    {
        #        checkFailed("@GLS5764");
        #    }
        #    else
        #    {
        #        this.insert(dropInvent,_searchMarkup,true, _skipPurchTableUpdate,_skipInterCompanyCalcDisc);
        #    }
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #createMarkupTrans
        #/// <summary>
        #///     Creates markup transactions for the purchase line.
        #/// </summary>
        #/// <param name="purchTable">
        #///     A buffer of the <c>PurchTable</c> table.
        #/// </param>
        #/// <param name="_deleteExistingMarkupTrans">
        #///     A Boolean value that specifies whether to delete existing markup transactions; optional.
        #/// </param>
        #/// <param name="_markupGroupId">
        #///     A <c>MarkupGroupId</c> type specifing the markup group ID; optional.
        #/// </param>
        #server void  createMarkupTrans(
        #    PurchTable      purchTable,
        #    boolean         _deleteExistingMarkupTrans  = true,
        #    MarkupGroupId   _markupGroupId              = InventTableModule::find(this.ItemId,ModuleInventPurchSales::Purch).MarkupGroupId
        #
        #)
        #{
        #    Markup::insertMarkupTrans(HeadingLine::Linie,
        #                              MarkupModuleType::Vend,
        #                              this,
        #                              purchTable.OrderAccount,
        #                              purchTable.MarkupGroup,
        #                              purchTable.CurrencyCode,
        #                              purchTable.LanguageId,
        #                              this.ItemId,
        #                              _markupGroupId,
        #                             (this.LineAmount < 0), // invert sign on creditnotes
        #                              _deleteExistingMarkupTrans);
        #}
      ENDSOURCE
      SOURCE #creditNoteLine
        #boolean  creditNoteLine(PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #defaultCostPriceAsSalesPrice
        #private boolean defaultCostPriceAsSalesPrice()
        #{
        #    return ProjParameters::find().DefaultCostPriceAsSalesPrice && !this.ItemId;
        #}
      ENDSOURCE
      SOURCE #defaultingTax1099Amount
        #public void defaultingTax1099Amount()
        #{
        #    #ISOCountryRegionCodes
        #    if ((this.orig().LineAmount != this.LineAmount) && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]))
        #    {
        #        if (this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                if (this.Tax1099Fields)
        #                {
        #                    this.Tax1099Amount = this.LineAmount;
        #                }
        #                else
        #                {
        #                    this.Tax1099Amount = 0;
        #                }
        #            }
        #            else
        #            {
        #                this.Tax1099Amount = this.LineAmount;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #delete
        #public void  delete(boolean _showInfoDelReserv = true, boolean deletePBA = true, boolean updateOrderLineOfDeliverySchedule = true)
        #{
        #    PurchLineType purchLineType;
        #
        #    if (this.isTmp())
        #    {
        #        this.doDelete();
        #        return;
        #    }
        #
        #    purchLineType = this.type();
        #    purchLineType.delete(_showInfoDelReserv, deletePBA, updateOrderLineOfDeliverySchedule);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        PurchTotalsSummaryController::onDelete(this);
        #    }
        #
        #    PlSADPurchTable::puchLineRemoved(this);
        #}
      ENDSOURCE
      SOURCE #deleteInventTrans_BR
        #/// <summary>
        #///     Delete the <c>inventTrans</c> related to the current <c>purchLine</c> if order operation is configured to do not create inventory transactions.
        #/// </summary>
        #public void deleteInventTrans_BR()
        #{
        #    if (!this.purchTable().createInventTrans_BR())
        #    {
        #        InventUpd_DeleteMovement::newMovement(InventMovement::construct(this, InventMovSubType::None, this)).updateNow();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #deliveryAddress
        #//BP Deviation Documented
        #LogisticsPostalAddress deliveryAddress()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress ? this.DeliveryPostalAddress : this.purchTable().DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryCNPJCPFNUM_BR
        #/// <summary>
        #/// Returns the delivery CNPJ or CPF for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the CNPJ or CPF of the customer if the adddress is a primary address.
        #/// Returns the CNPJ or CPF related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display CNPJCPFNum_BR deliveryCNPJCPFNUM_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select cnpjcpfNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).cnpjcpfNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).cnpjcpfNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryDate
        #public PurchLineDlvDate deliveryDate(PurchLineDlvDate _blankDate = systemDateGet())
        #{
        #    if (this.ConfirmedDlv)
        #    {
        #        return this.ConfirmedDlv;
        #    }
        #
        #    if (this.DeliveryDate)
        #    {
        #        return this.DeliveryDate;
        #    }
        #
        #    if (this.purchTable().DeliveryDate)
        #    {
        #        return this.purchTable().DeliveryDate;
        #    }
        #
        #    return _blankDate;
        #}
      ENDSOURCE
      SOURCE #deliveryIENum_BR
        #/// <summary>
        #/// Returns the delivery IE for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the IE of the customer if the adddress is a primary address.
        #/// Returns the IE related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display IENum_BR deliveryIENum_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select ieNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).ieNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).ieNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryLocation
        #/// <summary>
        #/// Returns the <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with
        #/// selected <c>DeliveryPostalAddress</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with selected
        #/// <c>DeliveryPostalAddress</c> record.
        #/// </returns>
        #public LogisticsLocationRecId deliveryLocation()
        #{
        #    return LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryStatusImage
        #//BP Deviation Documented
        #display ImageRes deliveryStatusImage()
        #{
        #    #resAppl
        #
        #    if (!this.RecId)
        #    {
        #        return 0;
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return #ImageNew;
        #        }
        #        return #ImageOverlayYes;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #deliveryStatusTxt
        #str deliveryStatusTxt()
        #{
        #    if (!this.RecId)
        #    {
        #        return '';
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return "@SYS89798";
        #        }
        #        return "@SYS89797";
        #    }
        #
        #    return "@SYS99500";
        #}
      ENDSOURCE
      SOURCE #deliveryTerm
        #DlvTermId  deliveryTerm()
        #{
        #    return this.purchTable().DlvTerm;
        #}
      ENDSOURCE
      SOURCE #deliveryTransDateTime
        #/// <summary>
        #///    Calculates the delivery date at midnight in the time zone of the site on the purchase order line.
        #/// </summary>
        #/// <returns>
        #///    Delivery date and time in UTC when it is midnight on the delivery date on the site on the purchase order line.
        #/// </returns>
        #public TransDateTime deliveryTransDateTime()
        #{
        #    return DateTimeUtil::newDateTime(this.deliveryDate(), 0, this.timeZoneSite());
        #}
      ENDSOURCE
      SOURCE #discAmount
        #DiscAmount  discAmount()
        #{
        #    return PriceDisc::discAmount(PurchParameters::find().Disc, this.LineDisc, this.MultiLnDisc);
        #}
      ENDSOURCE
      SOURCE #discPercent
        #DiscPct   discPercent()
        #{
        #    return PriceDisc::discPercent(PurchParameters::find().Disc, this.LinePercent, this.MultiLnPercent);
        #}
      ENDSOURCE
      SOURCE #displayBudgetCheckResult
        #/// <summary>
        #/// Gets the image position that displays the <c>BudgetCheckResult</c> value for the <c>PurchLine</c>
        #/// record in the image list of the <c>BudgetCheckResult</c> values.
        #/// </summary>
        #/// <returns>
        #/// A <c>ImageBudgetCheckResult</c> value to indicate the image position in the image list of the
        #/// <c>BudgetCheckResult</c> values.
        #/// </returns>
        #// BP Deviation Documented
        #public display ImageBudgetCheckResult displayBudgetCheckResult()
        #{
        #    return BudgetControlResult::getBudgetCheckResultImagePos(this.getBudgetCheckResult());
        #}
      ENDSOURCE
      SOURCE #doDistributionsExist
        #/// <summary>
        #///    Performs a check whether any distributions exist for a line
        #/// </summary>
        #/// <returns>
        #///    True, if the line has at least one distribution; otherwise false.
        #/// </returns>
        #public client server boolean doDistributionsExist()
        #{
        #    return SourceDocumentLineProvider::isLineDistributed(this.sourceDocumentLine(), this);
        #}
      ENDSOURCE
      SOURCE #doReCalcPricesFromBasePrompt
        #/// <summary>
        #/// Prompts the user to specify whether to recalculate prices based on trade agreements.
        #/// </summary>
        #/// <returns>
        #/// true if the prices should be recalculated; otherwise, false.
        #/// </returns>
        #public boolean doReCalcPricesFromBasePrompt()
        #{
        #    // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #    return this.runPriceDiscPolicyDialog(true);
        #}
      ENDSOURCE
      SOURCE #editableInWorkflow
        #/// <summary>
        #/// Indicates whether the user can modify the record when an active workflow is running.
        #/// </summary>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has rights to modify the record.
        #/// </returns>
        #public boolean  editableInWorkflow()
        #{
        #    return ((this.EditableInWorkflow
        #            || this.WorkflowState == TradeWorkflowState::Returned
        #            || this.WorkflowState == TradeWorkflowState::ChangeRequest)
        #            && this.isUserWorkItemOwner());
        #}
      ENDSOURCE
      SOURCE #editProductDimensionsAllowed
        #/// <summary>
        #/// Determines whether the product dimensions on the line can be edited.
        #/// </summary>
        #/// <returns>
        #///     true for order lines without delivery lines; otherwise, false.
        #/// </returns>
        #boolean editProductDimensionsAllowed()
        #{
        #    return this.SalesPurchLine::editProductDimensionsAllowed();
        #}
      ENDSOURCE
      SOURCE #endDisc
        #boolean  endDisc()
        #{
        #    if (this.isCategoryBased())
        #    {
        #        return true;
        #    }
        #    return this.SalesPurchLine::endDisc();
        #}
      ENDSOURCE
      SOURCE #exceptionCode_BR
        #/// <summary>
        #/// Displays the exception code of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The exception code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ExceptionCode_BR exceptionCode_BR()
        #{
        #    return this.inventTable().ExceptionCode_BR;
        #}
      ENDSOURCE
      SOURCE #existInvoice
        #/// <summary>
        #/// Determines whether saved unposted invoices exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if a saved pending invoice exists for this purchase order line; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The current record includes unposted invoices saved in batches or in the process of being edited.
        #/// Additionally it includes those invoices that are actually saved as pending.
        #/// </remarks>
        #public boolean existInvoice()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.purchTable().PurchStatus == PurchStatus::Backorder || this.purchTable().PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #                where vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                vendInvoiceInfoLine.ParmId == '';
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existInvoice_RU
        #/// <summary>
        #/// Determines if invoice line exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if invoice line exists for this purchase order line, otherwise, false.
        #/// </returns>
        #public boolean existInvoice_RU()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.PurchStatus == PurchStatus::Backorder || this.PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #            where vendInvoiceInfoLine.InventTransId == this.InventTransId;
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #expandBOM
        #server void  expandBOM(TmpFrmVirtual  _tmpFrmVirtual, BOM tmpBOM)
        #{
        #    PurchTable              purchTable;
        #    PurchLine               purchLine;
        #    BOMCalcData             bomCalcData;
        #    InventTable             inventTable;
        #    RouteId                 routeNum;
        #    TradeLineNumberManager  lineNumberManager;
        #    Counter                 x = 1;
        #
        #    ttsbegin;
        #    purchTable          = this.purchTable();
        #    inventTable         = this.inventTable();
        #    bomCalcData         = BOMCalcData::newInventTable(this.QtyOrdered,inventTable);
        #    routeNum            = inventTable.routeId(purchTable.DeliveryDate, this.QtyOrdered, this.inventDim());
        #    lineNumberManager   = TradeLineNumberManager::newLine(this);
        #    lineNumberManager.moveLineToLast(false);
        #
        #    startLengthyOperation();
        #    while select _tmpFrmVirtual
        #    {
        #        this.resetInvent();
        #        break;
        #    }
        #
        #    while select _tmpFrmVirtual
        #    {
        #        purchLine.clear();
        #        select tmpBOM where tmpBOM.RecId == _tmpFrmVirtual.RecordNo;
        #        purchLine.initFromPurchTable(purchTable);
        #        purchLine.initFromBOM(tmpBOM, this);
        #        purchLine.setAddressFromPurchLine(this);
        #
        #        purchLine.QtyOrdered    = UnitOfMeasureConverter::convert(BOMCalcConsumption::construct(tmpBOM.Formula,bomCalcData).calcConsumption(
        #                                                                                                              tmpBOM,
        #                                                                                                              Route::accError(routeNum,
        #                                                                                                                              tmpBOM.OprNum)),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(tmpBOM.UnitId),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        purchLine.PurchQty      = UnitOfMeasureConverter::convert(purchLine.QtyOrdered,
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        lineNumberManager.setLine(purchLine);
        #        lineNumberManager.preUpdateLineNumber(false);
        #
        #        purchLine.ActivityNumber = this.ActivityNumber;
        #        if (!purchLine.ProjCategoryId)
        #        {
        #            purchLine.ProjCategoryId = this.ProjCategoryId;
        #        }
        #
        #        purchLine.createLine(true,false,false,false,true,true, false, true);
        #        purchLine.LineHeader    = strFmt("@SYS25825", this.inventTable().defaultProductName());
        #        purchLine.write();
        #        lineNumberManager.postUpdateLineNumber();
        #        x++;
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #fieldChanged
        #boolean  fieldChanged(FieldId  fieldId)
        #{
        #    boolean  ok = false;
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    if (this.orig().(fieldId) != this.(fieldId))
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #findAgreementLine
        #/// <summary>
        #/// Checks if an agreement line exists
        #/// </summary>
        #/// <returns>
        #/// An <c>AgreementLine</c> record.
        #/// </returns>
        #public AgreementLine findAgreementLine()
        #{
        #    PurchTable      purchTable = this.purchTable();
        #    AgreementLine   agreementLine;
        #
        #    if (this.MatchingAgreementLine && purchTable.OrderAccount == this.VendAccount )
        #    {
        #        agreementLine = AgreementLine::find(this.MatchingAgreementLine);
        #        if (agreementLine.Agreement != purchTable.MatchingAgreement || agreementLine.IsDeleted)
        #        {
        #            agreementLine = null;
        #        }
        #    }
        #
        #    return agreementLine;
        #}
      ENDSOURCE
      SOURCE #findApproved
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #/// If the purchase order has change request enabled, then the approved record is fetched from the
        #/// <c>PurchLineHistory</c> table, otherwise the orig record would be returned.
        #/// </remarks>
        #public PurchLine findApproved()
        #{
        #    PurchLineHistory    purchLineHistory;
        #    PurchLine           purchLineApproved;
        #
        #    if (!this.RecId)
        #    {
        #        return null;
        #    }
        #
        #    if (this.type().isChangeRequestRequired() && !this.isLatestPOVersionNotArchived())
        #    {
        #        purchLineHistory = PurchLineHistory::find(this);
        #        if (!purchLineHistory)
        #        {
        #            return null;
        #        }
        #
        #        //BP Deviation Documented
        #        purchLineApproved.setTmp();
        #        purchLineApproved.data(this.data());
        #        purchLineApproved.doInsert();
        #
        #        purchLineApproved.initFromPurchLineHistory(purchLineHistory);
        #
        #        return purchLineApproved;
        #    }
        #
        #    return(this.orig());
        #}
      ENDSOURCE
      SOURCE #fshCrossDocking
        #/// <summary>
        #///   Returns the total transfer order quantity for the given purchase order line.
        #/// </summary>
        #/// <param name="_tPurchLine">
        #///   A <c>PurchLine</c> record.
        #/// </param>
        #/// <returns>
        #///   A purchase quantity.
        #/// </returns>
        #//BP deviation documented
        #display PurchQty fshCrossDocking(PurchLine _tPurchLine)
        #{
        #    real                rQty;
        #
        #    InventTransferLine      tInventTransferLine;
        #    InventLocation          tInventLocation;
        #
        #    while select * from tInventLocation
        #        index InventLocationIdx
        #        where tInventLocation.fshStore == NoYes::Yes
        #    {
        #        tInventTransferLine = RetailReplenishmentTransferOrder::findTransferOrderLine(tableNum(PurchLine), _tPurchLine.RecId, tInventLocation.InventLocationId, false);
        #
        #        if (tInventTransferLine)
        #        {
        #            rQty += tInventTransferLine.QtyTransfer;
        #        }
        #    }
        #
        #    return rQty;
        #}
      ENDSOURCE
      SOURCE #getBudgetCheckResult
        #/// <summary>
        #/// Calculates the <c>BudgetCheckResult</c> value for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>BudgetCheckResult</c> value which is calculated by the query.
        #/// </returns>
        #public BudgetCheckResult getBudgetCheckResult()
        #{
        #    ProjBudgetCheckResult projBudgetCheckResult;
        #    ProjBudgetStatus      projBudgetStatus;
        #    BudgetCheckResult     budgetCheckResult;
        #
        #    budgetCheckResult = BudgetSourceSourceDocumentLine::findBudgetCheckResult(this.SourceDocumentLine);
        #
        #    if(this.ProjId && ProjParameters::find().UseBudgeting)
        #    {
        #        projBudgetStatus = ProjBudgetStatus::findBySourceDocumentLine(this.SourceDocumentLine);
        #        projBudgetCheckResult = projBudgetStatus ? projBudgetStatus.BudgetCheckResult : ProjBudgetCheckResult::NoCheck;
        #
        #        //adding projBudgetCheckResult + 1, since this base enum value starts from 0
        #        if (enum2int(budgetCheckResult) >= enum2int(projBudgetCheckResult) + 1)
        #        {
        #            budgetCheckResult = budgetCheckResult;
        #        }
        #        else
        #        {
        #            budgetCheckResult = enum2int(projBudgetCheckResult) + 1;
        #        }
        #    }
        #
        #    return budgetCheckResult;
        #}
      ENDSOURCE
      SOURCE #getDebitCredit
        #DebitCredit getDebitCredit()
        #{
        #    DebitCredit debitCredit;
        #
        #    if (this.LineAmount < 0 || this.QtyOrdered < 0 || this.PurchQty < 0)
        #    {
        #        debitCredit = DebitCredit::Credit;
        #    }
        #    else
        #    {
        #        debitCredit = DebitCredit::Debit;
        #    }
        #
        #    return debitCredit;
        #}
      ENDSOURCE
      SOURCE #getDeliveryEntityRecord
        #/// <summary>
        #///     Gets the delivery entity record based on the postal address.
        #/// </summary>
        #/// <returns>
        #///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
        #/// </returns>
        #public Common getDeliveryEntityRecord()
        #{
        #    return this.TradePostalAddress::getDeliveryEntityRecord();
        #}
      ENDSOURCE
      SOURCE #getEffectiveLinePrice
        #/// <summary>
        #///     Gets the effective price for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The effective price for the purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     For a line that uses advanced pricing, this will be the adjusted unit price, otherwise it is the
        #///     standard unit price value on the line.
        #/// </remarks>
        #public PurchPrice getEffectiveLinePrice()
        #{
        #    PurchPrice              purchPrice;
        #    PDSAdvancedPriceInfo    advancedPriceInfo = this.pdsAdvancedPriceInfo();
        #
        #    if (advancedPriceInfo && advancedPriceInfo.CalculatedUnitPrice)
        #    {
        #        purchPrice = advancedPriceInfo.CalculatedUnitPrice;
        #    }
        #    else
        #    {
        #        purchPrice = this.PurchPrice;
        #    }
        #
        #    return purchPrice;
        #}
      ENDSOURCE
      SOURCE #getGrossVolumePerItem
        #/// <summary>
        #/// Calculates the gross volume per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Volume</c> value, which is the gross volume per item on the line.
        #/// </returns>
        #public Volume getGrossVolumePerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Volume              grossVolume;
        #
        #    if (this.isStocked())
        #    {
        #        grossVolume = this.inventTable(this.ItemId).grossVolume();
        #
        #    }
        #    else
        #    {
        #        if (!this.isCategoryBased())
        #        {
        #            //Volume of non-stocked item is derived from the volume defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossVolume = inventTable.grossVolume();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossVolume = grossVolume * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossVolume;
        #}
      ENDSOURCE
      SOURCE #getGrossWeightPerItem
        #/// <summary>
        #/// Calculates the gross weight per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Weight</c> value, which is the gross weight per item on the line.
        #/// </returns>
        #public Weight getGrossWeightPerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Weight              grossWeight;
        #
        #    if (this.isStocked())
        #    {
        #        grossWeight = this.inventTable(this.ItemId).grossWeight();
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            grossWeight = PurchLineForeignTradeCategory::findpurchLine(this).UnitWeight;
        #        }
        #        else
        #        {
        #            //Weight of non-stocked item is derived from the weight defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossWeight = inventTable.grossWeight();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossWeight = grossWeight * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossWeight;
        #}
      ENDSOURCE
      SOURCE #getItemType
        #/// <summary>
        #/// Displays the <c>ItemType</c> value for the item.
        #/// </summary>
        #/// <returns>
        #/// The <c>ItemType</c> value for the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ItemType getItemType()
        #{
        #    return InventTable::find(this.ItemId).ItemType;
        #}
      ENDSOURCE
      SOURCE #getMiscChargesAmount_IN
        #/// <summary>
        #/// This method is used to get the amount.
        #/// </summary>
        #/// <returns>
        #/// Returns the amount.
        #/// </returns>
        #public Amount getMiscChargesAmount_IN()
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::getMiscChargesAmountPlusLineAmount(this.TableId, this.RecId);
        #}
      ENDSOURCE
      SOURCE #getProjCreditNoteSource
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <param name="update">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #PurchLine getProjCreditNoteSource(boolean  update = false)
        #{
        #    PurchLine               sourcePurchLine;
        #    RefRecId                projCreditNoteSourceRefRecId;
        #    ProjCreditNoteSource    projCreditNoteSource;
        #
        #    projCreditNoteSourceRefRecId = SysTransactionScopeCache::get(classStr(PurchCopying), identifierStr(projCreditNoteSourceRefRecId));
        #    if (projCreditNoteSourceRefRecId)
        #    {
        #        sourcePurchLine = PurchLine::findRecId(projCreditNoteSourceRefRecId, update);
        #    }
        #    else
        #    {
        #        projCreditNoteSource = ProjCreditNoteSource::find(this.RecId);
        #        if (projCreditNoteSource)
        #        {
        #            sourcePurchLine = PurchLine::findRecId(projCreditNoteSource.ProjCreditNoteSource, update);
        #        }
        #    }
        #
        #    return sourcePurchLine;
        #}
      ENDSOURCE
      SOURCE #getPurchCommitmentLine_PSN
        #/// <summary>
        #/// Retrieves the commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </summary>
        #/// <param name="_forupdate">
        #/// true if the commitment line record should be selected for update; otherwise, false.
        #/// </param>
        #/// <returns>
        #/// The commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </returns>
        #public PurchCommitmentLine_PSN getPurchCommitmentLine_PSN(boolean _forupdate = false)
        #{
        #    PurchCommitmentLine_PSN purchCommitmentLine;
        #
        #    if (_forupdate)
        #    {
        #        select firstonly forupdate purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #    else
        #    {
        #        select firstonly purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #
        #    return purchCommitmentLine;
        #}
      ENDSOURCE
      SOURCE #getPurchReqItemName
        #/// <summary>
        #/// Displays the name of the item associated with the related requisitioin line.
        #/// </summary>
        #/// <returns>
        #/// The name of the item associated with the related requisition line.
        #/// </returns>
        #public display ItemNameDisplay getPurchReqItemName()
        #{
        #    if (this.PurchReqLineRefId)
        #    {
        #        return PurchReqLine::findLineRefId(this.PurchReqLineRefId).itemName();
        #    }
        #    else
        #    {
        #        return '';
        #    }
        #}
      ENDSOURCE
      SOURCE #hasAssetAssociated
        #/// <summary>
        #/// Checks whether the line has an associated asset.
        #/// </summary>
        #/// <returns>
        #/// true if the line has asset information set; otherwise, false.
        #/// </returns>
        #boolean hasAssetAssociated()
        #{
        #    return (this.AssetId != '' || this.CreateFixedAsset);
        #}
      ENDSOURCE
      SOURCE #hasOnlyLineAmount
        #boolean hasOnlyLineAmount()
        #{
        #    return this.PriceDiscLine::hasOnlyLineAmount();
        #}
      ENDSOURCE
      SOURCE #hasRetentionTerms
        #/// <summary>
        #/// Checks to see if the Purchase Order Line item has retention terms.
        #/// </summary>
        #/// <returns>
        #/// true if the line has retention terms; otherwise, false.
        #/// </returns>
        #public boolean hasRetentionTerms()
        #{
        #    return (this.psaRetainScheduleId != "");
        #}
      ENDSOURCE
      SOURCE #ICMSReceivableLongTerm_BR
        #/// <summary>
        #/// Indicates whether the <c>ICMS</c> asset is receivable long term.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>ICMS</c> asset is receivable long term; otherwise, false.
        #/// </returns>
        #// <GBR>
        #public NoYes ICMSReceivableLongTerm_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return false;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).TaxICMSOutgoing_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).TaxICMSOutgoing_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #inclTax
        #boolean inclTax()
        #{
        #    return this.SalesPurchLine::inclTax();
        #}
      ENDSOURCE
      SOURCE #initBarcode
        #server void initBarcode(InventDim _inventDim = this.inventDim())
        #{
        #    InventItemBarcode   inventItemBarcode = InventItemBarcode::findPurchBarcodeDimension(this.ItemId, _inventDim);
        #
        #    this.BarCode        = inventItemBarcode.ItemBarCode;
        #    this.BarCodeType    = inventItemBarcode.BarcodeSetupId;
        #}
      ENDSOURCE
      SOURCE #initFromAgreementLine
        #/// <summary>
        #/// Creates a <c>PurchLine</c> table record with the values from the <c>AgreementLine</c> table record.
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A record of the <c>AgreementLine</c> table.
        #/// </param>
        #public void initFromAgreementLine(AgreementLine _agreementLine)
        #{
        #    this.type().initFromAgreementLine(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #initFromBOM
        #void initFromBOM(BOM        bom,
        #                 PurchLine  parentLine)
        #{
        #    InventDim                       inventDim;
        #    PurchTable_RU                   purchTable_RU;
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    this.ItemId             = bom.ItemId;
        #    EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, bom.inventDim(), inventDim);
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        ! inventDim.InventProfileId_RU)
        #    {
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = bom.inventDim().InventProfileId_RU;
        #        }
        #
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = BOMParameters::find().InventProfileId_RU;
        #        }
        #
        #        purchTable_RU = parentLine.purchTable().purchTable_RU();
        #        if (purchTable_RU.InventProfileType_RU &&
        #            purchTable_RU.InventProfileType_RU != inventDim.inventProfile_RU().InventProfileType)
        #        {
        #            throw error(strFmt("@GLS113739",
        #                                this.ItemId,
        #                                inventDim.InventProfileId_RU,
        #                                purchTable_RU.InventProfileType_RU));
        #        }
        #    }
        #    inventDim.InventLocationId  = bom.inventDim().InventLocationId;
        #    inventDim.initFromInventLocation(inventDim.inventLocation());
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #}
      ENDSOURCE
      SOURCE #initFromCORPurchLine
        #/// <summary>
        #///    Initializes a <c>purchLine</c> table buffer based on a <c>purchLine</c> table buffer used for unconfirmed product receipts.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>purchLine</c> table buffer that is to be copied.
        #/// </param>
        #void  initFromCORPurchLine(PurchLine _purchLine)
        #{
        #    this.Requester          = _purchLine.Requester;
        #
        #    this.AssetGroup         = _purchLine.AssetGroup;
        #}
      ENDSOURCE
      SOURCE #initFromInventExternalForProcessing_PL
        #public void initFromInventExternalForProcessing_PL(PlInventExternalForProcessing _inventExternalForProcessing)
        #{
        #    this.ItemId      = _inventExternalForProcessing.ItemId;
        #    this.InventDimId = _inventExternalForProcessing.InventDimId;
        #    this.PurchQty    = _inventExternalForProcessing.InventQty;
        #    this.PurchPrice  = _inventExternalForProcessing.PurchPrice;
        #}
      ENDSOURCE
      SOURCE #initFromInventTable
        #/// <summary>
        #/// Updates the <c>PurchLine</c> based on the given item.
        #/// </summary>
        #/// <param name="_inventTable">
        #///     The <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #public server void initFromInventTable(InventTable _inventTable)
        #{
        #    container               purchLineContainer;
        #    XppILExecutePermission  xppILExecutePermission;
        #
        #    xppILExecutePermission = new XppILExecutePermission();
        #    xppILExecutePermission.assert();
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::packAll();
        #    }
        #    purchLineContainer = runTableMethodIL(tableStr(PurchLine),
        #                        tableStaticMethodStr(PurchLine, initFromInventTableIL),
        #                        [buf2Con(this, true), buf2Con(_inventTable, true)]);
        #    CodeAccessPermission::revertAssert();
        #
        #    this.con2buf(purchLineContainer);
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::unpackAll();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromItemOrCategory
        #/// <summary>
        #///     Initiates a <c>PurchLine</c> table buffer from an based on a item or catagory.
        #/// </summary>
        #/// <param name="_itemId">
        #///     A <c>ItemId</c> type.
        #/// </param>
        #/// <param name="_procurementCategory">
        #///     A <c>PurchCategory</c> type.
        #/// </param>
        #/// <param name="_name">
        #///     The name of the catagory item.
        #/// </param>
        #/// <param name="_searchPrice">
        #///     A Boolean that specifies whether prices and discounts should be initiated; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     A Boolean that specifies whether the address should be initiated from the inventory dimension; optinal.
        #/// </param>
        #public void initFromItemOrCategory(
        #    ItemId          _itemId,
        #    PurchCategory   _procurementCategory,
        #    ItemFreeTxt     _name,
        #    boolean         _searchPrice                = true,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    this.type().initFromItemOrCategory(_itemId, _procurementCategory, _name, _searchPrice, _setAddressFromInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromOrderLineWithMultipleDeliveries
        #/// <summary>
        #/// Initializes a delivery line based on its order line.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// The order line based on which to initialize.
        #/// </param>
        #/// <param name="_onlyCommercialAttributes">
        #/// A Boolean value that indicates whether to initialize only the commercial attributes; optional.
        #/// </param>
        #/// <remarks>
        #/// When the <paramref name="_onlyCommercialAttributes" /> parameter is true it can be used to reset
        #/// commercial attributes on an existing delivery line.When the <paramref
        #/// name="_onlyCommercialAttributes" /> parameter is false it can be used to initialize new delivery
        #/// lines.
        #/// </remarks>
        #void initFromOrderLineWithMultipleDeliveries(PurchLine _purchLine, boolean _onlyCommercialAttributes = false)
        #{
        #    if (!_onlyCommercialAttributes)
        #    {
        #        this.initFromPurchTable(_purchLine.purchTable());
        #        this.initFromPurchLine(_purchLine, true, false, false, false);
        #
        #        this.PurchUnit               = _purchLine.PurchUnit;
        #        this.DeliveryDate            = _purchLine.DeliveryDate;
        #        this.ConfirmedDlv            = _purchLine.ConfirmedDlv;
        #        this.MatchingAgreementLine   = _purchLine.MatchingAgreementLine;
        #        this.PurchReqId              = _purchLine.PurchReqId;
        #
        #        this.LineDeliveryType        = LineDeliveryType::DeliveryLine;
        #    }
        #
        #    this.PurchPrice         = _purchLine.PurchPrice;
        #    this.PriceUnit          = _purchLine.PriceUnit;
        #    this.LinePercent        = _purchLine.LinePercent;
        #    this.LineDisc           = _purchLine.LineDisc;
        #    this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #    this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #    this.DiscAmount         = _purchLine.DiscAmount;
        #    this.DiscPercent        = _purchLine.DiscPercent;
        #    this.PurchMarkup        = _purchLine.PurchMarkup;
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromPriceDisc
        #void initFromPriceDisc(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy = null, boolean _initDateFields = true)
        #{
        #    SchedDate           schedDate;
        #    WorkCalendarSched   workCalendarSched;
        #    PurchLine_IN        purchLine_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _priceDisc.maxRetailPrice_IN();
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    this.SalesPurchLine::setPriceDiscPriceUnitMarkup(_priceDisc, _checkPolicy);
        #
        #    if (this.SkipUpdate == InterCompanySkipUpdate::No
        #        && this.LineDeliveryType == LineDeliveryType::OrderLine)
        #    {
        #        if (!this.DeliveryDate)
        #        {
        #            this.DeliveryDate       = this.purchTable().DeliveryDate;
        #        }
        #
        #        if (_priceDisc.deliveryDays() && this.ManualModifiedField != fieldNum(PurchLine, DeliveryDate))
        #        {
        #            workCalendarSched = new WorkCalendarSched();
        #            schedDate = workCalendarSched.schedDate(SchedDirection::Forward,
        #                                                    systemDateGet(),                                // FromDate
        #                                                    _priceDisc.deliveryDays(),                       // LeadTime
        #                                                    _priceDisc.calendarDays(),
        #                                                    this.vendTable_OrderAccount().PurchCalendarId,
        #                                                    this.type().internalCalendarId());
        #
        #            this.DeliveryDate = max(schedDate, this.DeliveryDate);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromProdBOM
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>ProdBOM</c> record.
        #/// </summary>
        #/// <param name="_prodBOM">
        #///    The <c>ProdBOM</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromProdBOM(ProdBOM   _prodBOM)
        #{
        #    InventDim       inventDim;
        #
        #    this.ItemId                 = _prodBOM.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _prodBOM.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.QtyOrdered             = _prodBOM.QtyInventCalc;
        #    this.RemainInventPhysical   = _prodBOM.QtyInventCalc;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWQty                  = _prodBOM.PdsCWInventCalc;
        #        this.PdsCWRemainInventPhysical = _prodBOM.PdsCWInventCalc;
        #    }
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _prodBOM.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.ReqPlanIdSched         = _prodBOM.ReqPlanIdSched;
        #    this.ReqPOId                = _prodBOM.ReqPOId;
        #
        #    this.DeliveryDate           = max(this.DeliveryDate,_prodBOM.RawMaterialDate);
        #    this.InventRefId            = _prodBOM.ProdId;
        #    this.InventRefTransId       = _prodBOM.InventTransId;
        #    this.ItemRefType            = InventRefType::ProdLine;
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #}
      ENDSOURCE
      SOURCE #initFromProductDimensions
        #server void initFromProductDimensions(InventDim _inventDim = this.inventDim())
        #{
        #    this.initName();
        #    this.initFromVendExternalItemDescription(_inventDim);
        #    this.initBarcode(_inventDim);
        #    this.initVariantId(_inventDim);
        #}
      ENDSOURCE
      SOURCE #initFromProjActivity
        #public void initFromProjActivity(ProjActivity _projActivity)
        #{
        #    if (!_projActivity || !_projActivity.CategoryDefault ||
        #            ProjCategory::find(_projActivity.CategoryDefault).CategoryType != ProjCategoryType::Item)
        #    {
        #        return;
        #    }
        #
        #    this.ProjCategoryId = _projActivity.CategoryDefault;
        #}
      ENDSOURCE
      SOURCE #initFromProjTable
        #void initFromProjTable(ProjTable projTable, boolean updateSalesPriceOnly = false)
        #{
        #    PriceMarkup     markUpDummy;
        #    PriceUnit       salesUnitDummy;
        #
        #    if (!updateSalesPriceOnly)
        #    {
        #        this.ProjSalesCurrencyId    = projTable.currencyId();
        #        this.ProjLinePropertyId     = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #        this.ProjTaxGroupId         = ProjParameters::taxGroupInvoice(this.ProjId);
        #        this.ProjTaxItemGroupId     = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #    }
        #
        #    if (projTable.Type == ProjType::Internal)
        #    {
        #        this.ProjSalesPrice     = 0;
        #    }
        #    else
        #    {
        #        [this.ProjSalesPrice,
        #         salesUnitDummy,
        #         markUpDummy]   = this.inventTable().salesPriceAgreement(
        #                                (this.ConfirmedDlv ? this.ConfirmedDlv : this.DeliveryDate),
        #                                this.inventDim(),
        #                                this.PurchQty,
        #                                this.inventTable().inventUnitId(),
        #                                projTable.CustAccount,
        #                                this.ProjSalesCurrencyId ? this.ProjSalesCurrencyId : projTable.currencyId(),
        #                                ProjTable::findPriceGroup(projTable.ProjId));
        #    }
        #
        #    this.Scrap                  = NoYes::Yes;
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.IsPwp                  = this.psaGetPWPSetting();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on another <c>PurchLine</c> table buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>PurchLine</c> table buffer that is to be copied.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all the account and tax details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantify information; optional.
        #/// </param>
        #/// <param name="_copyProject">
        #///    A Boolean value that specifies whether to copy the project information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A <c>quantity</c> object that sets the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity object that sets the <c>PdsCWQtyy</c> field value of the new <c>purchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     Boolean value that specifies whether to retrieve the address from the inventory dimension; optional.
        #/// </param>
        #void  initFromPurchLine(
        #    PurchLine       _purchLine,
        #    boolean         _copyPrecisely              = true,
        #    boolean         _copyPriceDisc              = true,
        #    boolean         _copyQty                    = true,
        #    boolean         _copyProject                = false,
        #    Qty             _qty                        = _purchLine.PurchQty,
        #    PdsCWInventQty  _cwQty                      = _purchLine.PdsCWQty,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    #ISOCountryRegionCodes
        #    InventDim   inventDim;
        #    PurchLine_W     toPurchLine_W;
        #    PurchLine_W     fromPurchLine_W;
        #
        #    this.initFromItemOrCategory(_purchLine.ItemId, _purchLine.ProcurementCategory, _purchLine.Name, !_copyPriceDisc, false);
        #
        #    this.CreateFixedAsset     = _purchLine.CreateFixedAsset;
        #    this.AssetGroup           = _purchLine.AssetGroup;
        #    this.AssetId              = _purchLine.AssetId;
        #    this.AssetBookId          = _purchLine.AssetBookId;
        #    this.AssetTransTypePurch  = _purchLine.AssetTransTypePurch;
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _purchLine.PurchUnit;
        #        this.QtyOrdered         = _purchLine.PurchQty == _qty ? _purchLine.QtyOrdered : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLine.InventDimId);
        #            this.PurchUnit          = _purchLine.PurchUnit;
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLine.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (!_copyPrecisely)
        #    {
        #        this.initBarcode();
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLine.PurchPrice;
        #        this.PriceUnit          = _purchLine.PriceUnit;
        #        this.LinePercent        = _purchLine.LinePercent;
        #        this.LineDisc           = _purchLine.LineDisc;
        #        this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #        this.PurchMarkup        = _purchLine.PurchMarkup;
        #        this.LineAmount         = _purchLine.LineAmount;
        #        this.DiscAmount         = _purchLine.DiscAmount;
        #        this.DiscPercent        = _purchLine.DiscPercent;
        #
        #        this.pdsCalculationId   = _purchLine.pdsCalculationId;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.Name               = _purchLine.Name;
        #        this.ExternalItemId     = _purchLine.ExternalItemId;
        #        this.LedgerDimension    = _purchLine.LedgerDimension;
        #        this.Blocked            = _purchLine.Blocked;
        #        this.Complete           = _purchLine.Complete;
        #        this.TaxGroup           = _purchLine.TaxGroup;
        #        this.TaxItemGroup       = _purchLine.TaxItemGroup;
        #        this.DefaultDimension   = _purchLine.DefaultDimension;
        #        this.OverDeliveryPct    = _purchLine.OverDeliveryPct;
        #        this.UnderDeliveryPct   = _purchLine.UnderDeliveryPct;
        #        this.Transport          = _purchLine.Transport;
        #        this.Port               = _purchLine.Port;
        #        this.StatProcId         = _purchLine.StatProcId;
        #        this.AccountingDistributionTemplate = _purchLine.AccountingDistributionTemplate;
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #        {
        #            fromPurchLine_W = _purchLine.purchLine_W();
        #            toPurchLine_W   = this.purchLine_W();
        #            toPurchLine_W.PostingProfile_RU     = fromPurchLine_W.PostingProfile_RU;
        #            toPurchLine_W.MarkupCode_RU         = fromPurchLine_W.MarkupCode_RU;
        #            this.packPurchLine_W(toPurchLine_W);
        #        }
        #        this.BarCode            = _purchLine.BarCode;
        #        this.BarCodeType        = _purchLine.BarCodeType;
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]) && this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            this.Tax1099Fields      = _purchLine.Tax1099Fields;
        #            this.Tax1099Amount      = _purchLine.Tax1099Amount;
        #            this.Tax1099State       = _purchLine.Tax1099State;
        #            this.Tax1099StateAmount = _purchLine.Tax1099StateAmount;
        #        }
        #
        #        this.setAddressFromPurchLine(_purchLine);
        #
        #        if (BrazilParameters::isEnabled())
        #        {
        #            this.cfopTable_BR        = _purchLine.cfopTable_BR;
        #            this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #        }
        #
        #    }
        #    else
        #    {
        #        if (_setAddressFromInventDim)
        #        {
        #            this.setAddressFromInventDim(this.inventDim());
        #        }
        #    }
        #
        #    if (_copyProject)
        #    {
        #        this.ProjId             = _purchLine.ProjId;
        #        this.ActivityNumber     = _purchLine.ActivityNumber;
        #        this.ProjCategoryId     = _purchLine.ProjCategoryId;
        #        this.ProjLinePropertyId = _purchLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId= _purchLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId    = _purchLine.ProjSalesUnitId;
        #        this.ProjSalesPrice     = _purchLine.ProjSalesPrice;
        #        this.ProjTaxGroupId     = _purchLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId = _purchLine.ProjTaxItemGroupId;
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.VariantId             = _purchLine.VariantId;
        #    }
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromPurchLine_IN(_purchLine);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine_IN
        #/// <summary>
        #/// Initializes the fields of <c> PurchLine </c> from given <c> PurchLine </c> buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// Buffer of <c> PurchLine </c>.
        #/// </param>
        #public void initFromPurchLine_IN(PurchLine _purchLine)
        #{
        #    PurchLine_IN    purchLineFrom_IN    = _purchLine.purchLine_IN();
        #    PurchLine_IN    purchLineTo_IN      = this.purchLine_IN();
        #
        #    purchLineTo_IN.CompanyLocation_IN   = purchLineFrom_IN.CompanyLocation_IN;
        #    purchLineTo_IN.TaxInformation_IN    = purchLineFrom_IN.TaxInformation_IN;
        #    purchLineTo_IN.VendorLocation_IN    = purchLineFrom_IN.VendorLocation_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLineTo_IN.AssessableValue_IN         = purchLineFrom_IN.AssessableValue_IN;
        #        purchLineTo_IN.MaximumRetailPrice_IN      = purchLineFrom_IN.MaximumRetailPrice_IN;
        #        purchLineTo_IN.vatGoodsType_IN            = purchLineFrom_IN.vatGoodsType_IN;
        #        purchLineTo_IN.NonRecoverablePercent_IN   = purchLineFrom_IN.NonRecoverablePercent_IN;
        #        purchLineTo_IN.ExciseTariffCodes_IN       = purchLineFrom_IN.ExciseTariffCodes_IN;
        #        purchLineTo_IN.CustomsTariffCodeTable_IN  = purchLineFrom_IN.CustomsTariffCodeTable_IN;
        #        purchLineTo_IN.ServiceCodeTable_IN        = purchLineFrom_IN.ServiceCodeTable_IN;
        #        purchLineTo_IN.ExciseRecordType_IN        = purchLineFrom_IN.ExciseRecordType_IN;
        #        purchLineTo_IN.ExciseType_IN              = purchLineFrom_IN.ExciseType_IN;
        #        purchLineTo_IN.gtaServiceCategory_IN      = purchLineFrom_IN.gtaServiceCategory_IN;
        #
        #        if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #            _purchLine.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #            this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #        {
        #            purchLineTo_IN.CustomsMaxRetailPrice_IN   = purchLineFrom_IN.CustomsMaxRetailPrice_IN;
        #            purchLineTo_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLineFrom_IN.CustomsMaxRetailPrice_IN,
        #                                                                            _purchLine.CurrencyCode,
        #                                                                            Direction_IN::Import,
        #                                                                            systemDateGet(),
        #                                                                            false);
        #        }
        #        purchLineTo_IN.IsRecoverableServiceTax_IN     = purchLineFrom_IN.IsRecoverableServiceTax_IN;
        #        purchLineTo_IN.SalesTaxFormTypes_IN  = purchLineFrom_IN.SalesTaxFormTypes_IN;
        #    }
        #    if (TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineTo_IN.tdsGroup_IN                    = purchLineFrom_IN.tdsGroup_IN;
        #        purchLineTo_IN.tcsGroup_IN                    = purchLineFrom_IN.tcsGroup_IN;
        #    }
        #
        #    this.packPurchLine_IN(purchLineTo_IN);
        #}
      ENDSOURCE
      SOURCE #initFromPurchLineHistory
        #/// <summary>
        #/// Initializes the history record that is based on a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record on which to base initialization.
        #/// </param>
        #public void initFromPurchLineHistory(PurchLineHistory _purchLineHistory)
        #{
        #    PurchLineMap purchLineMap;
        #    PurchLineMap_W          purchLineMap_W;
        #    PurchLine_W             purchLine_W;
        #    PurchLineMap_IN         purchLineMap_IN;
        #    PurchLine_IN            purchLine_IN;
        #
        #    purchLineMap.data(_purchLineHistory.data());
        #    this.data(purchLineMap.data());
        #
        #    if (PurchLine_IN::isExtensionEnabled())
        #    {
        #        purchLineMap_IN.data(_purchLineHistory.purchLineHistory_IN());
        #        purchLine_IN.data(purchLineMap_IN.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_IN);
        #    }
        #    if (PurchLine_W::isExtensionEnabled())
        #    {
        #        purchLineMap_W.data(_purchLineHistory.purchLineHistory_W());
        #        purchLine_W.data(purchLineMap_W.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchParmLine_Asset
        #/// <summary>
        #/// Sets the asset-related field values of the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_parmLine_Asset">
        #/// A <c>PurchParmLine_Asset</c> or <c>VendInvoiceInfoLine_Asset</c> table buffer which will be used to
        #/// set the asset-related field values of the <c>PurchLine</c> table.
        #/// </param>
        #client server void initFromPurchParmLine_Asset(VendDocumentLineAssetMap _parmLine_Asset)
        #{
        #    if  (_parmLine_Asset.CreateFixedAsset == NoYes::Yes)
        #    {
        #        if (AssetParameters::find().AssetAllowCreate)
        #        {
        #            this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #            this.AssetGroup          = _parmLine_Asset.AssetGroup;
        #        }
        #        else
        #        {
        #            this.CreateFixedAsset =  NoYes::No;
        #            this.AssetGroup       = '';
        #        }
        #    }
        #    else
        #    {
        #        this.AssetGroup          = '';
        #        this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #    }
        #
        #    this.AssetId             = _parmLine_Asset.AssetId;
        #    this.AssetBookId         = _parmLine_Asset.AssetBookId;
        #    this.AssetTransTypePurch = _parmLine_Asset.AssetTransTypePurch;
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>PurchRFQLine</c> record.
        #/// </summary>
        #/// <param name="_purchRFQLine">
        #///    The <c>PurchRFQLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void initFromPurchRFQLine(PurchRFQLine _purchRFQLine)
        #{
        #    PurchLine_IN        purchLine_IN;
        #
        #    this.ItemId                     = _purchRFQLine.ItemId;
        #    this.ProcurementCategory        = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                            _purchRFQLine.ItemId,
        #                                            EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.DeliveryDate               = _purchRFQLine.DeliveryDate;
        #    this.QtyOrdered                 = _purchRFQLine.QtyOrdered;
        #    this.PurchUnit                  = _purchRFQLine.PurchUnit;
        #    this.LineDisc                   = _purchRFQLine.LineDisc;
        #    this.LinePercent                = _purchRFQLine.LinePercent;
        #    this.LineAmount                 = _purchRFQLine.LineAmount;
        #    this.setInventDimId(_purchRFQLine.InventDimId);
        #    this.Name                       = _purchRFQLine.Name;
        #    this.ExternalItemId             = _purchRFQLine.ExternalItemId;
        #    this.DeliveryPostalAddress      = _purchRFQLine.DeliveryPostalAddress;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.DeliveryName               = _purchRFQLine.DeliveryName;
        #    this.MultiLnDisc                = _purchRFQLine.MultiLnDisc;
        #    this.MultiLnPercent             = _purchRFQLine.MultiLnPercent;
        #    this.PurchMarkup                = _purchRFQLine.PurchMarkup;
        #    this.ReqPOId                    = _purchRFQLine.ReqPOId;
        #    this.ReqPlanIdSched             = _purchRFQLine.ReqPlanIdSched;
        #    this.AssetId                    = _purchRFQLine.AssetId;
        #    this.AssetBookId                = _purchRFQLine.AssetBookId;
        #    this.AssetTransTypePurch        = _purchRFQLine.AssetTransTypePurch;
        #    this.PurchPrice                 = _purchRFQLine.PurchPrice;
        #    this.PurchQty                   = _purchRFQLine.PurchQty;
        #    this.DefaultDimension           = _purchRFQLine.DefaultDimension;
        #    this.TaxGroup                   = _purchRFQLine.TaxGroup;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.ConfirmedDlv               = _purchRFQLine.ConfirmedDlv;
        #    this.InventRefTransId           = _purchRFQLine.InventRefTransId;
        #    this.InventRefId                = _purchRFQLine.InventRefId;
        #    this.TaxItemGroup               = _purchRFQLine.TaxItemGroup;
        #
        #    this.PdsCWQty                   = _purchRFQLine.PdsCWQty;
        #    this.DiscAmount                 = this.discAmount();
        #    this.DiscPercent                = this.discPercent();
        #
        #    if (_purchRFQLine.ProjId)
        #    {
        #        this.ProjId                 = _purchRFQLine.ProjId;
        #        this.ActivityNumber         = _purchRFQLine.ActivityNumber;
        #        this.ProjCategoryId         = _purchRFQLine.ProjCategoryId;
        #        this.ProjLinePropertyId     = _purchRFQLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId    = _purchRFQLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId        = _purchRFQLine.ProjSalesUnitId;
        #        this.ProjSalesPrice         = _purchRFQLine.ProjSalesPrice;
        #        this.ProjTaxGroupId         = _purchRFQLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId     = _purchRFQLine.ProjTaxItemGroupId;
        #        this.ProjTransId            = _purchRFQLine.ProjTransId;
        #    }
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.cfopTable_BR           = _purchRFQLine.cfopTable_BR;
        #        this.TaxServiceCode_BR      = _purchRFQLine.TaxServiceCode_BR;
        #        this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #    }
        #
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.CompanyLocation_IN         = _purchRFQLine.CompanyLocation_IN;
        #        purchLine_IN.TaxInformation_IN          = PurchRFQLineTaxExtensionIN::findBypurchRFQLine(_purchRFQLine.RecId).TaxInformation_IN;
        #        purchLine_IN.CustomsTariffCodeTable_IN  = _purchRFQLine.CustomsTariffCodeTable_IN;
        #        purchLine_IN.ServiceCodeTable_IN        = _purchRFQLine.ServiceCodeTable_IN;
        #        purchLine_IN.gtaServiceCategory_IN      = _purchRFQLine.gtaServiceCategory_IN;
        #        purchLine_IN.ExciseTariffCodes_IN       = _purchRFQLine.ExciseTariffCodes_IN;
        #        purchLine_IN.ExciseRecordType_IN        = _purchRFQLine.ExciseRecordType_IN;
        #        purchLine_IN.ExciseType_IN              = _purchRFQLine.ExciseType_IN;
        #        purchLine_IN.SalesTaxFormTypes_IN       = _purchRFQLine.SalesTaxFormTypes_IN;
        #        purchLine_IN.vatGoodsType_IN            = _purchRFQLine.vatGoodsType_IN;
        #        purchLine_IN.dsa_in                     = _purchRFQLine.dsa_in;
        #        purchLine_IN.VendorLocation_IN          = PurchLine::getVendorLocationId_IN(_purchRFQLine.purchRFQTable().vendTable().Party);
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQReplyLine
        #void initFromPurchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine)
        #{
        #    CompanyInfo             companyInfo;
        #    WorkCalendarSched       workCalendar;
        #    InventItemPurchSetup    itemPurchSetup;
        #    int                     leadTime;
        #    CalendarDays            calDays;
        #    PurchLine_IN            purchLine_IN;
        #
        #    this.DeliveryDate   = _purchRFQReplyLine.DeliveryDate;
        #    if (!this.DeliveryDate)
        #    {
        #        if (_purchRFQReplyLine.LeadTime > 0)
        #        {
        #            leadTime = _purchRFQReplyLine.LeadTime;
        #            calDays  = _purchRFQReplyLine.CalendarDays;
        #        }
        #        else
        #        {
        #            itemPurchSetup  = InventItemPurchSetup::find(PurchRFQLine::findRecId(_purchRFQReplyLine.rfqLineRecId).ItemId, this.InventDimId);
        #            leadTime        = itemPurchSetup.getLeadTime();
        #            calDays         = itemPurchSetup.calendarDays();
        #        }
        #
        #        if (leadTime > 0)
        #        {
        #            companyInfo       = CompanyInfo::find();
        #            workCalendar      = new WorkCalendarSched();
        #            this.DeliveryDate = workCalendar.schedDate(SchedDirection::Forward, systemDateGet(),
        #                                                leadTime, calDays, companyInfo.ShippingCalendarId);
        #        }
        #    }
        #    this.ConfirmedDlv   = _purchRFQReplyLine.DeliveryDate;
        #    this.PurchQty       = _purchRFQReplyLine.PurchQty;
        #    this.PurchUnit      = _purchRFQReplyLine.PurchUnit;
        #    this.PurchPrice     = _purchRFQReplyLine.PurchPrice;
        #    this.PriceUnit      = _purchRFQReplyLine.PriceUnit;
        #    this.LineDisc       = _purchRFQReplyLine.LineDisc;
        #    this.LinePercent    = _purchRFQReplyLine.LinePercent;
        #    this.LineAmount     = _purchRFQReplyLine.LineAmount;
        #    this.ExternalItemId = _purchRFQReplyLine.ExternalItemId;
        #    this.MultiLnDisc    = _purchRFQReplyLine.MultiLnDisc;
        #    this.MultiLnPercent = _purchRFQReplyLine.MultiLnPercent;
        #    this.PurchMarkup    = _purchRFQReplyLine.PurchMarkup;
        #    this.Name           = _purchRFQReplyLine.Name;
        #
        #    this.PdsCWQty       = _purchRFQReplyLine.PdsCWQty;
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _purchRFQReplyLine.MaximumRetailPrice_IN;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #server void  initFromPurchTable(PurchTable _purchTable, boolean _ignoreInventDim = false)
        #{
        #    this.PurchaseType = _purchTable.PurchaseType;
        #
        #    this.type(_purchTable).initFromPurchTable(_purchTable, _ignoreInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromReqPO
        #/// <summary>
        #///     Initializes the <c>PurchLine</c> record from the <c>ReqPO</c> record.
        #/// </summary>
        #/// <param name="_reqPO">
        #///    The <c>ReqPO</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromReqPO(ReqPO  _reqPO)
        #{
        #    this.ItemId                 = _reqPO.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _reqPO.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #
        #    this.setInventDimId(_reqPO.CovInventDimId);
        #
        #    this.ReqPOId                = _reqPO.RefId;
        #    this.ReqPlanIdSched         = ReqPlanVersion::find(_reqPO.PlanVersion).ReqPlanId;
        #
        #    this.PurchQty               = _reqPO.PurchQty;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWQty                  = _reqPO.PdsCWReqQty;
        #        this.PdsCWRemainInventPhysical = _reqPO.PdsCWReqQty;
        #    }
        #
        #    this.RemainPurchPhysical    = _reqPO.PurchQty;
        #    this.PurchUnit              = _reqPO.PurchUnit;
        #
        #    this.QtyOrdered             = this.calcQtyOrdered();
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #}
        #
      ENDSOURCE
      SOURCE #initFromSalesLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>SalesLine</c> record.
        #/// </summary>
        #/// <param name="_salesLine">
        #///    The <c>SalesLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromSalesLine(SalesLine _salesLine)
        #{
        #    SalesTable                  salesTable;
        #    InventDim                   inventDim = this.inventDim();
        #    MCRSalesLineDropShipment    mcrSalesLineDropShipment = _salesLine.mcrSalesLineDropShipment();
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.ActivityNumber = _salesLine.ActivityNumber;
        #    }
        #
        #    this.ItemId = _salesLine.ItemId;
        #    // SalesCategory cannot be used for purch so we look it up from the item
        #    this.ProcurementCategory = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                    _salesLine.ItemId,
        #                                    EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.setStockedProduct();
        #    this.Name = _salesLine.Name;
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _salesLine.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.InventRefId                = _salesLine.SalesId;
        #    this.InventRefTransId           = _salesLine.InventTransId;
        #    this.ItemRefType                = InventRefType::Sales;
        #    this.ReturnStatus               = _salesLine.ReturnStatus;
        #
        #    if (this.isDropShipment())
        #    {
        #        salesTable = _salesLine.salesTable();
        #        this.CustomerRef                = salesTable.CustomerRef;
        #        this.CustPurchaseOrderFormNum   = salesTable.PurchOrderFormNum;
        #    }
        #
        #    this.ProjId = _salesLine.ProjId;
        #    this.ProjCategoryId = _salesLine.ProjCategoryId;
        #    if (this.ProjId && !_salesLine.ProjId)
        #    {
        #        this.Scrap = NoYes::No;
        #    }
        #
        #    // If no itemid, then keep the name from sales.
        #    if (this.ItemId)
        #    {
        #        this.initName();
        #        this.initFromVendExternalItemDescription();
        #    }
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromSalesLine_IN(_salesLine);
        #    }
        #
        #    if (mcrSalesLineDropShipment.DropShipment)
        #    {
        #        this.mcrDropShipComment  = mcrSalesLineDropShipment.DropShipComment;
        #        this.mcrDropShipStatus   = MCRDropShipStatus::POCreated;
        #        this.mcrDropShipment     = NoYes::Yes;
        #    }
        #
        #    // Set delivery date of purch line to match salesLine
        #    if(_salesLine.deliveryDate())
        #    {
        #        this.DeliveryDate  = _salesLine.deliveryDate();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesLine_IN
        #/// <summary>
        #/// Initializes the fields of <c> SalesLine </c> from given <c> SalesLine </c> buffer.
        #/// </summary>
        #/// <param name="_salesLine">
        #/// Buffer of <c> SalesLine </c>.
        #/// </param>
        #void initFromSalesLine_IN(SalesLine _salesLine)
        #{
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #    SalesLine_IN    salesLine_IN = _salesLine.salesLine_IN();
        #
        #    purchLine_IN.CompanyLocation_IN         = salesLine_IN.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = salesLine_IN.TaxInformation;
        #    purchLine_IN.ExciseTariffCodes_IN       = salesLine_IN.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = salesLine_IN.CustomsTariffCodeTable_IN;
        #    purchLine_IN.ServiceCodeTable_IN        = salesLine_IN.ServiceCodeTable_IN;
        #    purchLine_IN.ExciseType_IN              = salesLine_IN.ExciseType_IN;
        #    purchLine_IN.ExciseRecordType_IN        = salesLine_IN.ExciseRecordType_IN;
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #initFromTmpPurchLine
        #/// <summary>
        #///    Initiates a <c>PurchLine</c> record with values based on <c>TmpPurchLine</c> record.
        #/// </summary>
        #/// <param name="_tmpPurchLine">
        #///    A record of the table <c>TmpPurchLine</c>.
        #/// </param>
        #public void initFromTmpPurchLine(TmpPurchLine _tmpPurchLine)
        #{
        #    this.type().initFromTmpPurchLine(_tmpPurchLine);
        #}
        #
      ENDSOURCE
      SOURCE #initFromTmpPurchLinePrice
        #void initFromTmpPurchLinePrice(TmpPurchLinePrice _tmpPurchLinePrice)
        #{
        #    this.LineAmount     = _tmpPurchLinePrice.LineAmount;
        #    this.PurchPrice     = _tmpPurchLinePrice.Price;
        #
        #    this.LineDisc       = _tmpPurchLinePrice.LineDisc;
        #    this.LinePercent    = _tmpPurchLinePrice.LinePercent;
        #
        #    this.MultiLnDisc    = _tmpPurchLinePrice.MultiLineDisc;
        #    this.MultiLnPercent = _tmpPurchLinePrice.MultiLinePercent;
        #
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #
        #    this.PurchMarkup    = _tmpPurchLinePrice.Markup;
        #
        #    this.PriceUnit      = _tmpPurchLinePrice.PriceUnit;
        #}
      ENDSOURCE
      SOURCE #initFromTmpSuppItem
        #void  initFromTmpSuppItem(TmpSuppItem _tmpSuppItem)
        #{
        #    InventDim               inventDim;
        #    this.ItemId             = _tmpSuppItem.ItemId;
        #    inventDim               = this.inventDim();
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), InventDim::find(_tmpSuppItem.InventDimId));
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #    this.initFromVendExternalItemDescription();
        #
        #    this.PurchQty           = _tmpSuppItem.Qty;
        #    this.QtyOrdered         = this.calcQtyOrdered();
        #
        #    if (_tmpSuppItem.SuppItemFree)
        #    {
        #        this.PurchPrice     = 0.0;
        #        this.LinePercent    = 0.0;
        #        this.LineDisc       = 0.0;
        #        this.MultiLnDisc    = 0.0;
        #        this.MultiLnPercent = 0.0;
        #        this.PurchMarkup    = 0.0;
        #        this.DiscAmount     = 0.0;
        #        this.DiscPercent    = 0.0;
        #    }
        #
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromVendExternalItemDescription
        #server void initFromVendExternalItemDescription(InventDim _inventDim = this.inventDim())
        #{
        #    VendExternalItemDescription vendExternalItemDescription = new VendExternalItemDescription(this.ItemId, _inventDim, this.purchTable().OrderAccount);
        #
        #    if (vendExternalItemDescription.findExternalDescription())
        #    {
        #        this.ExternalItemId = vendExternalItemDescription.externalItemId();
        #        if (vendExternalItemDescription.externalItemFreeTxt())
        #        {
        #            if (VendFormletterParameters::find().ExternalItemOverwriteAppend == OverwriteAppend::Overwrite)
        #            {
        #                this.Name =  vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #            else
        #            {
        #                this.initName(this.inventTable());
        #                if (this.Name)
        #                {
        #                    this.Name += '\n';
        #                }
        #                this.Name += vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoice4PaymTrans_RU
        #public server void initFromVendInvoice4PaymTrans_RU(VendInvoice4PaymTrans_RU _vendInvoice4PaymTrans,
        #                                                    boolean                  _copyPrecisely = true,
        #                                                    boolean                  _copyPriceDisc = true,
        #                                                    boolean                  _copyQty       = true,
        #                                                    Qty                      _qty           = _vendInvoice4PaymTrans.Qty
        #                                                    , PdsCWInventQty         _pdsCWQty      = pdsIsCWItem(_vendInvoice4PaymTrans.ItemId) ? _vendInvoice4PaymTrans.PdsCWQty : 0
        #                                                    )
        #{
        #    InventDim inventDim;
        #
        #    this.initFromItemOrCategory(_vendInvoice4PaymTrans.ItemId, _vendInvoice4PaymTrans.Category, _vendInvoice4PaymTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.InventDimId    = _vendInvoice4PaymTrans.InventDimId;
        #        this.PurchQty       = _qty;
        #        this.PurchUnit      = _vendInvoice4PaymTrans.PurchUnit;
        #        this.PdsCWQty       = _pdsCWQty;
        #        this.QtyOrdered     = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim           = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoice4PaymTrans.inventDim(), inventDim);
        #
        #        this.InventDimId    = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice     = _vendInvoice4PaymTrans.PurchPrice;
        #        this.PriceUnit      = _vendInvoice4PaymTrans.PriceUnit;
        #        this.LinePercent    = _vendInvoice4PaymTrans.LinePercent;
        #        this.LineDisc       = _vendInvoice4PaymTrans.LineDisc;
        #        this.MultiLnDisc    = _vendInvoice4PaymTrans.MultiLnDisc;
        #        this.MultiLnPercent = _vendInvoice4PaymTrans.MultiLnPercent;
        #        this.PurchMarkup    = _vendInvoice4PaymTrans.PurchMarkup;
        #        this.LineAmount     = _vendInvoice4PaymTrans.LineAmount;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.InventDimId      = _vendInvoice4PaymTrans.InventDimId;
        #        this.Name             = _vendInvoice4PaymTrans.Name;
        #        this.ExternalItemId   = _vendInvoice4PaymTrans.ExternalItemId;
        #        this.TaxGroup         = _vendInvoice4PaymTrans.TaxGroup;
        #        this.TaxItemGroup     = _vendInvoice4PaymTrans.TaxItemGroup;
        #        this.DefaultDimension = _vendInvoice4PaymTrans.DefaultDimension;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing invoice line.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #///    The <c>VendInvoiceTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A <c>Boolean</c> value that specifies whether to precisely copy all details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A <c>Boolean</c> value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A <c>Boolean</c> value that specifies whether to copy the quantity information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_pdsCWQty">
        #///    A catch weight quantity which overrides the <c>PdsCWQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than the value of the other table buffer; optional.
        #/// </param>
        #server void  initFromVendInvoiceTrans(VendInvoiceTrans  _vendInvoiceTrans,
        #                                      boolean           _copyPrecisely = true,
        #                                      boolean           _copyPriceDisc = true,
        #                                      boolean           _copyQty       = true,
        #                                      Qty               _qty           = _vendInvoiceTrans.Qty
        #                                      ,PdsCWInventQty   _pdsCWQty      = pdsIsCWItem(_vendInvoiceTrans.ItemId) ? _vendInvoiceTrans.PdsCWQty : 0
        #                                    )
        #{
        #    InventDim   inventDim;
        #
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #
        #    this.initFromItemOrCategory(_vendInvoiceTrans.ItemId, _vendInvoiceTrans.ProcurementCategory, _vendInvoiceTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendInvoiceTrans.PurchUnit;
        #        this.QtyOrdered         = _vendInvoiceTrans.Qty == _qty ? _vendInvoiceTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _pdsCWQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoiceTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _vendInvoiceTrans.PurchPrice;
        #        this.PriceUnit          = _vendInvoiceTrans.PriceUnit;
        #        this.LinePercent        = _vendInvoiceTrans.LinePercent;
        #        this.LineDisc           = _vendInvoiceTrans.LineDisc;
        #        this.MultiLnDisc        = _vendInvoiceTrans.MultiLnDisc;
        #        this.MultiLnPercent     = _vendInvoiceTrans.MultiLnPercent;
        #        this.PurchMarkup        = _vendInvoiceTrans.PurchMarkup;
        #        this.LineAmount         = _vendInvoiceTrans.LineAmount;
        #        this.DiscAmount         = this.discAmount();
        #        this.DiscPercent        = this.discPercent();
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.Name               = _vendInvoiceTrans.Name;
        #        this.ExternalItemId     = _vendInvoiceTrans.ExternalItemId;
        #        this.LedgerDimension    = _vendInvoiceTrans.LedgerDimension;
        #        this.TaxGroup           = _vendInvoiceTrans.TaxGroup;
        #        this.TaxItemGroup       = _vendInvoiceTrans.TaxItemGroup;
        #        this.DefaultDimension   = _vendInvoiceTrans.DefaultDimension;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #        this.Transport          = _vendInvoiceTrans.Transport;
        #        this.Port               = _vendInvoiceTrans.Port;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #    }
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromVendInvoiceTrans_IN(_vendInvoiceTrans, _qty);
        #    }
        #
        #
        #    this.setAddressFromInventDim(this.inventDim()
        #    , !_copyPrecisely
        #    );
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.MarkupCode_RU          = _vendInvoiceTrans.MarkupCode_RU;
        #        this.packPurchLine_W(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans_IN
        #/// <summary>
        #/// Reads the table buffer and initialize the field of current table.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #/// The table buffer is used to find the record.
        #/// </param>
        #/// <param name="_qty">
        #/// The value is set.
        #/// </param>
        #private void initFromVendInvoiceTrans_IN(VendInvoiceTrans  _vendInvoiceTrans, Qty _qty)
        #{
        #    PurchLine       purchLineLoc;
        #    VendInvoiceJour vendInvoiceJourLoc;
        #    RealBase        factor;
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.tdsGroup_IN                = _vendInvoiceTrans.tdsGroup_IN;
        #    purchLine_IN.tcsGroup_IN                = _vendInvoiceTrans.tcsGroup_IN;
        #    purchLine_IN.CreditNoteDate_IN          = _vendInvoiceTrans.InvoiceDate;
        #    purchLine_IN.CompanyLocation_IN         = _vendInvoiceTrans.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = VendInvoiceTransTaxExtensionIN::findByVendInvoiceTrans(_vendInvoiceTrans.RecId).TaxInformation_IN;
        #    purchLine_IN.TaxWithholdLineNum_IN      = _vendInvoiceTrans.LineNum;
        #    purchLine_IN.gtaServiceCategory_IN      = _vendInvoiceTrans.gtaServiceCategory_IN;
        #    purchLine_IN.ExciseRecordType_IN        = _vendInvoiceTrans.ExciseRecordType_IN;
        #    purchLine_IN.ExciseType_IN              = _vendInvoiceTrans.ExciseType_IN;
        #    purchLine_IN.ExciseTariffCodes_IN       = _vendInvoiceTrans.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = _vendInvoiceTrans.CustomsTariffCodeTable_IN;
        #    purchLine_IN.VendorLocation_IN          = _vendInvoiceTrans.VendorLocation_IN;
        #    purchLine_IN.AssessableValue_IN         = _vendInvoiceTrans.AssessableValue_IN;
        #    purchLine_IN.MaximumRetailPrice_IN      = _vendInvoiceTrans.MaximumRetailPrice_IN;
        #    purchLine_IN.vatGoodsType_IN            = _vendInvoiceTrans.vatGoodsType_IN;
        #    purchLine_IN.NonRecoverablePercent_IN   = _vendInvoiceTrans.NonRecoverablePercent_IN;
        #    purchLine_IN.SalesTaxFormTypes_IN       = _vendInvoiceTrans.SalesTaxFormTypes_IN;
        #    purchLine_IN.dsa_in                     = _vendInvoiceTrans.dsa_in;
        #
        #    vendInvoiceJourLoc = _vendInvoiceTrans.vendInvoiceJour();
        #
        #    if (vendInvoiceJourLoc)
        #    {
        #        purchLine_IN.TaxWithholdVoucher_IN = vendInvoiceJourLoc.LedgerVoucher;
        #    }
        #
        #    purchLineLoc = PurchLine::findInventTransId(_vendInvoiceTrans.InventTransId);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        purchLineLoc.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #        this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #    {
        #        purchLine_IN.CustomsMaxRetailPrice_IN   = purchLineLoc.purchLine_IN().CustomsMaxRetailPrice_IN;
        #        purchLine_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchLineLoc.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
        #    }
        #
        #    if (_vendInvoiceTrans.Qty != _qty)
        #    {
        #        factor = _vendInvoiceTrans.AssessableValue_IN / _vendInvoiceTrans.Qty;
        #        purchLine_IN.AssessableValue_IN = factor * _qty;
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValue_IN = _vendInvoiceTrans.AssessableValue_IN;
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendPackingSlipTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing slip line.
        #/// </summary>
        #/// <param name="_vendPackingSlipTrans">
        #///    The <c>VendPackingSlipTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all details.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantity information.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity which is used to set the value of the <c>PurchLine</c> catch weight quantity field.
        #/// </param>
        #server void  initFromVendPackingSlipTrans(VendPackingSlipTrans          _vendPackingSlipTrans,
        #                                          boolean                       _copyPrecisely,
        #                                          boolean                       _copyPriceDisc,
        #                                          boolean                       _copyQty,
        #                                          Qty                           _qty
        #                                          , PdsCWInventQty              _cwQty  = #PdsCatchWeightEnabled ? _vendPackingSlipTrans.PdsCWQty: 0
        #                                          )
        #{
        #    InventDim                   inventDim;
        #
        #    this.initFromItemOrCategory(_vendPackingSlipTrans.ItemId, _vendPackingSlipTrans.ProcurementCategory, _vendPackingSlipTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendPackingSlipTrans.PurchUnit;
        #        this.QtyOrdered         = _vendPackingSlipTrans.Qty == _qty ? _vendPackingSlipTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendPackingSlipTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _vendPackingSlipTrans.Name;
        #        this.ExternalItemId     = _vendPackingSlipTrans.ExternalItemId;
        #        this.DefaultDimension   = _vendPackingSlipTrans.DefaultDimension;
        #        this.Transport          = _vendPackingSlipTrans.Transport;
        #        this.Port               = _vendPackingSlipTrans.Port;
        #        this.StatProcId         = _vendPackingSlipTrans.StatProcId;
        #        this.AccountingDistributionTemplate = _vendPackingSlipTrans.purchLine().AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendTable
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>VendTable</c> record.
        #/// </summary>
        #/// <param name="_vendTable">
        #///    The <c>VendTable</c> record from which to initialize the <c>PurchLine</c> record; optional.
        #/// </param>
        #void initFromVendTable (VendTable _vendTable = VendTable::find(this.VendAccount))
        #{
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party == _vendTable.Party;
        #
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.VendorLocation_IN    = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    #ISOCountryRegionCodes
        #
        #    this.Tax1099Fields = _vendTable.Tax1099Fields;
        #    if (_vendTable
        #        && _vendTable.TaxWithholdCalculate == NoYes::Yes
        #        && (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]) || BrazilParameters::isEnabled()))
        #    {
        #        this.TaxWithholdGroup_TH = _vendTable.TaxWithholdGroup;
        #    }
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.OperationType_MX = _vendTable.OperationType_MX;
        #    }
        #}
      ENDSOURCE
      SOURCE #initName
        #void initName(InventTable inventTable = this.inventTable(), EcoResCategoryId _procurementCategory = this.ProcurementCategory)
        #{
        #    this.Name = PurchParameters::nameAndOrDescription(inventTable, this.purchTable().LanguageId, this.InventDimId, EcoResCategory::find(_procurementCategory));
        #}
      ENDSOURCE
      SOURCE #initPurchQty
        #void  initPurchQty()
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.initPurchQty();
        #}
      ENDSOURCE
      SOURCE #initValue
        #public void initValue(PurchaseType _purchaseType = this.PurchaseType)
        #{
        #    PurchLineView_IN    purchLineView_IN;
        #
        #    this.PurchaseType   = _purchaseType;
        #    this.WorkflowState  = TradeWorkflowState::NotSubmitted;
        #
        #    super();
        #
        #    this.type().initValue();
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineView_IN = this.purchLineView_IN();
        #        purchLineView_IN.SalesPurchJournalLine_IN::initFromCompanyInformation();
        #        purchLineView_IN.SalesPurchJournalLine_IN::initFromVendorInformation(this.VendAccount);
        #        purchLineView_IN.saveToPurchLine(this);
        #    }
        #}
      ENDSOURCE
      SOURCE #initVariantId
        #/// <summary>
        #/// Initializes the <c>VariantId</c> field in the <c>RetailVariantId</c> value of the current <c>InventDim</c> record
        #/// if there is a <c>InventDimCombination</c> table record for the current item and its inventory dimensions available.
        #/// Otherwise the <c>VariantId</c> field is initialized in the empty string.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The related <c>InventDim</c> table record.
        #/// </param>
        #public void initVariantId(InventDim _inventDim = this.inventDim())
        #{
        #    InventDimCombination comb;
        #    comb = InventDimCombination::findByInventDim(this.ItemId, _inventDim);
        #
        #    if (comb)
        #    {
        #        this.VariantId = comb.RetailVariantId;
        #    }
        #    else
        #    {
        #        this.VariantId = "";
        #    }
        #}
      ENDSOURCE
      SOURCE #insert
        #public void  insert(
        #    boolean     dropInvent                      = false,
        #    boolean     findMarkup                      = true,
        #    boolean     updatePurchTableDistributions   = true,
        #    boolean     _skipPurchTableUpdate           = false,
        #    boolean     _skipInterCompanyCalcDisc       = false)
        #{
        #    PurchLineType               purchLineType;
        #    WHSPurchLine                whsPurchLine;
        #    WHSAutoCreateLoadLinePurch  autoCreateLoadLinePurch;
        #
        #    ttsbegin;
        #
        #    purchLineType = this.type(this.purchTable(true));
        #    purchLineType.insert(dropInvent, findMarkup, updatePurchTableDistributions, _skipPurchTableUpdate, _skipInterCompanyCalcDisc);
        #
        #    ttscommit;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        PurchTotalsSummaryController::onInsert(this);
        #    }
        #
        #    if (WHSPurchLine::isExtensionRecordNeeded(this))
        #    {
        #        whsPurchLine = this.whsPurchLineForInsert();
        #        whsPurchLine.initFromPurchLine(this);
        #        whsPurchLine.insert();
        #    }
        #
        #    autoCreateLoadLinePurch = WHSAutoCreateLoadLine::newFromSourceLineTableBuffer(this);
        #    autoCreateLoadLinePurch.autoCreateLoadLine();
        #    PlSADPurchTable::puchLineAdded(this);
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdated
        #public boolean interCompanyIsBeingUpdated(boolean _showWarning = true)
        #{
        #    SalesLine           salesLine;
        #    InventTransOrigin   inventTransOrigin;
        #    InventTrans         inventTrans;
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.isStocked())
        #        {
        #            inventTransOrigin = null;
        #            select firstonly RecId from inventTransOrigin
        #                where inventTransOrigin.InventTransId == this.InventTransId
        #                exists join inventTrans
        #                   where inventTrans.InventTransOrigin   == inventTransOrigin.RecId
        #                   &&   (inventTrans.StatusReceipt       == StatusReceipt::Received
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Registered
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Arrived
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Deducted
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Picked
        #                     ||  inventTrans.TransChildType      != InventTransChildType::None);
        #
        #            if (inventTransOrigin.RecId)
        #            {
        #                ret = true;
        #                if (_showWarning)
        #                {
        #                    setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                    setPrefix(#PreFixField(purchTable, PurchId));
        #                    checkFailed("@SYS93839");
        #                }
        #            }
        #            else
        #            {
        #                if (this.PurchStatus != PurchStatus::Invoiced)
        #                {
        #                    select TableId from inventTransOrigin
        #                        where inventTransOrigin.InventTransId == this.InventTransId
        #                        join sum(Qty) from inventTrans
        #                            where inventTrans.InventTransOrigin == inventTransOrigin.RecId
        #                            &&   (inventTrans.StatusReceipt     == StatusReceipt::Purchased
        #                               || inventTrans.StatusIssue       == StatusIssue::Sold);
        #
        #                    if (inventTrans.Qty != 0)
        #                    {
        #                        ret = true;
        #                        if (_showWarning)
        #                        {
        #                            setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                            setPrefix(#PreFixField(purchTable, PurchId));
        #                            checkFailed("@SYS93839");
        #                        }
        #                    }
        #                }
        #            }
        #        }
        #        else
        #        {
        #            ret = this.interCompanyIsBeingUpdatedNonInventoried(_showWarning);
        #        }
        #
        #        if (!ret
        #        &&  this.InterCompanyInventTransId)
        #        {
        #            changecompany(purchTable.InterCompanyCompanyId)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #
        #                salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId);
        #                if (salesLine)
        #                {
        #                    ret = salesLine.interCompanyIsBeingUpdated(_showWarning);
        #                }
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdatedNonInventoried
        #/// <summary>
        #/// Checks whether the non stocked intercompany order line is being updated.
        #/// </summary>
        #/// <param name="_showWarning">
        #/// A Boolean value that specifies whether to show warnings for failed checks; optional.
        #/// </param>
        #/// <returns>
        #/// true if the non stocked intercompany order line is being updated; otherwise, false.
        #/// </returns>
        #public boolean interCompanyIsBeingUpdatedNonInventoried(boolean _showWarning = true)
        #{
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.registered() || this.receivedInTotal())
        #        {
        #            ret = true;
        #            if (_showWarning)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                setPrefix(#PreFixField(purchTable, PurchId));
        #                checkFailed("@SYS93839");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyLineAmount
        #AmountCur interCompanyLineAmount(PurchQty      _purchQty    = this.PurchQty,
        #                                 InvoiceDate   _invoiceDate = this.DeliveryDate,
        #                                 Tax           _tax         = null)
        #{
        #    AmountCur       lineAmount;
        #    SalesLine       salesLine;
        #
        #    lineAmount = 0;
        #    if (this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.RecId)
        #        {
        #            lineAmount = Currency::curAmount2CurAmount(salesLine.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax),salesLine.CurrencyCode,this.CurrencyCode,_invoiceDate);
        #        }
        #        else
        #        {
        #            lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #        }
        #    }
        #    else
        #    {
        #        lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #    }
        #    return lineAmount;
        #}
      ENDSOURCE
      SOURCE #interCompanyOriginDisplay
        #//BP Deviation Documented
        #display InterCompanyOriginDisplay interCompanyOriginDisplay()
        #{
        #    InterCompanyOriginDisplay   interCompanyOriginDisplay;
        #    DictEnum                    dictEnum = new DictEnum(enumNum(InterCompanyOrigin));
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        interCompanyOriginDisplay = dictEnum.value2Name(this.InterCompanyOrigin);
        #    }
        #    return interCompanyOriginDisplay;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchaseLeadDate
        #server TransDate interCompanyPurchaseLeadDate(TransDate _deliveryDate)
        #{
        #    LeadTime                leadTime;
        #    CalendarDays            calendarDays;
        #    ReqItemTable            reqItemTable            = ReqItemTable::find(this.ItemId,this.InventDimId);
        #    PriceDisc               priceDisc;
        #    InventItemPurchSetup    inventItemPurchSetup    = InventItemPurchSetup::find(this.ItemId,this.InventDimId);
        #    TransDate               leadTimeDate;
        #    WorkCalendarSched       workCalendarSched;
        #
        #    if (reqItemTable.LeadTimePurchaseActive)
        #    {
        #        leadTime     = reqItemTable.LeadTimePurchase;
        #        calendarDays = reqItemTable.CalendarDaysPurchase;
        #    }
        #    else
        #    {
        #        priceDisc = PriceDisc::newFromSalesPurchLine(this, this.inventDim());
        #        priceDisc.findPrice(this.priceGroupId());
        #        if (priceDisc.deliveryDays())
        #        {
        #            leadTime     = priceDisc.deliveryDays();
        #            calendarDays = priceDisc.calendarDays();
        #        }
        #        else
        #        {
        #            leadTime     = inventItemPurchSetup.getLeadTime();
        #            calendarDays = inventItemPurchSetup.calendarDays();
        #        }
        #    }
        #
        #    workCalendarSched = new WorkCalendarSched();
        #    leadTimeDate = workCalendarSched.schedDate(SchedDirection::Backward,
        #                                               _deliveryDate,
        #                                               leadTime,
        #                                               calendarDays,
        #                                               this.vendTable_OrderAccount().PurchCalendarId,
        #                                               this.type().internalCalendarId());
        #
        #
        #    return leadTimeDate;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchLineExist
        #boolean interCompanyPurchLineExist()
        #{
        #    return SalesLine::findInventTransId(this.InventRefTransId).InterCompanyInventTransId ? true : false;
        #}
      ENDSOURCE
      SOURCE #interCompanyRevertMarkupTrans
        #server void interCompanyRevertMarkupTrans()
        #{
        #    SalesLine           salesLine;
        #    CustInvoiceTrans    custInvoiceTrans;
        #    VendInvoiceTrans    vendInvoiceTrans;
        #
        #    if (this.purchTable().isInterCompanyOrder()
        #    &&  this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.InventTransIdReturn)
        #        {
        #            select firstonly InventRefType, InventRefTransId from custInvoiceTrans
        #                   where custInvoiceTrans.InventTransId ==  salesLine.InventTransIdReturn
        #                   &&    custInvoiceTrans.Qty           == -salesLine.SalesQty;
        #            if (custInvoiceTrans.InventRefType == InventRefType::Purch
        #            &&  custInvoiceTrans.InventRefTransId)
        #            {
        #                select firstonly vendInvoiceTrans
        #                       where vendInvoiceTrans.InventTransId ==  custInvoiceTrans.InventRefTransId
        #                       &&    vendInvoiceTrans.Qty           == -salesLine.SalesQty;
        #                if (vendInvoiceTrans)
        #                {
        #                    Markup::copy(true,vendInvoiceTrans,this);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLine
        #SalesLine  interCompanySalesLine(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        changecompany(this.purchTable().InterCompanyCompanyId)
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId,_forUpdate);
        #        }
        #
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLineOriginal
        #SalesLine interCompanySalesLineOriginal(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        changecompany(
        #                      this.company()
        #                      )
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InventRefTransId,_forUpdate);
        #        }
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanyUpdateNow
        #boolean  interCompanyUpdateNow()
        #{
        #    boolean  ok;
        #    PurchLine_IN    purchLine_IN;
        #    boolean         taxParameterEnabled_IN = TaxParameters::checkTaxParameters_IN();
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    if (taxParameterEnabled_IN)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #    }
        #
        #    if (this.orig().ItemId                      != this.ItemId
        #    ||  this.orig().InventDimId                 != this.InventDimId
        #    ||  this.orig().DeliveryDate                != this.DeliveryDate
        #    ||  this.orig().ConfirmedDlv                != this.ConfirmedDlv
        #    ||  this.orig().ShippingDateRequested       != this.ShippingDateRequested
        #    ||  this.orig().ShippingDateConfirmed       != this.ShippingDateConfirmed
        #    ||  this.orig().LineNumber                  != this.LineNumber
        #    ||  this.orig().InventTransId               != this.InventTransId
        #    ||  this.orig().PurchQty                    != this.PurchQty
        #    ||  this.orig().PurchUnit                   != this.PurchUnit
        #    ||  this.orig().OverDeliveryPct             != this.OverDeliveryPct
        #    ||  this.orig().UnderDeliveryPct            != this.UnderDeliveryPct
        #    ||  this.orig().DeliveryPostalAddress       != this.DeliveryPostalAddress
        #    ||  this.orig().DeliveryName                != this.DeliveryName
        #    ||  this.orig().DefaultDimension            != this.DefaultDimension
        #    ||  this.orig().PurchPrice                  != this.PurchPrice
        #    ||  this.orig().PriceUnit                   != this.PriceUnit
        #    ||  this.orig().LineAmount                  != this.LineAmount
        #    ||  this.orig().PurchMarkup                 != this.PurchMarkup
        #    ||  this.orig().LineDisc                    != this.LineDisc
        #    ||  this.orig().LinePercent                 != this.LinePercent
        #    ||  this.orig().MultiLnDisc                 != this.MultiLnDisc
        #    ||  this.orig().MultiLnPercent              != this.MultiLnPercent
        #    ||  this.orig().Complete                    != this.Complete
        #    ||  this.orig().Blocked                     != this.Blocked
        #    ||  this.orig().ReturnDispositionCodeId     != this.ReturnDispositionCodeId
        #    ||  this.orig().ReturnStatus                != this.ReturnStatus
        #    ||  this.orig().MatchingAgreementLine       != this.MatchingAgreementLine
        #    ||  (taxParameterEnabled_IN
        #        &&  (purchLine_IN.orig().AssessableValue_IN              != purchLine_IN.AssessableValue_IN
        #             ||  purchLine_IN.orig().CompanyLocation_IN          != purchLine_IN.CompanyLocation_IN
        #             ||  purchLine_IN.orig().MaximumRetailPrice_IN       != purchLine_IN.MaximumRetailPrice_IN))
        #        )
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #inventDim
        #InventDim inventDim(boolean  update = false)
        #{
        #    return InventDim::find(this.InventDimId, update);
        #}
      ENDSOURCE
      SOURCE #inventDimProfileRAsset_RU
        #InventDim inventDimProfileRAsset_RU(InventDim _inventDim)
        #{
        #    RAssetParameters            rAssetParameters;
        #    InventTable                 inventTable;
        #
        #    if (! this.ItemId)
        #        return _inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #    if (! rAssetParameters.LowCostAssetInventProfileId)
        #        return _inventDim;
        #
        #    inventTable      = this.inventTable();
        #    if (! inventTable.AssetGroupId_RU)
        #        return _inventDim;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        RAssetMainGroup::find(inventTable.AssetGroupId_RU).GroupType == RAssetGroupTypes::LowCostAssets)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            _inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #        }
        #    }
        #
        #    return _inventDim;
        #}
      ENDSOURCE
      SOURCE #inventProfileType_RU
        #InventProfileType_RU inventProfileType_RU(boolean _forceGeneral = true)
        #{
        #    InventProfileType_RU inventProfileType = this.inventDim().inventProfile_RU().InventProfileType;
        #
        #    if (inventProfileType == InventProfileType_RU::NotSpecified && _forceGeneral)
        #    {
        #        inventProfileType = InventProfileType_RU::General;
        #    }
        #
        #    return inventProfileType;
        #}
      ENDSOURCE
      SOURCE #inventSiteChanged_BR
        #/// <summary>
        #///     Method called wherever the InventsiteId is changed.
        #/// </summary>
        #
        #public void inventSiteChanged_BR()
        #{
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #        this.setAddressFromPurchTable();
        #
        #    this.setCFOP_BR();
        #}
      ENDSOURCE
      SOURCE #inventTable
        #InventTable inventTable(ItemId     itemId = this.ItemId,
        #                        boolean    update = false)
        #{
        #    return InventTable::find(itemId, update);
        #}
      ENDSOURCE
      SOURCE #inventTableModule
        #InventTableModule  inventTableModule(ItemId     itemId = this.ItemId)
        #{
        #    return InventTableModule::find(itemId, this.moduleType());
        #}
      ENDSOURCE
      SOURCE #invoiceAccount
        #VendInvoiceAccount  invoiceAccount()
        #{
        #    return this.purchTable().InvoiceAccount;
        #}
      ENDSOURCE
      SOURCE #invoicedInTotal
        #//BP Deviation Documented
        #display PurchQty   invoicedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #    return this.invoicedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #invoicedInTotalServer
        #server PurchQty invoicedInTotalServer()
        #{
        #    return this.type().invoicedInTotal();
        #}
      ENDSOURCE
      SOURCE #invoicedInventInTotal
        #//BP Deviation Documented
        #display InventQty    invoicedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = inventTransIdSum.financial();
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #invoicedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity invoiced on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity invoiced on packing slips.
        #/// </returns>
        #public PurchQty invoicedOnPackingSlipInTotal()
        #{
        #    VendInvoiceTrans                    vendInvoiceTrans;
        #    VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;
        #    VendPackingSlipTrans                vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendInvoiceTrans
        #        where vendInvoiceTrans.InventTransId == this.InventTransId
        #        exists join vendInvoicePackingSlipQuantityMatch
        #            where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == vendInvoiceTrans.SourceDocumentLine
        #        exists join vendPackingSlipTrans
        #            where vendPackingSlipTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine;
        #
        #    return vendInvoiceTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #isAgreementLinkValid
        #/// <summary>
        #/// Checks whether the link between the agreement line and the purchase line is valid.
        #/// </summary>
        #/// <param name="_showInfolog">
        #/// A Boolean value that indicates whether to print the errors in the Infolog; optional.
        #/// </param>
        #/// <returns>
        #/// true if the link between the purchase order line and agreement line is valid; otherwise, false.
        #/// </returns>
        #public boolean isAgreementLinkValid(boolean _showInfolog = false)
        #{
        #    if (this.isLinkedToAgreement())
        #    {
        #        return AgreementLine::find(this.MatchingAgreementLine).isLinkValid(this,_showInfolog);
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isCategoryBased
        #/// <summary>
        #/// Specifies whether the order line is category based.
        #/// </summary>
        #/// <returns>
        #/// true if the order line is category based; otherwise, false.
        #/// </returns>
        #boolean isCategoryBased()
        #{
        #    return this.SalesPurchLine::isCategoryBased();
        #}
      ENDSOURCE
      SOURCE #isDropShipment
        #/// <summary>
        #///    Checks whether the order line is part of a drop shipment.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is part of a drop shipment; otherwise, false.
        #/// </returns>
        #public boolean isDropShipment()
        #{
        #    return this.SalesPurchLine::isDropShipment();
        #}
      ENDSOURCE
      SOURCE #isForProject
        #/// <summary>
        #/// Checks if this line is related to a project.
        #/// </summary>
        #/// <returns>
        #/// true if the line is related to a project; false otherwise.
        #/// </returns>
        #public boolean isForProject()
        #{
        #    return (this.ProjId != '');
        #}
      ENDSOURCE
      SOURCE #isFullyDistributed
        #/// <summary>
        #///    Performs a check whether line is fully distributed.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record; optional.
        #/// </param>
        #/// <returns>
        #///    True, if the line is full distributed; otherwise false.
        #/// </returns>
        #/// <exception cref="M:exception::Warning">
        #///    This action can only be completed after the line number %1 is fully distributed.
        #/// </exception>
        #public client server boolean isFullyDistributed(SourceDocumentLine _sourceDocumentLine = this.sourceDocumentLine())
        #{
        #    if (!SourceDocumentLineProvider::isLineFullyDistributed(_sourceDocumentLine, this))
        #    {
        #        //This action can only be completed after the line number %1 is fully distributed
        #        return checkFailed(strFmt("@SYS341833", this.LineNumber));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isInterCompanyOrder
        #boolean  isInterCompanyOrder()
        #{
        #    boolean  ok = false;
        #
        #    if (this.InterCompanyInventTransId  &&  this.purchTable().isInterCompanyOrder())
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #isInvoiceMatched
        #/// <summary>
        #/// Returns true if line was partially or fully invoiced.
        #/// </summary>
        #/// <returns>
        #/// true if line was partially or fully invoiced; otherwise, false.
        #/// </returns>
        #public boolean isInvoiceMatched()
        #{
        #    return this.IsInvoiceMatched;
        #}
      ENDSOURCE
      SOURCE #isLatestPOVersionNotArchived
        #/// <summary>
        #/// Checks if the last version of the purchase order that this line belongs to was not yet archived to the history tables.
        #/// </summary>
        #/// <returns>
        #/// true if the last version has not yet been archived to the history tables; otherwise, false.
        #/// </returns>
        #public boolean isLatestPOVersionNotArchived()
        #{
        #    PurchTableVersion purchTableVersion = PurchTableVersion::findLatest(this.PurchId, this.DataAreaId);
        #    return purchTableVersion && (purchTableVersion.IsArchived == NoYes::No);
        #}
      ENDSOURCE
      SOURCE #isLinkedToAgreement
        #/// <summary>
        #/// Indicates whether the purchase line is linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase line is linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean isLinkedToAgreement()
        #{
        #    return this.MatchingAgreementLine != 0;
        #}
      ENDSOURCE
      SOURCE #isMarkupCodeEnabled_RU
        #/// <summary>
        #///  The field MarkupCode_RU is enabled
        #/// </summary>
        #/// <returns>
        #///  true if enabled, otherwize - false
        #/// </returns>
        #public boolean isMarkupCodeEnabled_RU()
        #{
        #    return ! this.ItemId || this.inventTable().isMarkupCodeEnabled_RU();
        #}
      ENDSOURCE
      SOURCE #isPackingSlipOrInvoiceUpdated
        #/// <summary>
        #/// Specifies whether the line has been packing slip or invoice updated.
        #/// </summary>
        #/// <returns>
        #/// true if the line has been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #public boolean isPackingSlipOrInvoiceUpdated()
        #{
        #    PurchLine purchOrig = this.orig();
        #
        #    return this.RecId                                       // Saved?
        #        && (this.PurchStatus == PurchStatus::Received       // Fully received?
        #            || this.RemainPurchFinancial != 0               // Partially received?
        #            || this.PurchStatus == PurchStatus::Invoiced    // Fully invoiced?
        #            || (this.RemainPurchPhysical != this.PurchQty    // Partially invoiced/received?
        #                && !(this.RemainPurchPhysical == purchOrig.RemainPurchPhysical && this.PurchQty != purchOrig.PurchQty))  //The'and' part excludes lines which are being checked during an update before remainPurchPhysical was calculated.
        #            );
        #}
      ENDSOURCE
      SOURCE #isProjItemBased
        #/// <summary>
        #/// Checks if the line is related to an item.
        #/// </summary>
        #/// <returns>
        #/// true if the line is related to an item; otherwise, false.
        #/// </returns>
        #public boolean isProjItemBased()
        #{
        #    ProjCategory    projCategory;
        #    boolean         retVal = false;
        #
        #    if (this.ItemId)
        #    {
        #        retVal = true;
        #    }
        #    else if (this.ProjCategoryId)
        #    {
        #        projCategory = ProjCategory::find(this.ProjCategoryId);
        #        if (projCategory.CategoryType == ProjCategoryType::Item)
        #        {
        #            retVal = true;
        #        }
        #    }
        #
        #    return retVal;
        #}
      ENDSOURCE
      SOURCE #isStocked
        #/// <summary>
        #///    Checks whether the order line is tracked in inventory.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is tracked in inventory; otherwise, false.
        #/// </returns>
        #boolean isStocked()
        #{
        #    #isoCountryRegionCodes
        #
        #    return this.SalesPurchLine::isStocked()
        #        && !(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR])
        #            && this.purchTable().createInventTrans_BR() == false)
        #        ;
        #}
      ENDSOURCE
      SOURCE #isSubcontracted
        #/// <summary>
        #/// Determines if the purchase line is originating from a lean subcontracting activity.
        #/// </summary>
        #/// <returns>
        #/// true if it is linked to lean kanban jobs, otherwise false.
        #/// </returns>
        #public boolean isSubcontracted()
        #{
        #    return this.PlanReference != 0;
        #}
      ENDSOURCE
      SOURCE #isTangible
        #/// <summary>
        #/// Determines whether the item in the order line is tangible.
        #/// </summary>
        #/// <returns>
        #/// true if the line is tangible; otherwise, false.
        #/// </returns>
        #public boolean isTangible()
        #{
        #    //For non-stocked item based lines where the ItemType is service
        #    //or for description based lines where the procurementCategory is non-tangible, return false.
        #    if (!this.isStocked()
        #        && ((this.ItemId && this.inventTable().ItemType == ItemType::Service)
        #        || (!this.ItemId && !EcoResCategory::isTangible(this.ProcurementCategory))))
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isUserWorkItemOwner
        #/// <summary>
        #/// Gets the work item status of the pending task for the current record.
        #/// </summary>
        #/// <param name="_user">
        #/// The user ID of the work item owner; optional.
        #/// </param>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has a pending work item.
        #/// </returns>
        #server boolean  isUserWorkItemOwner(WorkflowUser  _user = curUserId())
        #{
        #    return Workflow::findWorkItemsForCurrentUser(this).empty() == false;
        #}
      ENDSOURCE
      SOURCE #isVersioned
        #/// <summary>
        #/// Determines whether the order line has been versioned, i.e. whether it has been confirmed or approved with change management enabled.
        #/// </summary>
        #/// <returns>true if the order line has been versioned; otherwise, false.</returns>
        #public boolean isVersioned()
        #{
        #    return this.RecId
        #        &&  !this.IsDeleted
        #        && (!this.IsModified || PurchLine::historyExistsOrLatestVersionNotArchived(this.InventTransId, this.PurchId, this.DataAreaId));
        #}
      ENDSOURCE
      SOURCE #itemIdChanged
        #server void itemIdChanged(AgreementHeaderRecId _matchingAgreement = 0)
        #{
        #    PurchTable purchTable;
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (#PmfEnabled)
        #    {
        #        InventMovement::setMinMaxQty(this);
        #    }
        #
        #    if (this.inventTable().modelGroup().InventModel == InventModel::StdCost)
        #    {
        #        this.CreateFixedAsset = NoYes::No;
        #        this.AssetGroup = '';
        #        this.AssetId = '';
        #        this.AssetGroup = '';
        #        this.AssetBookId = '';
        #    }
        #
        #    if (ReverseChargeParameters_UK::find().rcEnabled)
        #    {
        #        if (ReverseChargeItemGroup_UK::exist(InventTable::find(this.ItemId).itemGroupId()))
        #        {
        #            purchTable = this.purchTable();
        #            if (!purchTable.vatNum && ReverseCharge_invoice_UK::isPurchDomestic(purchTable))
        #            {
        #                warning("@SYS125406");
        #            }
        #        }
        #    }
        #
        #    this.SalesPurchLine::autoMatchAgreementLine(_matchingAgreement);
        #
        #    PurchLine::modifyPurchQty(this, this.inventDim(), !this.MatchingAgreementLine);
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.MarkupCode_RU && ! this.isMarkupCodeEnabled_RU())
        #        {
        #            purchLine_W.MarkupCode_RU = '';
        #            this.packPurchLine_W(purchLine_W);
        #        }
        #
        #        if (this.inventTable().isMarkupCodeEnabled_RU() && this.inventTable().MarkupCode_RU)
        #        {
        #            this.LedgerDimension = MarkupTable::find(MarkupModuleType::Vend, this.inventTable().MarkupCode_RU).CustomerLedgerDimension;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #itemLineDisc
        #LineDiscCode itemLineDisc()
        #{
        #    return this.inventTable().purchLineDisc();
        #}
      ENDSOURCE
      SOURCE #itemName
        #/// <summary>
        #/// Returns the item name of the purchase order line .
        #/// </summary>
        #/// <returns>
        #/// The item name.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #display PurchLineShowItemName itemName()
        #{
        #    PurchLineShowItemName purchLineShowItemName;
        #
        #    if (this.ItemId)
        #    {
        #        purchLineShowItemName = this.inventTable().itemName(this.inventDim());
        #    }
        #    else
        #    {
        #        purchLineShowItemName = this.Name;
        #    }
        #
        #    return purchLineShowItemName;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionClearing
        #public LedgerDimensionDefaultAccount ledgerDimensionClearing()
        #{
        #    #ISOCountryRegionCodes
        #    PurchLine_W     purchLine_W;
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PostingProfile_RU)
        #        {
        #            return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       purchLine_W.PostingProfile_RU);
        #        }
        #    }
        #    return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionConsumption
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// The ledger account for the consumption transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionConsumption()
        #{
        #    LedgerDimensionDefaultAccount   ledgerAccount;
        #
        #    if (this.isStocked())
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchConsump);
        #    }
        #    else if ((this.AssetId) && (AssetParameters::canUserCreateAssetAcquisition()))
        #    {
        #        ledgerAccount = this.assetLedgerDimension();
        #    }
        #    else
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchExpense);
        #    }
        #
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionDiscount
        #public server LedgerDimensionDefaultAccount ledgerDimensionDiscount()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchDisc);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionItem
        #/// <summary>
        #/// Retrieves a ledger dimension for the purchase order line.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting ledger dimension for the account type of the purchase order line.
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionItem(InventAccountType _inventAccountType)
        #{
        #    #ISOCountryRegionCodes
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        return InventPosting::accountItemLedgerDimension(
        #            _inventAccountType,
        #            this.ItemId,
        #            InventTable::find(this.ItemId).itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup,
        #            this.inventDim());
        #    }
        #    return InventPosting::accountItemLedgerDimension(
        #        _inventAccountType,
        #        this.ItemId,
        #        InventTable::find(this.ItemId).itemGroupId(),
        #        this.ProcurementCategory,
        #        this.VendAccount,
        #        this.VendGroup,
        #        this.TaxGroup);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionOffsetAccountPckSlp
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount  ledgerDimensionOffsetAccountPckSlp()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchPackingSlipOffsetAccount);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionReceipt
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all the fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchReceipt</c> account.
        #/// </summary>
        #/// <returns>
        #/// A ledger account for the receipt transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionReceipt()
        #{
        #    #ISOCountryRegionCodes
        #    LedgerDimensionDefaultAccount ledgerAccount;
        #
        #    if (this.LedgerDimension && InventMovement::construct(this).mustBeBookedBalanceSheet())
        #    {
        #        ledgerAccount  = this.LedgerDimension;
        #    }
        #    else
        #    {
        #        if (this.AssetId)
        #        {
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #            {
        #                ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                            InventAccountType::PurchReceipt,
        #                                            this.ItemId,
        #                                            this.inventTable().itemGroupId(),
        #                                            this.ProcurementCategory,
        #                                            this.VendAccount,
        #                                            this.VendGroup,
        #                                            this.TaxGroup,
        #                                            this.inventDim());
        #            }
        #            else
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = InventPosting::accountItemExtendParmWithBackup_CN(
        #                                        InventAccountType::PurchReceiptFixedAsset,
        #                                        InventAccountType::PurchReceipt,
        #                                        InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #                                        this.ItemId,
        #                                        this.inventTable().itemGroupId(),
        #                                        this.ProcurementCategory,
        #                                        this.VendAccount,
        #                                        this.VendGroup,
        #                                        this.TaxGroup);
        #            }
        #            else
        #            {
        #                    ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                                InventAccountType::PurchReceipt,
        #                                                this.ItemId,
        #                                                this.inventTable().itemGroupId(),
        #                                                this.ProcurementCategory,
        #                                                this.VendAccount,
        #                                                this.VendGroup,
        #                                                this.TaxGroup);
        #            }
        #        }
        #        else
        #        {
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = this.accountItemExtendParm_CN(InventAccountType::PurchReceipt);
        #            }
        #            else
        #            {
        #                ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchReceipt);
        #            }
        #        }
        #    }
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionVend_RU
        #/// <summary>
        #/// Returns ledger dimension value for posting
        #/// </summary>
        #/// <returns>
        #/// Ledger dimension value for posting
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionVend_RU()
        #{
        #    PurchLine_W     purchLine_W = this.purchLine_W();
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #        && purchLine_W.PostingProfile_RU)
        #    {
        #        return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                          purchLine_W.PostingProfile_RU);
        #    }
        #    return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                          this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #lineAmountExclTax
        #//BP Deviation Documented
        #PurchLineAmount lineAmountExclTax(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::lineAmountExclTax(this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #lineAmountModified
        #void lineAmountModified()
        #{
        #    this.PriceDiscLine::lineAmountModified();
        #}
      ENDSOURCE
      SOURCE #lineAmountMST
        #AmountMST lineAmountMST(TransDate               exchRateDate            = systemDateGet(),
        #                        ExchRate                exchRate                = 0,
        #                        ExchrateSecondary       exchrateSecondary       = 0,
        #                        ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMST(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #lineAmountMSTExclTax
        #AmountMST  lineAmountMSTExclTax(TransDate               exchRateDate            = systemDateGet(),
        #                                ExchRate                exchRate                = 0,
        #                                ExchrateSecondary       exchrateSecondary       = 0,
        #                                ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown,
        #                                Tax                     _tax                    = null)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMSTExclTax(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation, _tax);
        #}
      ENDSOURCE
      SOURCE #lineDeliveryImageRessNo
        #/// <summary>
        #///     Determines the delivery type of the line.
        #/// </summary>
        #/// <returns>
        #///     An image resource ID.
        #/// </returns>
        #public int lineDeliveryImageRessNo()
        #{
        #    #resAppl
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            return #ImageOrderLineMultipleDeliveries;
        #        case LineDeliveryType::DeliveryLine:
        #            return #ImageDeliveryLine;
        #        default:
        #            return #ImageOrderLines;
        #    }
        #}
      ENDSOURCE
      SOURCE #lineDisc
        #LineDiscCode  lineDisc()
        #{
        #    return this.purchTable().LineDisc;
        #}
      ENDSOURCE
      SOURCE #linkInventDim2Dimension
        #/// <summary>
        #///    Applies default <c>PurchLine.dimension</c> values, depending on the <c>InventDim</c> record buffer
        #///    values.
        #/// </summary>
        #/// <param name="_newInventDim">
        #///    The <c>InventDim</c> record buffer linked to the current <c>PurchLine</c> record buffer.
        #/// </param>
        #/// <param name="_oldInventDim">
        #///    The <c>InventDim</c> record buffer that was previously linked to the current <c>PurchLine</c>
        #///    record buffer.
        #/// </param>
        #public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
        #{
        #    _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
        #}
      ENDSOURCE
      SOURCE #markupAllowed
        #public boolean markupAllowed()
        #{
        #    return this.type().markupAllowed();
        #}
      ENDSOURCE
      SOURCE #matchingAgreementLine
        #/// <summary>
        #/// Returns the value of the <c>this.MatchingAgreementLine</c>.
        #/// </summary>
        #/// <returns>
        #/// A <c>RefRecId</c> type.
        #/// </returns>
        #public RefRecId matchingAgreementLine()
        #{
        #    return this.MatchingAgreementLine;
        #}
      ENDSOURCE
      SOURCE #mcrInventTable
        #/// <summary>
        #/// Retrieves the invent table record for the item.
        #/// </summary>
        #/// <param name="_itemId">
        #/// An item.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// The inventory table record.
        #/// </returns>
        #public MCRInventTable mcrInventTable(ItemId _itemId = this.ItemId,
        #                               boolean _forUpdate = false)
        #{
        #    return MCRInventTable::findByItemId(_itemId, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #mergeDimension
        #/// <summary>
        #/// Retrieves a dimension set that contains the merged combination of the current
        #/// <c>defaultDimension</c> field on this table and the provided dimension set.
        #/// </summary>
        #/// <param name="_primaryDefaultDimension">
        #/// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_secondaryDefaultDimension">
        #/// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
        #/// optional.
        #/// </param>
        #/// <param name="_dimensionMerge">
        #/// A <c>dimensionMerge</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
        #/// on this table and the specified dimension set.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten when they are merged.
        #/// </remarks>
        #
        #public DimensionDefault mergeDimension(
        #    DimensionDefault _primaryDefaultDimension,
        #    DimensionDefault _secondaryDefaultDimension = 0,
        #    DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
        #                                                                    this.companyInfo().RecId
        #                                                                    )
        #    )
        #{
        #    return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #/// <summary>
        #/// Performs specific actions when a field is modified.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has been modified.
        #/// </param>
        #/// <remarks>
        #/// This is overridden to allow for specific actions when a field is modified.
        #/// </remarks>
        #public void modifiedField(FieldId _fieldId)
        #{
        #    InventDim inventDim;
        #    InventDimParm inventDimParm;
        #
        #    CompanyInfo                     companyInfoLoc = CompanyInfo::find();
        #    VendTable                       vendTable = VendTable::find(this.VendAccount);
        #    boolean isAssetDocumentEnabled = AssetDocumentUtility_JP::isAssetDocumentEnabled();
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(PurchLine, ProcurementCategory):
        #            // Clear all except site and location
        #            inventDim = this.inventDim();
        #            inventDimParm.setActiveSiteAndWarehouseDimensions();
        #            inventDim.clearNotSelectedDim(inventDimParm);
        #            this.setInventDimIdFromInventDim(inventDim);
        #            this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #            this.initName();
        #
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                this.setAgreementLine();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchReceivedNow):
        #            this.setInventReceivedNow();
        #            this.Tax1099Amount = 0;
        #            this.Tax1099StateAmount = 0;
        #            break;
        #
        #        case fieldNum(PurchLine, PriceUnit):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.LineAmount = this.calcLineAmountInteraction(_fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchPrice):
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if (this.isForProject())
        #            {
        #                this.setProjSalesPrice();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LinePercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineAmount):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.lineAmountModified();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId, this.PurchQty, false);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchUnit):
        #            this.purchUnitModified();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchMarkup):
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnPercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjCategoryId):
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            this.setProjSalesPrice();
        #            if (this.ProjWorker && this.isProjItemBased())
        #            {
        #                this.ProjWorker = 0;
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjWorker):
        #            this.setProjSalesPrice();
        #            break;
        #
        #        case fieldNum(PurchLine, ActivityNumber):
        #            this.initFromProjActivity(ProjActivity::find(this.ActivityNumber));
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            this.setProjSalesPrice();
        #            break;
        #
        #        case fieldNum(PurchLine, AssetId):
        #            this.modifyAssetId();
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, AssetBookId):
        #            if (this.AssetId && this.AssetBookId)
        #            {
        #                this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #            }
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryPostalAddress):
        #            LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #                this.DeliveryPostalAddress);
        #            break;
        #
        #        case fieldNum(PurchLine, Requester):
        #            this.ReqAttention = HcmWorkerTitle::findByWorker(this.Requester).OfficeLocation;
        #            if (PurchCORPolicyTable::decentralized(this))
        #            {
        #                PurchCORPolicyTable::setLocation(this, true);
        #            }
        #            else if (PurchCORPolicyTable::decentralized(this.orig()))
        #            {
        #                PurchCORPolicyTable::setLocation(this, false);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ConfirmedDlv):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryDate):
        #            this.ManualModifiedField = _fieldId;
        #            this.unLinkAgreementDeliveryDates(_fieldId);
        #            if (this.ProjId && !this.ConfirmedDlv)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            this.checkPriceDate(_fieldId);
        #            this.ManualModifiedField = 0;
        #            break;
        #
        #        case fieldNum(PurchLine, ProjSalesCurrencyId):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #                this.setProjSalesPrice();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjId):
        #            this.projIdModified();
        #            this.DefaultDimension  = this.copyDimension(this.projTable().DefaultDimension);
        #            if (this.ItemId)
        #            {
        #                this.DefaultDimension  = DimensionDefaultingService::serviceMergeDefaultDimensions(this.DefaultDimension , this.inventTable().DefaultDimension);
        #            }
        #            // Call the event handler to handle other modifications in higher layers...
        #            PurchLineTableHandler::modifiedField_ProjId(_fieldId, this);
        #            break;
        #
        #        case fieldNum(PurchLine, ItemId):
        #            this.setExciseFields_IN();
        #            if (isConfigurationkeyEnabled(configurationKeyNum(ProjBasic)) && this.ItemId)
        #            {
        #                this.ProjWorker = 0;
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, CreateFixedAsset):
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #        // Call the event handler to handle other cases that may be present in higher layers...
        #        default:
        #            PurchLineTableHandler::modifiedField_OtherFields(_fieldId, this);
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedFieldValue
        #/// <summary>
        #/// Modify a specified field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The field Name of the field to modify.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the field.
        #/// </param>
        #public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    #isoCountryRegionCodes
        #
        #    super(_fieldName, _arrayIndex);
        #
        #
        #    switch (_fieldName)
        #    {
        #        case fieldStr(PurchLine, PurchQty):
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #            {
        #                if(TaxParameters::find().Customs_IN
        #                    && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #                    && CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId)
        #                    && this.PurchQty < this.orig().PurchQty)
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #                this.setExciseFields_IN();
        #            }
        #            break;
        #
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #modifyAssetId
        #/// <summary>
        #/// Modifies the related field values when the value of the <c>AssetId</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// The value of the <c>AssetGroup</c> field and the <c>AssetBookId</c> field will be updated based on
        #/// the new value of the <c>AssetId</c> field.
        #/// </remarks>
        #public void modifyAssetId()
        #{
        #    AssetBook       assetBook;
        #    AssetBookTable  assetBookTable;
        #    AssetBookId     bookIdDefault;
        #    AssetTable      assetTable;
        #
        #    select AssetGroup from assetTable
        #        where assetTable.AssetId == this.AssetId;
        #    if (assetTable)
        #    {
        #        this.AssetGroup = assetTable.AssetGroup;
        #        this.ItemRefType = InventRefType::FixedAsset;
        #
        #        // If asset is assigned, need to clear "createFixedAsset" flag.
        #        this.CreateFixedAsset = false;
        #    }
        #    else
        #    {
        #        this.AssetGroup = '';
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    bookIdDefault = AssetParameters::find().BookIdDefault;
        #    assetBook = AssetBook::find(this.AssetId, bookIdDefault);
        #
        #    if (assetBook &&
        #       AssetBookTable::find(bookIdDefault).CurrentOperationsTax == CurrentOperationsTax::Current &&
        #       (assetBook.Status == AssetStatus::NoAcquisition ||
        #        assetBook.Status == AssetStatus::Open))
        #    {
        #        this.AssetBookId = bookIdDefault;
        #    }
        #    else
        #    {
        #        select firstonly assetBook
        #        where assetBook.AssetId == this.AssetId &&
        #              (assetBook.Status == AssetStatus::NoAcquisition ||
        #               assetBook.Status == AssetStatus::Open)
        #        join RecId from assetBookTable
        #        where assetBookTable.BookId               == assetBook.BookId &&
        #              assetBookTable.CurrentOperationsTax == CurrentOperationsTax::Current;
        #
        #        if (assetBook)
        #        {
        #            this.AssetBookId = assetBook.BookId;
        #        }
        #        else
        #        {
        #           this.AssetBookId = "";
        #        }
        #    }
        #    if (this.AssetId && this.AssetBookId)
        #    {
        #        this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyCreateFixedAsset
        #/// <summary>
        #/// Modifies the related fields when the value of the <c>CreateFixedAsset</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// If the <c>CreateFixedAsset</c> field is checked, the <c>AssetId</c> field will be cleared. It will
        #/// always clear the <c>AssetGroup</c> field and set the <c>AssetTransTypePurch</c> field to
        #/// <c>Acquisition</c>.
        #/// </remarks>
        #public void modifyCreateFixedAsset()
        #{
        #    if (this.CreateFixedAsset == NoYes::Yes)
        #    {
        #        this.AssetId = '';
        #        this.modifyAssetId();
        #        this.ItemRefType = InventRefType::FixedAsset;
        #    }
        #    else
        #    {
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    this.AssetGroup = '';
        #    this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
        #}
      ENDSOURCE
      SOURCE #modifyInventDim
        #void modifyInventDim(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    InventDimGroupSetup                 inventDimGroupSetup = InventDimGroupSetup::newItemId(this.ItemId);
        #    InventDimId oldInventDimId;
        #    AgreementHeaderRecId                matchingPurchAgreementHeaderRecId;
        #
        #    if (!this.ItemId)
        #    {
        #        return;
        #    }
        #
        #    // Remember the old value to check for changes
        #    oldInventDimId      = this.InventDimId;
        #    this.InventDimId    = InventDim::findOrCreate(_inventDim).InventDimId;
        #
        #    if (InventDim::isFieldIdProductDimension(_dimFieldId))
        #    {
        #        this.ExternalItemId = '';
        #        this.initFromProductDimensions(_inventDim);
        #    }
        #
        #    if (_dimFieldId == fieldNum(InventDim,InventLocationId) ||
        #        _dimFieldId == fieldNum(InventDim,InventSiteId)     ||
        #        _dimFieldId == fieldNum(InventDim,ConfigId)         ||
        #        _dimFieldId == fieldNum(InventDim,InventSizeId)     ||
        #        _dimFieldId == fieldNum(InventDim,InventStyleId)    ||
        #        _dimFieldId == fieldNum(InventDim,InventColorId))
        #    {
        #        this.modifyWMSLocation(_inventDim);
        #    }
        #
        #    switch (_dimFieldId)
        #    {
        #        case fieldNum(InventDim,InventLocationId):
        #            //fall throough and possibly update dimension.
        #
        #        case fieldNum(InventDim,InventSiteId):
        #            // If a new InventDim is selected then default dimensions.
        #            if (this.InventDimId != oldInventDimId)
        #            {
        #                this.DefaultDimension = this.copyDimension(this.DefaultDimension);
        #            }
        #            break;
        #    }
        #
        #    if (_resetPrice && InventDim::mustUseFieldPurchPriceDisc(_dimFieldId, inventDimGroupSetup)
        #        && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #    {
        #        this.SalesPurchLine::resetPriceAgreement();
        #        this.setPriceDisc(_inventDim);
        #    }
        #
        #    // ONLY if Purchase Order (header) is linked to agreement
        #    // call a server method to handle auto-link to agreement line:
        #    matchingPurchAgreementHeaderRecId = this.purchTable().MatchingAgreement;
        #    if (matchingPurchAgreementHeaderRecId)
        #    {
        #        this.SalesPurchLine::autoMatchAgreementLine(matchingPurchAgreementHeaderRecId);
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyWMSLocation
        #/// <summary>
        #/// Modifies an <c>InventDim</c> record with WMS values.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record to modify.
        #/// </param>
        #/// <param name="_resetWMSLocationId">
        #/// A Boolean value that indicates whether the <c>wMSLocationId</c> field is to be reset even when the
        #/// <c>LocationId</c> field is unchanged.
        #/// </param>
        #/// <remarks>
        #/// When changing the warehouse on a purchase order line, the location is updated with default WMS
        #/// values for items where the attached dimension group has the location set to active.
        #/// </remarks>
        #public void modifyWMSLocation(
        #    InventDim           _inventDim,
        #    boolean             _resetWMSLocationId = true)
        #{
        #    this.type().modifyWMSLocation(_inventDim, _resetWMSLocationId);
        #}
      ENDSOURCE
      SOURCE #moduleType
        #ModuleInventPurchSales moduleType()
        #{
        #    return ModuleInventPurchSales::Purch;
        #}
      ENDSOURCE
      SOURCE #mustBeCovPlanned
        #boolean  mustBeCovPlanned()
        #{
        #    return (this.RemainPurchPhysical ||  this.RemainPurchFinancial);
        #}
      ENDSOURCE
      SOURCE #nextLineNum
        #LineNum nextLineNum()
        #{
        #    PurchLine purchLine;
        #
        #    return this.SalesPurchLine::nextLineNum(purchLine);
        #}
      ENDSOURCE
      SOURCE #onCFOPChange_BR
        #/// <summary>
        #/// Updates tax information and the fiscal document texts when the CFOP is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onCFOPChange_BR(FieldId _modifiedField = fieldNum(PurchLine, cfopTable_BR))
        #{
        #    if (this.cfopTable_BR)
        #    {
        #        this.setTaxGroupAndTaxItemGroupFields_BR();
        #        this.onTaxChange_BR(_modifiedField);
        #    }
        #
        #    this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #}
      ENDSOURCE
      SOURCE #onDeliveryPostalAddressChange_BR
        #/// <summary>
        #/// Updates CFOP information when the delivery address is changed to a different state or country.
        #/// </summary>
        #public void onDeliveryPostalAddressChange_BR()
        #{
        #    CFOPValidation_BR       cfopValidation;
        #    LogisticsPostalAddress  currentAddress, originAddress;
        #
        #    currentAddress      = LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress);
        #    originAddress       = LogisticsPostalAddress::findRecId(this.orig().DeliveryPostalAddress);
        #
        #    if (currentAddress.State != originAddress.State || currentAddress.CountryRegionId != originAddress.CountryRegionId)
        #    {
        #        cfopValidation      = CFOPValidation_BR::construct(this);
        #        this.cfopTable_BR   = cfopValidation.getDefaultCFOP();
        #
        #        this.onCFOPChange_BR(fieldNum(PurchLine, DeliveryPostalAddress));
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #onTaxChange_BR
        #/// <summary>
        #/// Updates the current purchase order line amount when tax is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onTaxChange_BR(FieldId _modifiedField)
        #{
        #    this.LineAmount = this.calcLineAmountForcedInteraction(fieldNum(PurchLine, DeliveryPostalAddress));
        #}
      ENDSOURCE
      SOURCE #orderAccount
        #CustVendAC  orderAccount()
        #{
        #    return this.VendAccount;
        #}
      ENDSOURCE
      SOURCE #ordered
        #//BP Deviation Documented
        #display InventQtyOrdered ordered()
        #{
        #    InventQtyOrdered qtyOrdered;
        #    InventTransIdSum inventTransIdSum;
        #
        #    if (!this.InventTransId && !this.isStocked())
        #    {
        #        return 0;
        #    }
        #
        #    if (this.purchTable().DocumentState == VersioningDocumentState::Draft)
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #        qtyOrdered = this.RemainInventPhysical - (inventTransIdSum.arrived() + inventTransIdSum.registered());
        #    }
        #    else
        #    {
        #        qtyOrdered = InventTransIdSumSingleStatus::qtyOrdered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #
        #    return qtyOrdered;
        #}
      ENDSOURCE
      SOURCE #orderedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyOrdered orderedInPurchUnit()
        #{
        #    InventQtyOrdered inventQtyOrdered;
        #    PurchQtyOrdered  purchQtyOrdered;
        #
        #    if (this.isStocked())
        #    {
        #        inventQtyOrdered = this.ordered();
        #        if (inventQtyOrdered)
        #        {
        #            purchQtyOrdered = this.unitConvertInvent2Purch(inventQtyOrdered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyOrdered = this.RemainPurchPhysical - this.registeredInPurchUnit();
        #    }
        #
        #    return purchQtyOrdered;
        #}
      ENDSOURCE
      SOURCE #overDeliveryPct
        #/// <summary>
        #/// Returns the allowed over-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The over-delivery percent that is defined on the purchase order line if over-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent overDeliveryPct()
        #{
        #    if (!PurchParameters::find().OverDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.OverDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #packExtensionTable
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_extensionTable">
        #/// The extension table record.
        #/// </param>
        #/// <returns>
        #/// true if success; otherwise false.
        #/// </returns>
        #public boolean packExtensionTable(SysExtensionSerializerExtensionMap _extensionTable)
        #{
        #    boolean ret = false;
        #
        #    if (_extensionTable.SysExtensionSerializerExtensionMap::baseTableId() == this.TableId)
        #    {
        #        ret = this.SysExtensionSerializerMap::packExtensionTable(_extensionTable);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #packPurchLine_IN
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_IN">
        #/// The extension table record.
        #/// </param>
        #public void packPurchLine_IN(PurchLine_IN _purchLine_IN)
        #{
        #    _purchLine_IN.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #packPurchLine_Intrastat
        #/// <summary>
        #/// Packs <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <param name="_purchLine_Intrastat">
        #/// The extension table record to pack.
        #/// </param>
        #public void packPurchLine_Intrastat(PurchLine_Intrastat _purchLine_Intrastat)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_Intrastat);
        #}
        #
      ENDSOURCE
      SOURCE #packPurchLine_W
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_W">
        #/// The extension table record.
        #/// </param>
        #public void packPurchLine_W(PurchLine_W _purchLine_W)
        #{
        #    _purchLine_W.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_W);
        #}
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    return this.purchTable().parmExchangeRateDate();
        #}
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    return this.PurchLineMap::parmParentSourceDocumentLine();
        #}
        #
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumName();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumValue();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocumentHeader
        #public SourceDocumentHeader parmSourceDocumentHeader()
        #{
        #    return this.PurchLineMap::parmSourceDocumentHeader();
        #}
        #
      ENDSOURCE
      SOURCE #pdsAdvancedPriceInfo
        #/// <summary>
        #///     Gets the advanced pricing extension information record for this <c>PurchLine</c>.
        #/// </summary>
        #/// <param name="_forUpdate">
        #///     Determines whether to select the record for updating; optional.
        #/// </param>
        #/// <returns>
        #///     The <c>PDSAdvancedPriceInfo</c> related to this purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     This will always return an empty buffer if the line does not have an advanced calculation ID.
        #///     Otherwise, if the <c>PDSAdvancedPriceInfo</c> record does not yet exist for the line and the
        #///     purchase order line has been written to the database (it has a <c>RecId</c>) then this will
        #///     create a new <c>PDSAdvancedPriceInfo</c> record automatically.
        #/// </remarks>
        #public PDSAdvancedPriceInfo pdsAdvancedPriceInfo(boolean _forUpdate = false)
        #{
        #    PDSAdvancedPriceInfo    advancedPriceInfo;
        #
        #    if (this.RecId && this.pdsCalculationId)
        #    {
        #        advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #        if (!advancedPriceInfo)
        #        {
        #            ttsbegin;
        #            advancedPriceInfo.PurchLineRefRecId = this.RecId;
        #            advancedPriceInfo.insert();
        #            ttscommit;
        #
        #            if (_forUpdate)
        #            {
        #                advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #            }
        #        }
        #    }
        #
        #    return advancedPriceInfo;
        #}
      ENDSOURCE
      SOURCE #pdsCancelRemainWeight
        #/// <summary>
        #/// Sets CW item RemainInvnetPhysical to zero if
        #/// PdsCWRemainInventPhysical is zero.
        #/// </summary>
        #/// <remarks>
        #/// This is meant to allow for variance in actual weight.
        #/// If CW qty is set to zero, and there is still some actual weight remaining,
        #/// this method will cancel it out.
        #/// <syntax>
        #/// public void pdsCancelRemainWeight()
        #/// </syntax>
        #/// </remarks>
        #public void pdsCancelRemainWeight()
        #{
        #    if (pdsIsCWItem(this.ItemId)
        #        && this.RemainInventPhysical != 0
        #        && this.PdsCWRemainInventPhysical == 0)
        #    {
        #        this.RemainInventPhysical = 0;
        #        this.RemainPurchPhysical = 0;
        #        this.update();
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCheckApprovedVendorList
        #/// <summary>
        #/// Method validates if the purchase line item has valid approved vendor
        #/// list entry if controlled by AVL functionality.
        #/// </summary>
        #/// <returns type="Enum">Returns True / false</returns>
        #/// <remarks>
        #/// <syntax>
        #/// private  boolean pdsCheckApprovedVendorList()
        #/// </syntax>
        #/// </remarks>
        #public boolean pdsCheckApprovedVendorList()
        #{
        #    PdsApprovedVendorListCheck avlCheck;
        #    boolean ret = true;
        #
        #    avlCheck = this.type().pdsApprovedVendorListCheck();
        #    ret = avlCheck.validateCheck();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWArrived
        #/// <summary>
        #///     Calculates and returns the CW qty arrived for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The catch weight arrived quantity.
        #/// </returns>
        #//BP Deviation Documented
        #public display PdsCWArrived pdsCWArrived()
        #{
        #    if (this.InventTransId)
        #    {
        #        return InventTransIdSumSingleStatus::pdsCWQtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    else
        #    {
        #        return 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingMatchedQtyInvent
        #/// <summary>
        #///    Calculates a sum of the <c>PdsCWInventNow</c> quantity for invoice lines connected to this <c>PurchLine</c> table
        #///    record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #///    A Boolean value which determines whether only pending invoice lines are considered connected. True,
        #///    if only pending invoice lines are considered connected; otherwise, false; optional.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #///    A Boolean value which determines whether only sub lines without a relationship to a packing slip should be considered.
        #///    True, if only sub lines without a relationship to a packing slip are considered in the calculation; otherwise, false; optional.
        #/// </param>
        #/// <returns>
        #///    The calculated <c>PdsCWInventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #///    Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PdsCWInventQty pdsCWCalcPendingMatchedQtyInvent(
        #    boolean _pendingOnly = true,
        #    boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(PdsCWInventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.PdsCWInventNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of ReceiveNow quantity for all pending invoice
        #/// lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// The calculated ReceiveNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> and the
        #/// <c>VendInvoiceInfoLine</c> tables are used in the calculation.
        #/// </remarks>
        #public server PdsCWInventQty pdsCWCalcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine;
        #    VendInvoiceInfoLine vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(PdsCWReceiveNow) from vendInvoiceInfoLine
        #        where   vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where   vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId
        #                &&  vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId
        #                && (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #                ||  vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #                &&  vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where   vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId
        #                &&  vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId
        #                &&  vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId
        #                &&  vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.PdsCWReceiveNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurchDisplay
        #/// <summary>
        #/// Returns the sum of PdsCWInventNow quantities for all pending
        #/// invoice lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// Calculated PdsCWInventNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both <c>PurchParmLine</c> and <c>VendInvoiceInfoLine</c>
        #/// tables are used in the calculation.
        #/// </remarks>
        #public display PdsCWPendingInvoice pdsCWCalcPendingQtyPurchDisplay()
        #{
        #    return this.pdsCWCalcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #pdsCWInvoicedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty Invoiced in total for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWInvoiced">CW qty invoiced in total for purchase order line.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWInvoiced PdsCWInvoicedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWInvoiced pdsCWInvoicedInTotal()
        #{
        #    PdsCWInvoiced   pdsCWInvoiced = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(PurchLine),
        #                       fieldNum(PurchLine, InventTransId),
        #                       AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId) &&
        #            this.InventTransId)
        #        {
        #            pdsCWInvoiced = this.type().pdsCWInvoicedInTotal();
        #        }
        #    }
        #    return pdsCWInvoiced;
        #}
      ENDSOURCE
      SOURCE #pdsCWOrdered
        #/// <summary>
        #/// Calculates and returns the CW qty ordered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWOrdered">CW qty Ordered</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWOrdered PdsCWOrdered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWOrdered pdsCWOrdered()
        #{
        #    PdsCWOrdered        pdsCWOrdered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                       fieldNum(InventSum, PdsCWOrdered),
        #                       AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWOrdered = inventTransIdSum.pdsCWOrdered();
        #        }
        #    }
        #
        #    return pdsCWOrdered;
        #}
      ENDSOURCE
      SOURCE #pdsCWPurchReceivedNowConversion
        #/// <summary>
        #/// Converts CW qty to standard qty or standard qty to
        #/// cw qty for the purchase order line.
        #/// </summary>
        #/// <param name="_fromCW" type="Enum">If true, converts from CW
        #/// qty and sets the PurchReceiveNow field.  If false the opposite is done.
        #/// </param>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWPurchReceivedNowConversion(Enum _fromCW)
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWPurchReceivedNowConversion(boolean _fromCW = false)
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (_fromCW)
        #        {
        #            this.PurchReceivedNow = PdsCatchWeight::inventQty(
        #                                        this.ItemId,
        #                                        this.PdsCWInventReceivedNow,
        #                                        this.PurchUnit);
        #        }
        #        else if (!this.PdsCWInventReceivedNow)
        #        {
        #            this.PdsCWInventReceivedNow = PdsCatchWeight::cwQty(
        #                                            this.ItemId,
        #                                            this.InventReceivedNow);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyConversion
        #/// <summary>
        #/// Converts the CW qty to the standard qty and sets the
        #/// purchLine.PurchQty to the converted value.
        #/// </summary>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWQtyConversion()
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWQtyConversion()
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PurchQty = PdsCatchWeight::inventQty(
        #                            this.ItemId,
        #                            this.PdsCWQty,
        #                            this.PurchUnit);
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyValidation
        #/// <summary>
        #/// Validates that the catch weight quanity entered is valid.
        #/// </summary>
        #/// <returns>
        #/// true if CW quantity is valid; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Checks that catch weight quantity is not negative, and that it is within the range set
        #/// up for the item.
        #/// </remarks>
        #public client server boolean pdsCWQtyValidation()
        #{
        #    boolean ret = true;
        #    boolean isNegative = false;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (this.purchTable().PurchaseType == PurchaseType::ReturnItem
        #            || this.PdsCWQty < 0)
        #        {
        #            isNegative = true;
        #        }
        #
        #        if (!this.PdsCWQty
        #            && !isNegative)
        #        {
        #            ret = checkFailed("@PDS113");
        #        }
        #
        #        if (ret
        #            && this.PdsCWInventReceivedNow
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                this.InventReceivedNow,
        #                                                this.PdsCWInventReceivedNow))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                this.ItemId,
        #                                                this.PdsCWInventReceivedNow,
        #                                                this.PurchUnit));
        #        }
        #
        #        if (ret
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                    this.QtyOrdered,
        #                                                    this.PdsCWQty))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                    this.ItemId,
        #                                                    this.PdsCWQty,
        #                                                    this.PurchUnit));
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWReceivedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty received in total for
        #/// the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWQtyReceived">CW qty received in total.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWQtyReceived PdsCWReceivedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWQtyReceived pdsCWReceivedInTotal()
        #{
        #    PdsCWQtyReceived pdsCWQtyReceived = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(VendInvoiceTrans),
        #                       fieldNum(VendInvoiceTrans, PdsCWQtyPhysical),
        #                       AccessType::View)
        #        && hasFieldAccess(tableNum(VendPackingSlipTrans),
        #                          fieldNum(VendPackingSlipTrans, PdsCWQty),
        #                          AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId)
        #            && this.InventTransId)
        #        {
        #            pdsCWQtyReceived = this.type().pdsCWReceivedInTotal();
        #        }
        #    }
        #
        #    return pdsCWQtyReceived;
        #}
      ENDSOURCE
      SOURCE #pdsCWRegistered
        #/// <summary>
        #/// Returns the CW qty registered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWRegistered">CW qty registered.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWRegistered PdsCWRegistered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWRegistered pdsCWRegistered()
        #{
        #    PdsCWRegistered     pdsCWRegistered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                          fieldNum(InventSum, PdsCWRegistered),
        #                          AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWRegistered = inventTransIdSum.pdsCWRegistered();
        #        }
        #    }
        #
        #    return pdsCWRegistered;
        #}
      ENDSOURCE
      SOURCE #pdsCWUnitId
        #/// <summary>
        #/// Gets the catch weight unit for the item.
        #/// </summary>
        #/// <returns>
        #/// The catch weight unit for the item.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public display PdsCWUnitId pdsCWUnitId()
        #{
        #    return PdsCatchWeight::cwUnitId(this.ItemId);
        #}
      ENDSOURCE
      SOURCE #pdsVendBatchInfo
        #/// Gets the <c>PdsVendBatchInfo</c> related record for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>PdsVendBatchInfo</c> record.
        #/// </returns>
        #public PdsVendBatchInfo pdsVendBatchInfo()
        #{
        #    return PdsVendBatchInfo::findByRefRecId(this.RecId);
        #}
      ENDSOURCE
      SOURCE #PISCOFINSReceivableLongTerm_BR
        #/// <summary>
        #/// Indicates whether the <c>PISCONFINS</c> asset is receivable long term.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>PISCOFINS</c> asset is receivable long term; otherwise, false.
        #/// </returns>
        #// <GBR>
        #public NoYes PISCOFINSReceivableLongTerm_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return false;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).PISCOFINSReceivableLongTerm_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSReceivableLongTerm_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #postModifyInventDimBR
        #/// <summary>
        #///   Sets field values on the order line based on the changed inventory dimension.
        #/// </summary>
        #/// <param name="_inventDim">
        #///   A record.
        #/// </param>
        #/// <param name="_dimFieldId">
        #///   A field ID.
        #/// </param>
        #/// <param name="_resetPrice">
        #///   A <c>Boolean</c> value determinig if the price should be reset; optional.
        #/// </param>
        #public void postModifyInventDimBR(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    if (_dimFieldId == fieldNum(InventDim, InventSiteId))
        #    {
        #        this.inventSiteChanged_BR();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceDate
        #/// <summary>
        #/// Retrieves the date for which to calculate the price according to the <c>PriceDateType</c> field.
        #/// </summary>
        #/// <returns>
        #/// The date for which to calculate the price.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PriceDateType</c> field can be set up to <c>Today</c> or <c>DeliveryDate</c> as a price date.
        #/// </remarks>
        #TransDate priceDate()
        #{
        #    PurchParameters purchParameters;
        #    PurchLine_W     purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PriceAgreementDate_RU)
        #        {
        #            return purchLine_W.PriceAgreementDate_RU;
        #        }
        #    }
        #
        #    purchParameters = PurchParameters::find();
        #
        #    switch (purchParameters.PriceDateType)
        #    {
        #        case PurchPriceDateType::DeliveryDate:
        #            return this.DeliveryDate;
        #
        #        default:
        #            return systemDateGet();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceGroupId
        #PriceGroupId  priceGroupId()
        #{
        #    return this.purchTable().PriceGroupId;
        #}
      ENDSOURCE
      SOURCE #projIdModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the project ID unit field.
        #/// </summary>
        #/// <remarks>
        #/// Called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void projIdModified()
        #{
        #    if (this.RecId && !this.refreshAgreementLink())
        #    {
        #        this.unLinkAgreementLinePrompt(fieldNum(PurchLine, ProjId));
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.psaRetainScheduleId = ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).RuleId;
        #    }
        #    this.setProjSalesPrice();
        #}
      ENDSOURCE
      SOURCE #projQueryValueInventTransId
        #str projQueryValueInventTransId()
        #{
        #    return ProjItemTrans::projQueryValueInventTransId(this.InventTransId, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #projTable
        #ProjTable projTable(
        #    ProjId     projId = this.ProjId,
        #    boolean    update = false)
        #{
        #    return ProjTable::find(projId, update);
        #}
      ENDSOURCE
      SOURCE #psAeditActivityPurpose
        #public edit smmActivityPurpose psAeditActivityPurpose(boolean _set, ProjActivityNumber _activityNumber)
        #{
        #    smmActivities smmActivities;
        #    str name;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #    if (_set)
        #    {
        #        this.ActivityNumber = _activityNumber;
        #        this.initFromProjActivity(ProjActivity::find(_activityNumber));
        #    }
        #    else
        #    {
        #        smmActivities = smmActivities::find(this.ActivityNumber);
        #        name = smmActivities.Purpose;
        #    }
        #    }
        #
        #    return name;
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaGetPWPSetting
        #public boolean psaGetPWPSetting()
        #{
        #    boolean     isPwpSetting;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        if (ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).PwpThresholdPercent > 0)
        #        {
        #            isPwpSetting = true;
        #        }
        #        else
        #        {
        #            isPwpSetting = false;
        #        }
        #    }
        #
        #    return isPwpSetting;
        #}
      ENDSOURCE
      SOURCE #psaInitFromForecastSales
        #
        #// Description    : Init a purch line from a forecast sales line
        #//                  Based on initFromPurchLine
        #// Parameters     : _tForecastSales: Record to init from
        #//                  _bCopyPrecisely: Copy line precisely
        #//                  _bCopyPriceDisc: Init price and discount
        #//                  _bCopyQty: Init quantity
        #//                  _rQty: Quantity to init from
        #// Return value   : None
        #
        #public void  psaInitFromForecastSales(ForecastSales    _tForecastSales,
        #                               boolean          _bCopyPrecisely = true,
        #                               boolean          _bCopyPriceDisc = true,
        #                               boolean          _bCopyQty       = true,
        #                               Qty              _rQty           = _tForecastSales.SalesQty)
        #{
        #    InventDim   inventDim;
        #
        #    if (!isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        return;
        #    }
        #
        #    this.ItemId             = _tForecastSales.ItemId;
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (_bCopyQty)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.PurchQty           = _rQty;
        #        this.PurchUnit          = _tForecastSales.SalesUnitId;
        #        this.QtyOrdered         = _tForecastSales.SalesQty == _rQty ? _tForecastSales.InventQty : this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim               = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId,_tForecastSales.inventDim(),inventDim);
        #        this.InventDimId        = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_bCopyPriceDisc)
        #    {
        #        this.PurchPrice         = _tForecastSales.CostPrice;
        #        this.ProjSalesPrice     = _tForecastSales.SalesPrice;
        #        this.PriceUnit          = _tForecastSales.PriceUnit;
        #        this.LinePercent        = _tForecastSales.DiscPercent;
        #        this.LineDisc           = _tForecastSales.DiscAmount;
        #        this.PurchMarkup        = _tForecastSales.SalesMarkup;
        #        this.LineAmount         = _tForecastSales.Amount;
        #    }
        #
        #    if (_bCopyPrecisely)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.Name               = _tForecastSales.itemName();
        #        this.TaxItemGroup       = _tForecastSales.TaxItemGroupId;
        #        this.DefaultDimension   = _tForecastSales.DefaultDimension;
        #    }
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaInvoicedAmount
        #public AmountCur psaInvoicedAmount()
        #{
        #    AmountCur   rInvoiceAmount = 0;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        rInvoiceAmount = (select sum(LineAmount) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #    }
        #
        #    return rInvoiceAmount;
        #}
        #
      ENDSOURCE
      SOURCE #psaInvoicedQty
        #public PurchQty psaInvoicedQty()
        #{
        #    PurchQty   invoicedQty = 0.00;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        invoicedQty = (select sum(Qty) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).Qty;
        #    }
        #
        #    return invoicedQty;
        #}
        #
      ENDSOURCE
      SOURCE #psaPwpPercent
        #public display PSAPercent psaPwpPercent(PurchLine _purchLine)
        #{
        #    return ProjPWPVendorRetentionSetting::getPwpThresholdPercent(_purchLine.ProjId, _purchLine.IsPwp, _purchLine.VendAccount);
        #}
        #
        #
      ENDSOURCE
      SOURCE #purchCORremainPurchQty
        #//BP Deviation Documented
        #public display Qty purchCORremainPurchQty(PurchLine _purchLine)
        #{
        #    return EPPurchCOR::corRemainPurchQty(int642str(_purchLine.RecId), _purchLine.RemainPurchPhysical);
        #}
      ENDSOURCE
      SOURCE #purchLine_IN
        #/// <summary>
        #/// Get the <c>PurchLine_IN</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_IN</c> associated with the current record.
        #/// </returns>
        #public PurchLine_IN purchLine_IN()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_IN));
        #}
      ENDSOURCE
      SOURCE #purchLine_Intrastat
        #/// <summary>
        #/// Retrieves <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #public PurchLine_Intrastat purchLine_Intrastat()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_Intrastat));
        #}
        #
      ENDSOURCE
      SOURCE #purchLine_W
        #/// <summary>
        #/// Get the <c>PurchLine_W</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_W</c> associated with the current record.
        #/// </returns>
        #public PurchLine_W purchLine_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_W));
        #}
      ENDSOURCE
      SOURCE #purchLineView_IN
        #/// <summary>
        #/// Gets a <C>PurchLineView_IN</C> based on current buffer.
        #/// </summary>
        #/// <returns>
        #/// A <C>PurchLineView_IN</C>.
        #/// </returns>
        #public PurchLineView_IN purchLineView_IN()
        #{
        #    PurchLineView_IN    purchLineView_IN;
        #
        #    purchLineView_IN.initFromPurchLine(this);
        #    purchLineView_IN.initFromPurchLine_IN(this.purchLine_IN());
        #
        #    // If the view doesn't have a RecId then it will assume
        #    // this is an insert scenario when it isn't.  So we will
        #    // let the view borrow the RecId from the PurchLine.  Since
        #    // no writes are done using this view this will work okay.
        #    purchLineView_IN.RecId = this.RecId;
        #
        #    return purchLineView_IN;
        #}
      ENDSOURCE
      SOURCE #purchQtyModifiedInteraction
        #/// <summary>
        #/// Performs code with regard to changes in the purchase line when purchase quantity is changed with
        #/// user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The inventory dimensions of the changed line.
        #/// </param>
        #/// <remarks>
        #/// Prompt appears if linked purchase agreement line is set to enforce max quantity.
        #/// </remarks>
        #public void purchQtyModifiedInteraction(InventDim _inventDim = this.inventDim())
        #{
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkRefreshed;
        #
        #    AmountCur   localOrigLineAmount = this.LineAmount; //This variable is needed for the uncommitted scenario.
        #
        #    if (!this.isTmp() && this.purchTable().MatchingAgreement)
        #    {
        #        //The impact on line amount should be included in the agreement link validation.
        #        this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #        isAgreementLinkRefreshed = this.refreshAgreementLink();
        #        this.LineAmount      = localOrigLineAmount;
        #
        #        if (isAgreementLinkRefreshed)
        #        {
        #            PurchLine::modifyPurchQty(this, _inventDim);
        #        }
        #        else
        #        {
        #            calledFromWeb = webSession() ? true : false;
        #            if (calledFromWeb)
        #            {
        #                warning("@SYS135750");
        #                PurchLine::modifyPurchQty(this, _inventDim);
        #            }
        #            else
        #            {
        #                if (this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchQty)))
        #                {
        #                    if (this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #                        && this.doReCalcPricesFromBasePrompt())
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim);
        #                    }
        #                    else
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim, false);
        #                    }
        #                }
        #                else
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #            }
        #        }
        #    }
        #    else
        #    {
        #        PurchLine::modifyPurchQty(this, _inventDim);
        #    }
        #}
      ENDSOURCE
      SOURCE #purchReceivedNowAllowEdit
        #/// <summary>
        #/// Determines whether the <c>ReceivedNow</c> field can be edited.
        #/// </summary>
        #/// <returns>
        #/// false for order lines with multiple deliveries; otherwise, true.
        #/// </returns>
        #boolean purchReceivedNowAllowEdit()
        #{
        #    return this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries;
        #}
      ENDSOURCE
      SOURCE #purchTable
        #PurchTable purchTable(boolean  update = false)
        #{
        #    return PurchTable::find(this.PurchId, update);
        #}
      ENDSOURCE
      SOURCE #purchUnitModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the <c>PurchUnit</c> field.
        #/// </summary>
        #/// <remarks>
        #/// This method is called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void purchUnitModified()
        #{
        #    boolean modifyPurchUnit = true;
        #    if (this.RecId && this.purchTable().MatchingAgreement && !this.refreshAgreementLink())
        #    {
        #        if (!this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchUnit)))
        #        {
        #            modifyPurchUnit = false;
        #        }
        #    }
        #
        #    if (modifyPurchUnit)
        #    {
        #        InventMovement::bufferSetTransQtyUnit(this);
        #        this.setInventReceivedNow();
        #    }
        #
        #    if (this.ProjId && this.PurchUnit && !this.ItemId && !this.ProjSalesUnitId)
        #    {
        #        this.ProjSalesUnitId = this.PurchUnit;
        #    }
        #}
      ENDSOURCE
      SOURCE #qtyMarked
        #/// <summary>
        #///    Retrieves the amount of the inventory items marked for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///    The amount of inventory marked for the inventory transaction related to the purchase order line.
        #/// </returns>
        #public InventQtyMarked qtyMarked()
        #{
        #    InventTransOriginId     inventTransOriginId;
        #    InventQtyMarked         inventQtyMarked;
        #
        #    if (this.isStocked())
        #    {
        #        inventTransOriginId = InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId);
        #        if (inventTransOriginId)
        #        {
        #            inventQtyMarked = InventTransOrigin::qtyMarked(inventTransOriginId);
        #        }
        #    }
        #
        #    return inventQtyMarked;
        #}
      ENDSOURCE
      SOURCE #qualityOrderStatusDisplay
        #/// <summary>
        #/// Retrieves the status of the associated quality orders.
        #/// </summary>
        #/// <returns>
        #/// The current quality order status.
        #/// </returns>
        #
        #//BP deviation documented
        #display InventTestOrderStatusDisplay qualityOrderStatusDisplay()
        #{
        #    return InventQualityOrderTable::referenceDocumentStatusDisplay(this);
        #}
      ENDSOURCE
      SOURCE #quantityToDistribute
        #/// <summary>
        #/// Calculates and returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </summary>
        #/// <returns>
        #/// Returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PurchQty</c> value is not used. Instead, the sum of the quantity invoiced plus the quantity
        #/// that remains to be invoiced, plus the quantity that remains to be delivered is used.
        #/// </remarks>
        #public PurchQty quantityToDistribute()
        #{
        #    return this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #receivedInTotal
        #//BP Deviation Documented
        #display PurchQty   receivedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    return this.receivedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #receivedInTotalPrice
        #//BP Deviation Documented
        #server display AmountCur  receivedInTotalPrice()
        #{
        #    AmountCur   receivedAmount;
        #
        #    if (this.ItemId)
        #    {
        #        receivedAmount   = (select sum(LineAmount) from vendInvoiceTrans
        #                                index hint TransIdIdx
        #                                where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #
        #        receivedAmount  += (this.receivedOnPackingSlipInTotal() * InventTable::findCostPcsPrice(this.ItemId, this.InventDimId));
        #    }
        #
        #    return receivedAmount;
        #}
      ENDSOURCE
      SOURCE #receivedInTotalServer
        #server PurchQty receivedInTotalServer()
        #{
        #    return this.type().receivedInTotal();
        #}
      ENDSOURCE
      SOURCE #receivedInventInTotal
        #//BP Deviation Documented
        #server display InventQty    receivedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = (inventTransIdSum.physical() + inventTransIdSum.financial());
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #receivedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity received on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity received on packing slips.
        #/// </returns>
        #public PurchQty receivedOnPackingSlipInTotal()
        #{
        #    VendPackingSlipTrans            vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendPackingSlipTrans
        #        where vendPackingSlipTrans.InventTransId == this.InventTransId;
        #
        #    return vendPackingSlipTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #reductionEntryAmount_JP
        #/// <summary>
        #/// Displays the asset reduction entry amount
        #/// </summary>
        #/// <param name="_set">
        #/// Set or get the reduction entry amount
        #/// </param>
        #/// <param name="_amount">
        #/// Instance of <c>AssetReductionEntryAmount_JP</c>
        #/// </param>
        #/// <returns>
        #/// The reduction entry amount for asset
        #/// </returns>
        #public edit AssetReductionEntryAmount_JP reductionEntryAmount_JP(
        #    boolean                            _set,
        #    AssetReductionEntryAmount_JP       _amount)
        #{
        #    AssetReductionEntryAmount_JP           amountLoc;
        #    AssetDocumentReductionEntry_JP         reductionEntryDocumentLoc;
        #    AssetDocumentReductionEntryPurchLnk_JP assetDocumentLnk           = AssetDocumentLink_JP::construct(
        #                                                                        AssetDocumentLinkType_JP::Purch,
        #                                                                        AssetDocumentType_JP::AssetReductionEntry_DirectOff);
        #
        #    if (this.AssetId && this.AssetBookId && this.RecId)
        #    {
        #        reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
        #                                        this.AssetId,
        #                                        this.AssetBookId);
        #        if (reductionEntryDocumentLoc != null)
        #        {
        #            assetDocumentLnk.findByReference(this.TableId, this.RecId, reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
        #            if (_set)
        #            {
        #                if (_amount)
        #                {
        #                    if (assetDocumentLnk.parmRecId())
        #                    {
        #                        // update
        #                        assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
        #                        assetDocumentLnk.parmReductionEntryCurrencyCode(this.CurrencyCode);
        #                        assetDocumentLnk.update();
        #                    }
        #                    else
        #                    {
        #                        // new
        #                        assetDocumentLnk.parmPurchLine(this);
        #                        assetDocumentLnk.parmAssetDocumentEntryRecId(reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
        #                        assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
        #                        assetDocumentLnk.parmReductionEntryCurrencyCode(this.CurrencyCode);
        #                        assetDocumentLnk.create();
        #                    }
        #                }
        #                else
        #                {
        #                    // remove
        #                    assetDocumentLnk.delete();
        #                }
        #            }
        #            else
        #            {
        #                amountLoc = assetDocumentLnk.parmReductionEntryAmount() * -1;
        #            }
        #        }
        #    }
        #
        #    return amountLoc;
        #}
        #
      ENDSOURCE
      SOURCE #reductionEntryDocumentId_JP
        #/// <summary>
        #/// Displays the asset reduction entry document id
        #/// </summary>
        #/// <returns>
        #/// The document id for asset reduction entry
        #/// </returns>
        #public display AssetReductionEntryProfileId_JP reductionEntryDocumentId_JP()
        #{
        #    AssetReductionEntryProfileId_JP    reductionEntryDocumentIdLoc;
        #    AssetDocumentReductionEntry_JP     reductionEntryDocumentLoc;
        #    if (this.AssetId && this.AssetBookId)
        #    {
        #        reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
        #            this.AssetId,
        #            this.AssetBookId);
        #        if (reductionEntryDocumentLoc != null)
        #        {
        #            reductionEntryDocumentIdLoc = reductionEntryDocumentLoc.parmAssetDocumentTable().DocumentId;
        #        }
        #    }
        #    return reductionEntryDocumentIdLoc;
        #}
        #
      ENDSOURCE
      SOURCE #referenceWarningTxt
        #/// <summary>
        #/// Retrieves a warning message used for a line which references other entities.
        #/// </summary>
        #/// <returns>A warning message used for a line which references other entities.</returns>
        #str referenceWarningTxt()
        #{
        #    SalesLine       salesLine;
        #    PurchLine       purchLine;
        #    PurchReqLine    purchReqLine;
        #
        #    if (this.InventRefId)
        #    {
        #        switch (this.ItemRefType)
        #        {
        #            case InventRefType::Sales:
        #                salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #                if (salesLine)
        #                {
        #                    return strFmt("@SYS75609", salesLine.SalesId, salesLine.SalesStatus, this.ItemId);
        #                }
        #                break;
        #            case InventRefType::Purch:
        #                purchLine = PurchLine::findInventTransId(this.InventRefTransId);
        #                if (purchLine)
        #                {
        #                    return strFmt("@SYS75607", purchLine.PurchId, purchLine.PurchStatus, this.ItemId);
        #                }
        #                break;
        #
        #        }
        #    }
        #    // Show warning when deleting unconfirmed purchase line connected to a requisition.
        #    else if (this.PurchReqLineRefId
        #        && !this.isVersioned())
        #    {
        #        purchReqLine = PurchReqLine::findLineRefId(this.PurchReqLineRefId);
        #        return strFmt("@SYS342715", purchReqLine.SequenceNumber, this.PurchReqId, this.LineNumber);
        #    }
        #
        #    return '';
        #}
      ENDSOURCE
      SOURCE #refreshAgreementLink
        #/// <summary>
        #/// Refreshes the link between the <c>AgreementLine</c> and the <c>PurchLine</c>. If the current link has
        #/// become invalid, or if there is no current link, this will search for the best matching <c>AgreementLine</c>
        #/// and update the <c>PurchLine</c> if a new match is found.
        #/// </summary>
        #/// <param name="_showInfolog">
        #/// A flag that indicates whether to print the errors in the Infolog; optional.
        #/// </param>
        #/// <returns>
        #/// false if the link could not be refreshed; this happens when the current link is invalid and no better match could be found
        #/// </returns>
        #public server boolean refreshAgreementLink(boolean _showInfolog = true)
        #{
        #    return this.SalesPurchLine::refreshAgreementLink(new AgreementAutolinkHelperPurchLine(), _showInfolog);
        #}
      ENDSOURCE
      SOURCE #registered
        #//BP Deviation Documented
        #display InventQtyRegistered registered()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyRegistered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #registeredInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyRegistered registeredInPurchUnit()
        #{
        #    PurchQtyRegistered purchQtyRegistered;
        #
        #    if (this.isStocked())
        #    {
        #        purchQtyRegistered = this.registered();
        #        if (purchQtyRegistered)
        #        {
        #            purchQtyRegistered = this.unitConvertInvent2Purch(purchQtyRegistered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyRegistered = TradeNonStockedRegistrationHelper::qtyRegistered(this.SourceDocumentLine);
        #    }
        #
        #    return purchQtyRegistered;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServices
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public InventQty registeredQuantityAndServices()
        #{
        #    InventQty   quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity =  this.registered();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the ordered quantity is returned
        #        quantity = this.unitConvertPurch2Invent(this.PurchQty);
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServicesInPurchUnit
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public PurchQty registeredQuantityAndServicesInPurchUnit()
        #{
        #    PurchQty quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity = this.registeredInPurchUnit();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the line quantity is returned
        #        quantity = this.PurchQty;
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #reqTrans
        #/// <summary>
        #/// Finds the corresponding record in the <c>ReqTrans</c> table for the current record in the
        #/// <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_reqPlanVersionRefRecId">
        #/// Tthe ID of the record in the <c>ReqPlanVersion</c> table; optional.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>ReqTrans</c> table; otherwise, an empty record.
        #/// </returns>
        #ReqTrans reqTrans(
        #    RefRecId _reqPlanVersionRefRecId = ReqPlanVersion::findActiveReqPlanIdDynamic().RecId,
        #    boolean  _forupdate              = false)
        #{
        #    ReqTrans                    reqTrans;
        #    InventTransOriginPurchLine  inventTransOriginPurchLine;
        #
        #
        #    reqTrans.selectForUpdate(_forupdate);
        #
        #    select firstonly reqTrans
        #        where reqTrans.PlanVersion  == _reqPlanVersionRefRecId
        #           && reqTrans.RefType      == ReqRefType::Purch
        #           && reqTrans.RefId        == this.PurchId
        #        exists join inventTransOriginPurchLine
        #            where inventTransOriginPurchLine.InventTransOrigin      == reqTrans.InventTransOrigin
        #               && inventTransOriginPurchLine.PurchLineDataAreaId    == this.DataAreaId
        #               && inventTransOriginPurchLine.PurchLineInventTransId == this.InventTransId;
        #
        #    return reqTrans;
        #}
      ENDSOURCE
      SOURCE #resetDistributions
        #/// <summary>
        #/// Removes and regenerates the distributions for the current document.
        #/// </summary>
        #/// <remarks>
        #/// This is used by the commitments feature to reset the accounting distributions after the commitment for the current line is changed.
        #/// </remarks>
        #public void resetDistributions()
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #
        #    // Check to see that the commitments feature is enabled and that there are existing distributions.
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled() && AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #    {
        #        select firstonly sourceDocumentLine
        #            where sourceDocumentLine.RecId == this.SourceDocumentLine;
        #
        #        // set the accounting state to draft
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::Draft, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #
        #        // set the accounting state back to fully distributed
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::FullyDistributed, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #    }
        #}
      ENDSOURCE
      SOURCE #resetInvent
        #server void  resetInvent(boolean update = true)
        #{
        #    this.PurchQty                       = 0;
        #    this.QtyOrdered                     = 0;
        #
        #    this.PurchPrice    = 0;
        #    this.LineAmount    = 0;
        #
        #    this.RemainPurchPhysical    = this.PurchQty;
        #    this.RemainPurchFinancial   = 0;
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial  = 0;
        #    // 1877
        #
        #    InventMovement::bufferSetTransQtyUnit(this);
        #    this.setInventReceivedNow();
        #
        #    if (update)
        #    {
        #        this.update();
        #        this.PurchStatus   = PurchStatus::Canceled;
        #        this.doUpdate();
        #
        #        InterCompanyUpdateStatus::synchronize(this);
        #    }
        #    else
        #    {
        #        this.PurchStatus   = PurchStatus::Canceled;
        #    }
        #}
      ENDSOURCE
      SOURCE #returnActionChanged
        #void  returnActionChanged(InventDim inventDim = null)
        #{
        #    ReturnActionDefaults  returnActionDefaults = ReturnActionDefaults::find(this.moduleType(), this.ReturnActionId);
        #
        #    if (returnActionDefaults.RecId)
        #    {
        #        if (!inventDim)
        #        {
        #            inventDim = this.inventDim();
        #        }
        #
        #        inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), returnActionDefaults.inventDim());
        #        this.setInventDimIdFromInventDim(inventDim);
        #
        #
        #        if (this.ProjId && !this.purchTable().isProjectSalesItemReqPO()
        #            && !this.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
        #        {
        #            this.Scrap          = returnActionDefaults.Scrap;
        #
        #            if (this.ItemRefType != InventRefType::Sales &&
        #                this.ItemRefType != InventRefType::InventJournal)
        #            {
        #                this.Scrap  = true;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #runPriceDiscPolicyDialog
        #/// <summary>
        #/// Calls the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_skipCheck">
        #/// A boolean that specifies whether to skip field change validation before start of the dialog;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The return value of the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c>
        #/// table map.
        #/// </returns>
        #public boolean runPriceDiscPolicyDialog(boolean _skipCheck = false)
        #{
        #
        #    return this.PriceDiscResultFields::runPriceDiscPolicyDialog(0,
        #                                                                false,
        #                                                                _skipCheck);
        #}
      ENDSOURCE
      SOURCE #salesLine
        #SalesLine salesLine(boolean _update = false)
        #{
        #    SalesLine salesLine;
        #
        #    if (this.ItemRefType == InventRefType::Sales && this.InventRefId && this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId, _update);
        #    }
        #
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #salesPurchTable
        #SalesPurchTable salesPurchTable()
        #{
        #    return this.purchTable();
        #}
      ENDSOURCE
      SOURCE #setAddressFromInventDim
        #public void setAddressFromInventDim(InventDim _inventDim
        #                                    , boolean _setTaxGroupFromPurchTable = true
        #)
        #{
        #    InventLocation              inventLocation;
        #    InventSite                  inventSite;
        #    LogisticsLocationRecId      location;
        #
        #    if (_inventDim.RecId
        #    &&  !this.isDropShipment())
        #    {
        #        inventLocation  = InventLocation::find(_inventDim.InventLocationId);
        #        location        = LogisticsLocationDefault::findSimpleDefault(inventLocation,
        #                            LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #
        #        if (location)
        #        {
        #            this.setLocation(location, inventLocation);
        #        }
        #        else if (inventLocation.VendAccount
        #                || this.PurchaseType == PurchaseType::ReturnItem
        #                )
        #        {
        #            if (this.PurchaseType != PurchaseType::ReturnItem)
        #            {
        #            this.setAddressFromVendTable(VendTable::find(inventLocation.VendAccount));
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #            }
        #        }
        #        else
        #        {
        #            inventSite  = InventSite::find(_inventDim.InventSiteId);
        #            if (inventSite)
        #            {
        #                location   = LogisticsLocationDefault::findSimpleDefault(inventSite, LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #            }
        #
        #            if (location)
        #            {
        #                this.setLocation(location, inventSite);
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #
        #                if (_setTaxGroupFromPurchTable)
        #                {
        #                    this.TaxGroup = this.purchTable().TaxGroup;
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchLine
        #public void  setAddressFromPurchLine(PurchLine  _purchLine)
        #{
        #    this.DeliveryPostalAddress      = _purchLine.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchLine.DeliveryName;
        #    this.AddressRefRecId            = _purchLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchLine.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchTable
        #public void  setAddressFromPurchTable(PurchTable  _purchTable = this.purchTable())
        #{
        #    //Note: Any change made here must also be made in purchTable.copyAddressToLine
        #
        #    this.DeliveryPostalAddress      = _purchTable.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchTable.DeliveryName;
        #    this.AddressRefRecId            = _purchTable.AddressRefRecId;
        #    this.AddressRefTableId          = _purchTable.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromVendTable
        #void  setAddressFromVendTable(VendTable _vendTable)
        #{
        #    this.DeliveryName               =_vendTable.name();
        #    this.DeliveryPostalAddress      = DirParty::primaryPostalAddress(_vendTable.Party).RecId;
        #    this.AddressRefRecId            = _vendTable.RecId;
        #    this.AddressRefTableId          = _vendTable.TableId;
        #}
      ENDSOURCE
      SOURCE #setAgreementLine
        #/// <summary>
        #/// Sets the <c>AgreementLine</c> when the procurement category is changed for a purchase line.
        #/// </summary>
        #private void setAgreementLine()
        #{
        #    EcoResCategory ecoResCategory, ecoResCategoryChildren;
        #    AgreementLine  agreementLineLocal;
        #    DataAreaId     companyId = CompanyInfo::find().company();
        #
        #    if(this.isCategoryBased() && this.purchTable().MatchingAgreement)
        #    {
        #        select firstonly RecId from ecoResCategory order by ecoResCategory.Level desc
        #            join Category, Agreement from agreementLineLocal
        #                where ecoResCategory.RecId == agreementLineLocal.Category
        #                    && agreementLineLocal.Agreement == this.purchTable().MatchingAgreement
        #                    && agreementLineLocal.IsDeleted == NoYes::No
        #                    && agreementLineLocal.InventDimDataAreaId == companyId
        #                    && agreementLineLocal.ExpirationDate >= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #                    && agreementLineLocal.EffectiveDate <= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #            exists join ParentCategory, RecId from ecoResCategoryChildren
        #                where ecoResCategoryChildren.CategoryHierarchy == ecoResCategory.CategoryHierarchy
        #                    && ecoResCategoryChildren.NestedSetLeft >= ecoResCategory.NestedSetLeft
        #                    && ecoResCategoryChildren.NestedSetRight <= ecoResCategory.NestedSetRight
        #                    && (ecoResCategory.RecId == this.ProcurementCategory || ecoResCategoryChildren.RecId == this.ProcurementCategory);
        #
        #        if(agreementLineLocal)
        #        {
        #            this.MatchingAgreementLine = agreementLineLocal.RecId;
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setAgreementPrice
        #client server void  setAgreementPrice(AgreementLineQuantityCommitment _agreementLine)
        #{
        #    this.PurchUnit = _agreementLine.ProductUnitOfMeasure;
        #    this.SalesPurchLine::setAgreementQtyAndPrice(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #setAgreementSkipAutoLink
        #/// <summary>
        #/// Sets a value for the AgreementSkipAutoLink field of <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_agreementSkipAutoLink">
        #/// Value for the AgreementSkipAutoLink field to be set on the instance of <c>PurchLine</c>
        #/// </param>
        #/// <remarks>
        #/// This value determines whether or not automatic attempt to link this line to agreement line should take place or not
        #/// in case when agreement specific information is changed for this instance of <c>PurchLine</c>
        #/// </remarks>
        #public void setAgreementSkipAutoLink(AgreementSkipAutoLink _agreementSkipAutoLink)
        #{
        #    this.AgreementSkipAutoLink = _agreementSkipAutoLink;
        #}
        #
      ENDSOURCE
      SOURCE #setCFOP_BR
        #/// <summary>
        #/// It is responsible for setting CFOP code
        #/// </summary>
        #/// <param name="_askToUser">
        #/// boolean to define if should request user intereaction
        #/// </param>
        #public void setCFOP_BR(boolean _askToUser = false)
        #{
        #    CFOPValidation_BR           cfopValidation;
        #
        #    cfopValidation       = CFOPValidation_BR::construct(this);
        #    if (!cfopValidation.checkCFOP(_askToUser))
        #    {
        #        this.cfopTable_BR    = cfopValidation.getDefaultCFOP(_askToUser);
        #        this.onCFOPChange_BR();
        #    }
        #}
      ENDSOURCE
      SOURCE #setDeliveryName
        #/// <summary>
        #///     Sets the delivery name field based on the specified logistic location.
        #/// </summary>
        #public void setDeliveryName()
        #{
        #    this.TradePostalAddress::setDeliveryName();
        #}
      ENDSOURCE
      SOURCE #setDepreciationStartDate
        #void setDepreciationStartDate(boolean _forceSet = false)
        #{
        #    if (this.AssetId != this.orig().AssetId ||
        #        this.AssetBookId != this.orig().AssetBookId || _forceSet)
        #    {
        #        this.DepreciationStartDate = AssetBook::getDepreciationStartDate(this.AssetId, this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setExciseFields_IN
        #/// <summary>
        #/// Sets excise fields of purch line.
        #/// </summary>
        #public void setExciseFields_IN()
        #{
        #    PurchLine_IN purchLine_IN;
        #
        #    if (TaxParameters::isExciseEnable_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        if (!TaxExciseTypeController_IN::isDSAAllowed(purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.ItemId))
        #        {
        #            purchLine_IN.dsa_in = false;
        #        }
        #
        #        if(!TaxExciseTypeController_IN::isDirectSettlementAllowed(
        #        purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.PurchQty > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax))
        #        {
        #            purchLine_IN.DirectSettlement_IN = DirectSettlement_IN::None;
        #        }
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setInventDimId
        #/// <summary>
        #/// Applies the <c>InventDimId</c> parameter to the <c>InventDimId</c> field and applies default
        #/// values, depending on the new inventory dimensions.
        #/// </summary>
        #/// <param name="_inventDimId">
        #/// The <c>InventDimId</c> value that should be applied to the <c>InventDimId</c> field.
        #/// </param>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
        #/// </param>
        #public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
        #{
        #    InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();
        #
        #    this.InventDimId = _inventDimId;
        #    this.linkInventDim2Dimension(_inventDim, currentInventDim);
        #}
      ENDSOURCE
      SOURCE #setInventDimIdFromInventDim
        #/// <summary>
        #/// Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
        #/// found <c>InventDimId</c> value to the <c>PurchLine.inventDimId</c> field.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// An <c>InventDim</c> record buffer that should be referenced by the current <c>PurchLine</c> record
        #/// buffer.
        #/// </param>
        #public void setInventDimIdFromInventDim(InventDim _inventDim)
        #{
        #    InventDim   inventDim;
        #
        #    inventDim = InventDim::findOrCreate(_inventDim);
        #    this.setInventDimId(inventDim.InventDimId, inventDim);
        #}
      ENDSOURCE
      SOURCE #setInventReceivedNow
        #void  setInventReceivedNow()
        #{
        #    if (this.isStocked())
        #    {
        #        this.InventReceivedNow = UnitOfMeasureConverter::convert(
        #            this.PurchReceivedNow,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    else
        #    {
        #        this.InventReceivedNow = 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #setListCode
        #void  setListCode()
        #{
        #}
      ENDSOURCE
      SOURCE #setLocation
        #/// <summary>
        #///    Sets delivery address information and related information.
        #/// </summary>
        #/// <param name="_locationRecId">
        #///    The record ID of the logistics location.
        #/// </param>
        #/// <param name="_source">
        #///    The record that has an associated address.
        #/// </param>
        #/// <remarks>
        #///    If <c>_source</c> parameter is not specified, the address related information will be set based on the logistics location.
        #/// </remarks>
        #void  setLocation(LogisticsLocationRecId  _locationRecId, Common _source = null)
        #{
        #    LogisticsLocation location = LogisticsLocation::find(_locationRecId);
        #
        #    if (this.PurchaseType != PurchaseType::ReturnItem)
        #    {
        #    if (location.Description)
        #        this.DeliveryName       = location.Description;
        #
        #    this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
        #
        #    if(_source)
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(_source,
        #            this.DeliveryPostalAddress);
        #    }
        #    else
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #            this.DeliveryPostalAddress);
        #    }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPostingProfile_RU
        #void setPostingProfile_RU()
        #{
        #    PurchLine_W         purchLine_W;
        #    InventProfileId_RU  inventProfile = this.inventDim().InventProfileId_RU;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        (inventProfile && (! this.RecId || inventProfile != this.orig().inventDim().InventProfileId_RU)))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.PostingProfile_RU = InventProfileCustVendLedger_RU::vendPostingProfile(inventProfile);
        #        this.packPurchLine_W(purchLine_W);
        #        if (this.dataSource())
        #        {
        #            this.dataSource().refresh();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceAgreement
        #server void  setPriceAgreement(InventDim inventDim, PriceDiscPolicyCheckPolicy  _checkPolicy = null )
        #{
        #    this.SalesPurchLine::setPriceAgreement(inventDim, true, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDisc
        #server void  setPriceDisc(InventDim inventDim)
        #{
        #    PriceDiscPolicyCheckPolicy  checkPolicy = PriceDiscPolicyCheckPolicy::newFromParm(this.PriceDiscResultFields::parmPriceDiscResultFields());
        #
        #    this.setPriceAgreement(inventDim, checkPolicy);
        #    this.LineAmount = this.calcLineAmountForced(this.PurchQty, checkPolicy);
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.assessableValue_IN();
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscChangePolicy
        #/// <summary>
        #/// Calls the <c>createPriceDiscChangePolicy</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_policySource">
        #/// An outcome of the <c>PriceDiscSystemSource</c> enumeration that specifies the source of the policy.
        #/// </param>
        #/// <param name="_fieldId">
        #/// A field ID.
        #/// </param>
        #client server void setPriceDiscChangePolicy(PriceDiscSystemSource _policySource, RefFieldId _fieldId = 0)
        #{
        #    if (!this.isInterCompanyOrder() || this.isLinkedToAgreement())
        #    {
        #        this.PriceDiscResultFields::createPriceDiscChangePolicy(ModuleSalesPurch::Purch, _policySource, _fieldId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscMarkup
        #/// <summary>
        #/// Calls the <c>setPriceDiscMarkup</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscMarkup(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscMarkup(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDiscPriceUnit
        #/// <summary>
        #/// Calls the <c>setPriceDiscPriceUnit</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscPriceUnit(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscPriceUnit(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setProjSalesPrice
        #/// <summary>
        #/// Calculate and set the project sales price field.
        #/// </summary>
        #private void setProjSalesPrice()
        #{
        #    InventTable     inventTable;
        #    ProjCategory    category;
        #    boolean         priceFound;
        #
        #    Debug::assert(this.ProjId != '');
        #
        #    if(this.defaultCostPriceAsSalesPrice())
        #    {
        #        this.ProjSalesPrice = this.PurchPrice;
        #    }
        #    else if (this.ProjCategoryId)
        #    {
        #        category = ProjCategory::find(this.ProjCategoryId);
        #        switch (category.CategoryType)
        #        {
        #            case ProjCategoryType::Item:
        #                inventTable = this.inventTable();
        #                if (inventTable.SalesPriceModelBasic    == SalesPriceModelBasic::PurchPrice &&
        #                    inventTable.SalesModel              != SalesPriceModel::None &&
        #                    !(inventTable.SalesModel == SalesPriceModel::Contributionratio && inventTable.SalesContributionRatio >= 100) &&
        #                    !this.purchTable().isProjectSalesItemReqPO() &&
        #                    !this.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
        #                {
        #                    this.ProjSalesPrice = this.inventTableModule().updateSalesPrice(inventTable, this.inventTableModule(), this.PurchPrice);
        #                }
        #                break;
        #
        #            case ProjCategoryType::Hour:
        #                [this.ProjSalesPrice, priceFound]
        #                    = ProjHourSalesPrice::findHourSalesPrice(this.ProjId,
        #                                                             this.ProjWorker,
        #                                                             this.ProjCategoryId,
        #                                                             this.ProjLinePropertyId,
        #                                                             this.PurchPrice,
        #                                                             this.ProjSalesCurrencyId);
        #                break;
        #
        #            case ProjCategoryType::Cost:
        #                [this.ProjSalesPrice, priceFound]
        #                    =  ProjCostSalesPrice::findCostSalesPrice(this.ProjId,
        #                                                              this.ProjWorker,
        #                                                              this.ProjCategoryId,
        #                                                              this.PurchPrice,
        #                                                              this.CurrencyCode,
        #                                                              this.ProjSalesCurrencyId);
        #                break;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPurchStatus
        #void  setPurchStatus(boolean _updateHeader = false)
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setPurchStatus(this, null, _updateHeader);
        #}
      ENDSOURCE
      SOURCE #setRAssetInventProfileId_RU
        #public void setRAssetInventProfileId_RU()
        #{
        #    RAssetParameters    rAssetParameters;
        #    InventDim           inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #
        #    if (this.ItemId                                    &&
        #        InventTable::find(this.ItemId).AssetGroupId_RU &&
        #        rAssetParameters.LowCostAssetInventProfileId)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            inventDim = InventDim::find(this.InventDimId);
        #            inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #            this.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setStockedProduct
        #/// <summary>
        #///    Sets the <c>StockedProduct</c> field for the line based on line type and item model group for the associated item.
        #/// </summary>
        #public void setStockedProduct()
        #{
        #    this.type().setStockedProduct();
        #}
      ENDSOURCE
      SOURCE #setTaxGroup
        #void  setTaxGroup(TaxGroup  _taxGroup)
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setTaxGroup(_taxGroup);
        #}
      ENDSOURCE
      SOURCE #setTaxGroupAndTaxItemGroupFields_BR
        #/// <summary>
        #/// Set PurchLine.TaxGroup and PurchLine.TaxItemGroup based on <c>TaxesMatrix</c>
        #/// </summary>
        #public void setTaxGroupAndTaxItemGroupFields_BR()
        #{
        #    TaxGroup            taxGroup;
        #    TaxItemGroup        taxItemGroup;
        #
        #    [taxGroup, taxItemGroup] = TaxesMatrix_BR::findTaxGroupAndTaxItemGroup(this.cfopTable_BR,
        #                                                                           this.purchTable().purchTable_BR().SalesPurchOperationType_BR,
        #                                                                           SalesPurchTrntype_BR::Purchase,
        #                                                                           CustVendType_BR::Vendor,
        #                                                                           this.purchTable().OrderAccount,
        #                                                                           this.ItemId,
        #                                                                           this.inventDim().inventSite().fiscalEstablishment().fiscalEstablishmentGroup());
        #    if (!taxGroup)
        #    {
        #        taxGroup = this.purchTable().TaxGroup;
        #    }
        #
        #    if (!taxItemGroup)
        #    {
        #        taxItemGroup = this.inventTable().purchTaxItemGroupId();
        #    }
        #
        #    this.TaxGroup      = taxGroup;
        #    this.TaxItemGroup  = taxItemGroup;
        #}
      ENDSOURCE
      SOURCE #setTaxInfoOfCompany_IN
        #/// <summary>
        #/// Sets tax information of company.
        #/// </summary>
        #/// <param name="_companyInfo">
        #/// The company information.
        #/// </param>
        #public void setTaxInfoOfCompany_IN(CompanyInfo _companyInfo)
        #{
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    dirPartyLocation = DirPartyLocation::findPrimaryPartyLocation(_companyInfo.RecId);
        #    if (dirPartyLocation)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #
        #        purchLine_IN.CompanyLocation_IN = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        purchLine_IN.modifiedFieldValue(fieldStr(PurchLine_IN, CompanyLocation_IN));
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #sourceDocumentLine
        #public SourceDocumentLine sourceDocumentLine()
        #{
        #    return SourceDocumentLine::find(this.SourceDocumentLine);
        #}
      ENDSOURCE
      SOURCE #stockedProductChanged
        #/// <summary>
        #/// Applies default values or sets the inventory related field values to null when the <c>StockedProduct</c> field value is changed.
        #/// </summary>
        #void stockedProductChanged()
        #{
        #    if (this.isStocked())
        #    {
        #        // default inventory fields
        #        this.QtyOrdered             = this.calcQtyOrdered();
        #        this.RemainInventPhysical   = this.QtyOrdered;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemPBAId              = '';
        #        this.type().initTagging(this.inventTable());
        #        this.setInventReceivedNow();
        #        TradeNonStockedRegistrationHelper::newFromSalesPurchLine(this).deletePendingRegistration();
        #    }
        #    else
        #    {
        #        // blank out inventory fields
        #        this.QtyOrdered             = 0;
        #        this.InventReceivedNow      = 0;
        #        this.RemainInventPhysical   = 0;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemTagging            = NoYes::No;
        #        this.CaseTagging            = NoYes::No;
        #        this.PalletTagging          = NoYes::No;
        #        this.ItemPBAId              = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #submitToWorkflow
        #/// <summary>
        #/// Activates the purchase order line workflow.
        #/// </summary>
        #/// <param name="_workflowTemplateName">
        #/// The AOT name of the workflow template the purchase order line will be submitted to.
        #/// </param>
        #/// <param name="_workflowComment">
        #/// The reason for submitting.
        #/// </param>
        #/// <param name="_activatingFromWeb">
        #/// A Boolean value that indicates whether the submission is coming from the enterprise portal.
        #/// </param>
        #/// <remarks>
        #/// This method starts the workflow configuration by calling the <c>ActivateWorkflowTemplate</c> method
        #/// on the <c>Workflow</c> class with information about the purchase order line record.
        #/// </remarks>
        #public void  submitToWorkflow(WorkflowTypeName		 _workflowTemplateName,
        #                              WorkflowComment       _workflowComment,
        #                              boolean               _activatingFromWeb = false)
        #{
        #    ttsbegin;
        #
        #    Workflow::activateFromWorkflowType(_workflowTemplateName,
        #                                           this.RecId,
        #                                           _workflowComment,
        #                                           _activatingFromWeb,
        #                                           curUserId());
        #
        #    PurchLine::setWorkflowState(this.RecId, TradeWorkflowState::Submitted);
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #taxationOrigin_BR
        #/// <summary>
        #/// Displays the origin of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The origin of the item to be used for taxation.
        #/// </returns>
        #//BP Deviation Documented
        #display FITaxationOrigin_BR taxationOrigin_BR()
        #{
        #    return this.inventTable().TaxationOrigin_BR;
        #}
      ENDSOURCE
      SOURCE #taxByLine
        #real taxByLine()
        #{
        #    TaxTrans taxTrans;
        #
        #    if (this.InventTransId)
        #    {
        #        select sum(TaxAmount) from taxTrans
        #        where taxTrans.InventTransId == this.InventTransId;
        #    }
        #
        #    return taxTrans.TaxAmount;
        #}
      ENDSOURCE
      SOURCE #taxDate
        #TransDate taxDate(TransDate transDate)
        #{
        #    return TaxParameters::find().TaxCalculationDateType == TaxCalculationDateType::DeliveryDate ? this.deliveryDate(transDate) : transDate;
        #}
      ENDSOURCE
      SOURCE #taxFiscalClassification_BR
        #/// <summary>
        #/// Displays the fiscal classification code of the item in the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The fiscal classification code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display TaxFiscalClassificationId_BR taxFiscalClassification_BR()
        #{
        #    return this.inventTable().TaxFiscalClassification_BR;
        #}
      ENDSOURCE
      SOURCE #taxPcsPrice
        #PriceCur taxPcsPrice(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::taxPcsPrice(transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #taxWithholdCodeType_IN
        #/// <summary>
        #/// Gets the tax withhold code type.
        #/// </summary>
        #/// <returns>
        #/// The instance of the <c>TaxWithholdCodeType_IN</c> class.
        #/// </returns>
        #public TaxWithholdCodeType_IN taxWithholdCodeType_IN()
        #{
        #    TaxWithholdCodeType_IN  taxWithholdCodeType = TaxWithholdCodeType_IN::None;
        #    PurchLine_IN            purchLine_IN = this.purchLine_IN();
        #
        #    if  (purchLine_IN.tdsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TDS;
        #    }
        #    else if(purchLine_IN.tcsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TCS;
        #    }
        #    return taxWithholdCodeType;
        #}
      ENDSOURCE
      SOURCE #templateName
        #/// <summary>
        #/// Sets or gets the information about the <c>DistributionTemplate</c> record for creating
        #/// distributions.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether to update.
        #/// </param>
        #/// <param name="_templateName">
        #/// The name of the distribution template that will be used to create distributions.
        #/// </param>
        #/// <returns>
        #/// The name of the distribution template.
        #/// </returns>
        #// BP Deviation Documented
        #public edit TemplateName templateName(boolean _set, TemplateName _templateName)
        #{
        #    TemplateName                      templateName = "";
        #    AccountingDistributionTemplate    accountingDistributionTemplate;
        #
        #    if (_set)
        #    {
        #        if (_templateName == "")
        #        {
        #            this.AccountingDistributionTemplate = 0;
        #        }
        #        else
        #        {
        #            accountingDistributionTemplate = AccountingDistributionTemplate::findByName(_templateName);
        #
        #            if (accountingDistributionTemplate)
        #            {
        #                this.AccountingDistributionTemplate = accountingDistributionTemplate.RecId;
        #                templateName = accountingDistributionTemplate.Name;
        #            }
        #            else
        #            {
        #                this.AccountingDistributionTemplate = 0;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (this.AccountingDistributionTemplate != 0)
        #        {
        #            templateName = AccountingDistributionTemplate::find(this.AccountingDistributionTemplate).Name;
        #        }
        #    }
        #
        #    return templateName;
        #}
      ENDSOURCE
      SOURCE #timeZoneSite
        #/// <summary>
        #///    Retrieves the time zone associated with the site on the current purchase order line.
        #/// </summary>
        #/// <returns>
        #///    The site time zone.
        #/// </returns>
        #public display Timezone timeZoneSite()
        #{
        #    return InventSite::timeZoneSite(InventDim::find(this.InventDimId).InventSiteId);
        #}
      ENDSOURCE
      SOURCE #tmsVolume
        #/// <summary>
        #/// Gets the transportation <c>Volume</c> for the <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The transportation volume for the <c>PurchLine</c>.
        #/// </returns>
        #Volume tmsVolume()
        #{
        #    return this.inventTable().UnitVolume * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #tmsWeight
        #/// <summary>
        #/// Gets the transportation <c>Weight</c> for the <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The transportation weight for the <c>PurchLine</c>.
        #/// </returns>
        #Weight tmsWeight()
        #{
        #    return this.inventTable().grossWeight() * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #totalDiscountAmount
        #/// <summary>
        #/// Calculates the total discount amount.
        #/// </summary>
        #/// <returns>
        #/// The total discount amount.
        #/// </returns>
        #public Amount totalDiscountAmount()
        #{
        #    Amount          totalDiscountAmount;
        #    PurchTable      purchTable;
        #
        #    purchTable = this.purchTable();
        #
        #    totalDiscountAmount = (purchTable.DiscPercent  && this.endDisc()) ?
        #                          Currency::amount(this.calcLineAmountExclTax()* (purchTable.DiscPercent / 100), this.CurrencyCode) :
        #                          0;
        #
        #    return totalDiscountAmount;
        #}
      ENDSOURCE
      SOURCE #type
        #PurchLineType type(PurchTable _purchTable = this.purchTable())
        #{
        #    return PurchLineType::construct(this, _purchTable);
        #}
      ENDSOURCE
      SOURCE #underDeliveryPct
        #/// <summary>
        #/// Returns the allowed under-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The under-delivery percent that is defined on the purchase order line if under-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent underDeliveryPct()
        #{
        #    if (!PurchParameters::find().SubDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.UnderDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #unitConvertInvent2Purch
        #PurchQty unitConvertInvent2Purch(InventQty _inventQty)
        #{
        #    return UnitOfMeasureConverter::convert(
        #        _inventQty,
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #        NoYes::Yes,
        #        InventTable::itemProduct(this.ItemId));
        #}
      ENDSOURCE
      SOURCE #unitConvertPurch2Invent
        #PurchQty unitConvertPurch2Invent(PurchQty _purchQty)
        #{
        #    if (this.ItemId)
        #    {
        #        return UnitOfMeasureConverter::convert(
        #            _purchQty,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    return _purchQty;
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementDeliveryDates
        #/// <summary>
        #/// Indicates whether the link to the agreement line is valid after changes have been made; if not, the
        #/// user is given an option to remove the link to the associated agreement.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the delivery date field that has been changed.
        #/// </param>
        #public void unLinkAgreementDeliveryDates(FieldId _fieldId)
        #{
        #    PurchLine   purchLineOrig;
        #    boolean     calledFromWeb;
        #    boolean     canRecalculatePrices = true;
        #    PurchTable  purchTable;
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #    if (this.RecId && !this.isTmp() && !this.refreshAgreementLink())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS306909");
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId)
        #                && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #            {
        #                purchTable = this.purchTable();
        #                if (purchTable.isInterCompanyOrder())
        #                {
        #                    interCompanyEndpointActionPolicy = purchTable.interCompanyEndpointActionPolicy();
        #
        #                    canRecalculatePrices = interCompanyEndpointActionPolicy.PriceDiscountSearch ? true : false;
        #                }
        #                if (canRecalculatePrices
        #                    && this.doReCalcPricesFromBasePrompt())
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLine
        #/// <summary>
        #/// Deletes the links between the purchase order line and the agreement line.
        #/// </summary>
        #/// <param name="_updateLine">
        #/// A Boolean value that indicates whether to execute update for a <c>PurchLine</c> buffer; optional.
        #/// </param>
        #public server void unLinkAgreementLine(boolean _updateLine = false)
        #{
        #    AgreementLineReleasedLine agreementLineReleasedLine;
        #
        #    // Set Price Discount Change Policy originated by PriceDiscSystemSource::Agreement.
        #    this.setPriceDiscChangePolicy(PriceDiscSystemSource::Agreement);
        #    if (this.ManualEntryChangepolicy
        #        && this.SystemEntryChangePolicy)
        #    {
        #        this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #    }
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(this.InventTransId);
        #            this.reread();
        #            break;
        #        case LineDeliveryType::DeliveryLine:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).InventTransId);
        #            break;
        #        default:
        #            ttsbegin;
        #
        #            if (this.RecId)
        #            {
        #                delete_from agreementLineReleasedLine
        #                    where agreementLineReleasedLine.PurchLineInventTransId == this.InventTransId
        #                       && agreementLineReleasedLine.PurchLineDataAreaId    == this.DataAreaId
        #                       && agreementLineReleasedLine.ReferenceRelationType  == tableNum(PurchLine);
        #            }
        #
        #            this.MatchingAgreementLine = 0;
        #
        #            if (_updateLine)
        #            {
        #                this.update();
        #            }
        #
        #            ttscommit;
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLinePrompt
        #/// <summary>
        #/// Prompts whether the user wants to delete the link between the agreement line and the purchase order
        #/// line in a text box.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has the changes that introduced a conflict in the relation to the
        #/// linked agreement line; optional.
        #/// </param>
        #/// <param name="_tableId">
        #/// The table ID of the field that has changes that introduced a conflict in the relation to the linked
        #/// agreement line; optional.
        #/// </param>
        #/// <param name="_doUpdate">
        #/// boolean indicating if an update of the purchase order line should be performed when unlinking the agreement line; optional.
        #/// </param>
        #/// <returns>
        #/// true if the user wants to delete the link between the agreement line and the purchase order line;
        #/// otherwise, false.
        #/// </returns>
        #public boolean unLinkAgreementLinePrompt(FieldId _fieldId = 0, TableId _tableId = tableNum(PurchLine), boolean _doUpdate = true)
        #{
        #    boolean     unlink;
        #    DictField   dictField;
        #    PurchLine   localPurchLine;
        #
        #    void unlink()
        #    {
        #        this.unLinkAgreementLine();
        #        unlink = true;
        #    }
        #
        #    if (_fieldId)
        #    {
        #        dictField = new DictField(_tableId,_fieldId);
        #        unlink    = Box::okCancel(strFmt("@SYS306897", dictField.label()),DialogButton::Cancel,"@SYS306896") == DialogButton::Ok;
        #
        #        if (unlink)
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #        else
        #        {
        #            if (_tableId == tableNum(InventDim))
        #            {
        #                _fieldId = fieldNum(PurchLine, InventDimId);
        #            }
        #
        #            if (this.RecId)
        #            {
        #                this.(_fieldId) = this.orig().(_fieldId);
        #            }
        #            else
        #            {
        #                localPurchLine.con2buf(this.buf2con());
        #                localPurchLine.initFromAgreementLine(AgreementLine::find(localPurchLine.MatchingAgreementLine));
        #                this.(_fieldId) = localPurchLine.(_fieldId);
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (Box::yesNo(strFmt("@SYS306910"),DialogButton::No) == DialogButton::Yes)
        #        {
        #            // The price discount fixed policies will block recalculation of certain TA values when a sales line is related to an agreement hence, we need to unlink before recalc.
        #            unlink();
        #
        #            // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #            this.runPriceDiscPolicyDialog(true);
        #
        #            PurchLine::modifyPurchQty(this,this.inventDim());
        #
        #            if (_doUpdate)
        #            {
        #                this.update();
        #            }
        #        }
        #    }
        #
        #    return unlink;
        #}
      ENDSOURCE
      SOURCE #update
        #/// <summary>
        #/// Updates the <c>PurchLine</c> record.
        #/// </summary>
        #/// <param name="dropInvent">
        #/// A Boolean value that indicates whether the inventory movement that is associated with the line must
        #/// be updated; optional; false by default.
        #/// </param>
        #/// <param name="updateOrderLineOfDeliverySchedule">
        #/// A Boolean value that indicates whether to update the order line after updating its delivery line;
        #/// optional; true by default.
        #/// </param>
        #/// <param name="updatePurchTableDropShipStatus">
        #/// A Boolean value that indicates whether the drop shipment status should be updated for all lines on the purchase order;
        #/// optional; true by default.
        #/// </param>
        #public void  update(boolean  dropInvent                         = false,
        #                    boolean  updateOrderLineOfDeliverySchedule  = true,
        #                    boolean  updatePurchTableDropShipStatus = true)
        #{
        #    WHSPurchLineUpdater             purchLineUpdater;
        #    WHSSrcLineChangeLoadLineUpdater srcLineChangeLoadLineUpdater;
        #    NoYesId                         autoCreate;
        #    boolean                         whsEnabled;
        #    boolean                         tmsEnabled;
        #    PurchLineType       purchLineType;
        #
        #    PurchLine origPurchLine;
        #    PurchTotalsSummaryController purchTotalsSummaryController;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        origPurchLine = this.orig();
        #        purchTotalsSummaryController = PurchTotalsSummaryController::construct(this.PurchId);
        #        purchTotalsSummaryController.checkFields(this);
        #    }
        #
        #    origPurchLine = this.orig();
        #
        #    purchLineType = this.type();
        #    purchLineType.skipPurchTableDropShipStatusUpdate(!updatePurchTableDropShipStatus);
        #    purchLineType.update(dropInvent, false, updateOrderLineOfDeliverySchedule);
        #
        #    // Update load line and tag table
        #    whsEnabled = WHSInventEnabled::exist(this.ItemId);
        #    tmsEnabled = TMSInventEnabled::exist(this.ItemId);
        #    if (whsEnabled || tmsEnabled)
        #    {
        #        autoCreate = (whsEnabled && WHSParameters::find().AutoCreateLoadPO)
        #        ||           (tmsEnabled && TMSParameters::find().AutoCreateLoadPO);
        #
        #        srcLineChangeLoadLineUpdater = WHSSrcLineChangeLoadLineUpdater::newFromParameters(this,
        #                                                                                          this.InventTransId,
        #                                                                                          this.InventDimId,
        #                                                                                          origPurchLine.InventDimId,
        #                                                                                          this.QtyOrdered,
        #                                                                                          origPurchLine.QtyOrdered,
        #                                                                                          this.PurchUnit,
        #                                                                                          origPurchLine.PurchUnit,
        #                                                                                          autoCreate);
        #        srcLineChangeLoadLineUpdater.updateLoadLines();
        #
        #        purchLineUpdater = WHSSourceLineUpdater::newFromSourceLineTableBuffer(this);
        #        purchLineUpdater.setParameters(this, origPurchLine.QtyOrdered, origPurchLine.PurchUnit, srcLineChangeLoadLineUpdater.getloadLineDiffQty());
        #        purchLineUpdater.updateTable();
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        purchTotalsSummaryController.onUpdate(this);
        #
        #        // If the PurchCommitmentLine_PSN field has been changed, then reset the distributions
        #        if (origPurchLine.PurchCommitmentLine_PSN != this.PurchCommitmentLine_PSN)
        #        {
        #            this.resetDistributions();
        #        }
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.checkCrossdocking();
        #    }
        #}
      ENDSOURCE
      SOURCE #updateWhsCrossDock
        #/// <summary>
        #/// Updates the <c>WHSCrossDock</c> field on the <c>WHSPurchLine</c> related table if available.
        #/// </summary>
        #/// <param name="_whsCrossDock">
        #/// The value to set for the <c>WHSCrossDock</c> field.
        #/// </param>
        #/// <returns>
        #/// true, if a related <c>WHSPurchLine</c> record was found and the update was done; otherwise, false.
        #/// </returns>
        #public boolean updateWhsCrossDock(WHSCrossDock _whsCrossDock)
        #{
        #    boolean         ret;
        #    WHSPurchLine    whsPurchLine;
        #
        #    ttsbegin;
        #
        #    whsPurchLine = WHSPurchLine::find(this.InventTransId, true);
        #    if (whsPurchLine)
        #    {
        #        whsPurchLine.CrossDock = _whsCrossDock;
        #        whsPurchLine.update();
        #        ret = true;
        #    }
        #
        #    ttscommit;
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #updateWorkflowState
        #/// <summary>
        #///     This method are setting the field <c>WorkflowState</c> on the current <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #void  updateWorkflowState(TradeWorkflowState        _workflowState,
        #                          TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    this.WorkflowState      = _workflowState;
        #    this.EditableInWorkflow = _editableInWorkflow;
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #boolean  validateDelete(boolean _interCompanyForce = false)
        #{
        #    boolean         ok = true;
        #    PurchLineType   purchLineType;
        #
        #    #ISOCountryRegionCodes
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateDelete(_interCompanyForce);
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
        #        && ok)
        #    {
        #        if (this.RetailPackageId)
        #            ok = checkFailed(strFmt("@RET4539",this.RetailPackageId));
        #    }
        #
        #    if (ok
        #    &&  !this.whsCheckDeleteLoadline())
        #    {
        #        ok = checkFailed("@WAX5594");
        #    }
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs)
        #        &&  PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN
        #        &&  CustomsVendBOETrans_IN::findPurchLineRecId(this.RecId).RecId)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateField
        #/// <summary>
        #///     Validates the value of field.
        #/// </summary>
        #/// <param name="fieldId">
        #///     A FieldId type representing the field to be validated.
        #/// </param>
        #/// <returns>
        #///     true if the field value is valid; otherwise, false.
        #/// </returns>
        #public boolean  validateField(FieldId  fieldId)
        #{
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #
        #    switch(fieldId)
        #    {
        #        case fieldNum(PurchLine, InventTransId):
        #            if (this.PurchaseType == PurchaseType::Journal
        #                || !this.isStocked())
        #                // No inventory transactions so no need for consistency check to report this as error
        #                return true;
        #            break;
        #    }
        #
        #    ok = super(fieldId);
        #
        #    if (ok && fieldId == fieldNum(PurchLine, ItemId))
        #    {
        #        if (WHSInventEnabled::exist(this.ItemId) && !WHSFilter::vendFilterMatch(this.VendAccount, this.ItemId))
        #        {
        #            throw error("@WAX1003");
        #        }
        #    }
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateField(fieldId);
        #    }
        #
        #    if (ok && PublicSectorUtils::isFrenchRegulatoryEnabled() && fieldId == fieldNum(PurchLine, PurchCommitmentLine_PSN))
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateFieldValue
        #/// <summary>
        #///     Determines whether the parameter "_fieldName" field is valid.
        #/// </summary>
        #/// <param name="_fieldName">
        #///     The field name of the field to validate.
        #/// </param>
        #/// <param name="_arrayIndex">
        #///     The array index of the field to validate.
        #/// </param>
        #/// <returns>
        #///     true if the field is valid; otherwise, false.
        #/// </returns>
        #public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldName, _arrayIndex);
        #    if(ret)
        #    {
        #        switch(_fieldName)
        #        {
        #            case fieldStr(PurchLine, TaxItemGroup):
        #                ret = TaxItemGroupHeading::validatePOTForGTA_IN(this.vendTable_OrderAccount(), this.TaxItemGroup);
        #                break;
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateModifyInventDim
        #public boolean validateModifyInventDim(
        #    InventDim          _inventDim,
        #    FieldId            _dimFieldId)
        #{
        #    return this.type().validateModifyInventDim(_inventDim, _dimFieldId);
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean  validateWrite()
        #{
        #    boolean ok = true;
        #
        #    ok = super();
        #
        #    ok = ok && this.validateWrite_Server();
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateWrite_Server
        #/// <summary>
        #///     Validates if the current <c>PurcLine</c> table buffer can be written to the database.
        #/// </summary>
        #/// <returns>
        #///     true if the buffer can be written; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///     This method is forcing server side execution of the validation logic.
        #/// </remarks>
        #server boolean validateWrite_Server()
        #{
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #    container       taxCheck;
        #    AmountMST       totalAmt;
        #    AmountMST       taxAmount;
        #
        #    PurchTable      purchTable;
        #    PurchTable_W    purchTable_W;
        #    #ISOCountryRegionCodes
        #
        #    purchLineType = this.type();
        #    ok = purchLineType.validateWrite();
        #
        #
        #    if (ok)
        #    {
        #        taxAmount = this.taxByLine();
        #        totalAmt = this.LineAmount + taxAmount;
        #        taxCheck = [totalAmt, this.Tax1099Amount, this.Tax1099StateAmount, this.Tax1099Fields, this.Tax1099State];
        #        ok = Tax1099ElectronicCheck::tax1099EntryValidation(taxCheck);
        #    }
        #
        #    // Verify that a tax code is derived for the given Tax Group and Tax Item Group.
        #    ok = ok && Tax::isValidTaxGroupIntersection(this.TaxGroup, this.TaxItemGroup) != CheckTaxGroups::Error;
        #
        #    // Check to make sure the commitment line is still valid.
        #    // This needs to be done because it's possible one of the values verified against have changed (such as account number).
        #    if (ok && PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
        #        && ok && TaxParameters::find().Customs_IN)
        #    {
        #        ttsbegin;
        #
        #        purchTable = PurchTable::find(this.PurchId);
        #        purchTable_W = purchTable.purchTable_W();
        #        if (CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId))
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::Yes;
        #        }
        #        else
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::No;
        #        }
        #
        #        purchTable.packPurchTable_W(purchTable_W);
        #        purchTable.SysExtensionSerializerMap::postUpdate();
        #        ttscommit;
        #    }
        #    if (ok && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        this.checkLine_RU();
        #    }
        #
        #    if (ok &&
        #        SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoHU]) &&
        #        this.purchTable().InclTax)
        #    {
        #        ok = this.SalesPurchLine::validateExcludeTaxFromInvoice(this.purchTable().InclTax);
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #variencePrice
        #//BP Deviation Documented
        #server display AmountCur variencePrice()
        #{
        #    return this.calcLineAmount(this.varienceQty());
        #}
      ENDSOURCE
      SOURCE #varienceQty
        #//BP Deviation Documented
        #server display PurchQty varienceQty()
        #{
        #    return this.receivedInTotal() - this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #varienceQtyPct
        #//BP Deviation Documented
        #server display Percent varienceQtyPct()
        #{
        #    if (this.PurchQty)
        #    {
        #        return (this.receivedInTotal() * 100) / this.PurchQty;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vendTable_OrderAccount
        #VendTable vendTable_OrderAccount()
        #{
        #    return this.purchTable().vendTable_OrderAccount();
        #}
      ENDSOURCE
      SOURCE #warningForReference
        #/// <summary>
        #/// Show a warning for a line which references other entities.
        #/// </summary>
        #/// <returns>true if the line can be deleted; otherwise, false.</returns>
        #boolean warningForReference()
        #{
        #    str         warningTxt;
        #
        #    warningTxt = this.referenceWarningTxt();
        #    if (warningTxt)
        #    {
        #        return Box::yesNo(warningTxt+'\n\n'+strFmt("@SYS75610"),DialogButton::Yes) == DialogButton::Yes;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #whsCheckDeleteLoadline
        #/// <summary>
        #///     Prevent the delete of purch lines that are already associated with a load line if the warehouse
        #///     parameter 'Automatically delete upon order delete' is not enabled.
        #/// </summary>
        #/// <returns>
        #///     true, if purch line is not associated to a load; otherwise, false
        #/// </returns>
        #public boolean whsCheckDeleteLoadline()
        #{
        #    boolean ret                     = true;
        #    WHSParameters whsParameteres    = WHSParameters::find();
        #
        #    if (whsParameteres.RecId
        #        && !whsParameteres.AutoCleanEmptyLoadManifest
        #        &&  WHSLoadLine::existsForInventTransId(this.InventTransId))
        #    {
        #        ret = false;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsGetLoads
        #/// <summary>
        #/// Gets the <c>WHSLoadLine</c> record ID associated with this <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The <c>WHSLoadLine</c> record ID associated with this <c>PurchLine</c>.
        #/// </returns>
        #// BP Deviation Documented
        #[SysClientCacheDataMethodAttribute(true)]
        #public server display WHSLoadId whsGetLoads()
        #{
        #    WHSLoadLine loadLine;
        #    WHSLoadId   ret;
        #    int         counter;
        #
        #    if (this.InventTransId
        #    &&  (WHSInventEnabled::exist(this.ItemId)
        #    ||  TMSInventEnabled::exist(this.ItemId)))
        #    {
        #        // For efficiency: Check counter before inventTransId to avoid a SQL call
        #        while select firstOnly10 LoadId from loadLine
        #            where loadLine.InventTransId == this.InventTransId
        #        {
        #            ++counter;
        #
        #            if (counter > 1)
        #            {
        #                break;
        #            }
        #
        #            ret = loadLine.LoadId;
        #        }
        #
        #        switch (counter)
        #        {
        #            case 0:
        #                ret = '';
        #                break;
        #
        #            case 1:
        #                break;
        #
        #            default:
        #                ret = "@WAX402";
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsItemGrossWeight
        #/// <summary>
        #///     Retrieves the gross weight for an item
        #/// </summary>
        #/// <returns>
        #///     A decimal representing the gross weight
        #/// </returns>
        #public display ItemGrossWeight whsItemGrossWeight()
        #{
        #    return this.inventTable().grossWeight();
        #}
      ENDSOURCE
      SOURCE #whsItemUnitVolume
        #/// <summary>
        #///     Retrieves the volume for an item
        #/// </summary>
        #/// <returns>
        #///     A decimal representing the item volume
        #/// </returns>
        #public display Volume whsItemUnitVolume()
        #{
        #    return this.inventTable().UnitVolume;
        #}
      ENDSOURCE
      SOURCE #whsPurchLineForInsert
        #private WHSPurchLine whsPurchLineForInsert()
        #{
        #    WHSPurchLine whsPurchLine;
        #
        #    if (this.PackedWHSLine)
        #    {
        #        whsPurchLine = con2Buf(this.PackedWHSLine);
        #    }
        #
        #    return whsPurchLine;
        #}
      ENDSOURCE
      SOURCE #whsVendDeliveryAddress
        #/// <summary>
        #/// Displays the delivery address of the vendor. If there is not one defined, it displays the primary one.
        #/// </summary>
        #/// <returns>
        #/// The vendors delivery address or the primary address if there is not one defined.
        #/// </returns>
        #public display Addressing whsVendDeliveryAddress()
        #{
        #    LogisticsPostalAddressRecId logisticsPostalAddressRecId = TMSAddressPhone::initFromVendAccount(this.VendAccount).parmPostalAddressRecId();
        #    return LogisticsPostalAddress::addressFromRecId(logisticsPostalAddressRecId);
        #}
      ENDSOURCE
      SOURCE #workflowInstructions
        #/// <summary>
        #/// Retrieves the latest workflow step instructions for this record.
        #/// </summary>
        #/// <returns>
        #/// The instructions for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowStepInstruction  workflowInstructions()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #    WorkflowStepInstruction     stepInstruction;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime, Description from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : stepInstruction = '';
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        stepInstruction = workflowWorkItemTable.Description;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                            {
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                                stepInstruction = workflowWorkItemTable.Description;
        #                            }
        #                        }
        #        }
        #    }
        #
        #    return stepInstruction;
        #}
      ENDSOURCE
      SOURCE #workflowLastComment
        #/// <summary>
        #/// Retrieves the last workflow comment for this record.
        #/// </summary>
        #/// <returns>
        #/// The last comment entered by any user for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public server  WorkflowComment  workflowLastComment()
        #{
        #    WorkflowTrackingTable           workflowTrackingTable;
        #    WorkflowTrackingStatusTable     workflowTrackingStatusTable;
        #    WorkflowTrackingCommentTable    workflowTrackingCommentTable;
        #
        #
        #    select ContextCompanyId, ContextTableId, ContextRecId from workflowTrackingStatusTable
        #        where workflowTrackingStatusTable.ContextCompanyId    == curext()
        #           && workflowTrackingStatusTable.ContextTableId      == this.TableId
        #           && workflowTrackingStatusTable.ContextRecId        == this.RecId
        #        join firstonly TrackingId, CreatedDateTime from workflowTrackingTable order by CreatedDateTime desc
        #            where workflowTrackingTable.WorkflowTrackingStatusTable == workflowTrackingStatusTable.RecId
        #        join Comment from workflowTrackingCommentTable
        #            where workflowTrackingCommentTable.WorkflowTrackingTable == workflowTrackingTable.RecId;
        #
        #    return workflowTrackingCommentTable.Comment;
        #}
      ENDSOURCE
      SOURCE #workflowWorkItemDueDate
        #/// <summary>
        #/// Retrieves the latest workflow due date for this record.
        #/// </summary>
        #/// <returns>
        #/// The due date for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowDueDateTime  workflowWorkItemDueDate()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : dueDateTime = DateTimeUtil::minValue();
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        dueDateTime = workflowWorkItemTable.DueDateTime;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                        }
        #        }
        #    }
        #
        #    return dueDateTime;
        #}
      ENDSOURCE
      SOURCE #checkMultipleAccountingDistExist
        #/// <summary>
        #/// Indicates whether the <c>PurchLine</c> buffer has more than one <c>AccountingDistribution</c>
        #/// records.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// A <c>PurchLine</c> record which needs to be checked for multiple distributions.
        #/// </param>
        #/// <returns>
        #/// true when the count is more than 1; otherwise, false.
        #/// </returns>
        #public static server boolean checkMultipleAccountingDistExist(PurchLine _purchLine)
        #{
        #    return SourceDocumentLineProvider::isAccountingDistributionSplit(_purchLine.sourceDocumentLine(), MonetaryAmount::ExtendedPrice);
        #}
      ENDSOURCE
      SOURCE #checkReceiveQty_IN
        #/// <summary>
        #/// Checks whether exist the receive quantity.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purch id is used to find record.
        #/// </param>
        #/// <returns>
        #/// Returns ture, if exist the receive quantity; otherwise, false.
        #/// </returns>
        #public static boolean checkReceiveQty_IN(PurchId _purchId)
        #{
        #    PurchLine purchLine;
        #    boolean insert;
        #
        #    while select purchLine
        #        where purchLine.PurchId == _purchId
        #    {
        #        if(CustomsInvoiceRegistrateForm_IN::calcReceiveQty(purchLine))
        #        {
        #            insert = true;
        #        }
        #    }
        #
        #    return insert;
        #}
      ENDSOURCE
      SOURCE #earliestConfirmedDlv
        #/// <summary>
        #/// Finds the purchase order line that have the earliest confirmed delivery date.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purchase ID that will be used to search for confirmed delivery dates.
        #/// </param>
        #/// <returns>
        #/// The earliest confirmed delivery date for the purchase lines.
        #/// </returns>
        #/// <remarks>
        #/// The returned confirmed delivery date can be passed to the <c>datenull</c> method in order to fully
        #/// confirm the purchase order.
        #/// </remarks>
        #server static PurchLineDlvDate earliestConfirmedDlv(PurchId  _purchId)
        #{
        #    return (select minof(ConfirmedDlv) from purchLine
        #                where purchLine.PurchId == _purchId
        #                   && !purchLine.IsDeleted).ConfirmedDlv;
        #}
      ENDSOURCE
      SOURCE #exist
        #client server static boolean  exist(
        #    PurchId             _purchId,
        #    TradeLineNumber     _lineNumber = int64Min())
        #{
        #    if (_purchId)
        #    {
        #        if (_lineNumber == int64Min())
        #            return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId     != 0;
        #
        #        return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.LineNumber      == _lineNumber
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId != 0;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existDifferentCurrency
        #server static boolean  existDifferentCurrency(PurchId   purchId, CurrencyCode currencyCode)
        #{
        #    if (!purchId || !currencyCode)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from purchLine
        #                   index hint PurchLineIdx
        #                   where purchLine.PurchId          == purchId
        #                      && purchLine.CurrencyCode     != currencyCode
        #                      && purchLine.IsDeleted        == NoYes::No).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existNonFinalizedLines
        #/// <summary>
        #///    Determines if one or more purchase order lines exist that are not finalized.
        #/// </summary>
        #/// <param name="_purchId">
        #///    The ID of the purchase order.
        #/// </param>
        #/// <returns>
        #///    true if one or more purchase order lines are not finalized; otherwise, false.
        #/// </returns>
        #server static boolean existNonFinalizedLines(PurchId _purchId)
        #{
        #    return (select firstonly RecId from purchLine
        #                   where purchLine.PurchId          == _purchId
        #                      && purchLine.IsFinalized      == NoYes::No).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #client server static PurchLine find(
        #    PurchId           _purchId,
        #    TradeLineNumber   _lineNumber = int64Min(),
        #    boolean           _update     = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_purchId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        if (_lineNumber == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && purchLine.LineNumber      == _lineNumber
        #                   && !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findBySourceDocumentLine
        #/// <summary>
        #///    Finds the <c>PurchLine</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record RecId.
        #/// </param>
        #/// <param name="_forUpdate">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #static public PurchLine findBySourceDocumentLine(   RefRecId _sourceDocumentLine,
        #                                                    boolean  _forUpdate = false)
        #
        #{
        #    PurchLine     purchLine;
        #
        #    if (_sourceDocumentLine)
        #    {
        #        purchLine.selectForUpdate(_forUpdate);
        #
        #        select firstonly purchLine
        #            where purchLine.SourceDocumentLine  == _sourceDocumentLine
        #                ;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findInventTransId
        #static PurchLine findInventTransId(TradeInventTransId   _inventTransId,
        #                                   boolean              _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_inventTransId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.InventTransId == _inventTransId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findItemIdInventDimId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="inventDimId">
        #///   An <c>InventDimId</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findItemIdInventDimId( PurchId          purchId,
        #                                               ItemId           itemId,
        #                                               InventDimId      inventDimId,
        #                                               TradeLineNumber  lineNum     = int64Min(),
        #                                               boolean          update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId  &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.LineNumber  == lineNum      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId    &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchIdPurchType
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchIdPurchType(  PurchId           purchId,
        #                                                      PurchaseType      purchType,
        #                                                      TradeLineNumber   lineNum     = int64Min(),
        #                                                      boolean           update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.LineNumber == lineNum     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchTypeItemIdVarinatId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="variantId">
        #///   A <c>RetailVariantId</c>.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchTypeItemIdVarinatId(PurchId      purchId,
        #                      PurchaseType  purchType,
        #                      ItemId        itemId,
        #                      RetailVariantId  variantId,
        #                      boolean       update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        select firstonly purchLine
        #            index hint PurchLineIdx
        #            where purchLine.PurchId == purchId          &&
        #                  purchLine.PurchaseType == purchType   &&
        #                  purchLine.ItemId == itemId            &&
        #                  purchLine.VariantId == variantId      &&
        #                  !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static PurchLine findRecId(RecId    _recId,
        #                           boolean  _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_recId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.RecId == _recId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #getLedgerPostingType
        #public static LedgerPostingType getLedgerPostingType(ItemId _itemId)
        #{
        #    LedgerPostingType ledgerPostingType;
        #    InventModelGroup  inventoryModelGroup;
        #
        #    inventoryModelGroup = InventTable::find(_itemId).modelGroup();
        #
        #    if (inventoryModelGroup.PostPhysicalPurchase ||
        #                (!inventoryModelGroup.PostOnhandPhysical &&
        #                 !inventoryModelGroup.PostPhysicalPurchase))
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchConsump;
        #    }
        #    else if (inventoryModelGroup.PostOnhandPhysical &&
        #            !inventoryModelGroup.PostPhysicalPurchase)
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchReceipt;
        #    }
        #
        #    return ledgerPostingType;
        #}
      ENDSOURCE
      SOURCE #getVendorLocationId_IN
        #/// <summary>
        #/// Gets vendor location id.
        #/// </summary>
        #/// <param name="_party">
        #/// The instance of the <c>DirPartyRecId</c> class.
        #/// </param>
        #/// <returns>
        #/// The instance of the <c>LogisticsLocationRecId</c> class.
        #/// </returns>
        #public server static LogisticsLocationRecId getVendorLocationId_IN(DirPartyRecId _party)
        #{
        #    DirPartyLocation  dirPartyLocation;
        #    LogisticsLocation logisticsLocation;
        #
        #    if (_party)
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party          == _party
        #                join RecId from logisticsLocation
        #                    where logisticsLocation.RecId == dirPartyLocation.Location;
        #    }
        #
        #    return logisticsLocation.RecId;
        #}
      ENDSOURCE
      SOURCE #hasExensionTableEnabled
        #/// <summary>
        #/// Checks is there any extension table of table <C>PurchLine</C> is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if there is one or more extension tables are enabled. Otherwise, return false.
        #/// </returns>
        #public static boolean hasExensionTableEnabled()
        #{
        #    return SysExtensionSerializerMap::hasExensionTableEnabled(tableNum(PurchLine));
        #}
      ENDSOURCE
      SOURCE #highestPackageLineNum
        #/// <summary>
        #///   Returns the highest package line number from the purchase order.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <returns>
        #///   The highest package line number from the purchase order.
        #/// </returns>
        #static LineNum  highestPackageLineNum(PurchId  purchId,RetailPackageId packageId)
        #{
        #    PurchLine   purchLine;
        #
        #    select maxof(rboPackageLineNum) from purchLine
        #    index hint RBOPackageIdx
        #    where purchLine.PurchId == purchId &&
        #          purchLine.RetailPackageId == packageId;
        #
        #
        #    return purchLine.rboPackageLineNum;
        #
        #}
      ENDSOURCE
      SOURCE #highestPurchStatus
        #static PurchStatus   highestPurchStatus(PurchId  purchId)
        #{
        #    PurchLine purchLine;
        #
        #    select maxof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #historyExistsOrLatestVersionNotArchived
        #/// <summary>
        #/// This method checks if the line is versioned i.e. line is archived i.e. has historical records,
        #/// or the last version of the purchase order and purchase line is not archived yet.
        #/// </summary>
        #/// <param name="_inventTransId">
        #/// The <c>InventTransId</c> value for the purchase order line.
        #/// </param>
        #/// <param name="_purchId">
        #/// The <c>PurchId</c> value of the purchase order line.
        #/// </param>
        #/// <param name="_purchDataAreaId">
        #/// The <c>DataAreaId</c> value of the purchase order line.
        #/// </param>
        #/// <returns>
        #/// true if the line is archived or the last version has not yet been archived; otherwise false.
        #/// </returns>
        #private static server boolean historyExistsOrLatestVersionNotArchived(TradeInventTransId _inventTransId, PurchId _purchId, DataAreaId _purchDataAreaId)
        #{
        #    PurchTableVersion purchTableLatestVersion;
        #
        #    if(PurchLineHistory::existFromInventTrans(_inventTransId))
        #    {
        #        return true;
        #    }
        #
        #    purchTableLatestVersion = PurchTableVersion::findLatest(_purchId, _purchDataAreaId);
        #
        #    return purchTableLatestVersion.RecId && !purchTableLatestVersion.IsArchived;
        #}
        #
      ENDSOURCE
      SOURCE #initFromInventTableIL
        #/// <summary>
        #/// Updates a <c>PurchLine</c> table buffer based on the item.
        #/// </summary>
        #/// <param name="_inputContract">
        #///     A container with the <c>PurchLine</c> buffer and the <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #/// <returns>
        #///    The initialized <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #///     The intention is this method should only be called from \Data Dictionary\Tables\PurchLine\Methods\initFromInventTable and should be run in IL.
        #/// </remarks>
        #private static container initFromInventTableIL(container _inputContract)
        #{
        #    PurchLine       purchLine = con2Buf(conPeek(_inputContract, 1));
        #    InventTable     inventTable = con2Buf(conPeek(_inputContract, 2));
        #    PurchLineType   purchLineType;
        #
        #    purchLineType = purchLine.type();
        #    purchLineType.initFromInventTable(inventTable);
        #
        #    return buf2Con(purchLine, true);
        #}
      ENDSOURCE
      SOURCE #isDeleted
        #/// <summary>
        #/// Checks whether the <c>PurchLine</c> record is deleted.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>RecId</c> field of the <c>PurchLine</c> table record.
        #/// </param>
        #/// <returns>
        #/// true if the <c>PurchLine</c> table record is deleted; otherwise, false.
        #/// </returns>
        #public static boolean isDeleted(RecId _recId)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_recId)
        #    {
        #        select firstonly IsDeleted from purchLine
        #               where purchLine.RecId == _recId;
        #    }
        #
        #    return purchLine.IsDeleted;
        #}
      ENDSOURCE
      SOURCE #isDistributionForCreditNote
        #/// <summary>
        #/// Determines if the accounting distribution originates from a credit note.
        #/// </summary>
        #/// <param name="_accountingDistribution">
        #/// An <c>AccountingDistribution</c> record.
        #/// </param>
        #/// <returns>
        #/// true if the accounting distribution originates from a credit note; otherwise, false.
        #/// </returns>
        #public static boolean isDistributionForCreditNote(AccountingDistribution _accountingDistribution)
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #    PurchLine           purchLine;
        #    PurchLineType       purchLineType;
        #
        #    select firstonly RecId from sourceDocumentLine
        #        where sourceDocumentLine.RecId == _accountingDistribution.SourceDocumentLine
        #    join firstonly purchLine
        #        where purchLine.SourceDocumentLine == sourceDocumentLine.RecId;
        #
        #    purchLineType = PurchLineType::construct(purchLine);
        #
        #    return purchLineType.creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #isTaxExist
        #static boolean isTaxExist(TradeInventTransId _inventTransId, TaxCode _taxCode)
        #{
        #    PurchLine       purchLineloc;
        #    TaxOnItem       taxOnItem;
        #
        #    if (_inventTransId && _taxCode)
        #    {
        #        select firstonly RecId from taxOnItem
        #            where taxOnItem.TaxCode == _taxCode
        #            exists join purchLineloc
        #                where purchLineloc.InventTransId    == _inventTransId
        #                   && purchLineloc.TaxItemGroup     == taxOnItem.TaxItemGroup
        #                   && !purchLineloc.IsDeleted;
        #    }
        #    return taxOnItem.RecId;
        #}
      ENDSOURCE
      SOURCE #isTaxUnrealized
        #static boolean isTaxUnrealized(PurchIdBase _purchID)
        #{
        #    PurchLine       purchLineloc;
        #    TaxGroupData    taxGroupData;
        #    TaxTable        taxTable;
        #
        #    select firstonly RecId from taxTable
        #        where taxTable.UnrealizedTax == true
        #        exists join taxGroupData
        #            where taxGroupData.TaxCode == taxTable.TaxCode
        #        exists join purchLineloc
        #            where purchLineloc.PurchId          == _purchID
        #               && purchLineloc.TaxGroup         == taxGroupData.TaxGroup
        #               && !purchLineloc.IsDeleted;
        #    return taxTable.RecId;
        #}
      ENDSOURCE
      SOURCE #lastLineNum
        #static TradeLineNumber  lastLineNum(PurchId _purchId)
        #{
        #    return (select maxof(LineNumber) from purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == _purchId).LineNumber;
        #}
      ENDSOURCE
      SOURCE #lookupCountryRegionName_RU
        #/// <summary>
        #/// Performs lookup on <c>LogisticsAddressCountryRegionTranslation</c> table
        #/// </summary>
        #/// <param name="_ctrl">
        #/// Control lookup linked to
        #/// </param>
        #/// <param name="_languageId">
        #/// Code of language to search for
        #/// </param>
        #public static void lookupCountryRegionName_RU(FormStringControl _ctrl, LanguageId _languageId)
        #{
        #    SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LogisticsAddressCountryRegionTranslation), _ctrl);
        #    Query          query          = new Query();
        #
        #    query.addDataSource(tableNum(LogisticsAddressCountryRegionTranslation));
        #
        #    query.dataSourceNo(1).addRange(fieldNum(LogisticsAddressCountryRegionTranslation, LanguageId)).value(_languageId);
        #
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, ShortName));
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, LongName));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #lookupRetailVariantId
        #/// <summary>
        #/// Performs the lookup for the <c>RetailVariantId</c> field.
        #/// </summary>
        #/// <param name="_ctrl">
        #/// The form control for which to perform the lookup.
        #/// </param>
        #/// <param name="_itemIdFilter">
        #/// An item id to filter the variants.
        #/// </param>
        #public static void lookupRetailVariantId(FormStringControl _ctrl, ItemId _itemIdFilter)
        #{
        #    FormRun formRun = classfactory.formRunClass(new Args(formStr(RetailVariantLookup)));
        #
        #    formRun.args().parm(_itemIdFilter);
        #    formRun.args().caller(_ctrl);
        #    formRun.init();
        #
        #    formRun.run();
        #    _ctrl.performFormLookup(formRun);
        #}
      ENDSOURCE
      SOURCE #lowestPurchStatus
        #public static PurchStatus   lowestPurchStatus(PurchId  _purchId)
        #{
        #    PurchLine   purchLine;
        #
        #    select minof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == _purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    if (PurchTable::find(_purchId).DocumentStatus != DocumentStatus::None)
        #    {
        #        return PurchStatus::Canceled;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #modifyPurchQty
        #static void  modifyPurchQty(
        #    PurchLine       _purchLine,
        #    InventDim       _inventDim,
        #    boolean         _resetPrice = true)
        #{
        #    if (!_purchLine.interCompanyIsBeingUpdated())
        #    {
        #        InventMovement::setMinMaxQty(_purchLine
        #        , !Global::isRunningOnServer()
        #        );
        #
        #        if (_purchLine.LineDeliveryType == LineDeliveryType::DeliveryLine
        #            || !_resetPrice) //we should recalculate amount even though we do not reset price
        #        {
        #            _purchLine.LineAmount = _purchLine.calcLineAmountForced();
        #        }
        #        else if (_resetPrice)
        #        {
        #            _purchLine.SalesPurchLine::resetPriceAgreement();
        #            _purchLine.setPriceDisc(_inventDim);
        #        }
        #        _purchLine.initPurchQty();
        #
        #        InventMovement::bufferSetTransQtyUnit(_purchLine);
        #
        #        _purchLine.setInventReceivedNow();
        #
        #        // Added ProjParameter clause because this was resetting the sales price.
        #        if (_purchLine.ProjId && !_purchLine.purchTable().isProjectSalesItemReqPO()
        #                && !_purchLine.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO()
        #                && !ProjParameters::find().DefaultCostPriceAsSalesPrice)
        #        {
        #            // Recalculate the project sales price
        #            _purchLine.initFromProjTable(_purchLine.projTable(), true);
        #        }
        #    }
        #    else
        #    {
        #        _purchLine.PurchQty = _purchLine.orig().PurchQty;
        #    }
        #}
      ENDSOURCE
      SOURCE #resetAxPurchLinePolicies
        #/// <summary>
        #///    Resets the price discount policies.
        #/// </summary>
        #/// <param name="_axPurchLine">
        #///    An <c>AxPurchLine</c> object representing the order line that should have the policies reset.
        #/// </param>
        #public static void resetAxPurchLinePolicies(AxPurchLine _axPurchLine)
        #{
        #    _axPurchLine.parmSystemEntrySource(PriceDiscSystemSource::None);
        #    _axPurchLine.parmSystemEntryChangePolicy(0);
        #    _axPurchLine.parmManualEntryChangepolicy(0);
        #}
      ENDSOURCE
      SOURCE #returnedLotQty
        #/// <summary>
        #///     Calulates the returned quantity and catch weight quantity for a purchase order line.
        #///     These quantities include other open return lines as well partially or fully processed return lines (current purchase order line is not included).
        #/// </summary>
        #/// <param name="_inventTransId">
        #///     The inventTransId which identifies a purchase order line (lot id of the initial purchase order line).
        #/// </param>
        #/// <param name="_inventTransIdCurrent">
        #///     The inventTransId which identifies the current return purchase order line (Reference Lot id); optional.
        #/// </param>
        #/// <returns>
        #///     A container with the quantity and the catch weight quantity that is already returned for the current purchase order line.
        #/// </returns>
        #public server static container returnedLotQty(InventTransId _inventTransId,
        #                                              InventTransId _inventTransIdCurrent = '')
        #{
        #    PurchLine   purchLine;
        #
        #    select sum(PurchQty), sum(PdsCWQty) from purchLine
        #        where (purchLine.PurchQty < 0                                                       // Only credit lines
        #            && !(purchLine.IsDeleted && purchLine.PurchStatus == PurchStatus::Backorder)    // Exlude deleted un-invoiced lines
        #            && purchLine.InventRefTransId == _inventTransId                                 // Find the lines that reference the original line
        #            && purchLine.InventTransId    != _inventTransIdCurrent);                        // Exclude current line
        #
        #    return [-purchLine.PurchQty, -purchLine.PdsCWQty];                                      // Quantities are negative. Want to return a positive quantity.
        #}
      ENDSOURCE
      SOURCE #setDeliveryDueWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Delivery due in xx days workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setDeliveryDueWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfDeliveryDueState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setInvReceivedWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Invoice received, items not received workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID of the <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setInvReceivedWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfInvReceivedState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setWorkflowState
        #/// <summary>
        #///     This method update the <c>WorkflowState</c> on the specified <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_recId">
        #///     <c>RecId</c> of the record to update.
        #/// </param>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #static void  setWorkflowState(RecId                     _recId,
        #                              TradeWorkflowState        _workflowState,
        #                              TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    PurchLine  purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_recId, true);
        #    purchLine.updateWorkflowState(_workflowState, _editableInWorkflow);
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #initFromPurchLine
        EVENTHANDLERS
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #initFromVendInvoiceTrans
        EVENTHANDLERS
          EVENTHANDLER #postInitFromVendInvoiceTrans_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postInitFromVendInvoiceTransHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postInitFromVendInvoiceTransHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifiedField
        EVENTHANDLERS
          EVENTHANDLER #modifiedFieldPost_PMF
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineHandler_PMF
              Method              #modifiedFieldPost
              AOTlink             #\Classes\PurchLineHandler_PMF\modifiedFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #postModifiedField_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifiedFieldHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifiedFieldHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifyInventDim
        EVENTHANDLERS
          EVENTHANDLER #postModifyInventDimBR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifyInventDim
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifyInventDim
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #validateField
        EVENTHANDLERS
          EVENTHANDLER #pmfValidateFieldPost
            PROPERTIES
              CalledWhen          #Post
              Class               #purchLineHandler_Pmf
              Method              #validateFieldPost
              AOTlink             #\Classes\purchLineHandler_Pmf\validateFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : MarkupTrans unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #MarkupTrans
    EnforceFKRelation 0
    PROPERTIES
      Name                #MarkupTrans
      Label               #@SYS13468
      FormRef             #MarkupTrans
      TitleField1         #MarkupCode
      TitleField2         #Voucher
      ConfigurationKey    #Markup
      SecurityKey         #BasicTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #Transaction
      PrimaryIndex        #TableRecIdIdx
      ClusterIndex        #TableRecIdIdx
      ModifiedDateTime    #Yes
      DEL_modifiedTime    #Yes
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      DEL_createdTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS124472
      Origin              #{2C0B00E6-0000-1000-88CC-6F0D87705472}
      LegacyId            #230
    ENDPROPERTIES
    
    FIELDS
      FIELD #BankLCImportChargeAllocation_SA
        INT64
        PROPERTIES
          Name                #BankLCImportChargeAllocation_SA
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #MarkupTrans
          CountryRegionCodes  #SA
          Origin              #{1E198CA6-D07F-4B4B-83D6-048AAEAC746B}
          LegacyId            #54
          ExtendedDataType    #BankLCImportChargeAllocationRefRecId_SA
        ENDPROPERTIES
        
      FIELD #CalculatedAmount
        REAL
        PROPERTIES
          Name                #CalculatedAmount
          Label               #@SYS69023
          HelpText            #@SYS69024
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{97BCD858-6D8D-443D-9F07-0E6A8E91C7EB}
          LegacyId            #23
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #CalculatedAmountMST_W
        REAL
        PROPERTIES
          Name                #CalculatedAmountMST_W
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #LedgerBasic
          Table               #MarkupTrans
          CountryRegionCodes  #RU,CZ,EE,HU,LT,LV,PL,FR
          Origin              #{73D892F9-D343-4119-BF4A-75090CDBE65D}
          LegacyId            #16010
          ExtendedDataType    #AmountMST
        ENDPROPERTIES
        
      FIELD #CorrectedMarkupTrans
        INT64
        PROPERTIES
          Name                #CorrectedMarkupTrans
          Visible             #No
          Table               #MarkupTrans
          Origin              #{EE476DCF-DF88-426A-8A54-F05BF892D6F2}
          LegacyId            #56
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS20784
          Mandatory           #Yes
          Table               #MarkupTrans
          IgnoreEDTRelation   #Yes
          Origin              #{307299AB-026F-4547-A079-E97100D8347B}
          LegacyId            #5
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CustInvoiceLineIdRef
        INT64
        PROPERTIES
          Name                #CustInvoiceLineIdRef
          Visible             #No
          Table               #MarkupTrans
          Origin              #{92B16A54-7253-4CAA-836D-5D038ED5E1DB}
          LegacyId            #51
          ExtendedDataType    #CustInvoiceLineIdRefRecId
        ENDPROPERTIES
        
      FIELD #CustInvoiceLineTemplate
        INT64
        PROPERTIES
          Name                #CustInvoiceLineTemplate
          Visible             #No
          Table               #MarkupTrans
          Origin              #{B58433AD-6A7F-4D3E-939A-41A21DEB817C}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #CustomsAssessableValue_IN
        ENUM
        PROPERTIES
          Name                #CustomsAssessableValue_IN
          Label               #@GLS5298
          HelpText            #@GLS5757
          Table               #MarkupTrans
          CountryRegionCodes  #IN
          Origin              #{2A191F47-00E6-1000-4591-365716E230F2}
          LegacyId            #8007
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CustVendPosted_RU
        REAL
        PROPERTIES
          Name                #CustVendPosted_RU
          Label               #@GLS103215
          HelpText            #@SYS9733
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #LedgerBasic
          Table               #MarkupTrans
          CountryRegionCodes  #RU
          Origin              #{2A113E82-00E6-1000-AA5E-A252C770C99C}
          LegacyId            #16002
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #DocumentStatus
        ENUM
        PROPERTIES
          Name                #DocumentStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{B77B0751-F25C-48F5-911A-8BA9008631D4}
          LegacyId            #26
          EnumType            #DocumentStatus
        ENDPROPERTIES
        
      FIELD #ExchRate_RU
        REAL
        PROPERTIES
          Name                #ExchRate_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          CountryRegionCodes  #RU
          Origin              #{2A0B0000-00E6-1000-4AA1-EF705F617465}
          ExtendedDataType    #ExchRate
        ENDPROPERTIES
        
      FIELD #ExchrateSecond_RU
        REAL
        PROPERTIES
          Name                #ExchrateSecond_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          CountryRegionCodes  #RU
          Origin              #{2A110000-00E6-1000-FDC8-5B4C10CCD09D}
          ExtendedDataType    #ExchrateSecondary
        ENDPROPERTIES
        
      FIELD #FacturedAmount_RU
        REAL
        PROPERTIES
          Name                #FacturedAmount_RU
          Table               #MarkupTrans
          Origin              #{2A113E81-00E6-1000-18CA-D5D0FF8D339F}
          LegacyId            #16001
          ExtendedDataType    #FacturedAmount_RU
        ENDPROPERTIES
        
      FIELD #FromAmount
        REAL
        PROPERTIES
          Name                #FromAmount
          Table               #MarkupTrans
          Origin              #{D7EF1938-3029-4EAC-8D79-55A6D8DF618F}
          ExtendedDataType    #MarkupFromAmount
        ENDPROPERTIES
        
      FIELD #GoodsInRouteId_RU
        STRING
        PROPERTIES
          Name                #GoodsInRouteId_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A110000-00E6-1000-F3B6-A8D5A50BC58A}
          ExtendedDataType    #GoodsInRouteId_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #GoodsInRouteToDelivery_RU
        ENUM
        PROPERTIES
          Name                #GoodsInRouteToDelivery_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A190000-00E6-1000-5749-3593541F2EA9}
          ExtendedDataType    #GoodsInRouteToDelivery_RU
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyCompanyId
        STRING
        PROPERTIES
          Name                #InterCompanyCompanyId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          IgnoreEDTRelation   #Yes
          Origin              #{EA2AFA1F-92A2-4086-ABE1-7ED1ADF8C93B}
          LegacyId            #34
          ExtendedDataType    #InterCompanyCompanyId
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #InterCompanyInvoiceId
        STRING
        PROPERTIES
          Name                #InterCompanyInvoiceId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{4F18A3D9-D408-4FB7-9C8E-F5EF1910C328}
          LegacyId            #28
          ExtendedDataType    #InterCompanyInvoiceId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyMarkupUseValue
        ENUM
        PROPERTIES
          Name                #InterCompanyMarkupUseValue
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{F2D5E62A-3C0B-4BD6-A084-E96C2B2A7907}
          LegacyId            #27
          ExtendedDataType    #InterCompanyMarkupUseValue
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyMarkupValue
        REAL
        PROPERTIES
          Name                #InterCompanyMarkupValue
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{F6AC196B-5A2C-4F77-AE52-F5EBB4E479A4}
          LegacyId            #25
          ExtendedDataType    #InterCompanyMarkupValue
        ENDPROPERTIES
        
      FIELD #InterCompanyRefRecId
        INT64
        PROPERTIES
          Name                #InterCompanyRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{DB2D07E4-926D-4AD7-BD41-85C580660307}
          LegacyId            #24
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #InterCompanySkipUpdate
        ENUM
        PROPERTIES
          Name                #InterCompanySkipUpdate
          SaveContents        #No
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #MarkupTrans
          Origin              #{A065E92F-93BD-4745-95C1-2FF089DCCA9D}
          LegacyId            #29
          ExtendedDataType    #TradeSkipUpdate
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsAutoCharge
        ENUM
        PROPERTIES
          Name                #IsAutoCharge
          Visible             #No
          Table               #MarkupTrans
          Origin              #{3E59991A-B9C4-465A-8023-5D537C645F3F}
          ExtendedDataType    #IsAutoCharge
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsDeleted
        ENUM
        PROPERTIES
          Name                #IsDeleted
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #MarkupTrans
          Origin              #{3DAEDCE3-8859-4283-8DB1-A4622808E552}
          LegacyId            #52
          ExtendedDataType    #VersioningIsDeleted
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsModified
        ENUM
        PROPERTIES
          Name                #IsModified
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #MarkupTrans
          Origin              #{9A58EC7F-63CE-4F9F-B538-027778D3B0EA}
          LegacyId            #53
          ExtendedDataType    #VersioningIsModified
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsTieredCharge
        ENUM
        PROPERTIES
          Name                #IsTieredCharge
          AllowEdit           #No
          Visible             #No
          Table               #MarkupTrans
          Origin              #{69E3CB56-72E9-42F8-9E6E-AD377F94E36B}
          ExtendedDataType    #IsTieredCharge
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemPosted_RU
        REAL
        PROPERTIES
          Name                #ItemPosted_RU
          Label               #@SYS7407
          HelpText            #@SYS9733
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #LedgerBasic
          Table               #MarkupTrans
          CountryRegionCodes  #RU
          Origin              #{2A0D3E83-00E6-1000-F06D-C0A5DC778074}
          LegacyId            #16003
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #Keep
        ENUM
        PROPERTIES
          Name                #Keep
          Table               #MarkupTrans
          Origin              #{92C39F2C-5AFB-41C0-B2B3-C2E56353F1C3}
          LegacyId            #22
          ExtendedDataType    #MarkupKeep
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LineNum
        REAL
        PROPERTIES
          Name                #LineNum
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{E4069431-4BB1-40B1-B3D2-18073F07666F}
          LegacyId            #3
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #MarkUpAllocateAfter_IN
        ENUM
        PROPERTIES
          Name                #MarkUpAllocateAfter_IN
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          CountryRegionCodes  #IN
          Origin              #{2A161F45-00E6-1000-EDF4-6D55B94D9137}
          LegacyId            #8005
          EnumType            #MarkupAllocateAfter
        ENDPROPERTIES
        
      FIELD #MarkupCategory
        ENUM
        PROPERTIES
          Name                #MarkupCategory
          Table               #MarkupTrans
          Origin              #{89C1272F-FD17-4CF1-AA92-F505965DC33B}
          LegacyId            #14
          ExtendedDataType    #MarkupCategoryType
          EnumType            #MarkupCategory
        ENDPROPERTIES
        
      FIELD #MarkupClassification_BR
        ENUM
        PROPERTIES
          Name                #MarkupClassification_BR
          Table               #MarkupTrans
          Origin              #{2A171F40-00E6-1000-C41E-04C036B29767}
          LegacyId            #8000
          EnumType            #MarkupClassification_BR
        ENDPROPERTIES
        
      FIELD #MarkupCode
        STRING
        PROPERTIES
          Name                #MarkupCode
          Mandatory           #Yes
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{42F6D84C-D6EC-44A9-B322-9DE97AFCCE65}
          LegacyId            #4
          ExtendedDataType    #MarkupCode
        ENDPROPERTIES
        
      FIELD #MCRBrokerContractFee
        ENUM
        PROPERTIES
          Name                #MCRBrokerContractFee
          Label               #@MCR33932
          HelpText            #@MCR33931
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #TradeBroker
          Table               #MarkupTrans
          Origin              #{C230D9DE-B11B-41C6-B289-DB21E8E1CBB7}
          LegacyId            #60009
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRCouponMarkup
        ENUM
        PROPERTIES
          Name                #MCRCouponMarkup
          Label               #@MCR25483
          HelpText            #@MCR26015
          AllowEdit           #No
          ConfigurationKey    #MCRCoupon
          Table               #MarkupTrans
          Origin              #{52AB23A5-FED5-4350-9CF1-7005BEBC37E9}
          LegacyId            #30017
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRInstallmentEligible
        ENUM
        PROPERTIES
          Name                #MCRInstallmentEligible
          Table               #MarkupTrans
          Origin              #{912CB04B-B41F-42ED-91C0-0B1D75218A8D}
          ExtendedDataType    #MCRInstallmentEligible
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRMarkupTransCreatedBy
        ENUM
        PROPERTIES
          Name                #MCRMarkupTransCreatedBy
          AllowEdit           #No
          ConfigurationKey    #LogisticsBasic
          Table               #MarkupTrans
          Origin              #{23C4B6D1-1C7E-4932-8C6C-B535CF10295F}
          LegacyId            #30014
          EnumType            #MCRMarkupTransCreatedBy
        ENDPROPERTIES
        
      FIELD #MCRMiscChargeOverride
        ENUM
        PROPERTIES
          Name                #MCRMiscChargeOverride
          Label               #@SYS71906
          HelpText            #@MCR11295
          ConfigurationKey    #MCRCallCenter
          Table               #MarkupTrans
          Origin              #{34DA6E34-EFAA-46D3-AD74-194EF346AE41}
          LegacyId            #30001
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCROriginalMiscChargeValue
        REAL
        PROPERTIES
          Name                #MCROriginalMiscChargeValue
          Label               #@MCR11296
          HelpText            #@MCR11298
          AllowEdit           #No
          ConfigurationKey    #MCRCallCenter
          Table               #MarkupTrans
          Origin              #{2F4CF6B9-95D0-473F-9F0B-815538DB23C5}
          LegacyId            #30002
          ExtendedDataType    #MarkupValue
        ENDPROPERTIES
        
      FIELD #MCRReasonCode
        STRING
        PROPERTIES
          Name                #MCRReasonCode
          Label               #@SYS63086
          HelpText            #@MCR4410126
          ConfigurationKey    #MCRCallCenter
          Table               #MarkupTrans
          Origin              #{35DD8AFF-1C6A-4B25-B62C-2FE915E01AC6}
          LegacyId            #30004
          ExtendedDataType    #RetailInformationSubcodeId
        ENDPROPERTIES
        
      FIELD #MCRRetailInfocodeId
        STRING
        PROPERTIES
          Name                #MCRRetailInfocodeId
          ConfigurationKey    #MCRCallCenter
          Table               #MarkupTrans
          Origin              #{1F252263-6A28-4C7B-95FE-D61AD6FC8C79}
          ExtendedDataType    #RetailInfocodeId
        ENDPROPERTIES
        
      FIELD #MCRSavedRecID
        INT64
        PROPERTIES
          Name                #MCRSavedRecID
          Label               #@MCR27883
          HelpText            #@MCR27884
          ConfigurationKey    #LogisticsBasic
          Table               #MarkupTrans
          Origin              #{D5C10557-2744-4AD7-B8E7-F5A7C2B70A06}
          LegacyId            #30019
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #MCRSavedTableID
        INT
        PROPERTIES
          Name                #MCRSavedTableID
          Label               #@MCR27881
          HelpText            #@MCR27882
          ConfigurationKey    #LogisticsBasic
          Table               #MarkupTrans
          Origin              #{52970A02-A060-466D-A516-4A1CE6C6DB88}
          LegacyId            #30018
          ExtendedDataType    #RefTableId
        ENDPROPERTIES
        
      FIELD #ModuleCategory
        ENUM
        PROPERTIES
          Name                #ModuleCategory
          Table               #MarkupTrans
          Origin              #{27B15FAB-464B-4F41-B8CC-FA70CEFC3BF6}
          LegacyId            #17
          ExtendedDataType    #MarkupModuleCategory
          EnumType            #HeadingLine
        ENDPROPERTIES
        
      FIELD #ModuleType
        ENUM
        PROPERTIES
          Name                #ModuleType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{FBE3437D-C030-42E7-A187-8A028253B006}
          LegacyId            #20
          ExtendedDataType    #MarkupModule
          EnumType            #MarkupModuleType
        ENDPROPERTIES
        
      FIELD #NotionalCharges_IN
        ENUM
        PROPERTIES
          Name                #NotionalCharges_IN
          Label               #@GLS5298
          HelpText            #@GLS6623
          Table               #MarkupTrans
          CountryRegionCodes  #IN
          Origin              #{2A121F41-00E6-1000-1204-925CC5E2FF11}
          LegacyId            #8001
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #NotionalPct_IN
        REAL
        PROPERTIES
          Name                #NotionalPct_IN
          Table               #MarkupTrans
          Origin              #{2A0E1F42-00E6-1000-BE18-DC35B7DD5678}
          LegacyId            #8002
          ExtendedDataType    #NotionalPct_IN
        ENDPROPERTIES
        
      FIELD #OrigRecId
        INT64
        PROPERTIES
          Name                #OrigRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{30C9AFF8-07AB-4C5F-8771-8A99A5D682FE}
          LegacyId            #18
          ExtendedDataType    #MarkupTransOrigRefRecId
        ENDPROPERTIES
        
      FIELD #OrigTableId
        INT
        PROPERTIES
          Name                #OrigTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{ACA5D6A1-2785-4FE2-B90D-0BAA4154FBB9}
          LegacyId            #19
          ExtendedDataType    #MarkupTransOrigRefTableId
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #MarkupTrans
          Origin              #{77F5474D-1E5B-4766-849B-173F951DF5FC}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #Posted
        REAL
        PROPERTIES
          Name                #Posted
          HelpText            #@SYS9733
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{60118FAD-CE4F-40E6-918A-C0859B0F6BFC}
          LegacyId            #8
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@sys132694
          Visible             #No
          Table               #MarkupTrans
          Origin              #{1761F06F-A45B-4362-A8D6-27C6ECB19B06}
          LegacyId            #43
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #TaxAmount
        REAL
        PROPERTIES
          Name                #TaxAmount
          Table               #MarkupTrans
          Origin              #{DC1D9EE4-8138-4430-BE0F-C8B1FFB4A788}
          LegacyId            #7
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #TaxAmountExcise_RU
        REAL
        PROPERTIES
          Name                #TaxAmountExcise_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A123E86-00E6-1000-36DE-C41EB2A9BDF2}
          LegacyId            #16006
          ExtendedDataType    #TaxAmountExcise_RU
        ENDPROPERTIES
        
      FIELD #TaxAmountExciseMST_RU
        REAL
        PROPERTIES
          Name                #TaxAmountExciseMST_RU
          Table               #MarkupTrans
          Origin              #{2A153E8B-00E6-1000-51EA-A2473EB2CA0C}
          LegacyId            #16011
          ExtendedDataType    #TaxAmountExciseMST_RU
        ENDPROPERTIES
        
      FIELD #TaxAmountMST_W
        REAL
        PROPERTIES
          Name                #TaxAmountMST_W
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          CountryRegionCodes  #RU
          Origin              #{2A0E3E89-00E6-1000-9038-0ED7532CCE7B}
          LegacyId            #16009
          ExtendedDataType    #TaxAmount
        ENDPROPERTIES
        
      FIELD #TaxAmountVAT_RU
        REAL
        PROPERTIES
          Name                #TaxAmountVAT_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A0F3E85-00E6-1000-902B-881851A50177}
          LegacyId            #16005
          ExtendedDataType    #TaxAmountVAT_RU
        ENDPROPERTIES
        
      FIELD #TaxAmountVATMST_RU
        REAL
        PROPERTIES
          Name                #TaxAmountVATMST_RU
          Table               #MarkupTrans
          Origin              #{2A123E8C-00E6-1000-36A9-90256B000B55}
          LegacyId            #16012
          ExtendedDataType    #TaxAmountVATMST_RU
        ENDPROPERTIES
        
      FIELD #TaxAutogenerated
        ENUM
        PROPERTIES
          Name                #TaxAutogenerated
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{C2314290-5132-454E-BB51-9CCDDBE1119B}
          LegacyId            #15
          ExtendedDataType    #TaxAutoGenerated
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          Table               #MarkupTrans
          IgnoreEDTRelation   #Yes
          Origin              #{1D965FDD-3402-4B74-9571-E475B448B1FE}
          LegacyId            #12
          ExtendedDataType    #TaxGroup
        ENDPROPERTIES
        
      FIELD #TaxItemGroup
        STRING
        PROPERTIES
          Name                #TaxItemGroup
          Table               #MarkupTrans
          IgnoreEDTRelation   #Yes
          Origin              #{D586AB53-55D4-44E1-B925-01CD5F389577}
          LegacyId            #13
          ExtendedDataType    #TaxItemGroup
        ENDPROPERTIES
        
      FIELD #TaxValueVAT_RU
        REAL
        PROPERTIES
          Name                #TaxValueVAT_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A0E3E84-00E6-1000-665F-4F3A97F87D72}
          LegacyId            #16004
          ExtendedDataType    #TaxValueVAT_RU
        ENDPROPERTIES
        
      FIELD #TaxVATType_RU
        ENUM
        PROPERTIES
          Name                #TaxVATType_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{2A0D3E87-00E6-1000-2424-FC8ECD5C6179}
          LegacyId            #16007
          EnumType            #VATType_RU
        ENDPROPERTIES
        
      FIELD #TaxWriteCode
        STRING
        PROPERTIES
          Name                #TaxWriteCode
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{215AE882-44EE-4A25-B854-FFDDF4136E11}
          LegacyId            #16
          ExtendedDataType    #TaxWriteCode
        ENDPROPERTIES
        
      FIELD #ToAmount
        REAL
        PROPERTIES
          Name                #ToAmount
          Table               #MarkupTrans
          Origin              #{5AFF2397-B173-4173-B72B-1AD013881E14}
          ExtendedDataType    #MarkupToAmount
        ENDPROPERTIES
        
      FIELD #TransDate
        DATE
        PROPERTIES
          Name                #TransDate
          HelpText            #@SYS3961
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{1EB48916-3657-420C-9290-A87E87A2FE73}
          LegacyId            #10
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #TransRecId
        INT64
        PROPERTIES
          Name                #TransRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{893A6135-FE26-425B-8F01-77584665F866}
          LegacyId            #2
          ExtendedDataType    #MarkupTransRefRecId
        ENDPROPERTIES
        
      FIELD #TransTableId
        INT
        PROPERTIES
          Name                #TransTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{D36E9593-A333-4DA3-A379-B8A5FC68760D}
          LegacyId            #1
          ExtendedDataType    #MarkupTransRefTableId
        ENDPROPERTIES
        
      FIELD #Txt
        STRING
        PROPERTIES
          Name                #Txt
          HelpText            #@SYS16224
          Table               #MarkupTrans
          Origin              #{A7F5D7E1-46F4-4724-8D57-AAE7EE017B82}
          LegacyId            #11
          ExtendedDataType    #TransTxt
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #Value
        REAL
        PROPERTIES
          Name                #Value
          Table               #MarkupTrans
          Origin              #{AC75F3C9-C91E-4E90-B827-08FFB5BC7024}
          LegacyId            #6
          ExtendedDataType    #MarkupValue
        ENDPROPERTIES
        
      FIELD #VATDocumentType_RU
        ENUM
        PROPERTIES
          Name                #VATDocumentType_RU
          Table               #MarkupTrans
          Origin              #{2A123E88-00E6-1000-A3C6-75F618BC4AF1}
          LegacyId            #16008
          EnumType            #PurchBookVATDocumentType_Invoice_RU
        ENDPROPERTIES
        
      FIELD #Voucher
        STRING
        PROPERTIES
          Name                #Voucher
          HelpText            #@SYS7290
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #MarkupTrans
          Origin              #{38B88913-643F-4FC3-9B03-A59CD1047CAF}
          LegacyId            #9
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineNum
          #MarkupCode
          #CurrencyCode
          #Value
          #TaxAmount
          #Voucher
          #Txt
          #TaxGroup
          #TaxItemGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransTableId
          #TransRecId
          #TaxAutogenerated
          #ModuleCategory
          #LineNum
          #OrigRecId
          #OrigTableId
          #ModuleType
          #Keep
          #DocumentStatus
          #CorrectedMarkupTrans
          #VATDocumentType_RU
          #MarkupClassification_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransTableId
          #TransRecId
          #LineNum
          #MarkupCode
          #CurrencyCode
          #Value
          #TaxAmount
          #Posted
          #Voucher
          #TransDate
          #Txt
          #TaxGroup
          #TaxItemGroup
          #MarkupCategory
          #TaxAutogenerated
          #TaxWriteCode
          #ModuleCategory
          #OrigRecId
          #OrigTableId
          #ModuleType
          #Keep
          #CalculatedAmount
          #InterCompanyRefRecId
          #InterCompanyMarkupValue
          #DocumentStatus
          #InterCompanyMarkupUseValue
          #InterCompanyInvoiceId
          #InterCompanySkipUpdate
          #InterCompanyCompanyId
          #MCRMiscChargeOverride
          #MCROriginalMiscChargeValue
          #MCRReasonCode
          #MCRRetailInfocodeId
          #MCRMarkupTransCreatedBy
          #MCRCouponMarkup
          #MCRSavedRecID
          #MCRSavedTableID
          #MCRInstallmentEligible
          #MCRBrokerContractFee
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Allocated_RU
        PROPERTIES
          Name                #Allocated_RU
          Label               #@GLS104866
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustVendPosted_RU
          #ItemPosted_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Allocation_IN
        PROPERTIES
          Name                #Allocation_IN
          Label               #@SYS26697
        ENDPROPERTIES
        
        GROUPFIELDS
          #MarkUpAllocateAfter_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AmountsMST_W
        PROPERTIES
          Name                #AmountsMST_W
          Label               #@GLS111602
        ENDPROPERTIES
        
        GROUPFIELDS
          #CalculatedAmountMST_W
          #TaxAmountMST_W
          #TaxAmountExciseMST_RU
          #TaxAmountVATMST_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankLCImportMarkupTrans_SA
        PROPERTIES
          Name                #BankLCImportMarkupTrans_SA
          Label               #@SYS332252
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankLCImportChargeAllocation_SA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Charges_IN
        PROPERTIES
          Name                #Charges_IN
          Label               #@SYS8371
        ENDPROPERTIES
        
        GROUPFIELDS
          #NotionalCharges_IN
          #NotionalPct_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CustInvoiceTemplate
        PROPERTIES
          Name                #CustInvoiceTemplate
          Label               #@SYS314183
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustInvoiceLineTemplate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Customs_IN
        PROPERTIES
          Name                #Customs_IN
          Label               #@GLS5007
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustomsAssessableValue_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Facture_RU
        PROPERTIES
          Name                #Facture_RU
          Label               #@GLS104582
        ENDPROPERTIES
        
        GROUPFIELDS
          #FacturedAmount_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GoodsInRoute_RU
        PROPERTIES
          Name                #GoodsInRoute_RU
          Label               #@GLS114756
        ENDPROPERTIES
        
        GROUPFIELDS
          #GoodsInRouteToDelivery_RU
          #GoodsInRouteId_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompany
        PROPERTIES
          Name                #InterCompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyCompanyId
          #InterCompanyInvoiceId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyInfo
        PROPERTIES
          Name                #InterCompanyInfo
          Label               #@SYS112324
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyRefRecId
          #InterCompanyMarkupValue
          #InterCompanyMarkupUseValue
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Ledger
        PROPERTIES
          Name                #Ledger
          Label               #@SYS13356
        ENDPROPERTIES
        
        GROUPFIELDS
          #Voucher
          #TransDate
          #Posted
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MCRMiscChargeReturnAdjustment
        PROPERTIES
          Name                #MCRMiscChargeReturnAdjustment
          Label               #@MCR21938
        ENDPROPERTIES
        
        GROUPFIELDS
          #ModuleType
          #MarkupCategory
          #Txt
          #CurrencyCode
          #Value
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MiscCharges
        PROPERTIES
          Name                #MiscCharges
          Label               #@SYS8371
        ENDPROPERTIES
        
        GROUPFIELDS
          #ModuleType
          #MarkupCode
          #Txt
          #CurrencyCode
          #Value
          #MarkupCategory
          #FromAmount
          #ToAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PortalMiscellaneousCharges
        PROPERTIES
          Name                #PortalMiscellaneousCharges
          Label               #@SYS116804
        ENDPROPERTIES
        
        GROUPFIELDS
          #MarkupCode
          #CurrencyCode
          #Value
          #Txt
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PrecalculatedTaxes_RU
        PROPERTIES
          Name                #PrecalculatedTaxes_RU
          Label               #@GLS102674
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxAmountVAT_RU
          #TaxValueVAT_RU
          #TaxVATType_RU
          #TaxAmountExcise_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #TaxAmount
          #TaxItemGroup
          #TaxWriteCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTaxGroup
        PROPERTIES
          Name                #SalesTaxGroup
          Label               #@SYS68899
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #TaxItemGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@sys132694
        ENDPROPERTIES
        
        GROUPFIELDS
          #SourceDocumentLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Value
        PROPERTIES
          Name                #Value
          Label               #@SYS11762
        ENDPROPERTIES
        
        GROUPFIELDS
          #CalculatedAmount
          #ExchRate_RU
          #ExchrateSecond_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VATDocumentType_RU
        PROPERTIES
          Name                #VATDocumentType_RU
          Label               #@GLS110908
        ENDPROPERTIES
        
        GROUPFIELDS
          #VATDocumentType_RU
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #TableRecIdIdx
      PROPERTIES
        Name                #TableRecIdIdx
        AllowDuplicates     #No
        Origin              #{2B0D0001-00E6-1000-0714-672E5FB67763}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #TransRecId
        #TransTableId
        #LineNum
      ENDINDEXFIELDS
      
      #InterCompanyRefIdx
      PROPERTIES
        Name                #InterCompanyRefIdx
        Origin              #{2B120002-00E6-1000-A5B3-5417A583ABC4}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #InterCompanyRefRecId
      ENDINDEXFIELDS
      
      #OrigTableRecIdIdx
      PROPERTIES
        Name                #OrigTableRecIdIdx
        Origin              #{2B110003-00E6-1000-9EDA-B8523623672E}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #OrigTableId
        #OrigRecId
      ENDINDEXFIELDS
      
      #BankLCImportChargeAllocation_SAIdx
      PROPERTIES
        Name                #BankLCImportChargeAllocation_SAIdx
        ConfigurationKey    #BankDocument
        Origin              #{9B655715-3DDA-49A3-A201-4B4B3C05ED6D}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #BankLCImportChargeAllocation_SA
      ENDINDEXFIELDS
      
      #MarkupTransIdx
      PROPERTIES
        Name                #MarkupTransIdx
        Origin              #{F630C5F6-4884-4534-9B36-DE166715A7D2}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #CorrectedMarkupTrans
      ENDINDEXFIELDS
      
      #SourceDocumentLine
      PROPERTIES
        Name                #SourceDocumentLine
        UniqueAcrossCompanies #Yes
        Origin              #{7AC3A9FE-C543-436E-83DB-C617732E3F6C}
        LegacyId            #15
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #BankLCImportChargeAllocation_SA
        PROPERTIES
          Name                #BankLCImportChargeAllocation_SA
          Table               #BankLCImportChargeAllocation_SA
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #BankLCImportChargeAllocation
          Role                #BankLCImportTransAllocation_MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankLCImportChargeAllocation_SA
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CommonOrig
        PROPERTIES
          Name                #CommonOrig
          Table               #Common
          Validate            #No
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustConfirmJour
        PROPERTIES
          Name                #CustConfirmJour
          Table               #CustConfirmJour
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustConfirmJour
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustConfirmTrans
        PROPERTIES
          Name                #CustConfirmTrans
          Table               #CustConfirmTrans
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustConfirmTrans
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoice4PaymJour_RU
        PROPERTIES
          Name                #CustInvoice4PaymJour_RU
          Table               #CustInvoice4PaymJour_RU
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustInvoice4PaymJour_RU
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoice4PaymTrans_RU
        PROPERTIES
          Name                #CustInvoice4PaymTrans_RU
          Table               #CustInvoice4PaymTrans_RU
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustInvoice4PaymTrans_RU
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceJour
        PROPERTIES
          Name                #CustInvoiceJour
          Table               #CustInvoiceJour
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceLine
        PROPERTIES
          Name                #CustInvoiceLine
          Table               #CustInvoiceLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceLineIdRef
        PROPERTIES
          Name                #CustInvoiceLineIdRef
          Table               #CustInvoiceLineIdRef
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CustInvoiceLineIdRef
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceLineTemplate
        PROPERTIES
          Name                #CustInvoiceLineTemplate
          Table               #CustInvoiceLineTemplate
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CustInvoiceLineTemplate
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceTable
        PROPERTIES
          Name                #CustInvoiceTable
          Table               #CustInvoiceTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustInvoiceTrans
        PROPERTIES
          Name                #CustInvoiceTrans
          Table               #CustInvoiceTrans
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustomsExportAssessableValue_IN
        PROPERTIES
          Name                #CustomsExportAssessableValue_IN
          Table               #CustomsExportAssessableValue_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustomsExportOrderLine_IN
        PROPERTIES
          Name                #CustomsExportOrderLine_IN
          Table               #CustomsExportOrderLine_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustomsImportAssessableValue_IN
        PROPERTIES
          Name                #CustomsImportAssessableValue_IN
          Table               #CustomsImportAssessableValue_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustQuotationJour
        PROPERTIES
          Name                #CustQuotationJour
          Table               #CustQuotationJour
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustQuotationJour
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustQuotationTrans
        PROPERTIES
          Name                #CustQuotationTrans
          Table               #CustQuotationTrans
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustQuotationTrans
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #GoodsInRouteJour_RU
        PROPERTIES
          Name                #GoodsInRouteJour_RU
          Table               #GoodsInRouteJour_RU
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #GoodsInRouteId_RU
            RelatedField        #GoodsInRouteId
            SourceEDT           #GoodsInRouteId_RU
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InterCompanyDataArea
        PROPERTIES
          Name                #InterCompanyDataArea
          Table               #DataArea
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InterCompanyDataArea
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #id
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #DataArea
            RelatedField        #isVirtual
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InterCompanyMarkupTrans
        PROPERTIES
          Name                #InterCompanyMarkupTrans
          Table               #MarkupTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InterCompanyMarkupTrans
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #dataAreaId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MarkupTable
        PROPERTIES
          Name                #MarkupTable
          Table               #MarkupTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ModuleType
            RelatedField        #ModuleType
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MarkupCode
            RelatedField        #MarkupCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MarkupTrans_Corrected
        PROPERTIES
          Name                #MarkupTrans_Corrected
          Table               #MarkupTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CorrectedMarkupTrans
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRCommonSavedRecId
        PROPERTIES
          Name                #MCRCommonSavedRecId
          Table               #Common
          Validate            #No
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MCRSavedTableID
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MCRSavedRecID
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRPriceOverrideReason
        PROPERTIES
          Name                #MCRPriceOverrideReason
          Table               #RetailInformationSubcodeTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MCRRetailInfocodeId
            RelatedField        #infocodeId
            SourceEDT           #RetailInfocodeId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MCRReasonCode
            RelatedField        #subcodeId
            SourceEDT           #RetailInformationSubcodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjInvoiceItem
        PROPERTIES
          Name                #ProjInvoiceItem
          Table               #ProjInvoiceItem
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjInvoiceItem
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchLine
        PROPERTIES
          Name                #PurchLine
          Table               #PurchLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchLine
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchLineOrig
        PROPERTIES
          Name                #PurchLineOrig
          Table               #PurchLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchLineOrig
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchParmLine
        PROPERTIES
          Name                #PurchParmLine
          Table               #PurchParmLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchParmSubTable
        PROPERTIES
          Name                #PurchParmSubTable
          Table               #PurchParmSubTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchParmTable
        PROPERTIES
          Name                #PurchParmTable
          Table               #PurchParmTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqLine
        PROPERTIES
          Name                #PurchReqLine
          Table               #PurchReqLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqLineHistory
        PROPERTIES
          Name                #PurchReqLineHistory
          Table               #PurchReqLineHistory
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqTableHistory
        PROPERTIES
          Name                #PurchReqTableHistory
          Table               #PurchReqTableHistory
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQCaseLine
        PROPERTIES
          Name                #PurchRFQCaseLine
          Table               #PurchRFQCaseLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQCaseTable
        PROPERTIES
          Name                #PurchRFQCaseTable
          Table               #PurchRFQCaseTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQLine
        PROPERTIES
          Name                #PurchRFQLine
          Table               #PurchRFQLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQReplyLine
        PROPERTIES
          Name                #PurchRFQReplyLine
          Table               #PurchRFQReplyLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQReplyTable
        PROPERTIES
          Name                #PurchRFQReplyTable
          Table               #PurchRFQReplyTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchRFQTable
        PROPERTIES
          Name                #PurchRFQTable
          Table               #PurchRFQTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchTable
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTableOrig
        PROPERTIES
          Name                #PurchTableOrig
          Table               #PurchTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchTableOrig
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesLine
        PROPERTIES
          Name                #SalesLine
          Table               #SalesLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesLine
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesLineOrig
        PROPERTIES
          Name                #SalesLineOrig
          Table               #SalesLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesLineOrig
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesQuotationLine
        PROPERTIES
          Name                #SalesQuotationLine
          Table               #SalesQuotationLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesQuotationTable
        PROPERTIES
          Name                #SalesQuotationTable
          Table               #SalesQuotationTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTable
        PROPERTIES
          Name                #SalesTable
          Table               #SalesTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesTable
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTableOrig
        PROPERTIES
          Name                #SalesTableOrig
          Table               #SalesTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesTableOrig
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrigRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SourceDocumentLine
          Role                #SourceDocumentLine_MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxItemGroupHeading
        PROPERTIES
          Name                #TaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxItemGroup
            RelatedField        #TaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TmpCustomsInquiryTable_IN
        PROPERTIES
          Name                #TmpCustomsInquiryTable_IN
          Table               #TmpCustomsInquiryTable_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TmpExciseInquiryTable_IN
        PROPERTIES
          Name                #TmpExciseInquiryTable_IN
          Table               #TmpExciseInquiryTable_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TmpIndirectTaxInquiryTable_IN
        PROPERTIES
          Name                #TmpIndirectTaxInquiryTable_IN
          Table               #TmpIndirectTaxInquiryTable_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TmpServiceTaxInquiryTable_IN
        PROPERTIES
          Name                #TmpServiceTaxInquiryTable_IN
          Table               #TmpServiceTaxInquiryTable_IN
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoice4PaymJour_RU
        PROPERTIES
          Name                #VendInvoice4PaymJour_RU
          Table               #VendInvoice4PaymJour_RU
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendInvoice4PaymJour_RU
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoice4PaymTrans_RU
        PROPERTIES
          Name                #VendInvoice4PaymTrans_RU
          Table               #VendInvoice4PaymTrans_RU
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendInvoice4PaymTrans_RU
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceInfoLine
        PROPERTIES
          Name                #VendInvoiceInfoLine
          Table               #VendInvoiceInfoLine
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceInfoSubTable
        PROPERTIES
          Name                #VendInvoiceInfoSubTable
          Table               #VendInvoiceInfoSubTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceInfoTable
        PROPERTIES
          Name                #VendInvoiceInfoTable
          Table               #VendInvoiceInfoTable
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceJour
        PROPERTIES
          Name                #VendInvoiceJour
          Table               #VendInvoiceJour
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendInvoiceJour
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceTrans
        PROPERTIES
          Name                #VendInvoiceTrans
          Table               #VendInvoiceTrans
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendInvoiceTrans
          Role                #MarkupTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPackingSlipJour
        PROPERTIES
          Name                #VendPackingSlipJour
          Table               #VendPackingSlipJour
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPackingSlipTrans
        PROPERTIES
          Name                #VendPackingSlipTrans
          Table               #VendPackingSlipTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #MCROrderEventTable(MarkupTrans)
      PROPERTIES
        Table               #MCROrderEventTable
        DeleteAction        #Restricted
        Relation            #MarkupTrans
      ENDPROPERTIES
      
      #TMSRouteMarkupTrans(MarkupTrans)
      PROPERTIES
        Table               #TMSRouteMarkupTrans
        DeleteAction        #Cascade
        Relation            #MarkupTrans
      ENDPROPERTIES
      
      #TMSFreightBillMarkupTrans(MarkupTrans)
      PROPERTIES
        Table               #TMSFreightBillMarkupTrans
        DeleteAction        #Cascade
        Relation            #MarkupTrans
      ENDPROPERTIES
      
      #TMSApportionedValue(MarkupTrans)
      PROPERTIES
        Table               #TMSApportionedValue
        DeleteAction        #Cascade
        Relation            #MarkupTrans
      ENDPROPERTIES
      
      #TaxWorkRegulation(MarkupTrans)
      PROPERTIES
        Table               #TaxWorkRegulation
        DeleteAction        #Cascade
        Relation            #MarkupTrans
      ENDPROPERTIES
      
      #MarkupTransMapping
      PROPERTIES
        Table               #MarkupTransMapping
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #calcDistributionAmount
        #/// <summary>
        #/// Calculates the amount of the <c>MarkupTrans</c> record for which creates distributions.
        #/// </summary>
        #/// <param name="_qty">
        #/// The quantity to calculate miscellaneous charges amount from.
        #/// </param>
        #/// <param name="_transactionBalance">
        #/// The amount to calculate miscellaneous charges amount from.
        #/// </param>
        #/// <param name="_accountingDate">
        #/// The accounting date.
        #/// </param>
        #/// <param name="_convertSign">
        #/// A <c>NoYes</c> value which specifies whether to invert sign of the markupAmount.
        #/// </param>
        #/// <returns>
        #/// The markup amount to create distributions.
        #/// </returns>
        #server public MarkupAmount calcDistributionAmount(Qty _qty,
        #                                                  Amount _transactionBalance,
        #                                                  AccountingDate _accountingDate,
        #                                                  NoYes _convertSign = NoYes::No
        #                                                  )
        #{
        #    MarkupAmount markupAmount;
        #
        #    markupAmount = Markup::calcTrans(this,
        #                                     _qty,
        #                                     _transactionBalance,
        #                                     0,
        #                                     _accountingDate);
        #
        #    // convert sign when the Credit type is Customer/Vendor.
        #    if (_convertSign)
        #    {
        #        switch (this.ModuleType)
        #        {
        #            case MarkupModuleType::Cust  :
        #                if (this.markupTable().VendType == MarkupType::CustVend)
        #                {
        #                    markupAmount = -markupAmount;
        #                }
        #                break;
        #
        #            default:
        #                break;
        #        }
        #    }
        #
        #    return markupAmount;
        #}
      ENDSOURCE
      SOURCE #cascadeDeleteMarkupTrans_IN
        #private void cascadeDeleteMarkupTrans_IN()
        #{
        #    MarkupTrans_IN markupTransIN;
        #    delete_from markupTransIN
        #        where markupTransIN.MarkupTrans == this.RecId;
        #}
      ENDSOURCE
      SOURCE #checkCustomJournal_RU
        #boolean checkCustomJournal_RU()
        #{
        #    boolean                 ret = true;
        #    PurchTable              purchTable;
        #    PurchLine               purchLine;
        #    DlvTermId               dlvTermCode;
        #    CustomJournalTable_RU   customJournalTable;
        #    CustomJournalTrans_RU   customJournalTrans;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(PurchLine) :
        #            purchLine = PurchLine::findRecId(this.TransRecId);
        #            if (CustomJournalTrans_RU::existInventTransId(purchLine.InventTransId))
        #            {
        #                purchTable  = purchLine.purchTable();
        #                dlvTermCode = AgreementHeaderDefault::findAgreementHeader(purchTable.MatchingAgreement).DeliveryTerm;
        #                if (!dlvTermCode)
        #                {
        #                    select firstonly DlvTermId from customJournalTable
        #                    exists join customJournalTrans
        #                    where customJournalTrans.CustomJournalId == customJournalTable.CustomJournalId
        #                       && customJournalTrans.SalesPurchInventTransId == purchLine.InventTransId;
        #                    dlvTermCode = customJournalTable.DlvTermId;
        #                }
        #                if (dlvTermCode && MarkupDlvTermConnection_RU::exist(dlvTermCode, this.MarkupCode))
        #                {
        #                    ret = checkFailed(strFmt("@GLS115333", purchLine.ItemId));
        #                }
        #            }
        #            break;
        #        case tableNum(SalesLine) :
        #            ret = true;
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkforMiscAndWHT_AP
        #boolean checkforMiscAndWHT_AP(RecId _purchTableId, RecId _purchLineId)
        #{
        #    PurchTable  purchTable;
        #    PurchLine   purchLine;
        #    boolean check;
        #    #define.zero(0)
        #
        #    if (_purchTableId == #zero
        #        && _purchLineId == #zero)
        #    {
        #        return false;
        #    }
        #    else
        #    {
        #        if (_purchTableId != #zero
        #            && _purchLineId == #zero)
        #        {
        #            select PurchId
        #                from purchTable
        #                    where purchTable.RecId == _purchTableId;
        #
        #            if (purchTable)
        #            {
        #                while select TaxWithholdItemGroupHeading_TH, TaxWithholdGroup_TH
        #                    from purchLine
        #                        where purchLine.PurchId == purchTable.PurchId
        #                            && check == false
        #                {
        #                    if (purchLine.TaxWithholdGroup_TH
        #                        && purchLine.TaxWithholdItemGroupHeading_TH)
        #                    {
        #                        check = true;
        #                    }
        #                }
        #            }
        #        }
        #        else if (_purchTableId == #zero
        #            && _purchLineId != #zero)
        #        {
        #            select TaxWithholdItemGroupHeading_TH, TaxWithholdGroup_TH
        #                from purchLine
        #                    where purchLine.RecId == _purchLineId
        #                        && check == false;
        #            if (purchLine
        #                && purchLine.TaxWithholdGroup_TH
        #                && purchLine.TaxWithholdItemGroupHeading_TH)
        #            {
        #                check = true;
        #            }
        #        }
        #    }
        #
        #    return check;
        #}
      ENDSOURCE
      SOURCE #checkforMiscAndWHT_AR
        #boolean checkforMiscAndWHT_AR(RecId _salesTableId, RecId _salesLineId)
        #{
        #    SalesTable  salesTable;
        #    SalesLine   salesLine;
        #    boolean check;
        #    #define.zero(0)
        #
        #    if (_salesTableId == #zero
        #        && _salesLineId == #zero)
        #    {
        #        return false;
        #    }
        #    else
        #    {
        #        if (_salesTableId != #zero
        #            && _salesLineId == #zero)
        #        {
        #            select SalesId
        #                from salesTable
        #                    where salesTable.RecId == _salesTableId;
        #
        #            if (salesTable)
        #            {
        #                while select TaxWithholdItemGroupHeading_TH, TaxWithholdGroup
        #                    from salesLine
        #                        where salesLine.SalesId == salesTable.SalesId
        #                            && check == false
        #                {
        #                    if (salesLine.TaxWithholdGroup
        #                        && salesLine.TaxWithholdItemGroupHeading_TH)
        #                    {
        #                        check = true;
        #                    }
        #                }
        #            }
        #        }
        #        else if (_salesTableId == #zero
        #            && _salesLineId != #zero)
        #        {
        #            select TaxWithholdItemGroupHeading_TH, TaxWithholdGroup
        #                from salesLine
        #                    where salesLine.RecId == _salesLineId
        #                        && check == false;
        #            if (salesLine
        #                && salesLine.TaxWithholdGroup
        #                && salesLine.TaxWithholdItemGroupHeading_TH)
        #            {
        #                check = true;
        #            }
        #        }
        #    }
        #
        #    return check;
        #}
      ENDSOURCE
      SOURCE #checkKeep
        #/// <summary>
        #/// Verifies that the value of the <c>Keep</c> field is set correctly.
        #/// </summary>
        #/// <returns>true if the <c>Keep</c> field contains a valid value; otherwise, false.</returns>
        #public boolean checkKeep()
        #{
        #    boolean ret = true;
        #
        #    if (this.restrictKeep()
        #        && this.Keep != (this.MarkupCategory != MarkupCategory::Fixed))
        #    {
        #        ret = checkFailed(strFmt("@SYS136412", fieldId2pname(tableNum(MarkupTrans), fieldNum(MarkupTrans, Keep)), this.Keep));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCategory
        #boolean  checkMarkupCategory()
        #{
        #    boolean     ok = true;
        #    PurchTable  purchTable;
        #    PurchLine   purchLine;
        #    SalesTable  salesTable;
        #    SalesLine   salesLine;
        #
        #    #VendInvoiceFaults
        #
        #    if (this.TransTableId == tableNum(SalesTable)       ||
        #        this.TransTableId == tableNum(SalesQuotationTable)   ||
        #        this.TransTableId == tableNum(PurchTable)       ||
        #        this.TransTableId == tableNum(CustInvoiceTable) ||
        #        this.TransTableId == tableNum(VendInvoiceInfoTable) ||
        #        this.TransTableId == tableNum(VendInvoiceInfoSubTable)
        #        || this.TransTableId == tableNum(WHSLoadTable)
        #        )
        #    {
        #        if (this.MarkupCategory == MarkupCategory::Pcs)
        #        {
        #            ok = AifFault::checkFailedLogFault("@SYS28725", #MiscChargesPerUnitNotAllowed);
        #        }
        #    }
        #
        #    if (this.isEditingBlockedByVendorInvoice())
        #    {
        #        ok = AifFault::checkFailedLogFault("@SYS327634");
        #    }
        #
        #    if (this.MarkupCategory == MarkupCategory::InterCompanyPercent)
        #    {
        #        switch (this.TransTableId)
        #        {
        #            case(tableNum(PurchLine)):
        #                purchTable = purchLine.purchTable();
        #                if (!purchTable.isInterCompanyOrder()
        #                ||  (purchTable.isInterCompanyOrder() && !purchTable.InterCompanyOriginalSalesId))
        #                {
        #                    ok = AifFault::checkFailedLogFault("@SYS98799", #OrderLineMustOriginateFromSalesOrderLine);
        #                }
        #                break;
        #            case(tableNum(SalesLine)):
        #                salesLine  = SalesLine::findRecId(this.TransRecId);
        #                salesTable = salesLine.salesTable();
        #                if (!salesTable.isInterCompanyOrder()
        #                ||  (salesTable.isInterCompanyOrder() && !salesTable.InterCompanyOriginalSalesId))
        #                {
        #                    ok = AifFault::checkFailedLogFault("@SYS98799", #OrderLineMustOriginateFromSalesOrderLine);
        #                }
        #                break;
        #            default:
        #                ok = AifFault::checkFailedLogFault("@SYS98798", #IntercompanyPctOnlyAllowedOnIntercompanyOrderLines);
        #                break;
        #        }
        #    }
        #
        #    // disable non-fixed charges on POS sales orders
        #    if (this.MarkupCategory != MarkupCategory::Fixed &&
        #        isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        if (this.TransTableId == tableNum(SalesTable))
        #        {
        #            salesTable = SalesTable::findRecId(this.TransRecId);
        #
        #            if (RetailParameters::isRetailInUse() && salesTable.isRetailSale())
        #            {
        #                ok = AifFault::checkFailedLogFault("@RET4160660");
        #            }
        #        }
        #
        #        if (this.TransTableId == tableNum(SalesLine))
        #        {
        #            salesTable = SalesLine::findRecId(this.TransRecId).salesTable();
        #
        #            if (RetailParameters::isRetailInUse() && salesTable.isRetailSale())
        #            {
        #                ok = AifFault::checkFailedLogFault("@RET4160660");
        #            }
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCode
        #boolean  checkMarkupCode()
        #{
        #    boolean     ok                      = true;
        #    boolean     itemMarkupAllowed       = false;
        #    MarkupTable markupTable;
        #    #ISOCountryRegionCodes
        #
        #    SalesPurchLine  salesPurchLine;
        #    boolean         countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #
        #    #VendInvoiceFaults
        #
        #    if (! MarkupTable::exist(this.ModuleType, this.MarkupCode))
        #        ok = AifFault::checkFailedLogFault(strFmt("@SYS3641", this.MarkupCode), #MiscChargeDoesNotExist);
        #
        #    if ((this.TransTableId == tableNum(PurchTable)  ||
        #         this.TransTableId == tableNum(PurchLine)   ||
        #         this.TransTableId == tableNum(PurchRFQCaseTable)  ||
        #         this.TransTableId == tableNum(PurchRFQCaseLine)   ||
        #         this.TransTableId == tableNum(PurchRFQTable)  ||
        #         this.TransTableId == tableNum(PurchRFQLine)   ||
        #         this.TransTableId == tableNum(PurchReqLine) ||
        #         this.TransTableId == tableNum(PurchReqLineHistory) ||
        #         this.TransTableId == tableNum(VendInvoiceJour) ||
        #         ((countryRegion_RU && this.TransTableId == tableNum(CustInvoiceJour)) || !countryRegion_RU) ||
        #         this.TransTableId == tableNum(VendInvoiceInfoTable) ||
        #         this.TransTableId == tableNum(VendInvoiceInfoSubTable) ||
        #         this.TransTableId == tableNum(VendInvoiceInfoLine)    ||
        #         this.TransTableId == tableNum(InventTransferLine)      ||
        #         this.TransTableId == tableNum(VendInvoiceInfoLine)))
        #    {
        #        itemMarkupAllowed = true;
        #        if (countryRegion_RU && this.markupTable().CustomPaymType_RU)
        #            ok = false;
        #    }
        #
        #    if (this.ModuleCategory == HeadingLine::Linie)
        #    {
        #        if (this.TransTableId == tableNum(MarkupTable))
        #        {
        #            itemMarkupAllowed = true;
        #        }
        #    }
        #    if (countryRegion_RU)
        #    {
        #        if (this.TransTableId == tableNum(SalesLine)     ||
        #            this.TransTableId == tableNum(PurchLine)     ||
        #            this.TransTableId == tableNum(PurchParmLine))
        #        {
        #            salesPurchLine = this.parentRecord();
        #            if (salesPurchLine.inventDim().inventProfile_RU().LockCostAdjustment)
        #            {
        #                itemMarkupAllowed = false;
        #            }
        #            if (salesPurchLine.inventDim().inventProfile_RU().LockMarkupCustVend && this.isMarkupOfTypeCustVend())
        #            {
        #                ok = checkFailed("@GLS115688");
        #            }
        #        }
        #    }
        #
        #    if (!itemMarkupAllowed)
        #    {
        #        markupTable = this.markupTable();
        #        if (markupTable.CustType == MarkupType::Item ||
        #            markupTable.VendType == MarkupType::Item)
        #        {
        #            ok = AifFault::checkFailedLogFault("@SYS16770", #MiscChargesOnItemCannotBeUsed);
        #        }
        #    }
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        if (this.markupTable().checkCustMiscCharge_BR()
        #            && (this.TransTableId == tableNum(SalesTable) ||
        #                this.TransTableId == tableNum(CustInvoiceTable) ||
        #                this.TransTableId == tableNum(SalesQuotationTable)))
        #        {
        #            ok = checkFailed("@GLS63621");
        #        }
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkMarkupCodeAdjustment
        #boolean checkMarkupCodeAdjustment(MarkupModuleType _moduleType_RU = MarkupModuleType::Vend)
        #{
        #    #ISOCountryRegionCodes
        #    boolean ok = true;
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        if (_moduleType_RU == MarkupModuleType::Cust)
        #        {
        #            if (this.markupTable().CustType != MarkupType::LedgerAccount)
        #                ok = checkFailed("@GLS114831");
        #
        #            if (this.markupTable().VendType != MarkupType::LedgerAccount)
        #                ok = checkFailed("@SYS1759");
        #
        #            return ok;
        #        }
        #    }
        #
        #    if (this.markupTable().CustType != MarkupType::Item)
        #        ok = checkFailed("@SYS12360");
        #
        #    if (this.markupTable().VendType != MarkupType::LedgerAccount)
        #        ok = checkFailed("@SYS1759");
        #
        #    return ok;
        #
        #}
      ENDSOURCE
      SOURCE #checkMarkupCodeAdjustment_W
        #boolean checkMarkupCodeAdjustment_W()
        #{
        #// Additional logic required for CustVend type. It was not implemented, so the change is commented out.
        #/*    boolean res = true;
        #
        #    if (this.markupTable().CustType != MarkupType::CustVend)
        #        res = checkFailed("@GLS114176");
        #
        #    if (this.markupTable().VendType != MarkupType::LedgerAccount)
        #        res = res && checkFailed("@SYS1759");
        #
        #    return res;*/
        #    boolean ok = true;
        #
        #    if (this.markupTable().CustType != MarkupType::Item)
        #        ok = checkFailed("@SYS12360");
        #
        #    if (this.markupTable().VendType != MarkupType::LedgerAccount)
        #        ok = checkFailed("@SYS1759");
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCodeCustVend_RU
        #public boolean checkMarkupCodeCustVend_RU()
        #{
        #    MarkupAllocation    markupAllocation;
        #
        #    markupAllocation = MarkupAllocation::newMarkupAllocation(this.parentRecord());
        #
        #    return markupAllocation.checkCustVendAllocation_RU(this);
        #}
        #
      ENDSOURCE
      SOURCE #checkMiscChargeUnallocated
        #/// <summary>
        #/// Checks if there are unallocated miscellaneous charges associated with the current <c>PurchTable</c> or <c>VendInvoiceInfoTable</c> record.
        #/// </summary>
        #/// <returns>
        #/// true if there are no unallocated miscellaneous charges associated with a <c>PurchTable</c> or <c>VendInvoiceInfoTable</c>
        #/// record or if the commitments feature is disabled; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// This method is only called if the current record is associated with a <c>PurchTable</c> or <c>VendInvoiceInfoTable</c> record and the
        #/// french regulatory requirements feature is enabled.
        #/// </remarks>
        #public boolean checkMiscChargeUnallocated()
        #{
        #    PurchTable              purchTable;
        #    VendInvoiceInfoSubTable vendInvoiceInfoSubTable;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    str                     error = "@SPS2135";
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(PurchTable) :
        #                select firstonly RecId, TableId from purchTable
        #                    where purchTable.RecId == this.TransRecId;
        #
        #                if (purchTable.existUnallocatedMiscCharge())
        #                {
        #                    warning(error);
        #                    return false;
        #                }
        #            break;
        #
        #            case tableNum(VendInvoiceInfoSubTable) :
        #                select firstonly RecId from vendInvoiceInfoSubTable
        #                    where vendInvoiceInfoSubTable.RecId == this.TransRecId
        #                join firstonly RecId, TableId from vendInvoiceInfoTable
        #                    where vendInvoiceInfoTable.ParmId == vendInvoiceInfoSubTable.ParmId &&
        #                        vendInvoiceInfoTable.TableRefId == vendInvoiceInfoSubTable.TableRefId;
        #
        #                if (vendInvoiceInfoTable.existUnallocatedMiscCharge())
        #                {
        #                    warning(error);
        #                    return false;
        #                }
        #            break;
        #
        #            case tableNum(VendInvoiceInfoTable) :
        #                select firstonly RecId, TableId from vendInvoiceInfoTable
        #                    where vendInvoiceInfoTable.RecId == this.TransRecId;
        #
        #                if (vendInvoiceInfoTable.existUnallocatedMiscCharge())
        #                {
        #                    warning(error);
        #                    return false;
        #                }
        #            break;
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkMiscMaxAmountLimit
        #/// <summary>
        #/// Validates miscellaneous charges against the maximum amount limit of the <c>MarkupCode</c> field.
        #/// </summary>
        #/// <returns>
        #/// true if miscellaneous charges are larger than the maximum amount limit; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// This method converts the miscellaneous charges into the company base currency and validates the
        #/// miscellaneous charges against the maximum amount limit.
        #/// </remarks>
        #boolean checkMiscMaxAmountLimit()
        #{
        #    boolean             ret = true;
        #    MarkupValue         miscChargesValue = this.Value;
        #    CurrencyExchangeHelper  currencyExchangeHelper = CurrencyExchangeHelper::construct();
        #    ;
        #
        #    //Fix for bug#15627
        #    if (!Ledger::accountingCurrency(CompanyInfo::find().RecId))
        #    {
        #        throw error("@SYS26296");
        #
        #    }
        #    if (this.MarkupCategory == MarkupCategory::Fixed && this.ModuleType ==
        #                                                                           MarkupModuleType::Vend
        #        )
        #    {
        #
        #        if(this.CurrencyCode != Ledger::accountingCurrency(CompanyInfo::find().RecId))
        #        {
        #            currencyExchangeHelper.parmLedgerRecId(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId));
        #            miscChargesValue = currencyExchangeHelper.calculateTransactionToAccounting(this.CurrencyCode, this.Value, true);
        #
        #
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkPostingTypeTransit_RU
        #public boolean checkPostingTypeTransit_RU()
        #{
        #    CustInvoiceJour     custInvoiceJour;
        #    CustInvoiceTrans    custInvoiceTrans;
        #    boolean             ret = true;
        #
        #    if (this.TransTableId != tableNum(CustInvoiceJour))
        #    {
        #        return true;
        #    }
        #
        #    custInvoiceJour = CustInvoiceJour::findRecId(this.TransRecId);
        #
        #    if (custInvoiceJour.custInvoiceJour_RU().InvoicePostingType_RU != SalesInvoicePostingType_RU::GoodsInRoute ||
        #        !this.markupTable().UseCustPostingTypeTransit_RU)
        #    {
        #        return true;
        #    }
        #
        #    while select custInvoiceTrans
        #        where custInvoiceTrans.SalesId              == custInvoiceJour.SalesId      &&
        #              custInvoiceTrans.InvoiceId            == custInvoiceJour.InvoiceId    &&
        #              custInvoiceTrans.InvoiceDate          == custInvoiceJour.InvoiceDate  &&
        #              custInvoiceTrans.NumberSequenceGroup  == custInvoiceJour.NumberSequenceGroup
        #    {
        #        if (custInvoiceTrans.qtyToDelivery_RU())
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return checkFailed("@GLS114834");
        #}
        #
      ENDSOURCE
      SOURCE #checkTaxCombination
        #boolean  checkTaxCombination(boolean _giveWarning = true)
        #{
        #    if (this.TaxGroup && this.TaxItemGroup && (!this.taxCombinationAllowed() || this.CurrencyCode != this.parentCurrencyCode()))
        #        if (!BrazilParameters::isEnabled()
        #            || this.MarkupClassification_BR != MarkupClassification_BR::SISCOMEX)
        #    {
        #        if (_giveWarning)
        #        {
        #            return checkFailed("@SYS22772");
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #connectedFrom
        #/// <summary>
        #/// Indicates how a <c>MarkupTrans</c> record is connected to another <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <returns>
        #/// A value that indicates the source of the connection.
        #/// </returns>
        #//BP Deviation Documented
        #[SysClientCacheDataMethodAttribute(true)]
        #display server MarkupConnectedFrom connectedFrom()
        #{
        #    Set nums = this.connectedFromSet();
        #    SetEnumerator numsEnum;
        #
        #    if(!hasFieldAccess(tableNum(VendInvoiceInfoTable), fieldNum(VendInvoiceInfoTable, Num), AccessType::View))
        #        error("@SYS57330");
        #    switch (nums.elements())
        #    {
        #    case 0:
        #        return '';
        #    case 1:
        #        numsEnum = nums.getEnumerator();
        #        numsEnum.moveNext();
        #        if (strLen(numsEnum.current()) == 0)
        #        {
        #            return "@SYS119279";
        #        }
        #        else
        #        {
        #            return numsEnum.current();
        #        }
        #    }
        #    return '*';
        #}
      ENDSOURCE
      SOURCE #connectedFromSet
        #/// <summary>
        #///    Calculates identifiers for a <c>MarkupTrans</c> record that is connected to another
        #///    <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <returns>
        #///    A set of document numbers.
        #/// </returns>
        #public server Set connectedFromSet()
        #{
        #    Set nums = new Set(Types::String);
        #
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoSubTable vendInvoiceInfoSubTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine;
        #
        #    MarkupTrans fromTrans;
        #
        #    void addNum(RefRecId _recId, Num _num)
        #    {
        #        ;
        #        if (_recId)
        #        {
        #            nums.add(_num);
        #        }
        #    }
        #    while select TransTableId, TransRecId from fromTrans
        #            where this.TableId == fromTrans.OrigTableId && this.RecId == fromTrans.OrigRecId && !fromTrans.IsDeleted
        #    {
        #        switch (fromTrans.TransTableId)
        #        {
        #        case tableNum(VendInvoiceInfoTable): // no connections from VendInvoiceInfoTable to a PO
        #            break;
        #
        #        case tableNum(VendInvoiceInfoSubTable): // VendInvoiceInfoSubTable -> PurchTable
        #            select firstonly RecId, Num from vendInvoiceInfoTable
        #                where vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #                    exists join vendInvoiceInfoSubTable
        #                        where vendInvoiceInfoSubTable.RecId == fromTrans.TransRecId &&
        #                            vendInvoiceInfoSubTable.TableRefId == vendInvoiceInfoTable.TableRefId &&
        #                            vendInvoiceInfoSubTable.ParmId == vendInvoiceInfoTable.ParmId;
        #            addNum(vendInvoiceInfoTable.RecId, vendInvoiceInfoTable.Num);
        #            break;
        #
        #        case tableNum(VendInvoiceInfoLine): // VendInvoiceInfoLine -> PurchLine
        #            select firstonly RecId, Num from vendInvoiceInfoTable
        #                 where vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #                    exists join vendInvoiceInfoLine
        #                        where vendInvoiceInfoLine.RecId == fromTrans.TransRecId &&
        #                            vendInvoiceInfoLine.TableRefId == vendInvoiceInfoTable.TableRefId &&
        #                            vendInvoiceInfoLine.ParmId == vendInvoiceInfoTable.ParmId;
        #            addNum(vendInvoiceInfoTable.RecId, vendInvoiceInfoTable.Num);
        #            break;
        #        }
        #    }
        #    return nums;
        #}
      ENDSOURCE
      SOURCE #connectedTo
        #/// <summary>
        #///    Indicates how a <c>MarkupTrans</c> record is connected to another <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <returns>
        #///    A displayable value that indicates the destination of the connection.
        #/// </returns>
        #//BP Deviation Documented
        #[SysClientCacheDataMethodAttribute(true)]
        #display MarkupConnectedTo connectedTo()
        #{
        #    MarkupTrans toTrans;
        #    str connected = '';
        #    ;
        #    if (this.OrigTableId == this.TableId)
        #    {
        #        toTrans = this.findOrig();
        #        if (toTrans)
        #        {
        #            switch (toTrans.TransTableId)
        #            {
        #            case tableNum(PurchTable):
        #                if (!hasFieldAccess(tableNum(PurchTable), fieldNum(PurchTable, PurchId),AccessType::View))
        #                    error("@SYS57330");
        #                connected = PurchTable::findRecId(toTrans.TransRecId).PurchId;
        #                break;
        #            case tableNum(PurchLine):
        #                if (!hasFieldAccess(tableNum(PurchLine), fieldNum(PurchLine, PurchId),AccessType::View))
        #                    error("@SYS57330");
        #                connected = PurchLine::findRecId(toTrans.TransRecId).PurchId;
        #                break;
        #            }
        #        }
        #    }
        #    return connected;
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #client server
        #void  convertCurrencyCode(CurrencyCode  currencyCode,
        #                          TransDate     exchRateDate = systemDateGet(),
        #                          boolean       _useFixedExchRate = false,
        #                          CustExchRate  _fixedexchRate    = 0)
        #{
        #    #ISOCountryRegionCodes
        #    if (this.isMarkupOfTypeCustVend())
        #    {
        #        if (this.MarkupCategory  != MarkupCategory::Percent)
        #        {
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #                &&  _useFixedExchRate)
        #            {
        #                this.Value = Currency::amountCur2MST(this.Value, this.CurrencyCode, _fixedexchRate, exchRateDate);
        #            }
        #            else
        #            {
        #                this.Value = Currency::curAmount2CurAmount(this.Value, this.CurrencyCode, currencyCode,exchRateDate);
        #            }
        #        }
        #
        #        this.CurrencyCode = currencyCode;
        #    }
        #}
      ENDSOURCE
      SOURCE #customsUpdatePurchLine_IN
        #/// <summary>
        #/// Gets customs update purch line.
        #/// </summary>
        #/// <param name="_transTableId">
        #/// The transaction table id.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The transaction RecId.
        #/// </param>
        #public void customsUpdatePurchLine_IN(TableId     _transTableId = this.TransTableId,
        #                               RefRecId    _transRecId   = this.TransRecId)
        #{
        #    PurchLine                       purchLineLoc;
        #    PurchLine_IN                    purchLineLoc_IN;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    ;
        #
        #    if (_transTableId == tableNum(PurchLine))
        #    {
        #        ttsbegin;
        #
        #        select forupdate purchLineLoc
        #            where purchLineLoc.TableId     == _transTableId
        #               && purchLineLoc.RecId       == _transRecId;
        #
        #        if (purchLineLoc)
        #        {
        #            purchLineLoc_IN = purchLineLoc.purchLine_IN();
        #
        #            customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(purchLineLoc.InventTransId);
        #            if (customsImportAssessableValue.Basis == CustomsAssessableValueBasis_IN::CIF)
        #            {
        #                value = 0;
        #            }
        #            else
        #            {
        #                value = CustomsImportAssessableValue_IN::getMarkupValue(purchLineLoc.TableId, purchLineLoc.RecId, purchLineLoc.InventTransId);
        #            }
        #            if (customsImportAssessableValue.RecId != 0)
        #            {
        #                landingCharges                  = (customsImportAssessableValue.Amount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #                purchLineLoc_IN.AssessableValue_IN = customsImportAssessableValue.Amount + value + landingCharges;
        #            }
        #            else
        #            {
        #                landingCharges                  = (purchLineLoc.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #                purchLineLoc_IN.AssessableValue_IN = purchLineLoc.LineAmount + value + landingCharges;
        #            }
        #
        #            purchLineLoc.packPurchLine_IN(purchLineLoc_IN);
        #        }
        #        purchLineLoc.update();
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #customsUpdateSalesLine_IN
        #/// <summary>
        #/// Gets customs update sales line.
        #/// </summary>
        #/// <param name="_transTableId">
        #/// The transaction table id.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The transaction RecId.
        #/// </param>
        #void customsUpdateSalesLine_IN(TableId     _transTableId = this.TransTableId,
        #                               RefRecId    _transRecId   = this.TransRecId)
        #{
        #    SalesLine                       salesLineLoc;
        #    SalesLine_IN                    salesLineLoc_IN;
        #    CustomsExportAssessableValue_IN customsExportAssessableValue;
        #
        #    if (_transTableId == tableNum(SalesLine))
        #    {
        #        ttsbegin;
        #        select forupdate salesLineLoc
        #            where salesLineLoc.TableId     == _transTableId
        #               && salesLineLoc.RecId       == _transRecId;
        #
        #        if (salesLineLoc)
        #        {
        #            salesLineLoc_IN = salesLineLoc.salesLine_IN();
        #            customsExportAssessableValue = CustomsExportAssessableValue_IN::findInventTransId(salesLineLoc.InventTransId);
        #            if (customsExportAssessableValue.RecId != 0)
        #            {
        #                salesLineLoc_IN.AssessableValue_IN = customsExportAssessableValue.Amount - CustomsExportAssessableValue_IN::getMarkupValue(salesLineLoc.TableId, salesLineLoc.RecId, salesLineLoc.InventTransId);
        #            }
        #            else
        #            {
        #                salesLineLoc_IN.AssessableValue_IN = salesLineLoc.LineAmount - CustomsExportAssessableValue_IN::getMarkupValue(salesLineLoc.TableId, salesLineLoc.RecId, salesLineLoc.InventTransId);
        #            }
        #            salesLineLoc.packSalesLine_IN(salesLineLoc_IN);
        #        }
        #        salesLineLoc.update();
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #defaultField
        #/// <summary>
        #/// Applies the default value for a field.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID.
        #/// </param>
        #/// <param name="_axMarkupTrans">
        #/// An instance of the <c>AxMarkupTrans</c> class used to track state; optional.
        #/// </param>
        #public void defaultField(FieldId _fieldId, AxMarkupTrans _axMarkupTrans = null)
        #{
        #    MarkupTransType markupTransType;
        #    ;
        #
        #    markupTransType = this.type(_axMarkupTrans);
        #    if (markupTransType)
        #    {
        #        markupTransType.defaultField(_fieldId);
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #defaultRow
        #/// <summary>
        #/// Applies default values to all fields.
        #/// </summary>
        #/// <param name="_axMarkupTrans">
        #/// An instance of the <c>AxMarkupTrans</c> class used to track state; optional.
        #/// </param>
        #public void defaultRow(AxMarkupTrans _axMarkupTrans = null)
        #{
        #    MarkupTransType markupTransType;
        #    ;
        #
        #    markupTransType = this.type(_axMarkupTrans);
        #    if (markupTransType)
        #    {
        #        markupTransType.defaultRow();
        #    }
        #}
        #
        #
      ENDSOURCE
      SOURCE #delete
        #/// <summary>
        #/// Deletes the <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <param name="_deleteFromPosting">
        #/// Indicates whether a posting invokes this deletion; optional.
        #/// </param>
        #public void delete(boolean _deleteFromPosting = false)
        #{
        #    InterCompanyMarkup      interCompanyMarkup;
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    PurchTable              purchTable;
        #    CustInvoiceTable        custInvoiceTable;
        #    MarkupTrans             localMarkupTrans,
        #                            oldMarkupTrans = this.orig();
        #    boolean                 rereadNeeded;
        #    #ISOCountryRegionCodes
        #
        #    if (!_deleteFromPosting && this.isEditingBlockedByVendorInvoice())
        #    {
        #        throw error("@SYS327634");
        #    }
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(PurchTable):
        #            purchTable = PurchTable::findRecId(this.TransRecId, true);
        #            break;
        #
        #        case tableNum(PurchLine):
        #            purchTable = PurchLine::findRecId(this.TransRecId).purchTable(true);
        #            break;
        #    }
        #
        #    if (((this.TransTableId == tableNum(PurchTable) || this.TransTableId == tableNum(PurchLine))
        #        && (!this.IsModified || MarkupTransHistory::exist(this) || !VersioningPurchaseOrder::newPurchaseOrder(purchTable).isLastVersionArchived()))
        #        || ((this.TransTableId == tableNum(PurchReqLine) && PurchReqLine::find(this.TransRecId).RequisitionStatus != PurchReqRequisitionStatus::Draft)))
        #    {
        #        if (purchTable)
        #        {
        #            VersioningPurchaseOrder::newPurchaseOrder(purchTable).change(null, this);
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                PurchTotalsSummaryController::onDelete(this);
        #            }
        #        }
        #        this.deleteSoft(_deleteFromPosting);
        #        return;
        #    }
        #
        #    try
        #    {
        #        ttsbegin;
        #        if (!this.InterCompanySkipUpdate
        #        &&   this.InterCompanyRefRecId)
        #        {
        #            interCompanyMarkup = InterCompanyMarkup::construct(InterCompanyMarkupAction::Delete,this);
        #            interCompanyMarkup.run();
        #            rereadNeeded = true;
        #        }
        #
        #        if(this.SourceDocumentLine)
        #        {
        #            select firstonly SourceDocumentLine, RecId from localMarkupTrans
        #                where localMarkupTrans.SourceDocumentLine == this.SourceDocumentLine &&
        #                      localMarkupTrans.RecId != this.RecId;
        #
        #            if (!localMarkupTrans)
        #            {
        #                AccountingDistributionProcessor::deleteSourceDocumentLine(this.SourceDocumentLine);
        #                AccountingDistributionProcessor::deleteAllDistributionsForSourceDocLine(this.SourceDocumentLine);
        #                rereadNeeded = true;
        #            }
        #        }
        #        if (rereadNeeded)
        #        {
        #            this.reread();//Needed as above code can update the MarupTrans record.
        #        }
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #        {
        #            this.cascadeDeleteMarkupTrans_IN();
        #        }
        #        super();
        #
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(VendInvoiceInfoSubTable):
        #                MarkupMatchingTrans::delete(this.TransTableId, this.TransRecId, this.LineNum);
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoSubTable::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                    if(vendInvoiceInfoTable)
        #                    {
        #                        TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                    }
        #                }
        #                break;
        #
        #            case tableNum(VendInvoiceInfoLine):
        #                vendInvoiceInfoLine = VendInvoiceInfoLine::findRecId(this.TransRecId);
        #                //When a row in the VendInvoiceInfoLine is deleted, it is removed before any
        #                //related entries in MarkupTrans.  This code is necessary when a specific
        #                //invoice MarkupTrans is deleted.
        #                if (vendInvoiceInfoLine)
        #                {
        #                    MarkupMatchingTrans::delete(this.TransTableId, this.TransRecId, this.LineNum);
        #                    VendInvoiceInfoSubMarkupMatchingTrans::reapplyVendSubTableMarkupTrans(vendInvoiceInfoLine.ParmId, vendInvoiceInfoLine.TableRefId, vendInvoiceInfoLine.OrigPurchId);
        #                    if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                    {
        #                        vendInvoiceInfoTable = vendInvoiceInfoLine.vendInvoiceInfoTable();
        #                        TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                    }
        #                }
        #                break;
        #
        #            case tableNum(VendInvoiceInfoTable):
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoTable::findRecId(this.TransRecId);
        #                    if (vendInvoiceInfoTable)
        #                    {
        #                        TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                    }
        #                }
        #                break;
        #
        #            case tableNum(PurchTable):
        #                this.updateBankLCImportChargeAllocation_SA();
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    purchTable.type().deleteTaxUncommitted();
        #                    TaxUncommitted::deleteForDocumentLine(this.TableId, this.RecId, true, true);
        #                }
        #                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #                {
        #                    PurchTotalsSummaryController::onDelete(this);
        #                }
        #                break;
        #
        #            case tableNum(PurchLine):
        #                this.updateBankLCImportChargeAllocation_SA();
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    purchTable.type().deleteTaxUncommitted();
        #                    TaxUncommitted::deleteForDocumentLine(this.TableId, this.RecId, true, true);
        #                }
        #                break;
        #
        #            case tableNum(CustInvoiceTable):
        #                if (!_deleteFromPosting && oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    custInvoiceTable = CustInvoiceTable::findRecId(this.TransRecId);
        #                    TaxUncommitted::deleteForDocumentHeader(custInvoiceTable.TableId,custInvoiceTable.RecId, true);
        #                }
        #                break;
        #
        #            default:
        #                if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #                {
        #                    if (!_deleteFromPosting && oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                    {
        #                        custInvoiceTable = CustInvoiceLine::find(this.TransRecId).custInvoiceTable();
        #
        #                        TaxUncommitted::deleteForDocumentHeader(custInvoiceTable.TableId,custInvoiceTable.RecId, true);
        #                    }
        #                }
        #                break;
        #        }
        #
        #        ttscommit;
        #    }
        #    catch(Exception::Error)
        #    {
        #        ttsabort;
        #        throw error("@SYS93835");
        #    }
        #}
      ENDSOURCE
      SOURCE #deleteSoft
        #/// <summary>
        #/// Marks the record as deleted.
        #/// </summary>
        #/// <param name="_deleteFromPosting">
        #/// Indicates whether a posting invokes this deletion; optional.
        #/// </param>
        #/// <remarks>
        #///     Cascade deletion of related records is also done.
        #///     Document change management is notified about the change.
        #/// </remarks>
        #private void deleteSoft(boolean _deleteFromPosting = false)
        #{
        #    PurchTable          purchTable;
        #    PurchLine           purchLine;
        #    MarkupTrans         oldMarkupTrans = this.orig();
        #    ttsbegin;
        #
        #    this.IsModified    = NoYes::Yes;
        #    this.IsDeleted     = NoYes::Yes;
        #    this.deleteSoftClearValues();
        #    this.doUpdate();
        #
        #    if (!_deleteFromPosting)
        #    {
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(PurchTable):
        #                purchTable = PurchTable::findRecId(this.TransRecId);
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    TaxUncommitted::deleteForDocumentLine(this.TableId, this.RecId, false, true);
        #                }
        #                if (!this.markupTypeItem())
        #                {
        #                    this.updateMarkupDistribution(purchTable);
        #                }
        #                break;
        #
        #            case tableNum(PurchLine):
        #                purchLine = PurchLine::findRecId(this.TransRecId);
        #                if (oldMarkupTrans.TaxGroup && oldMarkupTrans.TaxItemGroup)
        #                {
        #                    TaxUncommitted::deleteForDocumentLine(this.TableId, this.RecId, false, true);
        #                }
        #                this.updateMarkupDistribution(purchLine);
        #                break;
        #
        #            case tableNum(PurchReqTable):
        #                AccountingDistributionProcessor::deleteSourceDocumentLine(this.SourceDocumentLine);
        #                AccountingDistributionProcessor::deleteAllDistributionsForSourceDocLine(this.SourceDocumentLine);
        #                break;
        #
        #            case tableNum(PurchReqLine):
        #                AccountingDistributionProcessor::deleteSourceDocumentLine(this.SourceDocumentLine);
        #                AccountingDistributionProcessor::deleteAllDistributionsForSourceDocLine(this.SourceDocumentLine);
        #                break;
        #
        #            default:
        #                break;
        #        }
        #
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #deleteSoftClearValues
        #/// <summary>
        #/// This method clears fields so that the record does not interfere with code that is not aware of the
        #/// deleted status.
        #/// </summary>
        #private void deleteSoftClearValues()
        #{
        #    this.Value                      = 0;
        #    this.TaxAmount                  = 0;
        #    this.Posted                     = 0;
        #    this.CalculatedAmount           = 0;
        #    this.InterCompanyMarkupValue    = 0;
        #}
      ENDSOURCE
      SOURCE #editingAllowed
        #/// <summary>
        #/// Determines whether the <c>MarkupTrans</c> record can be edited.
        #/// </summary>
        #/// <param name="_hasVendorInvoice">
        #/// A Boolean value indicating whether the misc. charge is connected to a purchase order invoice
        #/// </param>
        #/// <param name="_isCallerDatasourceEditable">
        #/// A Boolean value indicating whether the calling datasource is editable
        #/// </param>
        #/// <returns>true if the <c>MarkupTrans</c> record can be edited; otherwise, false.</returns>
        #boolean editingAllowed(boolean _hasVendorInvoice, boolean _isCallerDatasourceEditable = true)
        #{
        #    boolean editing = true;
        #
        #    if (this.Voucher
        #        ||  this.InterCompanyInvoiceId
        #        ||  (this.MarkupCategory == MarkupCategory::Fixed && this.DocumentStatus == DocumentStatus::Invoice)
        #        ||  (this.MarkupCategory != MarkupCategory::Fixed && _hasVendorInvoice)
        #        ||  !this.interCompanyCreateAllowed())
        #    {
        #        editing = false;
        #    }
        #
        #    if (editing &&
        #        ( this.TransTableId == tableNum(PurchLine) || this.TransTableId == tableNum(PurchTable)
        #       || (this.SourceDocumentLine && this.TransTableId == tableNum(PurchReqLine))
        #       || this.TransTableId == tableNum(CustInvoiceTable)
        #       || (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #       || this.TransTableId == tableNum(CustConfirmTrans) || this.TransTableId == tableNum(CustConfirmJour)
        #       || this.TransTableId == tableNum(CustQuotationTrans) || this.TransTableId == tableNum(CustQuotationJour)
        #       || this.TransTableId == tableNum(CustQuotationConfirmTrans) || this.TransTableId == tableNum(CustQuotationConfirmJour)))
        #    {
        #        editing = _isCallerDatasourceEditable;
        #    }
        #
        #    return editing;
        #}
        #
      ENDSOURCE
      SOURCE #excludeFromUpdate
        #/// <summary>
        #/// Determines whether a misc. charge should be excluded from updates.
        #/// </summary>
        #/// <param name="_documentStatus">
        #/// The <c>DocumentStatus</c> for the current update or calculation.
        #/// </param>
        #/// <param name="_copyFromPurchOrder">
        #/// Is the <c>excludeFromUpdate</c> method called in relation to copying misc. charges for purchase order.
        #/// </param>
        #/// <returns>true if the misc. charge should be excluded; otherwise, false.</returns>
        #public boolean excludeFromUpdate(DocumentStatus _documentStatus, boolean _copyFromPurchOrder = false)
        #{
        #    boolean ret;
        #
        #    // Always include Keep markups.
        #    if (this.Keep)
        #    {
        #        return ret;
        #    }
        #    // Exclude markup which has reached a document status above or equal to what is currently being posted.
        #    switch (_documentStatus)
        #    {
        #        case DocumentStatus::PickingList:
        #            ret = (this.DocumentStatus == DocumentStatus::PickingList  || this.DocumentStatus == DocumentStatus::PackingSlip || this.DocumentStatus == DocumentStatus::Invoice);
        #            break;
        #
        #        case DocumentStatus::PackingSlip:
        #            ret = this.DocumentStatus == DocumentStatus::PackingSlip || this.DocumentStatus == DocumentStatus::Invoice;
        #            break;
        #
        #        default:
        #            // Purchase order markup must be included when not being copied.
        #            if (!_copyFromPurchOrder && (this.TransTableId == tableNum(PurchTable) || this.TransTableId == tableNum(PurchLine)))
        #            {
        #                ret = false;
        #            }
        #            else
        #            {
        #                ret = this.DocumentStatus == DocumentStatus::Invoice;
        #            }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #findOrig
        #/// <summary>
        #///    Finds the original <c>MarkupTrans</c> record for the current <c>MarkupTrans</c>.
        #/// </summary>
        #/// <param name="update">
        #///    A Boolean value that determines whether the record is updated; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>MarkupTrans</c> record.
        #/// </returns>
        #MarkupTrans findOrig(boolean update = false)
        #{
        #    MarkupTrans origMarkupTrans;
        #    ;
        #    if (this.OrigTableId && this.OrigRecId)
        #    {
        #        origMarkupTrans.selectForUpdate(update);
        #        select firstonly origMarkupTrans
        #               where origMarkupTrans.TableId == this.OrigTableId &&
        #                     origMarkupTrans.RecId == this.OrigRecId &&
        #                    !origMarkupTrans.IsDeleted;
        #    }
        #    return origMarkupTrans;
        #}
      ENDSOURCE
      SOURCE #fullyFactured_RU
        #//BP deviation documented
        #display FacturedFully_RU fullyFactured_RU()
        #{
        #    return abs(this.FacturedAmount_RU) == abs(this.CalculatedAmount);
        #}
      ENDSOURCE
      SOURCE #initFromBankLCImportMarkupTrans_SA
        #/// <summary>
        #/// Initializes the markup trans from <c>BankLCImportChargeAllocation_SA</c>.
        #/// </summary>
        #/// <param name="_purchTable">
        #/// The purchase table.
        #/// </param>
        #/// <param name="_bankLCImportChargeAllocation">
        #/// The record of <c>BankLCImportChargeAllocation_SA</c>.
        #/// </param>
        #public void initFromBankLCImportMarkupTrans_SA(
        #    PurchTable _purchTable,
        #    BankLCImportChargeAllocation_SA _bankLCImportChargeAllocation)
        #{
        #    this.initFromPurchTable(_purchTable);
        #    this.initValue();
        #
        #    this.MarkupCode = BankLCImportCharge_SA::find(_bankLCImportChargeAllocation.BankLCImportCharge).MarkupCode;
        #    this.MarkupCategory = MarkupCategory::Fixed;
        #    this.Value = _bankLCImportChargeAllocation.AllocatedAmountCur;
        #    this.BankLCImportChargeAllocation_SA = _bankLCImportChargeAllocation.RecId;
        #    this.TaxGroup = '';
        #    this.TaxItemGroup = '';
        #}
      ENDSOURCE
      SOURCE #initFromCaller
        #void initFromCaller(TableId callerTableId, Common callerRecord)
        #{
        #    switch (callerTableId)
        #    {
        #        case tableNum(SalesTable)           :   this.initFromSalesTable          (callerRecord as SalesTable);
        #                                                break;
        #        case tableNum(SalesLine)            :   this.initFromSalesLine           (callerRecord as SalesLine);
        #                                                break;
        #        case tableNum(SalesQuotationTable)  :   this.initFromSalesQuotationTable (callerRecord as SalesQuotationTable);
        #                                                break;
        #        case tableNum(SalesQuotationLine)   :   this.initFromSalesQuotationLine  (callerRecord as SalesQuotationLine);
        #                                                break;
        #        case tableNum(PurchTable)           :   this.initFromPurchTable          (callerRecord as PurchTable);
        #                                                break;
        #        case tableNum(PurchLine)            :   this.initFromPurchLine           (callerRecord as PurchLine);
        #                                                break;
        #        case tableNum(PurchRFQCaseTable)    :   this.initFromPurchRFQCaseTable   (callerRecord as PurchRFQCaseTable);
        #                                                break;
        #        case tableNum(PurchRFQCaseLine)     :   this.initFromPurchRFQCaseLine    (callerRecord as PurchRFQCaseLine);
        #                                                break;
        #        case tableNum(PurchRFQTable)        :   this.initFromPurchRFQTable  (callerRecord as PurchRFQTable);
        #                                                break;
        #        case tableNum(PurchRFQLine)         :   this.initFromPurchRFQLine   (callerRecord as PurchRFQLine);
        #                                                break;
        #        case tableNum(PurchReqLine)         :   this.initFromPurchReqLine        (callerRecord as PurchReqLine);
        #                                                break;
        #        case tableNum(PurchReqLineHistory)  :   this.initFromPurchReqLineHistory (callerRecord as PurchReqLineHistory);
        #                                                break;
        #        case tableNum(VendInvoiceInfoTable) :   this.initFromVendInvoiceInfoTable(callerRecord as VendInvoiceInfoTable);
        #                                                break;
        #        case tableNum(VendInvoiceInfoSubTable): this.initFromVendInvoiceInfoSubTable(callerRecord as VendInvoiceInfoSubTable);
        #                                                break;
        #        case tableNum(VendInvoiceInfoLine)  :   this.initFromVendInvoiceInfoLine (callerRecord as VendInvoiceInfoLine);
        #                                                break;
        #        case tableNum(VendInvoiceJour)      :   this.initFromVendInvoiceJour     (callerRecord as VendInvoiceJour);
        #                                                break;
        #        case tableNum(VendInvoiceTrans)     :   this.initFromVendInvoiceTrans    (callerRecord as VendInvoiceTrans);
        #                                                break;
        #        case tableNum(CustInvoiceTable)     :   this.initFromCustInvoiceTable    (callerRecord as CustInvoiceTable);
        #                                                break;
        #        case tableNum(CustInvoiceLine)      :
        #            if (SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                this.initFromCustInvoiceLine(callerRecord as CustInvoiceLine);
        #            }
        #            break;
        #
        #        case tableNum(SalesBasket)          :   this.initFromSalesBasket         (callerRecord as SalesBasket);
        #                                                break;
        #        case tableNum(SalesBasketLine)      :   this.initFromSalesBasketLine     (callerRecord as SalesBasketLine);
        #                                                break;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromCustInvoiceJour_RU
        #void initFromCustInvoiceJour_RU(CustInvoiceJour _custInvoiceJour)
        #{
        #    this.ModuleType         = MarkupModuleType::Cust;
        #    this.TransTableId       = _custInvoiceJour.TableId;
        #    this.TransRecId         = _custInvoiceJour.RecId;
        #    this.CurrencyCode       = _custInvoiceJour.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : _custInvoiceJour.TaxGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromCustInvoiceJour_W
        #void  initFromCustInvoiceJour_W(CustInvoiceJour  custInvoiceJour)
        #{
        #    this.ModuleType         = MarkupModuleType::Cust;
        #    this.TransTableId       = custInvoiceJour.TableId;
        #    this.TransRecId         = custInvoiceJour.RecId;
        #    this.CurrencyCode       = custInvoiceJour.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : custInvoiceJour.TaxGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
        #
      ENDSOURCE
      SOURCE #initFromCustInvoiceLine
        #/// <summary>
        #///    Initializes a <c>MarkupTrans</c> table buffer based on another <c>CustInvoiceLine</c> table buffer.
        #/// </summary>
        #/// <param name="_custInvoiceLine">
        #/// The <c>CustInvoiceLine</c> record from which to initialize the <c>MarkupTrans</c> record.
        #/// </param>
        #public void initFromCustInvoiceLine(CustInvoiceLine    _custInvoiceLine)
        #{
        #    CustInvoiceTable    custInvoiceTable = _custInvoiceLine.custInvoiceTable();
        #
        #    this.ModuleType         = MarkupModuleType::Cust;
        #    this.TransTableId       = _custInvoiceLine.TableId;
        #    this.TransRecId         = _custInvoiceLine.RecId;
        #    this.CurrencyCode       = custInvoiceTable.CurrencyCode;
        #
        #    if (BrazilParameters::isEnabled() && this.markupTable().checkCustMiscCharge_BR())
        #    {
        #        this.TaxGroup     = _custInvoiceLine.TaxGroup;
        #        this.TaxItemGroup = _custInvoiceLine.TaxItemGroup;
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : _custInvoiceLine.TaxGroup;
        #        if (this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = MarkupTable::find(MarkupModuleType::Cust, this.MarkupCode).TaxItemGroup;
        #        }
        #        else
        #        {
        #            this.TaxItemGroup   = '';
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #initFromCustInvoiceTable
        #void  initFromCustInvoiceTable(CustInvoiceTable  custInvoiceTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = custInvoiceTable.TableId;
        #    this.TransRecId         = custInvoiceTable.RecId;
        #    this.CurrencyCode       = custInvoiceTable.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : custInvoiceTable.TaxGroup;
        #
        #        if (this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = MarkupTable::find(
        #                                                    MarkupModuleType::Cust,
        #                                                    this.MarkupCode).TaxItemGroup;
        #        }
        #        else
        #        {
        #            this.TaxItemGroup   = '';
        #
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromCustInvoiceTrans_W
        #void  initFromCustInvoiceTrans_W(CustInvoiceTrans  custInvoiceTrans)
        #{
        #    this.ModuleType         = MarkupModuleType::Cust;
        #    this.TransTableId       = custInvoiceTrans.TableId;
        #    this.TransRecId         = custInvoiceTrans.RecId;
        #    this.CurrencyCode       = custInvoiceTrans.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : custInvoiceTrans.TaxGroup;
        #    this.TaxItemGroup       = this.TaxItemGroup ? this.TaxItemGroup : custInvoiceTrans.TaxItemGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
        #
      ENDSOURCE
      SOURCE #initFromMarkupAutoLine
        #void  initFromMarkupAutoLine(MarkupAutoLine  markupAutoLine)
        #{
        #    this.ModuleType         = markupAutoLine.ModuleType;
        #    this.MarkupCode         = markupAutoLine.MarkupCode;
        #    this.Txt                = markupAutoLine.Txt;
        #    this.Value              = markupAutoLine.Value;
        #    this.MarkupCategory     = markupAutoLine.MarkupCategory;
        #    this.ModuleCategory     = markupAutoLine.ModuleCategory;
        #    this.CurrencyCode       = markupAutoLine.MarkupCurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : markupAutoLine.TaxGroup;
        #        this.TaxItemGroup       = this.TaxItemGroup ? this.TaxItemGroup : markupAutoLine.TaxItemGroup;
        #        if (!this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = '';
        #        }
        #
        #    }
        #    this.Keep               = markupAutoLine.Keep;
        #    if (LedgerParameters::isMiscellaneouscharges_IN())
        #    {
        #        this.NotionalCharges_IN     = markupAutoLine.NotionalCharges_IN;
        #        this.NotionalPct_IN         = markupAutoLine.NotionalPct_IN;
        #    }
        #
        #    this.FromAmount = markupAutoLine.FromAmount;
        #    this.ToAmount = markupAutoLine.ToAmount;
        #
        #    if (markupAutoLine.FromAmount || markupAutoLine.ToAmount)
        #    {
        #        this.IsTieredCharge = NoYes::Yes;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromMarkupTable
        #void  initFromMarkupTable(MarkupTable  markupTable)
        #{
        #    this.ModuleType         = markupTable.ModuleType;
        #    this.MarkupCode         = markupTable.MarkupCode;
        #    this.Txt                = markupTable.Txt;
        #
        #    if (TaxParameters::checkTaxParameters_IN() && !MarkupTable_IN::isAllowTax(markupTable.ModuleType, markupTable.MarkupCode))
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        if (this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup       = markupTable.TaxItemGroup;
        #        }
        #        else
        #        {
        #            this.TaxItemGroup   = '';
        #
        #    }
        #    }
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.MarkupClassification_BR   = markupTable.MarkupClassification_BR;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromMarkupTrans
        #void  initFromMarkupTrans(MarkupTrans  source)
        #{
        #    this.ModuleType         = source.ModuleType;
        #    this.MarkupCategory     = source.MarkupCategory;
        #    this.LineNum            = source.LineNum;
        #    this.Txt                = source.Txt;
        #    this.MarkupCode         = source.MarkupCode;
        #    this.CurrencyCode       = source.CurrencyCode;
        #    this.IsAutoCharge       = source.IsAutoCharge;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : source.TaxGroup;
        #        this.TaxItemGroup       = this.TaxItemGroup ? this.TaxItemGroup : source.TaxItemGroup;
        #        if (!this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = '';
        #        }
        #
        #    }
        #    this.Keep               = source.Keep;
        #    this.BankLCImportChargeAllocation_SA = source.BankLCImportChargeAllocation_SA;
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.MarkupClassification_BR = source.MarkupClassification_BR;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromMarkupTransHistory
        #/// <summary>
        #/// Initializes the history record based on a <c>MarkupTransHistory</c> record.
        #/// </summary>
        #/// <param name="_markupTransHistory">
        #/// The <c>MarkupTransHistory</c> record to use for initialization.
        #/// </param>
        #public void initFromMarkupTransHistory(MarkupTransHistory _markupTransHistory)
        #{
        #    MarkupTransMap markupTransMap;
        #
        #    markupTransMap.data(_markupTransHistory.data());
        #    this.data(markupTransMap.data());
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine
        #/// <summary>
        #/// Initializes the <c>MarkupTrans</c> table with data from the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchLine">
        #/// The record to copy data from.
        #/// </param>
        #void  initFromPurchLine(PurchLine purchLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchLine.TableId;
        #    this.TransRecId         = purchLine.RecId;
        #    this.CurrencyCode       = purchLine.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : purchLine.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = '';
        #        }
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchReqLine
        #void initFromPurchReqLine(PurchReqLine _purchReqLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = _purchReqLine.TableId;
        #    this.TransRecId         = _purchReqLine.RecId;
        #    this.CurrencyCode       = _purchReqLine.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : _purchReqLine.TaxGroup;
        #
        #    if (!this.taxCombinationAllowed())
        #    {
        #        this.TaxItemGroup   = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchReqLineHistory
        #void initFromPurchReqLineHistory(PurchReqLineHistory _purchReqLineHistory)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = _purchReqLineHistory.TableId;
        #    this.TransRecId         = _purchReqLineHistory.RecId;
        #    this.CurrencyCode       = _purchReqLineHistory.CurrencyCode;
        #
        #    if (!this.taxCombinationAllowed())
        #    {
        #        this.TaxItemGroup   = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQCaseLine
        #void  initFromPurchRFQCaseLine(PurchRFQCaseLine purchRFQCaseLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchRFQCaseLine.TableId;
        #    this.TransRecId         = purchRFQCaseLine.RecId;
        #    this.CurrencyCode       = purchRFQCaseLine.CurrencyCode;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQCaseTable
        #void  initFromPurchRFQCaseTable(PurchRFQCaseTable purchRFQCaseTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchRFQCaseTable.TableId;
        #    this.TransRecId         = purchRFQCaseTable.RecId;
        #    this.CurrencyCode       = purchRFQCaseTable.CurrencyCode;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
        #
      ENDSOURCE
      SOURCE #initFromPurchRFQLine
        #void  initFromPurchRFQLine(PurchRFQLine purchRFQLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchRFQLine.TableId;
        #    this.TransRecId         = purchRFQLine.RecId;
        #    this.CurrencyCode       = purchRFQLine.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : purchRFQLine.TaxGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQTable
        #void  initFromPurchRFQTable(PurchRFQTable purchRFQTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchRFQTable.TableId;
        #    this.TransRecId         = purchRFQTable.RecId;
        #    this.CurrencyCode       = purchRFQTable.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : purchRFQTable.TaxGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #void  initFromPurchTable(PurchTable purchTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = purchTable.TableId;
        #    this.TransRecId         = purchTable.RecId;
        #    this.CurrencyCode       = purchTable.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : purchTable.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = '';
        #        }
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesBasket
        #void  initFromSalesBasket(SalesBasket  salesBasket)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesBasket.TableId;
        #    this.TransRecId         = salesBasket.RecId;
        #    this.CurrencyCode       = salesBasket.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : salesBasket.taxGroup();
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesBasketLine
        #void  initFromSalesBasketLine(SalesBasketLine  salesBasketLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesBasketLine.TableId;
        #    this.TransRecId         = salesBasketLine.RecId;
        #    this.CurrencyCode       = salesBasketLine.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : salesBasketLine.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesLine
        #void  initFromSalesLine(SalesLine  salesLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesLine.TableId;
        #    this.TransRecId         = salesLine.RecId;
        #    this.CurrencyCode       = salesLine.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN() && !MarkupTable_IN::isAllowTax(MarkupModuleType::Cust, this.MarkupCode))
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : salesLine.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #    }
        #    if (salesLine.SalesType == SalesType::Subscription)
        #        this.Keep           = NoYes::Yes;
        #
        #    if (BrazilParameters::isEnabled()
        #            && this.markupTable().checkCustMiscCharge_BR())
        #    {
        #        this.TaxItemGroup = this.TaxItemGroup ? this.TaxItemGroup : salesLine.TaxItemGroup;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesQuotationLine
        #void  initFromSalesQuotationLine(SalesQuotationLine  salesQuotationLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesQuotationLine.TableId;
        #    this.TransRecId         = salesQuotationLine.RecId;
        #    this.CurrencyCode       = salesQuotationLine.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN() && !MarkupTable_IN::isAllowTax(MarkupModuleType::Cust, this.MarkupCode))
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : salesQuotationLine.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesQuotationTable
        #void  initFromSalesQuotationTable(SalesQuotationTable   salesQuotationTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesQuotationTable.TableId;
        #    this.TransRecId         = salesQuotationTable.RecId;
        #    this.CurrencyCode       = salesQuotationTable.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN() && !MarkupTable_IN::isAllowTax(MarkupModuleType::Cust, this.MarkupCode))
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : salesQuotationTable.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesTable
        #void  initFromSalesTable(SalesTable  salesTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Cust;
        #    this.TransTableId       = salesTable.TableId;
        #    this.TransRecId         = salesTable.RecId;
        #    this.CurrencyCode       = salesTable.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN() && !MarkupTable_IN::isAllowTax(MarkupModuleType::Cust, this.MarkupCode))
        #    {
        #        this.TaxGroup = '';
        #        this.TaxItemGroup = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : salesTable.TaxGroup;
        #
        #        if (this.taxCombinationAllowed())
        #        {
        #            this.TaxItemGroup   = MarkupTable::find(
        #                                                    MarkupModuleType::Cust
        #                                                    ,this.MarkupCode).TaxItemGroup;
        #        }
        #        else
        #        {
        #            this.TaxItemGroup   = '';
        #
        #        }
        #    }
        #
        #    if (salesTable.SalesType == SalesType::Subscription)
        #    {
        #        this.Keep           = NoYes::Yes;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceInfoLine
        #/// <summary>
        #///    Initializes a <c>MarkupTrans</c> table record from an associated <c>VendInvoiceInfoLine</c> table
        #///    record.
        #/// </summary>
        #/// <param name="_vendInvoiceInfoLine">
        #///    A <c>VendInvoiceInfoLine</c> table record.
        #/// </param>
        #public void initFromVendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = _vendInvoiceInfoLine.TableId;
        #    this.TransRecId         = _vendInvoiceInfoLine.RecId;
        #    this.CurrencyCode       = _vendInvoiceInfoLine.CurrencyCode;
        #    this.TaxGroup           = this.TaxGroup ? this.TaxGroup : _vendInvoiceInfoLine.TaxGroup;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceInfoSubTable
        #/// <summary>
        #///    Initializes a <c>MarkupTrans</c> table record from an associated <c>VendInvoiceInfoSubTable</c>
        #///    table record.
        #/// </summary>
        #/// <param name="_vendInvoiceInfoSubTable">
        #///    A <c>VendInvoiceInfoSubTable</c> table record.
        #/// </param>
        #public void initFromVendInvoiceInfoSubTable(VendInvoiceInfoSubTable _vendInvoiceInfoSubTable)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    vendInvoiceInfoTable = _vendInvoiceInfoSubTable.vendInvoiceInfoTable();
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = _vendInvoiceInfoSubTable.TableId;
        #    this.TransRecId         = _vendInvoiceInfoSubTable.RecId;
        #    this.CurrencyCode       = vendInvoiceInfoTable.CurrencyCode;
        #
        #    if (_vendInvoiceInfoSubTable.isNonPO())
        #    {
        #        this.TaxGroup       = this.TaxGroup ? this.TaxGroup : vendInvoiceInfoTable.TaxGroup;
        #    }
        #    else
        #    {
        #        this.TaxGroup       = this.TaxGroup ? this.TaxGroup : _vendInvoiceInfoSubTable.purchTable().TaxGroup;
        #    }
        #
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceInfoTable
        #/// <summary>
        #///    Initializes a <c>MarkupTrans</c> table record from an associated <c>VendInvoiceInfoTable</c> table
        #///    record.
        #/// </summary>
        #/// <param name="_vendInvoiceInfoTable">
        #///    A <c>VendInvoiceInfoTable</c> table record.
        #/// </param>
        #public void initFromVendInvoiceInfoTable(VendInvoiceInfoTable _vendInvoiceInfoTable)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = _vendInvoiceInfoTable.TableId;
        #    this.TransRecId         = _vendInvoiceInfoTable.RecId;
        #    this.CurrencyCode       = _vendInvoiceInfoTable.CurrencyCode;
        #
        #    if (_vendInvoiceInfoTable.isNonPO())
        #    {
        #        this.TaxGroup       = this.TaxGroup ? this.TaxGroup : _vendInvoiceInfoTable.TaxGroup;
        #    }
        #    else
        #    {
        #        this.TaxGroup       = this.TaxGroup ? this.TaxGroup : _vendInvoiceInfoTable.purchTable().TaxGroup;
        #    }
        #
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceJour
        #void  initFromVendInvoiceJour(VendInvoiceJour  vendInvoiceJour)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = vendInvoiceJour.TableId;
        #    this.TransRecId         = vendInvoiceJour.RecId;
        #    this.CurrencyCode       = vendInvoiceJour.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup ? this.TaxGroup : vendInvoiceJour.TaxGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans
        #void  initFromVendInvoiceTrans(VendInvoiceTrans  vendInvoiceTrans)
        #{
        #    this.ModuleType         =
        #                              MarkupModuleType::Vend;
        #    this.TransTableId       = vendInvoiceTrans.TableId;
        #    this.TransRecId         = vendInvoiceTrans.RecId;
        #    this.CurrencyCode       = vendInvoiceTrans.CurrencyCode;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.TaxGroup       = '';
        #        this.TaxItemGroup   = '';
        #    }
        #    else
        #    {
        #        this.TaxGroup           = this.TaxGroup     ? this.TaxGroup     : vendInvoiceTrans.TaxGroup;
        #        this.TaxItemGroup       = this.TaxItemGroup ? this.TaxItemGroup : vendInvoiceTrans.TaxItemGroup;
        #        if (!this.taxCombinationAllowed())
        #            this.TaxItemGroup   = '';
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #initModuleType
        #/// <summary>
        #/// Determines markup module type based on a table ID.
        #/// </summary>
        #/// <param name="callerTableId">
        #/// A table id to determine the module type for.
        #/// </param>
        #/// <returns>
        #/// Markup module type.
        #/// </returns>
        #/// <remarks>
        #/// The <c>ModuleInventCustVend</c> enum was replaced with a more specific enum for markup functionality, use the <c>MarkupModuleType</c> enum.
        #/// </remarks>
        #MarkupModuleType
        #    initModuleType(TableId callerTableId)
        #{
        #    #ISOCountryRegionCodes
        #    boolean                     countryRegion_RU    = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    boolean                     countryRegion_IN    = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        #
        #    switch(callerTableId)
        #    {
        #        case tableNum(CustInvoiceJour)      :
        #        case tableNum(CustInvoiceTrans)     :
        #            if (countryRegion_RU)
        #            {
        #                return MarkupModuleType::Cust;
        #            }
        #            break;
        #
        #        case tableNum(VendPackingSlipJour)  :
        #        case tableNum(VendPackingSlipTrans) :
        #            if(countryRegion_RU)
        #            {
        #                return MarkupModuleType::Vend;
        #            }
        #            break;
        #        case tableNum(CustomsExportAssessableValue_IN)      :
        #        case tableNum(CustomsExportOrderLine_IN)            :
        #            if (countryRegion_IN)
        #            {
        #                return MarkupModuleType::Cust;
        #            }
        #            break;
        #        case tableNum(WHSLoadTable)         :
        #        case tableNum(WHSLoadLine)          :
        #        case tableNum(SalesTable)           :
        #        case tableNum(SalesLine)            :
        #        case tableNum(CustInvoiceTable)     :
        #        case tableNum(SalesBasket)          :
        #        case tableNum(SalesQuotationTable)  :
        #        case tableNum(SalesQuotationLine)   :
        #        case tableNum(SalesBasketLine)      :
        #                                                return MarkupModuleType::Cust;
        #
        #        case tableNum(PurchTable)           :
        #        case tableNum(PurchLine)            :
        #        case tableNum(PurchRFQCaseTable)    :
        #        case tableNum(PurchRFQCaseLine)     :
        #        case tableNum(PurchRFQTable)        :
        #        case tableNum(PurchRFQLine)         :
        #        case tableNum(PurchReqLine)         :
        #        case tableNum(PurchReqLineHistory)         :
        #        case tableNum(VendInvoiceInfoTable) :
        #        case tableNum(VendInvoiceInfoSubTable):
        #        case tableNum(VendInvoiceInfoLine)  :
        #        case tableNum(VendInvoiceJour)      :
        #        case tableNum(VendInvoiceTrans)     :
        #                                                return MarkupModuleType::Vend;
        #
        #        default:
        #            if (callerTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                return MarkupModuleType::Cust;
        #            }
        #    }
        #
        #    return MarkupModuleType::Invent;
        #}
      ENDSOURCE
      SOURCE #initValue
        #void  initValue()
        #{
        #    super();
        #
        #    this.CurrencyCode   = CompanyInfo::standardCurrency();
        #    this.LineNum        = MarkupTrans::lastLineNum(this.TransTableId, this.TransRecId) + 1;
        #}
      ENDSOURCE
      SOURCE #insert
        #/// <summary>
        #/// Creates the <c>SourceDocumentLine</c> record.
        #/// </summary>
        #/// <param name="_targetAccountingStatus">
        #/// The desired <c>SourceDocumentLineAccountingStatus</c>; optional.
        #/// </param>
        #public void insert(SourceDocumentLineAccountingStatus _targetAccountingStatus = SourceDocumentLineAccountingStatus::None)
        #{
        #    InterCompanyMarkup      interCompanyMarkup;
        #    PurchTable              purchTable;
        #    SalesTable              salesTable;
        #    CustInvoiceJour         custInvoiceJour;
        #    CustInvoiceTrans        custInvoiceTrans;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    MarkupTrans             intercompanyMarkupTrans;
        #    boolean                 isInterCompanyOrder;
        #
        #    #ISOCountryRegionCodes
        #
        #    if (this.isEditingBlockedByVendorInvoice())
        #    {
        #        throw error("@SYS327634");
        #    }
        #
        #    try
        #    {
        #        ttsbegin;
        #
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(PurchTable) :
        #                purchTable = PurchTable::findRecId(this.TransRecId, true);
        #                break;
        #            case tableNum(PurchLine) :
        #                purchTable = PurchLine::findRecId(this.TransRecId).purchTable(true);
        #                break;
        #        }
        #
        #        if (purchTable)
        #        {
        #            VersioningPurchaseOrder::newPurchaseOrder(purchTable).change(this, null);
        #        }
        #
        #        this.IsModified = NoYes::Yes;
        #
        #        super();
        #
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(PurchTable) :
        #            case tableNum(PurchLine) :
        #            case tableNum(CustInvoiceTable):
        #            case tableNum(PurchReqLine) :
        #                SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this, true);
        #                break;
        #            case tableNum(VendInvoiceInfoTable):
        #            case tableNum(VendInvoiceInfoLine):
        #            case tableNum(VendInvoiceInfoSubTable):
        #                if (prmisDefault(_targetAccountingStatus))
        #                {
        #                    SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this, true);
        #                }
        #                else
        #                {
        #                    SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this, true, _targetAccountingStatus);
        #                }
        #                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && TaxParameters::checkTaxParameters_IN())
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoLine::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                }
        #
        #                break;
        #            // Do not clear the sourceDocumentLine reference for journals
        #            // If the value is set the journal is from CustInvoiceTable which we want to preserve
        #            case tableNum(CustInvoiceJour):
        #            case tableNum(VendInvoiceJour):
        #            case tableNum(VendInvoiceTrans):
        #                break;
        #            default:
        #                if (SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #                {
        #                    if (this.TransTableId == tableNum(CustInvoiceLine))
        #                    {
        #                        SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this, true);
        #                    }
        #                }
        #                else
        #                {
        #                    this.SourceDocumentLine = 0;
        #                }
        #                break;
        #        }
        #
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(CustInvoiceJour) :
        #                custInvoiceJour = CustInvoiceJour::findRecId(this.TransRecId);
        #                isInterCompanyOrder = (custInvoiceJour.InterCompanyCompanyId != '');
        #                break;
        #
        #            case tableNum(CustInvoiceTrans) :
        #                if (!this.InterCompanySkipUpdate)
        #                {
        #                    // This can be relatively expensive, so only do when intercompany data will be checked
        #                    custInvoiceTrans = CustInvoiceTrans::findRecId(this.TransRecId);
        #                    isInterCompanyOrder = custInvoiceTrans.isInterCompany();
        #                }
        #                break;
        #
        #            case tableNum(PurchTable) :
        #                isInterCompanyOrder = purchTable.isInterCompanyOrder();
        #                if (!this.markupTypeItem()) // markups of item type need to be allocated down to the purchline.
        #                {
        #                    if (purchTable.DocumentState == VersioningDocumentState::Confirmed)
        #                    {
        #                        //must create distributions for a change event
        #                        this.updateMarkupDistribution(purchTable);
        #                    }
        #                }
        #                if (this.TaxGroup && this.TaxItemGroup)
        #                {
        #                    purchTable.type().deleteTaxUncommitted();
        #                }
        #                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #                {
        #                    PurchTotalsSummaryController::onInsert(this);
        #                }
        #                break;
        #
        #            case tableNum(PurchLine) :
        #                isInterCompanyOrder = purchTable.isInterCompanyOrder();
        #                if (purchTable.DocumentState == VersioningDocumentState::Confirmed)
        #                {
        #                    //must create distributions for a change event
        #                    this.updateMarkupDistribution(purchTable);
        #                }
        #                if (this.TaxGroup && this.TaxItemGroup)
        #                {
        #                    purchTable.type().deleteTaxUncommitted();
        #                }
        #                break;
        #
        #            case tableNum(VendInvoiceInfoTable) :
        #                if (this.TaxGroup && this.TaxItemGroup)
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoTable::findRecId(this.TransRecId);
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                }
        #                break;
        #
        #            case tableNum(VendInvoiceInfoLine) :
        #                if (this.TaxGroup && this.TaxItemGroup)
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoLine::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                }
        #                break;
        #
        #            case tableNum(VendInvoiceInfoSubTable) :
        #                if (this.TaxGroup && this.TaxItemGroup)
        #                {
        #                    vendInvoiceInfoTable = VendInvoiceInfoSubTable::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                }
        #                break;
        #
        #            case tableNum(SalesTable) :
        #                salesTable = SalesTable::findRecId(this.TransRecId);
        #                isInterCompanyOrder = salesTable.isInterCompanyOrder();
        #                break;
        #
        #            case tableNum(SalesLine) :
        #                salesTable = SalesLine::findRecId(this.TransRecId).salesTable();
        #                isInterCompanyOrder = salesTable.isInterCompanyOrder();
        #                break;
        #
        #            default:
        #                break;
        #        }
        #
        #        if (isInterCompanyOrder && !this.InterCompanySkipUpdate)
        #        {
        #            interCompanyMarkup = InterCompanyMarkup::construct(InterCompanyMarkupAction::Calc,this);
        #            interCompanyMarkup.run(true);
        #            intercompanyMarkupTrans = interCompanyMarkup.parmMarkupTrans();
        #            intercompanyMarkupTrans.InterCompanySkipUpdate = false;
        #            intercompanyMarkupTrans.doUpdate();
        #        }
        #
        #        ttscommit;
        #    }
        #    catch(Exception::Error)
        #    {
        #        this.SourceDocumentLine = 0;
        #        ttsabort;
        #        throw error("@SYS93835");
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyCreateAllowed
        #/*
        #    AOSRunMode::Called
        #*/
        #boolean  interCompanyCreateAllowed()
        #{
        #    boolean     create = true;
        #    PurchTable  purchTable;
        #    PurchLine   purchLine;
        #    SalesTable  salesTable;
        #    SalesLine   salesLine;
        #
        #    switch (this.TransTableId)
        #    {
        #        case(tableNum(PurchTable)):
        #            purchTable = this.parentRecord() as PurchTable;
        #            if (purchTable.InterCompanyOrder
        #            &&  purchTable.InterCompanySalesId
        #            &&  purchTable.interCompanyEndpointActionPolicy())
        #            {
        #                create = purchTable.interCompanyEndpointActionPolicy().EditPrice;
        #            }
        #            break;
        #
        #        case(tableNum(PurchLine)):
        #            purchLine = this.parentRecord() as PurchLine;
        #            if (purchLine.purchTable().InterCompanyOrder
        #            &&  purchLine.InterCompanyInventTransId
        #            &&  purchLine.purchTable().interCompanyEndpointActionPolicy())
        #            {
        #                create = purchLine.purchTable().interCompanyEndpointActionPolicy().EditPrice;
        #            }
        #            break;
        #
        #        case(tableNum(SalesTable)):
        #            salesTable = this.parentRecord() as SalesTable;
        #            if (salesTable.InterCompanyOrder
        #            &&  salesTable.InterCompanyPurchId
        #            &&  salesTable.interCompanyEndpointActionPolicy()
        #               )
        #            {
        #                create = salesTable.interCompanyEndpointActionPolicy().EditPrice;
        #            }
        #            break;
        #
        #        case(tableNum(SalesLine)):
        #            salesLine = this.parentRecord() as SalesLine;
        #            if (salesLine.salesTable().InterCompanyOrder
        #            &&  salesLine.InterCompanyInventTransId
        #            &&  salesLine.salesTable().interCompanyEndpointActionPolicy())
        #            {
        #                create = salesLine.salesTable().interCompanyEndpointActionPolicy().EditPrice;
        #            }
        #            break;
        #    }
        #    return create;
        #}
        #
      ENDSOURCE
      SOURCE #inventMovement
        #public InventMovement inventMovement()
        #{
        #    InventMovement  inventMovement;
        #
        #    CustQuotationTrans  custQuotationTrans;
        #    CustConfirmTrans    custConfirmTrans;
        #    CustInvoiceTrans    custInvoiceTrans;
        #    VendInvoiceTrans    vendInvoiceTrans;
        #    ;
        #    inventMovement = InventMovement::constructNoThrow(this.parentRecord());
        #
        #    if (inventMovement)
        #        return inventMovement;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(CustQuotationTrans)   :
        #            custQuotationTrans = this.parentRecord() as CustQuotationTrans;
        #            inventMovement  = InventMovement::constructNoThrow(custQuotationTrans.salesLine());
        #            break;
        #        case tableNum(CustConfirmTrans)     :
        #            custConfirmTrans = this.parentRecord() as CustConfirmTrans;
        #            inventMovement  = InventMovement::constructNoThrow(custConfirmTrans.salesLine());
        #            break;
        #        case tableNum(CustInvoiceTrans)     :
        #            custInvoiceTrans = this.parentRecord() as CustInvoiceTrans;
        #            inventMovement  = InventMovement::constructNoThrow(custInvoiceTrans.salesLine());
        #            break;
        #        case tableNum(VendInvoiceTrans)     :
        #            vendInvoiceTrans = this.parentRecord() as VendInvoiceTrans;
        #            inventMovement  = InventMovement::constructNoThrow(vendInvoiceTrans.purchLine());
        #            break;
        #    }
        #
        #    return inventMovement;
        #}
      ENDSOURCE
      SOURCE #inventProfileType_RU
        #InventProfileType_RU inventProfileType_RU()
        #{
        #    InventProfileType_RU    inventProfileType;
        #    PurchLine               purchLine;
        #    PurchTable              purchTable;
        #    VendInvoiceJour         vendInvoiceJour;
        #    VendInvoiceTrans        vendInvoiceTrans;
        #    SalesLine               salesLine;
        #    SalesTable              salesTable;
        #    CustInvoiceJour         custInvoiceJour;
        #    CustInvoiceTrans        custInvoiceTrans;
        #
        #    switch(this.TransTableId)
        #    {
        #        case tableNum(PurchLine):
        #            purchLine = this.parentRecord();
        #            inventProfileType = purchLine.inventDim().inventProfile_RU().InventProfileType;
        #            break;
        #        case tableNum(PurchTable):
        #            purchTable = this.parentRecord();
        #            inventProfileType = purchTable.purchTable_RU().InventProfileType_RU;
        #            break;
        #        case tableNum(VendInvoiceTrans):
        #            vendInvoiceTrans = this.parentRecord();
        #            inventProfileType = vendInvoiceTrans.inventDim().inventProfile_RU().InventProfileType;
        #            break;
        #        case tableNum(VendInvoiceJour):
        #            vendInvoiceJour = this.parentRecord();
        #            inventProfileType = vendInvoiceJour.InventProfileType_RU;
        #            break;
        #        case tableNum(SalesLine):
        #            salesLine = this.parentRecord();
        #            inventProfileType = salesLine.inventDim().inventProfile_RU().InventProfileType;
        #            break;
        #        case tableNum(SalesTable):
        #            salesTable = this.parentRecord();
        #            inventProfileType = salesTable.salesTable_RU().InventProfileType_RU;
        #            break;
        #        case tableNum(CustInvoiceTrans):
        #            custInvoiceTrans = this.parentRecord();
        #            inventProfileType = custInvoiceTrans.inventDim().inventProfile_RU().InventProfileType;
        #            break;
        #        case tableNum(CustInvoiceJour):
        #            custInvoiceJour = this.parentRecord();
        #            inventProfileType = custInvoiceJour.custInvoiceJour_RU().InventProfileType_RU;
        #            break;
        #    }
        #
        #    if (inventProfileType == InventProfileType_RU::NotSpecified)
        #    {
        #        inventProfileType = InventProfileType_RU::General;
        #    }
        #
        #    return inventProfileType;
        #}
        #
      ENDSOURCE
      SOURCE #isDistributionUpdateRequired
        #private boolean isDistributionUpdateRequired(MarkupTrans _oldMarkUpTrans)
        #{
        #    return (this.Value != _oldMarkUpTrans.Value ||
        #            this.CurrencyCode != _oldMarkUpTrans.CurrencyCode ||
        #            this.MarkupCategory != _oldMarkUpTrans.MarkupCategory);
        #}
      ENDSOURCE
      SOURCE #isEditingBlockedByVendorInvoice
        #/// <summary>
        #/// Checks if editing of the charge record is blocked by an association to an invoice matched purchase order.
        #/// </summary>
        #/// <returns>
        #/// true if editing is blocked by an association to an invoice matched purchase order.
        #/// </returns>
        #public boolean isEditingBlockedByVendorInvoice()
        #{
        #    if (this.MarkupCategory != MarkupCategory::Fixed)
        #    {
        #        return MarkupTrans::hasVendorInvoice(this.TransTableId, this.TransRecId);
        #    }
        #
        #    return false;
        #}
        #
      ENDSOURCE
      SOURCE #isInclTax
        #/// <summary>
        #///    Determines whether taxes are included in the miscellaneous charge.
        #/// </summary>
        #/// <param name="_markupTrans">
        #///    The <c>MarkupTrans</c> to test.
        #/// </param>
        #/// <returns>
        #///    true if the miscellaneous charge markup category is not percent or intercompany percent.
        #/// </returns>
        #/// <remarks>
        #///    A miscellaneous charge with a category of percent or intercompany percent never includes tax in the
        #///    miscellaneous charge.
        #/// </remarks>
        #public boolean isInclTax(MarkupTrans _markupTrans)
        #{
        #    ;
        #
        #    if (Markup::isPercentageMarkup(_markupTrans))
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #
        #}
      ENDSOURCE
      SOURCE #isMarkupOfTypeCustVend
        #boolean  isMarkupOfTypeCustVend()
        #{
        #    return this.markupTable().isMarkupOfTypeCustVend();
        #}
      ENDSOURCE
      SOURCE #isMarkupSalesRelated
        #boolean isMarkupSalesRelated()
        #{
        #    return MarkupTrans::isMarkupTransSalesRelated(this.TransTableId);
        #}
        #
      ENDSOURCE
      SOURCE #isPriceInclTax_IN
        #/// <summary>
        #/// Check whether Pric.incl tax is marked for particular Item group of this miscellaneous charge.
        #/// </summary>
        #/// <returns>
        #/// Returns true or false based on Pric.incl tax is marked for particular Item group of this miscellaneous charge.
        #/// </returns>
        #public boolean isPriceInclTax_IN()
        #{
        #    return MarkupTable_IN::isAllowTax(this.ModuleType, this.MarkupCode)
        #        && FormulaDesigner_IN::isPriceInclTaxOnLineAmount(this.TaxItemGroup);
        #}
      ENDSOURCE
      SOURCE #isSiscomex_BR
        #/// <summary>
        #/// Verifies if the charge is SISCOMEX.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the carge is SISCOMEX; otherwise, false.
        #/// </returns>
        #
        #public boolean isSiscomex_BR()
        #{
        #    MarkupTable markupTable;
        #
        #    markupTable = MarkupTable::find(this.ModuleType, this.MarkupCode);
        #
        #    if (markupTable.MarkupClassification_BR == MarkupClassification_BR::SISCOMEX)
        #    {
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #ledgerAccountAmount
        #AmountCur ledgerAccountAmount(AmountCur _amountCur)
        #{
        #    AmountCur ledgerAccountAmount;
        #
        #    if (this.markupTable().CustType == MarkupType::LedgerAccount)
        #    {
        #        ledgerAccountAmount += _amountCur;
        #    }
        #
        #    if (this.markupTable().VendType == MarkupType::LedgerAccount)
        #    {
        #        ledgerAccountAmount -= _amountCur;
        #    }
        #
        #    return ledgerAccountAmount;
        #}
      ENDSOURCE
      SOURCE #markupCustTypeItem
        #/// <summary>
        #/// Verifies whether the <c>CustType</c> field in the <c>MarkupTable</c> table buffer has a value set
        #/// to Item.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>CustType</c> field has a value of Item; otherwise, false.
        #/// </returns>
        #public boolean markupCustTypeItem()
        #{
        #    boolean     ret = false;
        #
        #    if (this.markupTable().CustType == MarkupType::Item)
        #    {
        #        ret = true;
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #markupTable
        #MarkupTable  markupTable(boolean  _forUpdate = false)
        #{
        #    MarkupTable markupTable;
        #    ;
        #    if (
        #        this.company()
        #        != curext()
        #    )
        #    {
        #        changecompany(
        #                      this.company()
        #                      )
        #        {
        #            markupTable = MarkupTable::find(this.ModuleType, this.MarkupCode, _forUpdate);
        #        }
        #    }
        #    else
        #        markupTable = MarkupTable::find(this.ModuleType, this.MarkupCode, _forUpdate);
        #
        #    return markupTable;
        #}
      ENDSOURCE
      SOURCE #markupTrans_IN
        #/// <summary>
        #/// Gets the <c>MarkupTrans_IN</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>MarkupTrans_IN</c> record associated with the current record.
        #/// </returns>
        #public MarkupTrans_IN markupTrans_IN()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(MarkupTrans_IN));
        #}
      ENDSOURCE
      SOURCE #markupTypeCustVend_W
        #boolean  markupTypeCustVend_W()
        #{
        #    return this.markupTable().markupTypeCustVend_W();
        #}
      ENDSOURCE
      SOURCE #markupTypeItem
        #boolean  markupTypeItem()
        #{
        #    return this.markupTable().markupTypeItem();
        #}
      ENDSOURCE
      SOURCE #mcrDisplayLineItem
        #/// <summary>
        #/// Displays the item id on a sales order line record.
        #/// </summary>
        #/// <returns>
        #/// The item id on a sales order line if the table id points to a sales order line record; Otherwise, blank.
        #/// </returns>
        #display ItemId mcrDisplayLineItem()
        #{
        #    if (this.TransTableId == tableNum(SalesLine))
        #    {
        #        return SalesLine::findRecId(this.TransRecId).ItemId;
        #    }
        #
        #    return "";
        #}
      ENDSOURCE
      SOURCE #mcrIsProRated
        #/// <summary>
        #/// Returns whether the misc charge is pro-rated.
        #/// </summary>
        #/// <returns>
        #/// True if misc charge is for SalesTable or SalesLine and is pro-rated
        #/// </returns>
        #/// <remarks>
        #/// Misc charges for all other tables are not pro-rated even if the misc charge code
        #/// indicates that it's pro-rated.
        #/// </remarks>
        #boolean mcrIsProRated()
        #{
        #    return ((this.TransTableId == tableNum(SalesTable)
        #                || this.TransTableId == tableNum(SalesLine))
        #            && MarkupTable::find(this.ModuleType, this.MarkupCode).mcrProRate);
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(MarkupTrans, MarkupCode):
        #            this.initFromMarkupTable(this.markupTable());
        #            break;
        #
        #        case fieldNum(MarkupTrans, MarkupCategory):
        #            if (this.restrictKeep())
        #            {
        #                this.Keep = this.MarkupCategory != MarkupCategory::Fixed;
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedFieldValue
        #/// <summary>
        #/// Modify a specified field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The field Name of the field to modify.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the field.
        #/// </param>
        #public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean     isMiscChargeEnabled = LedgerParameters::isMiscellaneouscharges_IN();
        #
        #    super(_fieldName, _arrayIndex);
        #
        #    switch (_fieldName)
        #    {
        #        case fieldStr(MarkupTrans, MarkupCode):
        #
        #            if (isMiscChargeEnabled)
        #            {
        #                this.NotionalCharges_IN     = NoYes::No;
        #                this.NotionalPct_IN         = 0;
        #            }
        #            break;
        #
        #        case fieldStr(MarkupTrans, MarkupCategory):
        #            if (isMiscChargeEnabled)
        #            {
        #                this.NotionalCharges_IN     = NoYes::No;
        #                this.NotionalPct_IN         = 0;
        #            }
        #            break;
        #
        #        case fieldStr(MarkupAutoLine, CurrencyCode):
        #            if (isMiscChargeEnabled)
        #            {
        #                this.NotionalCharges_IN     = NoYes::No;
        #                this.NotionalPct_IN         = 0;
        #            }
        #            break;
        #
        #        case(fieldStr(MarkupTrans, Value)) :
        #            if (isMiscChargeEnabled
        #                && this.Value != this.orig().Value)
        #            {
        #                if  (this.TransTableId == tableNum(PurchParmLine))
        #                {
        #                    info("@GLS6626");
        #                }
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #packMarkupTrans_IN
        #/// <summary>
        #/// Packs the markup trans information.
        #/// </summary>
        #/// <param name="_markupTransIN">
        #/// The markup trans reference.
        #/// </param>
        #public void packMarkupTrans_IN(MarkupTrans_IN _markupTransIN)
        #{
        #    _markupTransIN.MarkupTrans = this.RecId;
        #
        #    this.SysExtensionSerializerMap::packExtensionTable(_markupTransIN);
        #}
      ENDSOURCE
      SOURCE #parentCurrencyCode
        #/// <summary>
        #/// Retrieves the currency code for the parent record related to the miscellaneous charges transaction.
        #/// </summary>
        #/// <returns>
        #/// The currency code for the parent record.
        #/// </returns>
        #public CurrencyCode parentCurrencyCode()
        #{
        #    CurrencyCodeMap parentRecord;
        #    ;
        #    switch (this.TransTableId)
        #    {
        #    case tableNum(VendInvoiceInfoSubTable):
        #        parentRecord = VendInvoiceInfoSubTable::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #        break;
        #    default:
        #        if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #        {
        #            parentRecord = CustInvoiceLine::find(this.TransRecId).custInvoiceTable();
        #        }
        #        else
        #        {
        #            parentRecord = this.parentRecord();
        #        }
        #        break;
        #    }
        #    return parentRecord.CurrencyCode;
        #}
      ENDSOURCE
      SOURCE #parentRecord
        #public Common parentRecord()
        #{
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(SalesTable)           :
        #            return SalesTable::findRecId(this.TransRecId);
        #        case tableNum(SalesLine)            :
        #            return SalesLine::findRecId(this.TransRecId);
        #        case tableNum(CustInvoiceTable)     :
        #            return CustInvoiceTable::findRecId(this.TransRecId);
        #        case tableNum(CustQuotationJour)    :
        #            return CustQuotationJour::findRecId(this.TransRecId);
        #        case tableNum(CustQuotationTrans)   :
        #            return CustQuotationTrans::findRecId(this.TransRecId);
        #        case tableNum(CustConfirmJour)      :
        #            return CustConfirmJour::findRecId(this.TransRecId);
        #        case tableNum(CustConfirmTrans)     :
        #            return CustConfirmTrans::findRecId(this.TransRecId);
        #        case tableNum(CustInvoiceJour)      :
        #            return CustInvoiceJour::findRecId(this.TransRecId);
        #        case tableNum(CustInvoiceTrans)     :
        #            return CustInvoiceTrans::findRecId(this.TransRecId);
        #        case tableNum(SalesBasket)          :
        #            return SalesBasket::findRecId(this.TransRecId);
        #        case tableNum(SalesBasketLine)      :
        #            return SalesBasketLine::findRecId(this.TransRecId);
        #        case tableNum(PurchTable)           :
        #            return PurchTable::findRecId(this.TransRecId);
        #        case tableNum(PurchLine)            :
        #            return PurchLine::findRecId(this.TransRecId);
        #        case tableNum(PurchReqLine)         :
        #            return PurchReqLine::find(this.TransRecId);
        #        case tableNum(PurchReqLineHistory)         :
        #            return PurchReqLineHistory::find(this.TransRecId);
        #        case tableNum(VendInvoiceJour)      :
        #            return VendInvoiceJour::findRecId(this.TransRecId);
        #        case tableNum(VendInvoiceTrans)     :
        #            return VendInvoiceTrans::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQCaseTable)    :
        #            return PurchRFQCaseTable::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQCaseLine)    :
        #            return PurchRFQCaseLine::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQReplyTable)    :
        #            return PurchRFQReplyTable::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQReplyLine)    :
        #            return PurchRFQReplyLine::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQTable)    :
        #            return PurchRFQTable::findRecId(this.TransRecId);
        #        case tableNum(PurchRFQLine)    :
        #            return PurchRFQLine::findRecId(this.TransRecId);
        #        case tableNum(VendInvoiceInfoTable)       :
        #            return VendInvoiceInfoTable::findRecId(this.TransRecId);
        #        case tableNum(VendInvoiceInfoSubTable)    :
        #            return VendInvoiceInfoSubTable::findRecId(this.TransRecId);
        #        case tableNum(VendInvoiceInfoLine)    :
        #            return VendInvoiceInfoLine::findRecId(this.TransRecId);
        #        case tableNum(SalesQuotationTable)  :
        #            return SalesQuotationTable::findRec(this.TransRecId);
        #        case tableNum(SalesQuotationLine)  :
        #            return SalesQuotationLine::findRecId(this.TransRecId);
        #        default:
        #            if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                return CustInvoiceLine::find(this.TransRecId);
        #            }
        #    }
        #    return null;
        #}
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    SourceDocumentLineImplementation   sourceDocumentLineImplementation;
        #    DictTable               dictTable;
        #    AccountingDate          exchangeRateDate;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #
        #    if (this.TransTableId == tableNum(VendInvoiceInfoSubTable))
        #    {
        #        // MarkupTrans attached to VendInvoiceInfoSubTable need to retrieve the ExchangeRateDate from VendInvoiceInfoTable
        #        vendInvoiceInfoTable = VendInvoiceInfoSubTable::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #        sourceDocumentLineImplementation = vendInvoiceInfoTable;
        #        exchangeRateDate = sourceDocumentLineImplementation.parmExchangeRateDate();
        #    }
        #    else
        #    {
        #        if (SysDictTable::isTableMapped(tableNum(SourceDocumentLineImplementation), this.TransTableId))
        #        {
        #            dictTable = new DictTable(this.TransTableId);
        #            sourceDocumentLineImplementation = dictTable.makeRecord();
        #
        #            select RecId from sourceDocumentLineImplementation
        #            where sourceDocumentLineImplementation.RecId == this.TransRecId;
        #
        #            exchangeRateDate = sourceDocumentLineImplementation.parmExchangeRateDate();
        #        }
        #    }
        #
        #    return exchangeRateDate;
        #}
        #
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    PurchLine                   purchLine;
        #    PurchReqLine                purchReqLine;
        #    VendInvoiceInfoLine         vendInvoiceInfoLine;
        #    SourceDocumentLine          parentSourceDocumentLine;
        #    VendInvoiceTrans            vendInvoiceTrans;
        #    CustInvoiceLine             custInvoiceLine;
        #    CustInvoiceTrans            custInvoiceTrans;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(PurchLine):
        #            purchLine = PurchLine::findRecId(this.TransRecId);
        #            parentSourceDocumentLine = SourceDocumentLine::find(purchLine.SourceDocumentLine);
        #            break;
        #
        #        case tableNum(PurchReqLine):
        #            purchReqLine = PurchReqLine::find(this.TransRecId);
        #            parentSourceDocumentLine = SourceDocumentLine::find(purchReqLine.SourceDocumentLine);
        #            break;
        #
        #        case tableNum(VendInvoiceInfoLine):
        #            vendInvoiceInfoLine = VendInvoiceInfoLine::findRecId(this.TransRecId);
        #            parentSourceDocumentLine = SourceDocumentLine::find(vendInvoiceInfoLine.SourceDocumentLine);
        #            break;
        #
        #        case tableNum(VendInvoiceTrans):
        #            vendInvoiceTrans = VendInvoiceTrans::findRecId(this.TransRecId);
        #            parentSourceDocumentLine = SourceDocumentLine::find(vendInvoiceTrans.SourceDocumentLine);
        #            break;
        #        default:
        #            if (SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                if (this.TransTableId == tableNum(CustInvoiceLine))
        #                {
        #                    custInvoiceLine = CustInvoiceLine::find(this.TransRecId);
        #                    parentSourceDocumentLine = SourceDocumentLine::find(custInvoiceLine.SourceDocumentLine);
        #                }
        #                else if (this.TransTableId == tableNum(CustInvoiceTrans))
        #                {
        #                    custInvoiceTrans = CustInvoiceTrans::findRecId(this.TransRecId);
        #                    parentSourceDocumentLine = SourceDocumentLine::find(custInvoiceTrans.SourceDocumentLine);
        #                }
        #            }
        #    }
        #
        #
        #    return parentSourceDocumentLine;
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    EnumName    lineTypeEnum;
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(CustInvoiceTable):
        #            lineTypeEnum =  enumStr(SourceDocumentLine_CustomerInvoice);
        #            break;
        #
        #        case tableNum(PurchLine):
        #            lineTypeEnum =  enumStr(SourceDocumentLine_ProductOrder);
        #            break;
        #
        #        case tableNum(PurchTable):
        #            lineTypeEnum =  enumStr(SourceDocumentLine_ProductOrder);
        #            break;
        #
        #        case tableNum(PurchReqLine):
        #            lineTypeEnum = enumStr(SourceDocumentLine_ProductRequisition);
        #            break;
        #
        #        case tableNum(VendInvoiceInfoTable):
        #        case tableNum(VendInvoiceInfoSubTable):
        #        case tableNum(VendInvoiceInfoLine):
        #        case tableNum(VendInvoiceJour):
        #        case tableNum(VendInvoiceTrans):
        #            lineTypeEnum = enumStr(SourceDocumentLine_VendorInvoice);
        #            break;
        #
        #        default:
        #            if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                lineTypeEnum =  enumStr(SourceDocumentLine_CustomerInvoice);
        #            }
        #            else
        #            {
        #                throw error(Error::wrongUseOfFunction(funcName()));
        #            }
        #    }
        #
        #    return lineTypeEnum;
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    SourceDocumentTypeEnumValue sourceDocumentTypeEnumValue;
        #    MarkupTrans markupTrans;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(CustInvoiceTable):
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_CustomerInvoice::CustomerInvoiceChargeLine;
        #            break;
        #
        #        case tableNum(PurchLine):
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_ProductOrder::PurchaseOrderChargeLine;
        #            break;
        #
        #        case tableNum(PurchTable):
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_ProductOrder::PurchaseOrderTotalsChargeLine;
        #            break;
        #
        #        case tableNum(PurchReqLine) :
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_ProductRequisition::PurchaseRequisitionChargeLine;
        #            break;
        #
        #        case tableNum(VendPackingSlipTrans) :
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_ProductReceipt::ProductReceiptTaxLine;
        #            break;
        #
        #        case tableNum(VendInvoiceInfoTable) :
        #        case tableNum(VendInvoiceInfoSubTable) :
        #        case tableNum(VendInvoiceJour) :
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_VendorInvoice::VendorInvoiceTotalsChargeLine;
        #            break;
        #
        #        case tableNum(VendInvoiceInfoLine) :
        #        case tableNum(VendInvoiceTrans) :
        #            sourceDocumentTypeEnumValue = SourceDocumentLine_VendorInvoice::VendorInvoiceChargeLine;
        #            break;
        #
        #        case tableNum(MarkupTrans) :
        #            markupTrans = MarkupTrans::findRecId(this.TransRecId);
        #            switch (markupTrans.TransTableId)
        #            {
        #                case tableNum(PurchLine) :
        #                    sourceDocumentTypeEnumValue = SourceDocumentLine_ProductOrder::PurchaseOrderChargeLine;
        #                    break;
        #
        #                case tableNum(PurchTable) :
        #                    sourceDocumentTypeEnumValue = SourceDocumentLine_ProductOrder::PurchaseOrderChargeLine;
        #                    break;
        #
        #                case tableNum(PurchReqLine) :
        #                    sourceDocumentTypeEnumValue = SourceDocumentLine_ProductRequisition::PurchaseRequisitionChargeLine;
        #                    break;
        #
        #                case tableNum(VendInvoiceInfoTable) :
        #                case tableNum(VendInvoiceInfoSubTable) :
        #                case tableNum(VendInvoiceJour) :
        #                    sourceDocumentTypeEnumValue = SourceDocumentLine_VendorInvoice::VendorInvoiceTotalsChargeLine;
        #                    break;
        #
        #                case tableNum(VendInvoiceInfoLine) :
        #                case tableNum(VendInvoiceTrans) :
        #                    sourceDocumentTypeEnumValue = SourceDocumentLine_VendorInvoice::VendorInvoiceChargeLine;
        #                    break;
        #            }
        #            break;
        #
        #        default:
        #            if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                sourceDocumentTypeEnumValue = SourceDocumentLine_CustomerInvoice::CustomerInvoiceLineChargeLine;
        #            }
        #            else
        #            {
        #                throw error(Error::wrongUseOfFunction(funcName()));
        #            }
        #    }
        #
        #    return sourceDocumentTypeEnumValue;
        #}
      ENDSOURCE
      SOURCE #parmSourceDocumentHeader
        #public SourceDocumentHeader parmSourceDocumentHeader()
        #{
        #    SourceDocumentLineImplementation   sourceDocumentLineImplementation;
        #    SourceDocumentHeaderImplementation sourceDocumentHeaderImplementation;
        #    DictTable               dictTable;
        #    Common                  sourceRecord;
        #    SourceDocumentHeader    sourceDocumentHeader;
        #    SourceDocumentLine      sourceDocumentLine;
        #    CustInvoiceTable        custInvoiceTable;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    VendInvoiceInfoSubTable vendInvoiceInfoSubTable;
        #
        #    if (SysDictTable::isTableMapped(tableNum(SourceDocumentLineImplementation), this.TransTableId))
        #    {
        #        switch (this.TransTableId)
        #        {
        #            // Markups for customer invoices are only on the header and not the line level.
        #            // The default section finds the header through the document line which doesn't apply for customer invoices.
        #            case tableNum(CustInvoiceTable):
        #                custInvoiceTable = CustInvoiceTable::findRecId(this.TransRecId);
        #                sourceDocumentHeader = SourceDocumentHeader::find(custInvoiceTable.SourceDocumentHeader);
        #                break;
        #
        #            default:
        #                dictTable = new DictTable(this.TransTableId);
        #                sourceRecord = dictTable.makeRecord();
        #
        #                select sourceRecord
        #                    where sourceRecord.RecId == this.TransRecId;
        #
        #                if (SysDictTable::isTableMapped(tableNum(SourceDocumentHeaderImplementation), this.TransTableId))
        #                {
        #                    sourceDocumentHeaderImplementation = sourceRecord;
        #                    sourceDocumentHeader = SourceDocumentHeader::find(sourceDocumentHeaderImplementation.SourceDocumentHeader);
        #                }
        #                else
        #                {
        #                    sourceDocumentLineImplementation = sourceRecord;
        #                    sourceDocumentLine = SourceDocumentLine::find(sourceDocumentLineImplementation.SourceDocumentLine);
        #                    sourceDocumentHeader = SourceDocumentHeader::find(sourceDocumentLine.SourceDocumentHeader);
        #                }
        #        }
        #    }
        #
        #    if (this.TransTableId == tableNum(VendInvoiceInfoSubTable)) //VIIST is not a SourceDocumentLine
        #    {
        #        vendInvoiceInfoSubTable = VendInvoiceInfoSubTable::findRecId(this.TransRecId);
        #        vendInvoiceInfoTable = vendInvoiceInfoSubTable.vendInvoiceInfoTable();
        #        sourceDocumentHeader = SourceDocumentHeader::find(vendInvoiceInfoTable.SourceDocumentHeader);
        #    }
        #
        #    return sourceDocumentHeader;
        #}
      ENDSOURCE
      SOURCE #postingProfile_RU
        #PostingProfile postingProfile_RU()
        #{
        #    PostingProfile          postingProfile;
        #    PurchLine               purchLine;
        #    PurchLine_W             purchLine_W;
        #    PurchTable              purchTable;
        #    VendInvoiceJour         vendInvoiceJour;
        #    VendInvoiceTrans        vendInvoiceTrans;
        #    SalesLine               salesLine;
        #    SalesTable              salesTable;
        #    CustInvoiceJour         custInvoiceJour;
        #    CustInvoiceTrans        custInvoiceTrans;
        #    ;
        #    switch(this.TransTableId)
        #    {
        #        case tableNum(PurchLine):
        #            purchLine = this.parentRecord();
        #            purchLine_W = purchLine.purchLine_W();
        #            postingProfile = purchLine_W.PostingProfile_RU ? purchLine_W.PostingProfile_RU : purchLine.purchTable().PostingProfile;
        #            break;
        #        case tableNum(PurchTable):
        #            purchTable = this.parentRecord();
        #            postingProfile = purchTable.PostingProfile;
        #            break;
        #        case tableNum(VendInvoiceTrans):
        #            vendInvoiceTrans = this.parentRecord();
        #            postingProfile = vendInvoiceTrans.vendInvoiceJour().PostingProfile;
        #            break;
        #        case tableNum(VendInvoiceJour):
        #            vendInvoiceJour = this.parentRecord();
        #            postingProfile = vendInvoiceJour.PostingProfile;
        #            break;
        #        case tableNum(SalesLine):
        #            salesLine = this.parentRecord();
        #            postingProfile = salesLine.PostingProfile_RU ? salesLine.PostingProfile_RU : salesLine.salesTable().PostingProfile;
        #            break;
        #        case tableNum(SalesTable):
        #            salesTable = this.parentRecord();
        #            postingProfile = salesTable.PostingProfile;
        #            break;
        #        case tableNum(CustInvoiceTrans):
        #            custInvoiceTrans = this.parentRecord();
        #            postingProfile = custInvoiceTrans.custInvoiceJour().PostingProfile;
        #            break;
        #        case tableNum(CustInvoiceJour):
        #            custInvoiceJour = this.parentRecord();
        #            postingProfile = custInvoiceJour.PostingProfile;
        #            break;
        #    }
        #    return postingProfile;
        #}
      ENDSOURCE
      SOURCE #restrictKeep
        #/// <summary>
        #/// Determines whether the <c>Keep</c> field is restricted or can be set freely.
        #/// </summary>
        #/// <returns>true if the <c>Keep</c> field is restricted; otherwise, false.</returns>
        #private boolean restrictKeep()
        #{
        #    SalesTable  salesTable;
        #    SalesLine   salesLine;
        #    boolean     isIntercompanySalesOrder;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(SalesTable):
        #            salesTable = this.parentRecord() as SalesTable;
        #            isIntercompanySalesOrder = salesTable.InterCompanyOrder && salesTable.InterCompanyCompanyId;
        #            break;
        #        case tableNum(SalesLine):
        #            salesLine = this.parentRecord() as SalesLine;
        #            isIntercompanySalesOrder = salesLine.isInterCompanyOrder();
        #            break;
        #        default:
        #            // do nothing
        #    }
        #
        #    if (this.ModuleType == MarkupModuleType::Vend
        #        || isIntercompanySalesOrder
        #        || (salesTable
        #            && RetailMCRChannelTable::findChannelBySalesTable(salesTable).mcrEnableOrderCompletion)
        #        || (salesLine
        #            && RetailMCRChannelTable::findChannelBySalesTable(SalesTable::find(salesLine.SalesId)).mcrEnableOrderCompletion)
        #        )
        #    {
        #        return true;
        #    }
        #    else
        #    {
        #        return false;
        #    }
        #}
      ENDSOURCE
      SOURCE #setCurrencyCode_BR
        #/// <summary>
        #/// Sets the charge currency as the company currency when it is a SISCOMEX charge.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the currency has been set; otherwise, false.
        #/// </returns>
        #
        #public boolean setCurrencyCode_BR()
        #{
        #    if (this.isSiscomex_BR())
        #    {
        #        this.CurrencyCode   = CompanyInfo::standardCurrency();
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #signedValue
        #AmountCur signedValue(AmountCur _amountCur)
        #{
        #    AmountCur signedValue;
        #
        #    if (this.isMarkupSalesRelated())
        #    {
        #        if (this.markupTable().CustType == MarkupType::CustVend)
        #        {
        #            signedValue = _amountCur;
        #        }
        #        else
        #        {
        #            signedValue = -_amountCur;
        #        }
        #    }
        #    else
        #    {
        #        if (this.markupTable().VendType == MarkupType::CustVend)
        #        {
        #            signedValue = _amountCur;
        #        }
        #        else
        #        {
        #            if (BrazilParameters::isEnabled() && this.markupTable().CustType == MarkupType::Item)
        #            {
        #                signedValue = _amountCur;
        #            }
        #            else
        #            {
        #            signedValue = -_amountCur;
        #            }
        #        }
        #    }
        #
        #    return signedValue;
        #}
      ENDSOURCE
      SOURCE #taxCombinationAllowed
        #boolean  taxCombinationAllowed()
        #{
        #    MarkupTable markupTable;
        #    ;
        #
        #    if (!this.TaxGroup || !this.TaxItemGroup)
        #        return true;
        #
        #    markupTable = this.markupTable();
        #
        #    if (markupTable.CustType == MarkupType::CustVend || markupTable.VendType == MarkupType::CustVend)
        #        return true;
        #
        #    return !Tax::potentialSalesTax(this.TaxGroup, this.TaxItemGroup, systemDateGet(), this.taxModuleType());
        #}
        #
      ENDSOURCE
      SOURCE #taxModuleType
        #public TaxModuleType taxModuleType()
        #{
        #    TaxModuleType taxModuleType;
        #
        #    switch (this.ModuleType)
        #    {
        #        case MarkupModuleType::Delivery:
        #        case MarkupModuleType::Cust:
        #            taxModuleType = TaxModuleType::Sales;
        #            break;
        #        case MarkupModuleType::Vend:
        #            taxModuleType = TaxModuleType::Purch;
        #            break;
        #        default:
        #            throw error(Error::wrongUseOfFunction(funcName()));
        #    }
        #
        #    return taxModuleType;
        #}
      ENDSOURCE
      SOURCE #tmsInitFromInventTransferLine
        #/// <summary>
        #/// Assign field values based on the Transfer Order line.
        #/// </summary>
        #/// <param name="_inventTransferLine">
        #/// The Transfer Order line record.
        #/// </param>
        #public void  tmsInitFromInventTransferLine(InventTransferLine _inventTransferLine)
        #{
        #    this.ModuleType         = MarkupModuleType::Invent;
        #    this.TransTableId       = _inventTransferLine.TableId;
        #    this.TransRecId         = _inventTransferLine.RecId;
        #    if (!this.taxCombinationAllowed())
        #        this.TaxItemGroup   = '';
        #}
        #
      ENDSOURCE
      SOURCE #type
        #/// <summary>
        #/// Gets the strategy used to validate and apply the default values.
        #/// </summary>
        #/// <param name="_axMarkupTrans">
        #/// A <c>AxMarkupTrans</c> object that is used to track state; optional.
        #/// </param>
        #/// <returns>
        #/// The strategy used to validate and apply the default values.
        #/// </returns>
        #private MarkupTransType type(AxMarkupTrans _axMarkupTrans = null)
        #{
        #    AxMarkupTrans    axMarkupTrans;
        #    ;
        #
        #    axMarkupTrans = _axMarkupTrans;
        #    if (!axMarkupTrans)
        #    {
        #        axMarkupTrans = AxMarkupTrans::construct();
        #        axMarkupTrans.markupTrans(this);
        #    }
        #
        #    return MarkupTransType::construct(axMarkupTrans);
        #}
        #
      ENDSOURCE
      SOURCE #update
        #public void update(boolean _updateMiscMatching = true, boolean _isEditingBlockedByVendorInvoice = this.isEditingBlockedByVendorInvoice())
        #{
        #    MarkupMatchingTrans     markupMatchingTrans;
        #    InterCompanyMarkup      interCompanyMarkup;
        #    PurchTable              purchTable;
        #    SalesTable              salesTable;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    CustInvoiceTrans        custInvoiceTrans;
        #    CustInvoiceJour         custInvoiceJour;
        #    CustInvoiceTable        custInvoiceTable;
        #    MarkupTrans             oldMarkupTrans = this.orig();
        #    TableId                 oldOrigTableId = oldMarkupTrans.OrigTableId;
        #    RecId                   oldOrigRecId = oldMarkupTrans.OrigRecId;
        #    MarkupCode              oldMarkupCode = oldMarkupTrans.MarkupCode;
        #    boolean                 isInterCompanyOrder;
        #    boolean                 isDistributionUpdateRequired;
        #    PurchTotalsSummaryController    purchTotalsSummaryController;
        #
        #    if (_isEditingBlockedByVendorInvoice)
        #    {
        #        throw error("@SYS327634");
        #    }
        #
        #    try
        #    {
        #        ttsbegin;
        #
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(CustInvoiceJour) :
        #                custInvoiceJour = CustInvoiceJour::findRecId(this.TransRecId);
        #                isInterCompanyOrder = (custInvoiceJour.InterCompanyCompanyId != '');
        #                break;
        #            case tableNum(CustInvoiceTrans) :
        #                if (!this.InterCompanySkipUpdate)
        #                {
        #                    // This can be relatively expensive, so only do when intercompany data will be checked
        #                    custInvoiceTrans = CustInvoiceTrans::findRecId(this.TransRecId);
        #                    isInterCompanyOrder = custInvoiceTrans.isInterCompany();
        #                }
        #                break;
        #            case tableNum(PurchTable):
        #                purchTable = PurchTable::findRecId(this.TransRecId, true);
        #                isInterCompanyOrder = purchTable.isInterCompanyOrder();
        #                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #                {
        #                    purchTotalsSummaryController = PurchTotalsSummaryController::construct(purchTable.PurchId);
        #                    purchTotalsSummaryController.checkFields(this);
        #                }
        #                break;
        #            case tableNum(PurchLine):
        #                purchTable = PurchLine::findRecId(this.TransRecId).purchTable(true);
        #                isInterCompanyOrder = purchTable.isInterCompanyOrder();
        #                break;
        #            case tableNum(SalesTable):
        #                salesTable = SalesTable::findRecId(this.TransRecId);
        #                isInterCompanyOrder = salesTable.isInterCompanyOrder();
        #                break;
        #            case tableNum(SalesLine):
        #                salesTable = SalesLine::findRecId(this.TransRecId).salesTable();
        #                isInterCompanyOrder = salesTable.isInterCompanyOrder();
        #                break;
        #            case tableNum(VendInvoiceInfoTable):
        #                vendInvoiceInfoTable = VendInvoiceInfoTable::findRecId(this.TransRecId);
        #                break;
        #            case tableNum(VendInvoiceInfoLine):
        #                vendInvoiceInfoTable = VendInvoiceInfoLine::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                break;
        #            case tableNum(VendInvoiceInfoSubTable):
        #                vendInvoiceInfoTable = VendInvoiceInfoSubTable::findRecId(this.TransRecId).vendInvoiceInfoTable();
        #                break;
        #
        #            default:
        #                if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #                {
        #                    custInvoiceTable = CustInvoiceLine::find(this.TransRecId).custInvoiceTable();
        #                }
        #                break;
        #        }
        #
        #        if (purchTable)
        #        {
        #            VersioningPurchaseOrder::newPurchaseOrder(purchTable).change(this, this.orig());
        #        }
        #
        #        if (isInterCompanyOrder && !this.InterCompanySkipUpdate)
        #        {
        #            interCompanyMarkup = InterCompanyMarkup::construct(InterCompanyMarkupAction::Calc,this);
        #            interCompanyMarkup.run();
        #            this.InterCompanyCompanyId = interCompanyMarkup.parmMarkupTrans().InterCompanyCompanyId;
        #            this.InterCompanyRefRecId  = interCompanyMarkup.parmMarkupTrans().InterCompanyRefRecId;
        #        }
        #
        #        this.InterCompanySkipUpdate = false;
        #        this.IsModified = NoYes::Yes;
        #        super();
        #
        #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #        {
        #            if(purchTotalsSummaryController)
        #            {
        #                purchTotalsSummaryController.onUpdate(this);
        #            }
        #        }
        #
        #        isDistributionUpdateRequired = this.isDistributionUpdateRequired(oldMarkupTrans);
        #
        #        if ((this.MarkupCategory != oldMarkupTrans.MarkupCategory) ||
        #           (this.MarkupCode     != oldMarkupTrans.MarkupCode)     ||
        #            isDistributionUpdateRequired   ||
        #           (this.TaxGroup       != oldMarkupTrans.TaxGroup)       ||
        #           (this.TaxItemGroup   != oldMarkupTrans.TaxItemGroup))
        #        {
        #            switch (this.TransTableId)
        #            {
        #                case tableNum(PurchTable):
        #                    if (!this.markupTypeItem())
        #                    {
        #                        if (isDistributionUpdateRequired)
        #                        {
        #                            this.updateMarkupDistribution(purchTable);
        #                        }
        #                    }
        #                    purchTable.type().deleteTaxUncommitted();
        #                    break;
        #
        #                case tableNum(PurchLine):
        #                    if (isDistributionUpdateRequired)
        #                    {
        #                        this.updateMarkupDistribution(purchTable);
        #                    }
        #                    purchTable.type().deleteTaxUncommitted();
        #                    break;
        #
        #                case tableNum(VendInvoiceInfoTable), tableNum(VendInvoiceInfoSubTable):
        #                    if (!this.markupTypeItem())
        #                    {
        #                        if (isDistributionUpdateRequired)
        #                        {
        #                            this.updateMarkupDistribution(vendInvoiceInfoTable);
        #                        }
        #                    }
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                    break;
        #
        #                case tableNum(VendInvoiceInfoLine):
        #                    if (isDistributionUpdateRequired)
        #                    {
        #                        this.updateMarkupDistribution(vendInvoiceInfoTable);
        #                    }
        #                    TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #                    break;
        #
        #                default:
        #                    if (this.TransTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #                    {
        #                        TaxUncommitted::deleteForDocumentHeader(custInvoiceTable.TableId, custInvoiceTable.RecId, true);
        #
        #                        if (isDistributionUpdateRequired)
        #                        {
        #                            this.updateMarkupDistribution(custInvoiceTable);
        #                        }
        #                    }
        #                    break;
        #            }
        #        }
        #
        #        if (this.MarkupCode != oldMarkupCode)
        #        {
        #           switch (this.TransTableId)
        #            {
        #                case tableNum(VendInvoiceInfoSubTable):
        #                case tableNum(VendInvoiceInfoLine):
        #                    markupMatchingTrans = MarkupMatchingTrans::find(this.TransTableId, this.TransRecId, this.LineNum, true);
        #                    if (markupMatchingTrans)
        #                    {
        #                        markupMatchingTrans.MarkupCode = this.MarkupCode;
        #                        markupMatchingTrans.update();
        #                    }
        #                    break;
        #                default:
        #                    break;
        #            }
        #        }
        #
        #        // Connecting Miscellaneous Charge
        #        if (this.OrigTableId == this.TableId && this.OrigRecId && !oldOrigRecId && _updateMiscMatching)
        #        {
        #            VendInvoiceMatching::updateExpectedValuesForTable(this.TransTableId, this.TransRecId);
        #            switch (this.TransTableId)
        #            {
        #                case tableNum(VendInvoiceInfoSubTable):
        #                    VendInvoiceInfoSubMarkupMatchingTrans::connectVendSubTableMarkupTrans(this);
        #                    break;
        #                case tableNum(VendInvoiceInfoLine):
        #                    VendInvoiceInfoLineMarkupMatchingTrans::connectVendInvoiceInfoLineMarkupTrans(this);
        #                    break;
        #                default:
        #                    break;
        #            }
        #            AccountingDistributionProcessor::deleteAllDistributionsForSourceDocLine(this.SourceDocumentLine);
        #            TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #        }
        #
        #        // Disconnecting Miscellaneous Charge
        #        if (oldOrigTableId == this.TableId && oldOrigRecId && !this.OrigRecId && _updateMiscMatching)
        #        {
        #            VendInvoiceMatching::updateExpectedValuesForTable(this.TransTableId, this.TransRecId);
        #            switch (this.TransTableId)
        #            {
        #                case tableNum(VendInvoiceInfoSubTable):
        #                    VendInvoiceInfoSubMarkupMatchingTrans::disconnectVendSubTableMarkupTrans(this);
        #                    break;
        #                case tableNum(VendInvoiceInfoLine):
        #                    VendInvoiceInfoLineMarkupMatchingTrans::disconnectVendInvoiceInfoLineMarkupTrans(this);
        #                    break;
        #                default:
        #                    break;
        #            }
        #            AccountingDistributionProcessor::deleteAllDistributionsForSourceDocLine(this.SourceDocumentLine);
        #            TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId,vendInvoiceInfoTable.RecId, true, true);
        #        }
        #
        #        // Change Misc Charge Code
        #        if (oldOrigTableId == this.TableId && oldOrigRecId == this.OrigRecId && this.MarkupCode != oldMarkupCode && _updateMiscMatching)
        #        {
        #            switch (this.TransTableId)
        #            {
        #                case tableNum(VendInvoiceInfoSubTable):
        #                    VendInvoiceInfoSubMarkupMatchingTrans::disconnectVendSubTableMarkupTrans(this);
        #                    VendInvoiceInfoSubMarkupMatchingTrans::connectVendSubTableMarkupTrans(this);
        #                    break;
        #                case tableNum(VendInvoiceInfoLine):
        #                    VendInvoiceInfoLineMarkupMatchingTrans::disconnectVendInvoiceInfoLineMarkupTrans(this);
        #                    VendInvoiceInfoLineMarkupMatchingTrans::connectVendInvoiceInfoLineMarkupTrans(this);
        #                    break;
        #                default:
        #                    break;
        #            }
        #        }
        #
        #        ttscommit;
        #    }
        #    catch(Exception::Error)
        #    {
        #        ttsabort;
        #        throw error("@SYS93835");
        #    }
        #}
      ENDSOURCE
      SOURCE #updateAssessableValue_IN
        #/// <summary>
        #/// This method is used to update the table.
        #/// </summary>
        #/// <param name="_transTableId">
        #/// The unique table id to find.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The unique table id to find.
        #/// </param>
        #public void updateAssessableValue_IN(
        #    TableId     _transTableId = this.TransTableId,
        #    RefRecId    _transRecId   = this.TransRecId)
        #{
        #    PurchLine           purchLineLoc;
        #    PurchLine_IN        purchLineLoc_IN;
        #
        #    if ( _transTableId == tableNum(PurchLine) )
        #    {
        #        ttsbegin;
        #
        #        purchLineLoc = PurchLine::findRecId(_transRecId);
        #        purchLineLoc_IN = PurchLine_IN::findByPurchLine(_transRecId, true);
        #
        #        if (purchLineLoc)
        #        {
        #            purchLineLoc_IN.PurchLine = purchLineLoc.RecId;
        #            purchLineLoc_IN.AssessableValue_IN = purchLineLoc.getMiscChargesAmount_IN();
        #            purchLineLoc_IN.write();
        #        }
        #        ttscommit;
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #updateBankLCImportChargeAllocation_SA
        #/// <summary>
        #/// Updates letter of credit miscellaneous charge allocation settle status
        #/// </summary>
        #private void updateBankLCImportChargeAllocation_SA()
        #{
        #    BankLCImportChargeAllocation_SA bankLCImportChargeAllocation;
        #
        #    if (this.BankLCImportChargeAllocation_SA)
        #    {
        #        bankLCImportChargeAllocation = BankLCImportChargeAllocation_SA::find(this.BankLCImportChargeAllocation_SA, true);
        #        if (bankLCImportChargeAllocation.RecId)
        #        {
        #            if (!BankLCImportLine::find(bankLCImportChargeAllocation.BankLCImportLine).hasPackingSlip()
        #                && !MarkupTrans::existLCMarkupTrans_SA(0, this.BankLCImportChargeAllocation_SA))
        #            {
        #                bankLCImportChargeAllocation.updateSettleStatus(false);
        #                bankLCImportChargeAllocation.update();
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #updateMarkupDistribution
        #/// <summary>
        #/// Updates the markup distributions.
        #/// </summary>
        #/// <param name="_common">
        #/// The record of the <c>Common</c> table to which the markup belongs.
        #/// </param>
        #public void updateMarkupDistribution(Common _common)
        #{
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    SourceDocumentLine      sourceDocumentLine;
        #
        #    switch (_common.TableId)
        #    {
        #        case tableNum(PurchTable):
        #        case tableNum(PurchLine):
        #            sourceDocumentLine = SourceDocumentLine::find(this.SourceDocumentLine);
        #            if (sourceDocumentLine)
        #            {
        #                if (sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Completed)
        #                {
        #                    SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this, false, SourceDocumentLineAccountingStatus::FullyDistributed);
        #                }
        #                else
        #                {
        #                    SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this);
        #                }
        #            }
        #            break;
        #        case tableNum(VendInvoiceInfoTable):
        #            vendInvoiceInfoTable = _common as VendInvoiceInfoTable;
        #            if (AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #            {
        #                SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this);
        #            }
        #
        #            break;
        #
        #        default:
        #            if (_common.TableId == tableNum(CustInvoiceTable) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                if (AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #                {
        #                    SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(this);
        #                }
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #updatePurchLine_IN
        #/// <summary>
        #/// This method is used to update the table.
        #/// </summary>
        #/// <param name="_transTableId">
        #/// The unique table id to find.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The unique table id to find.
        #/// </param>
        #public void updatePurchLine_IN(TableId     _transTableId = this.TransTableId,
        #                        RefRecId    _transRecId   = this.TransRecId)
        #{
        #    Amount              notionalAmount;
        #    Amount              markupTotalValue;
        #    Amount              notionalCharges;
        #    MarkupTrans         markupTransLoc;
        #    PurchLine           purchLineLoc;
        #    PurchLine_IN        purchLineLoc_IN;
        #    PurchParmLine       purchParmLineLoc;
        #    SalesLine           salesLineLoc;
        #    SalesLine_IN        salesLineLoc_IN;
        #    SalesQuotationLine  salesQuotationLineLoc;
        #    CustInvoiceTable    custInvoiceTableLoc;
        #    CustInvoiceLine     custInvoiceLineLoc;
        #    Amount              miscChargeAmount;
        #    VendInvoiceInfoLine     vendInvoiceInfoLineLoc;
        #    VendInvoiceInfoLine_W   vendInvoiceInfoLineLoc_W;
        #    CustomsAmount_IN        landingCharges;
        #    RealBase                factor;
        #
        #    switch (_transTableId)
        #    {
        #        case tableNum(PurchLine) :
        #
        #            ttsbegin;
        #
        #            purchLineLoc = PurchLine::findRecId(_transRecId, true);
        #            purchLineLoc_IN = purchLineLoc.purchLine_IN();
        #
        #            if (purchLineLoc)
        #            {
        #                while select MarkupCategory, MarkUpAllocateAfter_IN, Value, CurrencyCode, NotionalPct_IN
        #                    from  markupTransLoc
        #                    where markupTransLoc.TransTableId == purchLineLoc.TableId
        #                       && markupTransLoc.TransRecId   == purchLineLoc.RecId
        #                {
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                    {
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                        {
        #                            markupTransLoc.Value = purchLineLoc.LineAmount * markupTransLoc.Value / 100;
        #                        }
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Qty)
        #                        {
        #                            markupTransLoc.Value = purchLineLoc.PurchQty * markupTransLoc.Value / 100;
        #                        }
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Linie)
        #                        {
        #                            markupTransLoc.Value = 1 * markupTransLoc.Value / 100;
        #                        }
        #                    }
        #
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Pcs)
        #                    {
        #                        markupTransLoc.Value = purchLineLoc.PurchQty * markupTransLoc.Value;
        #                    }
        #
        #                    markupTotalValue    = Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                         markupTransLoc.CurrencyCode,
        #                                                                         purchLineLoc.CurrencyCode);
        #
        #                    notionalCharges     = markupTransLoc.NotionalPct_IN/100;
        #
        #
        #
        #                    notionalAmount      = purchLineLoc.LineAmount * notionalCharges;
        #
        #                    if (notionalAmount == 0)
        #                    {
        #                        miscChargeAmount += markupTotalValue;
        #                    }
        #                    else if (markupTotalValue == 0)
        #                    {
        #                        miscChargeAmount += notionalAmount;
        #                    }
        #                    else if (notionalAmount < markupTotalValue)
        #                    {
        #                        miscChargeAmount += notionalAmount;
        #                    }
        #                    else
        #                    {
        #                        miscChargeAmount += markupTotalValue;
        #                    }
        #
        #                }
        #
        #                purchLineLoc_IN.AssessableValue_IN = miscChargeAmount + purchLineLoc.LineAmount;
        #                purchLineLoc.packPurchLine_IN(purchLineLoc_IN);
        #
        #            }
        #            purchLineLoc.update();
        #            ttscommit;
        #
        #            break;
        #
        #        case tableNum(PurchParmLine) :
        #
        #            ttsbegin;
        #            select forupdate purchParmLineLoc
        #                where purchParmLineLoc.TableId     == _transTableId
        #                   && purchParmLineLoc.RecId       == _transRecId;
        #
        #            if (purchParmLineLoc)
        #            {
        #                while select MarkupCategory, MarkUpAllocateAfter_IN, Value, CurrencyCode, NotionalPct_IN
        #                    from  markupTransLoc
        #                    where markupTransLoc.TransTableId == purchParmLineLoc.TableId
        #                       && markupTransLoc.TransRecId   == purchParmLineLoc.RecId
        #                {
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                    {
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                        {
        #                            markupTransLoc.Value = purchParmLineLoc.LineAmount * markupTransLoc.Value / 100;
        #                        }
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Qty)
        #                        {
        #                            markupTransLoc.Value = purchParmLineLoc.ReceiveNow * markupTransLoc.Value / 100;
        #                        }
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Linie)
        #                        {
        #                            markupTransLoc.Value = 1 * markupTransLoc.Value / 100;
        #                        }
        #                    }
        #
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Pcs)
        #                    {
        #                         markupTransLoc.Value = purchParmLineLoc.ReceiveNow * markupTransLoc.Value;
        #                    }
        #
        #                    markupTotalValue    = Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                         markupTransLoc.CurrencyCode,
        #                                                                         purchParmLineLoc.CurrencyCode);
        #                    notionalCharges     = markupTransLoc.NotionalPct_IN/100;
        #
        #
        #                    notionalAmount = purchParmLineLoc.LineAmount * notionalCharges;
        #
        #                    if (notionalAmount == 0)
        #                    {
        #                        miscChargeAmount += markupTotalValue;
        #                    }
        #                    else if (markupTotalValue == 0)
        #                    {
        #                        miscChargeAmount += notionalAmount;
        #                    }
        #                    else if (notionalAmount < markupTotalValue)
        #                    {
        #                        miscChargeAmount += notionalAmount;
        #                    }
        #                    else
        #                    {
        #                        miscChargeAmount += markupTotalValue;
        #                    }
        #                }
        #
        #                purchParmLineLoc.AssessableValue_IN = miscChargeAmount + purchParmLineLoc.LineAmount;
        #            }
        #            purchParmLineLoc.update();
        #            ttscommit;
        #
        #            break;
        #
        #        case tableNum(SalesLine):
        #
        #            ttsbegin;
        #            select forupdate salesLineLoc
        #                where salesLineLoc.TableId     == _transTableId
        #                   && salesLineLoc.RecId       == _transRecId;
        #
        #            if (salesLineLoc)
        #            {
        #                salesLineLoc_IN = salesLineLoc.salesLine_IN();
        #
        #                while select MarkupCategory, MarkUpAllocateAfter_IN, Value, CurrencyCode, NotionalPct_IN
        #                    from markupTransLoc
        #                    where markupTransLoc.TransTableId == salesLineLoc.TableId
        #                       && markupTransLoc.TransRecId   == salesLineLoc.RecId
        #                {
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                    {
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                        {
        #                            markupTransLoc.Value = salesLineLoc.LineAmount * markupTransLoc.Value / 100;
        #                        }
        #                    }
        #
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Pcs)
        #                    {
        #                         markupTransLoc.Value = salesLineLoc.SalesQty * markupTransLoc.Value;
        #                    }
        #
        #                    markupTotalValue    += Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                         markupTransLoc.CurrencyCode,
        #                                                                         salesLineLoc.CurrencyCode);
        #                }
        #                salesLineLoc_IN.AssessableValue_IN = salesLineLoc.LineAmount + markupTotalValue;
        #                salesLineLoc.packSalesLine_IN(salesLineLoc_IN);
        #            }
        #            salesLineLoc.update();
        #            ttscommit;
        #
        #            break;
        #
        #        case tableNum(SalesQuotationLine):
        #
        #            ttsbegin;
        #            select forupdate salesQuotationLineLoc
        #                where salesQuotationLineLoc.TableId   == _transTableId
        #                   && salesQuotationLineLoc.RecId     == _transRecId;
        #
        #            if (salesQuotationLineLoc)
        #            {
        #                while select MarkupCategory, MarkUpAllocateAfter_IN, Value, CurrencyCode, NotionalPct_IN
        #                    from markupTransLoc
        #                    where markupTransLoc.TransTableId == salesQuotationLineLoc.TableId
        #                       && markupTransLoc.TransRecId   == salesQuotationLineLoc.RecId
        #                {
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                    {
        #                        if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                        {
        #                            markupTransLoc.Value = salesQuotationLineLoc.LineAmount * markupTransLoc.Value / 100;
        #                        }
        #                    }
        #
        #                    if (markupTransLoc.MarkupCategory == MarkupCategory::Pcs)
        #                    {
        #                         markupTransLoc.Value = salesQuotationLineLoc.SalesQty * markupTransLoc.Value;
        #                    }
        #
        #                    markupTotalValue    += Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                         markupTransLoc.CurrencyCode,
        #                                                                         salesQuotationLineLoc.CurrencyCode);
        #                }
        #                salesQuotationLineLoc.AssessableValue_IN = salesQuotationLineLoc.LineAmount + markupTotalValue;
        #            }
        #            salesQuotationLineLoc.update();
        #            ttscommit;
        #
        #            break;
        #
        #        case tableNum(CustInvoiceTable):
        #
        #            select firstonly RecId, CurrencyCode
        #                from custInvoiceTableLoc
        #                where custInvoiceTableLoc.TableId == _transTableId
        #                   && custInvoiceTableLoc.RecId   == _transRecId;
        #
        #                ttsbegin;
        #                while select forupdate custInvoiceLineLoc
        #                    where custInvoiceLineLoc.ParentRecId == custInvoiceTableLoc.RecId
        #                {
        #                    if (custInvoiceLineLoc)
        #                    {
        #                        while select markupTransLoc
        #                            where markupTransLoc.TransTableId == custInvoiceTableLoc.TableId
        #                               && markupTransLoc.TransRecId   == custInvoiceTableLoc.RecId
        #                        {
        #
        #                            if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                            {
        #                                if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                                {
        #                                    markupTransLoc.Value = custInvoiceLineLoc.AmountCur * markupTransLoc.Value / 100;
        #                                }
        #                            }
        #
        #                            markupTotalValue    += Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                                 markupTransLoc.CurrencyCode,
        #                                                                                 custInvoiceTableLoc.CurrencyCode);
        #                        }
        #                        custInvoiceLineLoc.AssessableValue_IN = custInvoiceLineLoc.AmountCur + markupTotalValue;
        #                        custInvoiceLineLoc.update();
        #                        markupTotalValue = 0;
        #                    }
        #                }
        #                ttscommit;
        #
        #            break;
        #        case tableNum(VendInvoiceInfoLine) :
        #
        #            ttsbegin;
        #
        #            vendInvoiceInfoLineLoc = VendInvoiceInfoLine::findRecId(_transRecId, true);
        #            vendInvoiceInfoLineLoc_W   = vendInvoiceInfoLineLoc.vendInvoiceInfoLine_W();
        #
        #            if (vendInvoiceInfoLineLoc)
        #            {
        #            while select MarkupCategory, MarkUpAllocateAfter_IN, Value, CurrencyCode, NotionalPct_IN
        #                from  markupTransLoc
        #                where markupTransLoc.TransTableId == vendInvoiceInfoLineLoc.TableId
        #                    && markupTransLoc.TransRecId   == vendInvoiceInfoLineLoc.RecId
        #            {
        #                if (markupTransLoc.MarkupCategory == MarkupCategory::Percent)
        #                {
        #                    if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::NetAmount)
        #                    {
        #                        markupTransLoc.Value = vendInvoiceInfoLineLoc.LineAmount * markupTransLoc.Value / 100;
        #                    }
        #                    if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Qty)
        #                    {
        #                        markupTransLoc.Value = vendInvoiceInfoLineLoc.ReceiveNow * markupTransLoc.Value / 100;
        #                    }
        #                    if (markupTransLoc.MarkUpAllocateAfter_IN == MarkupAllocateAfter::Linie)
        #                    {
        #                        markupTransLoc.Value = 1 * markupTransLoc.Value / 100;
        #                    }
        #                }
        #
        #                if (markupTransLoc.MarkupCategory == MarkupCategory::Pcs)
        #                {
        #                    markupTransLoc.Value = vendInvoiceInfoLineLoc.ReceiveNow * markupTransLoc.Value;
        #                }
        #
        #                markupTotalValue    = Currency::curAmount2CurAmount(markupTransLoc.Value,
        #                                                                        markupTransLoc.CurrencyCode,
        #                                                                        vendInvoiceInfoLineLoc.CurrencyCode);
        #
        #                notionalCharges     = markupTransLoc.NotionalPct_IN/100;
        #
        #
        #
        #                notionalAmount      = vendInvoiceInfoLineLoc.LineAmount * notionalCharges;
        #
        #                if (notionalAmount == 0)
        #                {
        #                    miscChargeAmount += markupTotalValue;
        #                }
        #                else if (markupTotalValue == 0)
        #                {
        #                    miscChargeAmount += notionalAmount;
        #                }
        #                else if (notionalAmount < markupTotalValue)
        #                {
        #                    miscChargeAmount += notionalAmount;
        #                }
        #                else
        #                {
        #                    miscChargeAmount += markupTotalValue;
        #                }
        #
        #            }
        #                if(PurchTable::find(vendInvoiceInfoLineLoc.OrigPurchId).isCustomsImportOrder_IN() == NoYes::Yes )
        #                {
        #                    factor =  vendInvoiceInfoLineLoc.ReceiveNow/vendInvoiceInfoLineLoc.purchLine().PurchQty;
        #                    miscChargeAmount = miscChargeAmount * factor;
        #                    landingCharges = (miscChargeAmount + vendInvoiceInfoLineLoc.LineAmount) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #                }
        #                vendInvoiceInfoLineLoc_W.AssessableValue_IN = miscChargeAmount + vendInvoiceInfoLineLoc.LineAmount + landingCharges ;
        #                vendInvoiceInfoLineLoc_W.VendInvoiceInfoLine = vendInvoiceInfoLineLoc.RecId;
        #                vendInvoiceInfoLineLoc.SysExtensionSerializerMap::packExtensionTable(vendInvoiceInfoLineLoc_W);
        #            }
        #            vendInvoiceInfoLineLoc.update();
        #            ttscommit;
        #
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #useInMatching
        #/// <summary>
        #///    Indicates whether a <c>MarkupTrans</c> record can participate in transaction matching.
        #/// </summary>
        #/// <returns>
        #///    true if the current record can participate in transaction matching; otherwise, false.
        #/// </returns>
        #//BP Deviation Documented
        #public display MarkupUseInMatching useInMatching()
        #{
        #    return this.markupTable().UseInMatching;
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean validateDelete()
        #{
        #    #ISOCountryRegionCodes
        #    boolean ret;
        #
        #    ret = super();
        #
        #    if (ret && this.RecId != 0 && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        ret = this.checkCustomJournal_RU();
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId field, AxMarkupTrans _axMarkupTrans = null)
        #{
        #    boolean         isValid = true;
        #    MarkupTransType markupTransType;
        #    ;
        #
        #    markupTransType = this.type(_axMarkupTrans);
        #    if (markupTransType != null)
        #    {
        #        isValid = markupTransType.validateField(field);
        #    }
        #
        #    if (isValid)
        #    {
        #        isValid = super(field);
        #    }
        #
        #    return isValid;
        #
        #}
      ENDSOURCE
      SOURCE #validateFieldValue
        #/// <summary>
        #/// Validates a specified field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The field name of the field to check.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the field.
        #/// </param>
        #/// <returns>
        #/// Returns true if the field passes validation; otherwise, false.
        #/// </returns>
        #public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldName, _arrayIndex);
        #
        #    switch(_fieldName)
        #    {
        #        case(fieldStr(MarkupTrans, NotionalPct_IN)) :
        #            if (LedgerParameters::isMiscellaneouscharges_IN())
        #            {
        #                ret = this.NotionalPct_IN > 999.99 ? false : true;
        #            }
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean  validateWrite(AxMarkupTrans _axMarkupTrans = null)
        #{
        #    #ISOCountryRegionCodes
        #    boolean                 isValid;
        #    boolean                 miscWHTMsg = false;
        #    SalesTable              salesTable;
        #    SalesLine               salesLine;
        #    boolean                 countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #
        #    isValid = this.validateWrite_ServerPre(_axMarkupTrans);
        #
        #    if (isValid)
        #    {
        #        isValid = super();
        #    }
        #
        #    if (isValid
        #        && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE])
        #        && this.Value != 0)
        #    {
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(PurchTable):
        #                miscWHTMsg = this.checkforMiscAndWHT_AP(this.TransRecId, 0);
        #                break;
        #
        #            case tableNum(PurchLine):
        #                miscWHTMsg = this.checkforMiscAndWHT_AP(0, this.TransRecId);
        #                break;
        #
        #            case tableNum(SalesTable):
        #                miscWHTMsg = this.checkforMiscAndWHT_AR(this.TransRecId, 0);
        #                break;
        #
        #            case tableNum(SalesLine):
        #                miscWHTMsg = this.checkforMiscAndWHT_AR(0, this.TransRecId);
        #                break;
        #        }
        #
        #        if (miscWHTMsg)
        #        {
        #            isValid = false;
        #            warning("@SYS314126");
        #        }
        #    }
        #
        #    // If the commitments feature is enabled then we want to present a warning if there are unallocated misc. charges.
        #    if (isValid && (this.TransTableId == tableNum(PurchTable) || this.TransTableId == tableNum(VendInvoiceInfoSubTable) || this.TransTableId == tableNum(VendInvoiceInfoTable))
        #        && PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        this.checkMiscChargeUnallocated();
        #    }
        #
        #    if (countryRegion_RU)
        #    {
        #        if (! this.checkCustomJournal_RU())
        #        {
        #            isValid = false;
        #        }
        #
        #        if (! this.checkPostingTypeTransit_RU())
        #        {
        #            isValid = false;
        #        }
        #    }
        #    if ( isValid && isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        switch (this.TransTableId)
        #        {
        #            case tableNum(SalesTable):
        #                salesTable = SalesTable::findRecId(this.TransRecId);
        #                break;
        #
        #            case tableNum(SalesLine):
        #                salesLine = SalesLine::findRecId(this.TransRecId);
        #                salesTable = salesLine.salesTable();
        #                break;
        #
        #        }
        #
        #        if (this.mcrMiscChargeOverride
        #            && this.ModuleType == MarkupModuleType::Cust
        #            && ! this.mcrReasonCode
        #            && MCROrderParameters::find().mcrMarkupTransReasonCodeRequired
        #            && salesTable
        #            && RetailMCRChannelTable::findChannelBySalesTable(salesTable).mcrReasonCodeRetailInfocodeId != "")
        #        {
        #            isValid = checkFailed("@MCR21699");
        #        }
        #    }
        #
        #    isValid = isValid && RetailInformationSubcodeTable::mcrValidate(this.mcrRetailInfocodeId,this.mcrReasonCode);
        #
        #    return isValid;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateWrite_ServerPre
        #/// <summary>
        #/// Determines whether the current record is valid and ready to be written to the database.
        #/// </summary>
        #/// <param name="_axMarkupTrans">
        #/// An instance of the <c>AxMarkupTrans</c> class, used to track state; optional.
        #/// </param>
        #/// <returns>
        #/// true if the record is valid; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// This method was created to move execution of the logic for the <c>validateWrite</c> method onto the
        #/// server. The logic is positioned before other validation logic because the kernel validates
        #/// information that will not be exposed as faults.
        #/// </remarks>
        #private server boolean validateWrite_ServerPre(AxMarkupTrans _axMarkupTrans)
        #{
        #    boolean         isValid;
        #    MarkupTransType markupTransType;
        #    ;
        #
        #    isValid = true;
        #
        #    markupTransType = this.type(_axMarkupTrans);
        #    if (markupTransType != null)
        #    {
        #        isValid = markupTransType.validateRow();
        #    }
        #
        #    if (!this.checkMiscMaxAmountLimit())
        #    {
        #        isValid = false;
        #        Markup::showMiscChargeMaximumLimitWarning(this.TransTableId);
        #    }
        #    return isValid;
        #}
      ENDSOURCE
      SOURCE #whsDisplayId
        #/// <summary>
        #/// Displays the order ID associated with the charge.
        #/// </summary>
        #/// <returns>
        #/// The order ID associated with the charge.
        #/// </returns>
        #// BP Deviation Documented
        #public display Num whsDisplayId()
        #{
        #    Num   ret;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(WHSLoadTable):
        #            ret = WHSLoadTable::findByRecId(this.TransRecId).LoadId;
        #            break;
        #
        #        case tableNum(SalesTable):
        #            ret = SalesTable::findRecId(this.TransRecId).SalesId;
        #            break;
        #
        #        case tableNum(WHSLoadLine):
        #            ret = WHSLoadLine::findbyRecId(this.TransRecId).LoadId;
        #            break;
        #
        #        case tableNum(SalesLine):
        #            ret = SalesLine::findRecId(this.TransRecId).SalesId;
        #            break;
        #
        #        case tableNum(CustInvoiceJour):
        #            ret = CustInvoiceJour::findRecId(this.TransRecId).InvoiceId;
        #            break;
        #
        #        case tableNum(CustInvoiceTrans):
        #            ret = CustInvoiceTrans::findRecId(this.TransRecId).InvoiceId;
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsDisplayItem
        #/// <summary>
        #/// Displays the item ID associated with the charge.
        #/// </summary>
        #/// <returns>
        #/// The Item ID associated with the charge.
        #/// </returns>
        #// BP Deviation Documented
        #public display ItemId whsDisplayItem()
        #{
        #    ItemId  ret;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(WHSLoadLine):
        #            ret = WHSLoadLine::findbyRecId(this.TransRecId).ItemId;
        #            break;
        #
        #        case tableNum(SalesLine):
        #            ret = SalesLine::findRecId(this.TransRecId).ItemId;
        #            break;
        #
        #        case tableNum(CustInvoiceTrans):
        #            ret = CustInvoiceTrans::findRecId(this.TransRecId).ItemId;
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsDisplayQty
        #/// <summary>
        #/// Displays the quantity associated with the charge.
        #/// </summary>
        #/// <returns>
        #/// The quantity associated with the charge.
        #/// </returns>
        #// BP Deviation Documented
        #public display Qty whsDisplayQty()
        #{
        #    Qty ret;
        #
        #    switch (this.TransTableId)
        #    {
        #        case tableNum(WHSLoadLine):
        #            ret = WHSLoadLine::findbyRecId(this.TransRecId).InventQty;
        #            break;
        #
        #        case tableNum(SalesLine):
        #            ret = SalesLine::findRecId(this.TransRecId).SalesQty;
        #            break;
        #
        #        case tableNum(CustInvoiceTrans):
        #            ret = CustInvoiceTrans::findRecId(this.TransRecId).Qty;
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMarkupTrans
        #/// <summary>
        #///    Validates a <c>MarkupTrans</c> record for selection or posting.
        #/// </summary>
        #/// <param name="_tableId">
        #///    The <c>TableId</c> of the table to which the <c>MarkupTrans</c> are associated.
        #/// </param>
        #/// <param name="_recId">
        #///    The <c>RecId</c> of the table to which the <c>MarkupTrans</c> are associated.
        #/// </param>
        #/// <param name="_warningOnly">
        #///    A Boolean value that determines whether a warning should be issued; optional.
        #/// </param>
        #/// <returns>
        #///    true if no errors were detected; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///    The <c>_</c><paramref name="warningOnly" /> parameter determines how the method behaves. The method
        #///    will always return true if only warnings are requested.
        #/// </remarks>
        #public server static boolean checkMarkupTrans(TableId _tableId, RecId _recId, boolean _warningOnly = true)
        #{
        #    boolean ok = true;
        #    MarkupTrans markupTrans;
        #    SetEnumerator markupRecIds;
        #    #ISOCountryRegionCodes
        #    boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    markupRecIds = MarkupTrans::getMarkupRecIdsBySource(_tableId, _recId);
        #    while (markupRecIds.moveNext())
        #    {
        #        markupTrans = MarkupTrans::findRecId(markupRecIds.current());
        #
        #        if (markupTrans.Value)
        #        {
        #            if (markupTrans.MarkupCategory != MarkupCategory::Fixed || markupTrans.markupTypeItem())
        #            {
        #                if (_warningOnly)
        #                    warning("@SYS25724");
        #                else
        #                    ok = checkFailed("@SYS25724");
        #                break;
        #            }
        #            if (countryRegion_RU && ! markupTrans.checkMarkupCodeCustVend_RU())
        #            {
        #                return false;
        #            } //
        #        }
        #        else
        #        {
        #            if (_warningOnly)
        #                warning("@SYS100830");
        #        }
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMarkupTransCustVend_RU
        #public server static boolean checkMarkupTransCustVend_RU(TableId _tableId, RecId _recId)
        #{
        #    MarkupTrans markupTrans;
        #    ;
        #
        #    while select markupTrans
        #        where markupTrans.TransRecId    == _recId   &&
        #              markupTrans.TransTableId  == _tableId &&
        #              markupTrans.Value
        #    {
        #        if (! markupTrans.checkMarkupCodeCustVend_RU())
        #        {
        #            return false;
        #        }
        #    }
        #
        #    return true;
        #}
        #
        #
      ENDSOURCE
      SOURCE #checkMarkupTransOnHeader
        #/// <summary>
        #///    Validates a <c>MarkupTrans</c> record for posting associated with a header record.
        #/// </summary>
        #/// <param name="_tableId">
        #///    The <c>TableId</c> of the table with which the <c>MarkupTrans</c> record is associated.
        #/// </param>
        #/// <param name="_recId">
        #///    The <c>RecId</c> of the table with which the <c>MarkupTrans</c> record is associated.
        #/// </param>
        #/// <param name="_warningOnly">
        #///    A Boolean value that determines whether only a warning should be issued; optional.
        #/// </param>
        #/// <returns>
        #///    true if no errors were detected; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///    The <c>_</c><paramref name="warningOnly" /> parameter is currently ignored.
        #/// </remarks>
        #public server static boolean checkMarkupTransOnHeader(TableId _tableId, RecId _recId, boolean _warningOnly = true)
        #{
        #    MarkupTrans markupTrans;
        #    SetEnumerator markupRecIds;
        #    #ISOCountryRegionCodes
        #    boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #
        #    markupRecIds = MarkupTrans::getMarkupRecIdsBySource(_tableId, _recId);
        #    while (markupRecIds.moveNext())
        #    {
        #        markupTrans = MarkupTrans::findRecId(markupRecIds.current());
        #
        #        if (markupTrans.Value && markupTrans.markupTypeItem())
        #        {
        #            error("@SYS115806");
        #            return false;
        #        }
        #            if (markupTrans.Value &&
        #                countryRegion_RU  && ! markupTrans.checkMarkupCodeCustVend_RU())
        #            {
        #                return false;
        #            }
        #    }
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #currencyCodeExtendedTypeId
        #static ExtendedTypeId currencyCodeExtendedTypeId(Common _common)
        #{
        #    DictTable       dictTable;
        #    DictField       dictField;
        #    FieldId         fieldId;
        #    ExtendedTypeId  extendedTypeId;
        #    ;
        #    dictTable   = new DictTable(_common.TableId);
        #
        #    fieldId     = dictTable.fieldName2Id(new DictType(extendedTypeNum(CurrencyCode)).name());
        #
        #    if (fieldId)
        #        dictField       = dictTable.fieldObject(fieldId);
        #    else
        #        dictField       = new DictField(tableNum(MarkupTrans),fieldNum(MarkupTrans,CurrencyCode));
        #
        #    extendedTypeId  = dictField.typeId();
        #
        #    return extendedTypeId;
        #}
        #
      ENDSOURCE
      SOURCE #deleteByTableId_IN
        #/// <summary>
        #/// This method is used to delete the record from <c>MarkupTrans</c> table based on the table id.
        #/// </summary>
        #/// <param name="_tableId">
        #/// A unique table id for selection.
        #/// </param>
        #public static void deleteByTableId_IN(MarkupTransRefTableId _tableId)
        #{
        #    MarkupTrans markupTrans;
        #
        #    delete_from markupTrans
        #        where markupTrans.TransTableId == _tableId;
        #}
      ENDSOURCE
      SOURCE #deleteForParentSourceDocumentLine
        #/// <summary>
        #/// Deletes the <c>SourceDocumentLine</c> records for all markup transactions for a parent record.
        #/// </summary>
        #/// <param name="_sourceTable">
        #/// The source table ID.
        #/// </param>
        #/// <param name="_sourceRecord">
        #/// The source record ID.
        #/// </param>
        #server public static void deleteForParentSourceDocumentLine(RefTableId _sourceTable,
        #                                                   RefRecId _sourceRecord)
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #    MarkupTrans         markupTrans;
        #
        #    delete_from sourceDocumentLine
        #        exists join markupTrans
        #        where markupTrans.TransTableId == _sourceTable &&
        #              markupTrans.TransRecId == _sourceRecord &&
        #             !markupTrans.IsDeleted                   &&
        #              sourceDocumentLine.RecId == markupTrans.SourceDocumentLine;
        #}
      ENDSOURCE
      SOURCE #deleteTieredCharges
        #/// <summary>
        #/// Deletes the tiered misc. charges associated with an entity.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #public static void deleteTieredCharges(
        #    TableId         _tableId,
        #    RecId           _recId)
        #{
        #    MarkupTrans markupTrans;
        #
        #    delete_from markupTrans
        #    where markupTrans.TransRecId     == _recId
        #       && markupTrans.TransTableId   == _tableId
        #       && markupTrans.IsTieredCharge == NoYes::Yes;
        #}
      ENDSOURCE
      SOURCE #doTaxGroupExistsForMarkup
        #/// <summary>
        #/// Determines if a <c>MarkupTrans</c> record exists with tax groups set for the given parent.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The parent table ID.
        #/// </param>
        #/// <param name="_recId">
        #/// The parent Record ID.
        #/// </param>
        #/// <returns>
        #/// A boolean value indicating if any markups exist with a sales or item tax group.
        #/// </returns>
        #public static boolean doTaxGroupExistsForMarkup(RefTableId _tableId, RefRecId _recId)
        #{
        #    MarkupTrans markupTrans;
        #
        #    select firstonly RecId from markupTrans
        #        where markupTrans.TransTableId == _tableId &&
        #                markupTrans.TransRecId == _recId &&
        #                markupTrans.TaxGroup != '' &&
        #                markupTrans.TaxItemGroup != '' &&
        #                !markupTrans.IsDeleted;
        #    return (markupTrans != null);
        #}
      ENDSOURCE
      SOURCE #exist
        #/// <summary>
        #/// Returns whether misc. charges are already attached to this record specified by tableId
        #/// and recid.
        #/// </summary>
        #/// <param name="tableId">
        #/// Table number of record to check if charges are attached.
        #/// </param>
        #/// <param name="recId">
        #/// Record number of record to check if charges are attached.
        #/// </param>
        #/// <returns>
        #/// true if misc charge exists for record; otherwise, false.
        #/// </returns>
        #static boolean  exist(TableId   tableId,
        #                      RecId     recId)
        #{
        #    if (tableId  &&  recId)
        #    {
        #        return (select firstonly RecId from markupTrans
        #                    index hint TableRecIdIdx
        #                    where markupTrans.TransTableId  == tableId
        #                        && markupTrans.TransRecId    == recId
        #                        && !markupTrans.IsDeleted).RecId != 0;
        #    }
        #
        #    return false;
        #}
        #
      ENDSOURCE
      SOURCE #existDifferentCurrency
        #server static boolean existDifferentCurrency(TableId   tableId, RecId recId, CurrencyCode currencyCode)
        #{
        #    MarkupTrans markupTrans;
        #
        #    if (tableId  &&  recId)
        #    {
        #        while select markupTrans
        #            index hint TableRecIdIdx
        #            where markupTrans.TransTableId  == tableId      &&
        #                  markupTrans.TransRecId    == recId        &&
        #                 !markupTrans.IsDeleted                     &&
        #                  markupTrans.CurrencyCode  != currencyCode
        #        {
        #            if (markupTrans.isMarkupOfTypeCustVend())
        #            {
        #                return true;
        #            }
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existLCMarkupTrans_SA
        #/// <summary>
        #/// Determines whether the <c>MarkupTrans</c> table has the allocated letter of credit miscellaneous charge.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The table ID of the related transaction table.
        #/// </param>
        #/// <param name="_bankLCImportChargeAllocation_SA">
        #/// The record ID of the letter of credit miscellaneous charge allocation.
        #/// </param>
        #/// <returns>
        #/// true if the <c>MarkupTrans</c> table has the related record; otherwise, false.
        #/// </returns>
        #public static boolean existLCMarkupTrans_SA(MarkupTransRefTableId _tableId, RefRecId _bankLCImportChargeAllocation_SA)
        #{
        #    if (_tableId == 0)
        #    {
        #        return (select firstonly RecId from markupTrans
        #                where markupTrans.BankLCImportChargeAllocation_SA == _bankLCImportChargeAllocation_SA
        #           ).RecId != 0;
        #    }
        #    else
        #    {
        #        return (select firstonly RecId from markupTrans
        #                where markupTrans.TransTableId == _tableId
        #                    && markupTrans.BankLCImportChargeAllocation_SA == _bankLCImportChargeAllocation_SA
        #           ).RecId != 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #existOfTypeCustVend_RU
        #public static boolean existOfTypeCustVend_RU(TableId _tableId,
        #                                             RecId   _recId)
        #{
        #    MarkupTable markupTable;
        #    MarkupTrans markupTrans;
        #    boolean     ret;
        #
        #    if (_tableId && _recId)
        #    {
        #        select firstonly RecId from markupTrans
        #        exists join markupTable
        #            where markupTrans.TransTableId  == _tableId                 &&
        #                  markupTrans.TransRecId    == _recId                   &&
        #                  markupTable.MarkupCode    == markupTrans.MarkupCode   &&
        #                  (markupTable.CustType     == MarkupType::CustVend     ||
        #                   markupTable.VendType     == MarkupType::CustVend);
        #
        #        ret = markupTrans.RecId;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #existOrig
        #/// <summary>
        #///    Determines whether the <c>MarkupTrans</c> table record is associated with an original document.
        #/// </summary>
        #/// <param name="_origTableId">
        #///    The table ID of the original document.
        #/// </param>
        #/// <param name="_origRecId">
        #///    The record ID of the original document.
        #/// </param>
        #/// <returns>
        #///    true if an original document is associated with the <c>MarkupTrans</c> table record; otherwise,
        #///    false.
        #/// </returns>
        #public static boolean existOrig(TableId _origTableId, RecId _origRecId)
        #{
        #    ;
        #    return _origTableId && _origRecId &&
        #        (select firstonly RecId from markupTrans
        #                where markupTrans.OrigTableId == _origTableId
        #                   && markupTrans.OrigRecId == _origRecId
        #                   && !markupTrans.IsDeleted).RecId;
        #}
      ENDSOURCE
      SOURCE #existOrigTrans
        #/// <summary>
        #/// Determines whether a <c>MarkupTrans</c> table record exists for the original document and a
        #/// specified transaction.
        #/// </summary>
        #/// <param name="_origTableId">
        #/// The table ID of the original document.
        #/// </param>
        #/// <param name="_origRecId">
        #/// The record ID of the original document.
        #/// </param>
        #/// <param name="_transTableId">
        #/// The table ID of the transaction.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The record ID of the transaction.
        #/// </param>
        #/// <returns>
        #/// true if the original document is associated with the <c>MarkupTrans</c> record and specified
        #/// transaction; otherwise, false.
        #/// </returns>
        #public static boolean existOrigTrans(RefTableId _origTableId, RefRecId _origRecId, RefTableId _transTableId, RefRecId _transRecId)
        #{
        #    return _origTableId && _origRecId && _transTableId && _transRecId &&
        #        (select firstonly RecId from markupTrans
        #                where markupTrans.OrigTableId == _origTableId
        #                   && markupTrans.OrigRecId == _origRecId
        #                   && markupTrans.TransTableId == _transTableId
        #                   && markupTrans.TransRecId == _transRecId
        #                   && !markupTrans.IsDeleted).RecId;
        #}
      ENDSOURCE
      SOURCE #existTieredCharges
        #/// <summary>
        #/// Checks whether any tiered misc. charges associated with an entity.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #/// <returns>
        #/// true if tier charges exist; false otherwise.
        #/// </returns>
        #public static boolean existTieredCharges(
        #    TableId         _tableId,
        #    RecId           _recId)
        #{
        #    MarkupTrans markupTrans;
        #
        #    select firstonly RecId from markupTrans
        #    where markupTrans.TransRecId     == _recId
        #       && markupTrans.TransTableId   == _tableId
        #       && markupTrans.IsTieredCharge == NoYes::Yes;
        #
        #    return (markupTrans.RecId != 0);
        #}
      ENDSOURCE
      SOURCE #findByBankLCImportChargeAllocation_SA
        #/// <summary>
        #/// Finds the <c>MarkupTrans</c> record of the letter of credit miscellaneous charge allocation.
        #/// </summary>
        #/// <param name="bankLCImportChargeAllocation_SA">
        #/// The record of letter of credit miscellaneous charge allocation.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// The record found in the <c>MarkupTrans</c> table.
        #/// </returns>
        #public static MarkupTrans findByBankLCImportChargeAllocation_SA(
        #    BankLCImportChargeAllocation_SA bankLCImportChargeAllocation_SA,
        #    boolean _forUpdate = false)
        #{
        #    MarkupTrans markupTrans;
        #
        #    if (bankLCImportChargeAllocation_SA)
        #    {
        #        markupTrans.selectForUpdate(_forUpdate);
        #
        #        select firstonly markupTrans
        #            where markupTrans.BankLCImportChargeAllocation_SA == bankLCImportChargeAllocation_SA.RecId;
        #    }
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findByCustInvoiceLineRefId
        #/// <summary>
        #/// Finds a specific <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <param name="_custInvoiceLineIdRefRecId">
        #/// The record ID of the <c>CustInvoiceLineIdRef</c> record.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that indicates whether to select the record for update; optional.
        #/// </param>
        #/// <param name="_concurrencyModel">
        #/// A value that is used when the table is not automatically concurrent; optional.
        #/// </param>
        #/// <returns>
        #/// A <c>MarkupTrans</c> table buffer.
        #/// </returns>
        #
        #public static MarkupTrans findByCustInvoiceLineRefId(
        #    CustInvoiceLineIdRefRecId _custInvoiceLineIdRefRecId ,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    MarkupTrans markupTrans;
        #    ;
        #
        #    markupTrans.selectForUpdate(_forupdate);
        #    if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        markupTrans.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    select firstonly markupTrans
        #        where markupTrans.CustInvoiceLineIdRef == _custInvoiceLineIdRefRecId && !markupTrans.IsDeleted;
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findByCustnterestTransLineIdRef
        #/// <summary>
        #/// Finds the specified record in the <c>Markup</c> table.
        #/// </summary>
        #/// <param name="_custnterestTransLineIdRefRecId">
        #/// The record ID of the <c>CustInterestTransLineIdRef_MarkupTrans</c> record.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A boolean value that indicates whether to update the record.
        #/// </param>
        #/// <param name="_concurrencyModel">
        #/// The concurrency model option to use when reading the record; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>CustInvoiceLine</c> table; otherwise, an empty record.
        #/// </returns>
        #public static MarkupTrans findByCustnterestTransLineIdRef(RecId       _custnterestTransLineIdRefRecId ,
        #                                              boolean                 _forupdate = false,
        #                                              ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    CustInterestTransLineIdRef_MarkupTrans  custInterestTransLineIdRef;
        #    MarkupTrans                             markupTrans;
        #
        #    custInterestTransLineIdRef.selectForUpdate(_forupdate);
        #    if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        custInterestTransLineIdRef.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    select firstonly markupTrans
        #        join RecId from custInterestTransLineIdRef
        #            where   custInterestTransLineIdRef.RecId == _custnterestTransLineIdRefRecId &&
        #                    custInterestTransLineIdRef.TransRecId == markupTrans.TransRecId &&
        #                    custInterestTransLineIdRef.TransTableId == markupTrans.TransTableId &&
        #                    custInterestTransLineIdRef.LineNum_MarkupTrans == markupTrans.LineNum;
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findBySourceDocumentLine
        #/// <summary>
        #///    Finds the <c>MarkupTrans</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record RecId.
        #/// </param>
        #/// <param name="_update">
        #/// True if the record being retrieved will be updated; otherwise, false.
        #/// </param>
        #/// <returns>
        #///    A <c>MarkupTrans</c> record.
        #/// </returns>
        #static public MarkupTrans findBySourceDocumentLine(RefRecId _sourceDocumentLine, boolean _update = false)
        #{
        #    MarkupTrans     markupTrans;
        #
        #    markupTrans.selectForUpdate(_update);
        #
        #    select firstonly crossCompany markupTrans
        #            where markupTrans.SourceDocumentLine == _sourceDocumentLine;
        #
        #    return markupTrans;
        #}
        #
      ENDSOURCE
      SOURCE #findCustomsValue_IN
        #/// <summary>
        #/// Finds customs value of markup transaction.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The tableId.
        #/// </param>
        #/// <param name="_recId">
        #/// The recId.
        #/// </param>
        #/// <returns>
        #/// Returns the instance of the <c>MarkupValue</c> class.
        #/// </returns>
        #public static MarkupValue findCustomsValue_IN(TableId     _tableId,
        #                                              RecId       _recId)
        #{
        #    MarkupTrans  markupTrans;
        #    AmountCur    calculatedAmountLoc;
        #    ;
        #    if (_tableId && _recId)
        #    {
        #        while select CalculatedAmount, CurrencyCode from markupTrans
        #               where    markupTrans.TransRecId      == _recId     &&
        #                        markupTrans.TransTableId    == _tableId
        #        {
        #            calculatedAmountLoc += Currency::curAmount2CurAmount(abs(markupTrans.CalculatedAmount), markupTrans.CurrencyCode, CustInvoiceTrans::findRecId(_recId).CurrencyCode);
        #        }
        #    }
        #    return calculatedAmountLoc;
        #}
      ENDSOURCE
      SOURCE #findOrigTrans
        #/// <summary>
        #/// Retrieves a <c>MarkupTrans</c> record for the original document and a specified transaction.
        #/// </summary>
        #/// <param name="_origTableId">
        #/// The table ID of the original document.
        #/// </param>
        #/// <param name="_origRecId">
        #/// The record ID of the original document.
        #/// </param>
        #/// <param name="_transTableId">
        #/// The table ID of the transaction.
        #/// </param>
        #/// <param name="_transRecId">
        #/// The record ID of the transaction.
        #/// </param>
        #/// <param name="_update">
        #/// true if the record being retrieved will be updated; otherwise, false.
        #/// </param>
        #/// <returns>
        #/// The <c>MarkupTrans</c> record associated with the original document and specified transaction, if
        #/// one exists.
        #/// </returns>
        #public static MarkupTrans findOrigTrans(RefTableId _origTableId, RefRecId _origRecId, RefTableId _transTableId, RefRecId _transRecId, boolean _update = false)
        #{
        #    MarkupTrans  markupTrans;
        #
        #
        #    if (_origTableId && _origRecId && _transTableId && _transRecId)
        #    {
        #        markupTrans.selectForUpdate(_update);
        #
        #        select firstonly markupTrans
        #                where markupTrans.OrigTableId == _origTableId &&
        #                      markupTrans.OrigRecId == _origRecId &&
        #                      markupTrans.TransTableId == _transTableId &&
        #                      markupTrans.TransRecId == _transRecId &&
        #                     !markupTrans.IsDeleted;
        #    }
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findPurchLine_IN
        #/// <summary>
        #/// Reads the <c>MarkupTrans</c> table for the specified recid and table id.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The unique table id to find.
        #/// </param>
        #/// <param name="_recId">
        #/// The unique record id to find.
        #/// </param>
        #/// <returns>
        #/// A buffer containing <c>MarkupTrans</c> table.
        #/// </returns>
        #public static MarkupTrans findPurchLine_IN(TableId _tableId,
        #                                    RecId   _recId)
        #{
        #    MarkupTrans  markupTrans;
        #
        #    if (_tableId && _recId)
        #    {
        #        select firstonly markupTrans
        #               where markupTrans.TransTableId   == _tableId
        #                  && markupTrans.TransRecId     == _recId;
        #    }
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #public static MarkupTrans findRecId(RecId _recId, boolean _update = false, boolean _skipSoftDeleted = true)
        #{
        #    MarkupTrans  markupTrans;
        #
        #    if (_recId)
        #    {
        #        markupTrans.selectForUpdate(_update);
        #
        #        select firstonly markupTrans
        #               where markupTrans.RecId == _recId;
        #    }
        #
        #    if (_skipSoftDeleted && markupTrans.IsDeleted)
        #    {
        #        markupTrans = null;
        #    }
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #findRecId_W
        #public static MarkupTrans findRecId_W(RecId   _recId,
        #                                      boolean _update = false)
        #{
        #    MarkupTrans  markupTrans;
        #    ;
        #
        #    markupTrans.selectForUpdate(_update);
        #
        #    if (_recId)
        #    {
        #        select firstonly markupTrans
        #               index hint RecId
        #               where markupTrans.RecId == _recId;
        #    }
        #
        #    return markupTrans;
        #}
        #
      ENDSOURCE
      SOURCE #findSumValue_IN
        #/// <summary>
        #/// Reads the <c>MarkupTrans</c> table for the specified recid, table id and markup code.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The unique table id to find.
        #/// </param>
        #/// <param name="_recId">
        #/// The unique record id to find.
        #/// </param>
        #/// <param name="_markupCode">
        #/// The markup code to find.
        #/// </param>
        #/// <returns>
        #/// Returns markup value if exist.
        #/// </returns>
        #public static MarkupValue findSumValue_IN(TableId    _tableId,
        #                                         RecId       _recId,
        #                                         MarkupCode  _markupCode)
        #{
        #    MarkupTrans  markupTrans;
        #
        #    if (_tableId && _recId && _markupCode)
        #    {
        #        select sum(Value) from markupTrans
        #            where markupTrans.TransRecId    == _recId   &&
        #                  markupTrans.TransTableId  == _tableId &&
        #                  markupTrans.MarkupCode    == _markupCode;
        #    }
        #    else if(_tableId && _recId && !_markupCode)
        #    {
        #        select sum(Value) from markupTrans
        #            where markupTrans.TransRecId    == _recId   &&
        #                  markupTrans.TransTableId  == _tableId;
        #    }
        #    return markupTrans.Value;
        #}
      ENDSOURCE
      SOURCE #findValue
        #static MarkupTrans findValue(TableId   _tableId,
        #                             RecId     _recId,
        #                             boolean    update = false)
        #{
        #    MarkupTrans  markupTrans;
        #    ;
        #
        #    markupTrans.selectForUpdate(update);
        #
        #    if (_tableId  &&  _recId)
        #    {
        #        select firstonly markupTrans
        #               where markupTrans.TransTableId == _tableId &&
        #                     markupTrans.TransRecId == _recId     &&
        #                    !markupTrans.IsDeleted;
        #    }
        #
        #    return markupTrans;
        #}
      ENDSOURCE
      SOURCE #getItemMiscChargesAmount
        #/// <summary>
        #/// Gets Item miscellaneous charges calculated amount.
        #/// </summary>
        #/// <param name="_tableRefRecId">
        #/// Table Reference ID.
        #/// </param>
        #/// <param name="_refRecId">
        #/// Record reference ID.
        #/// </param>
        #/// <returns>
        #/// Total calculated amount for miscellaneous charges of type Item.
        #/// </returns>
        #public static AmountMST getItemMiscChargesAmount(
        #    MarkupTransRefTableId _tableRefRecId,
        #    MarkupTransRefRecId _refRecId)
        #{
        #    MarkupTrans markupTrans;
        #    MarkupTable markupTable;
        #    AmountMST amount;
        #    AmountMST tempAmount;
        #    CurrencyExchangeHelper currencyExchangeHelper;
        #    CurrencyCode accountingCurrency = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
        #
        #    // MarkupType Item can only be on the CustType (debit) side.
        #    // if 'Apply US Taxation rule' is enabled on TaxParameters
        #    // then CalculatedAmount field would include taxes associated with Miscellaneous charge line.
        #
        #    if (MarkupTrans::isMarkupTransSalesRelated(_tableRefRecId))
        #    {
        #        // Since Item is always CustType and in sales related scenario the sign is negative on CalculatedAmount.
        #        while select CurrencyCode, TransDate, sum(CalculatedAmount) from markupTrans
        #            group by CurrencyCode, TransDate
        #            where markupTrans.TransTableId == _tableRefRecId
        #            && markupTrans.TransRecId == _refRecId
        #            && !markupTrans.IsDeleted
        #            && markupTrans.Voucher
        #        exists join markupTable
        #            where markupTable.ModuleType == markupTrans.ModuleType
        #                && markupTable.MarkupCode == markupTrans.MarkupCode
        #                && markupTable.CustType == MarkupType::Item
        #        {
        #            if (accountingCurrency == markupTrans.CurrencyCode)
        #            {
        #                amount -= markupTrans.CalculatedAmount;
        #            }
        #            else
        #            {
        #                currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(), markupTrans.TransDate);
        #                amount -= currencyExchangeHelper.calculateTransactionToAccounting(markupTrans.CurrencyCode, markupTrans.CalculatedAmount, true);
        #            }
        #        }
        #    }
        #    else
        #    {
        #        while select CurrencyCode, TransDate, sum(CalculatedAmount) from markupTrans
        #            group by CurrencyCode, TransDate
        #            where markupTrans.TransTableId == _tableRefRecId
        #            && markupTrans.TransRecId == _refRecId
        #            && !markupTrans.IsDeleted
        #            && markupTrans.Voucher
        #        exists join markupTable
        #            where markupTable.ModuleType == markupTrans.ModuleType
        #                && markupTable.MarkupCode == markupTrans.MarkupCode
        #                && markupTable.CustType == MarkupType::Item
        #                && markupTable.VendType == MarkupType::CustVend
        #        {
        #            if (accountingCurrency == markupTrans.CurrencyCode)
        #            {
        #                amount += markupTrans.CalculatedAmount;
        #            }
        #            else
        #            {
        #                currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(), markupTrans.TransDate);
        #                amount += currencyExchangeHelper.calculateTransactionToAccounting(markupTrans.CurrencyCode, markupTrans.CalculatedAmount, true);
        #            }
        #        }
        #
        #        while select CurrencyCode, TransDate, sum(CalculatedAmount) from markupTrans
        #            group by CurrencyCode, TransDate
        #            where markupTrans.TransTableId == _tableRefRecId
        #            && markupTrans.TransRecId == _refRecId
        #            && !markupTrans.IsDeleted
        #            && markupTrans.Voucher
        #        exists join markupTable
        #                where markupTable.ModuleType == markupTrans.ModuleType
        #                    && markupTable.MarkupCode == markupTrans.MarkupCode
        #                    && markupTable.CustType == MarkupType::Item
        #                    && markupTable.VendType != MarkupType::CustVend
        #        {
        #            if (accountingCurrency == markupTrans.CurrencyCode)
        #            {
        #                tempAmount = markupTrans.CalculatedAmount;
        #            }
        #            else
        #            {
        #                currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(), markupTrans.TransDate);
        #                tempAmount = currencyExchangeHelper.calculateTransactionToAccounting(markupTrans.CurrencyCode, markupTrans.CalculatedAmount, true);
        #            }
        #
        #            if (BrazilParameters::isEnabled())
        #            {
        #                // Since Item is always CustType and in non-sales related scenario the sign is positive.
        #                amount += tempAmount;
        #            }
        #            else
        #            {
        #                amount -= tempAmount;
        #            }
        #        }
        #    }
        #
        #    return amount;
        #}
      ENDSOURCE
      SOURCE #getMarkupRecIdsBySource
        #public static SetEnumerator getMarkupRecIdsBySource(TableId _sourceTableId, RecId _sourceRecId)
        #{
        #    Set markupSet;
        #    SetEnumerator markupSetEnumerator;
        #    MarkupTrans markupTrans;
        #
        #    markupSet = SysTransactionScopeCache::get(tableStr(MarkupTrans), [_sourceTableId, _sourceRecId], null);
        #    if (!markupSet)
        #    {
        #        markupSet = new Set(Types::Int64);
        #
        #        while select RecId from markupTrans where
        #            markupTrans.TransRecId == _sourceRecId &&
        #            markupTrans.TransTableId == _sourceTableId &&
        #            !markupTrans.IsDeleted
        #        {
        #            markupSet.add(markupTrans.RecId);
        #        }
        #
        #        SysTransactionScopeCache::set(tableStr(MarkupTrans), [_sourceTableId, _sourceRecId], markupSet);
        #    }
        #
        #    markupSetEnumerator = markupSet.getEnumerator();
        #    return markupSetEnumerator;
        #}
      ENDSOURCE
      SOURCE #getUniqueMarkupCodes
        #public static void getUniqueMarkupCodes(Set _uniqueMarkupCodes, MarkupTransRefTableId _tableId, MarkupTransRefRecId _refRecId)
        #{
        #    MarkupTrans             markupTrans;
        #
        #    while select MarkupCode from markupTrans
        #    where markupTrans.TransTableId == _tableId
        #    && markupTrans.TransRecId == _refRecId
        #    && !markupTrans.IsDeleted
        #    {
        #        if (!_uniqueMarkupCodes.in(markupTrans.MarkupCode))
        #        {
        #            _uniqueMarkupCodes.add(markupTrans.MarkupCode);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #hasVendorInvoice
        #/// <summary>
        #/// Determines whether the misc. charge is connected to a purchase order invoice.
        #/// </summary>
        #/// <param name="_tableId">The <c>TableId</c> of the parent record.</param>
        #/// <param name="_transRecId">The <c>RecId</c> of the parent record.</param>
        #/// <returns>true if the misc. charge is connected to a purchase order invoice</returns>
        #public static boolean hasVendorInvoice(TableId _tableId, RefRecId _transRecId)
        #{
        #    switch (_tableId)
        #    {
        #        case tableNum(PurchTable):
        #            return PurchTable::findRecId(_transRecId).isInvoiceMatched();
        #
        #        case tableNum(PurchLine):
        #            return PurchLine::findRecId(_transRecId).isInvoiceMatched();
        #
        #        case tableNum(SalesTable):
        #            return SalesTable::findRecId(_transRecId).isInterCompanyPOInvoiceMatched();
        #
        #        case tableNum(SalesLine):
        #            return SalesLine::findRecId(_transRecId).isInterCompanyOrderLineInvoiceMatched();
        #
        #        default:
        #            return false;
        #    }
        #}
      ENDSOURCE
      SOURCE #isDeleted
        #/// <summary>
        #/// Indicates whether the <c>MarkupTrans</c> record was deleted.
        #/// </summary>
        #/// <param name="_recId">
        #/// A <c>MarkupTrans</c> record record ID.
        #/// </param>
        #/// <returns>
        #/// true if the markup is deleted; otherwise, false.
        #/// </returns>
        #public static boolean isDeleted(RecId _recId)
        #{
        #    MarkupTrans  markupTrans;
        #
        #    if (_recId)
        #    {
        #        select firstonly IsDeleted from markupTrans
        #               where markupTrans.RecId == _recId;
        #    }
        #
        #    return markupTrans.IsDeleted;
        #}
      ENDSOURCE
      SOURCE #isMarkupTransSalesRelated
        #/// <summary>
        #/// Checks if the associated table Id is sales related.
        #/// </summary>
        #/// <param name="_transTableId">
        #/// The table id.
        #/// </param>
        #/// <returns>
        #/// True is the table is sales related else false.
        #/// </returns>
        #public static boolean isMarkupTransSalesRelated(MarkupTransRefTableId _transTableId)
        #{
        #    switch (_transTableId)
        #    {
        #        case tableNum(SalesTable)           :
        #        case tableNum(SalesLine)            :
        #        case tableNum(CustInvoiceTable)     :
        #        case tableNum(CustQuotationJour)    :
        #        case tableNum(CustQuotationTrans)   :
        #        case tableNum(CustConfirmJour)      :
        #        case tableNum(CustConfirmTrans)     :
        #        case tableNum(CustInvoiceJour)      :
        #        case tableNum(CustInvoiceTrans)     :
        #        case tableNum(SalesBasket)          :
        #        case tableNum(SalesBasketLine)      :
        #        case tableNum(SalesQuotationTable)  :
        #        case tableNum(SalesQuotationLine)   :
        #        // BeginMod
        #        case tableNum(WHSLoadLine)          :
        #        case tableNum(WHSLoadTable)         :
        #        case tableNum(CustInvoice4PaymJour_RU)  :
        #        case tableNum(CustInvoice4PaymTrans_RU) :
        #            return true;
        #
        #        case tableNum(PurchTable)           :
        #        case tableNum(PurchLine)            :
        #        case tableNum(PurchRFQCaseTable)    :
        #        case tableNum(VendInvoiceInfoTable) :
        #        case tableNum(VendInvoiceInfoSubTable)    :
        #        case tableNum(VendInvoiceInfoLine)  :
        #        case tableNum(PurchRFQCaseLine)     :
        #        case tableNum(PurchRFQTable)        :
        #        case tableNum(PurchRFQLine)         :
        #        case tableNum(PurchReqLine)         :
        #        case tableNum(PurchReqLineHistory)         :
        #        case tableNum(VendInvoiceJour)      :
        #        case tableNum(VendInvoiceTrans)     :
        #        case tableNum(InventTransferTable)  :
        #        case tableNum(InventTransferLine)   :
        #            return false;
        #
        #        default:
        #            if (_transTableId == tableNum(CustInvoiceLine) && SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #            {
        #                return true;
        #            }
        #    }
        #
        #    throw error(strFmt("@SYS23396", funcName()));
        #}
      ENDSOURCE
      SOURCE #lastLineNum
        #static LineNum  lastLineNum(TableId   transTableId,
        #                            RecId     transRecId)
        #{
        #    //The where clause !<buffer>Isdeleted isn't added as soft-deleted line numbers shouldn't be reused.
        #    return (select maxof(LineNum) from markupTrans
        #                index hint TableRecIdIdx
        #                where markupTrans.TransTableId  == transTableId &&
        #                      markupTrans.TransRecId    == transRecId).LineNum;
        #}
      ENDSOURCE
      SOURCE #markupAllowed
        #static boolean markupAllowed(Common _common)
        #{
        #    boolean             markupAllowed = true;
        #    SalesTable          salesTable;
        #    SalesLine           salesLine;
        #    SalesQuotationTable salesQuotationTable;
        #    SalesQuotationLine  salesQuotationLine;
        #
        #    switch (_common.TableId)
        #    {
        #        case tableNum(SalesTable):
        #            salesTable  = _common as SalesTable;
        #            markupAllowed = salesTable.markupAllowed();
        #            break;
        #
        #        case tableNum(SalesLine):
        #            salesLine   = _common as SalesLine;
        #            markupAllowed = salesLine.markupAllowed();
        #            break;
        #
        #        case tableNum(SalesQuotationTable):
        #            salesQuotationTable  = _common as SalesQuotationTable;
        #            markupAllowed = salesQuotationTable.markupAllowed();
        #            break;
        #
        #        case tableNum(SalesQuotationLine):
        #            salesQuotationLine   = _common as SalesQuotationLine;
        #            markupAllowed = salesQuotationLine.markupAllowed();
        #            break;
        #
        #        case tableNum(VendInvoiceInfoTable):
        #        case tableNum(VendInvoiceInfoSubTable):
        #        case tableNum(VendInvoiceInfoLine):
        #            markupAllowed = _common.markupAllowed();
        #            break;
        #    }
        #
        #    return markupAllowed;
        #}
      ENDSOURCE
      SOURCE #mcrExistNotUserOrOverride
        #/// <summary>
        #/// Returns whether there exists any charges that is not a user overridden charge
        #/// and is not a user added charge.
        #/// and recid
        #/// </summary>
        #/// <param name="_tableId">
        #/// Table number of record to check if charges attached.
        #/// </param>
        #/// <param name="_recId">
        #/// Record number of record to check if charges attached.
        #/// </param>
        #/// <returns>
        #/// true if at least one misc charge exists that is not overridden or user generated; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// If only user generated misc. charges exist then this function will still return true.
        #/// </remarks>
        #static boolean mcrExistNotUserOrOverride(TableId   _tableId,
        #                                         RecId     _recId)
        #{
        #    if (_tableId  &&  _recId)
        #    {
        #        return (select firstonly RecId from markupTrans
        #                    where markupTrans.TransTableId  == _tableId
        #                       && markupTrans.TransRecId    == _recId
        #                       && markupTrans.mcrMarkupTransCreatedBy != MCRMarkupTransCreatedBy::User
        #                       && markupTrans.mcrMiscChargeOverride   != NoYes::Yes
        #                       && !markupTrans.IsDeleted).RecId != 0;
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #mcrGetSalesRecs
        #/// <summary>
        #/// Concatenates the <c>RecId</c> of <c>MarkupTrans</c> records
        #/// associated with a <c>SalesTable</c> record and all the <c>SalesLine</c> records
        #/// associated with the <c>SalesTable</c> record.
        #/// </summary>
        #/// <param name="_salesTable">
        #/// The <c>SalesTable</c> record to find records for.
        #/// </param>
        #/// <returns>
        #/// List of <c>MarkupTrans</c> recIds belonging to the header and lines on a sales order.
        #/// </returns>
        #static str mcrGetSalesRecs(SalesTable _salesTable)
        #{
        #    MarkupTrans markupTrans;
        #    SalesLine   salesLine;
        #    str         recIds;
        #
        #    while select RecId from markupTrans
        #        where markupTrans.TransRecId    == _salesTable.RecId
        #           && markupTrans.TransTableId  == tableNum(SalesTable)
        #    {
        #        recIds += int642str(markupTrans.RecId) + ",";
        #    }
        #
        #    while select RecId from salesLine
        #        where salesLine.SalesId == _salesTable.SalesId
        #        join RecId from markupTrans
        #        where markupTrans.TransRecId    == salesLine.RecId
        #            && markupTrans.TransTableId == tableNum(SalesLine)
        #    {
        #         recIds += int642str(markupTrans.RecId) + ",";
        #    }
        #    return recIds;
        #}
      ENDSOURCE
      SOURCE #promptCopyTaxGroupToMarkupTrans
        #/// <summary>
        #/// Asks the user whether to copy the new tax group to misc. charges.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #/// <returns>
        #/// The choice selected by the user in the prompt.
        #/// </returns>
        #client static DialogButton promptCopyTaxGroupToMarkupTrans(TableId _tableId, RecId _recId)
        #{
        #    DialogButton ret;
        #
        #    if (MarkupTrans::exist(_tableId, _recId))
        #    {
        #        ret = Box::yesYesAllNoCancel(strFmt("@SYS310380", "@SYS5461", "@SYS54733"), DialogButton::Yes);
        #    }
        #    else
        #    {
        #        ret = DialogButton::No;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #promptCopyTaxItemGroupToMarkupTrans_BR
        #/// <summary>
        #/// Asks the user whether to copy the new tax item group to misc. charges.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #/// <returns>
        #/// The choice selected by the user in the prompt.
        #/// </returns>
        #client static DialogButton promptCopyTaxItemGroupToMarkupTrans_BR(TableId _tableId, RecId _recId)
        #{
        #    DialogButton ret;
        #
        #    if (MarkupTrans::exist(_tableId, _recId))
        #    {
        #        ret = Box::yesYesAllNoCancel(strFmt("@SYS4081672", "@SYS5461", "@SYS54733"), DialogButton::Yes);
        #    }
        #    else
        #    {
        #        ret = DialogButton::No;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #updateCallerDatasource
        ##ISOCountryRegionCodes
        #static void updateCallerDatasource(
        #    Common _common,
        #    MarkupUseInMatching _useInMatching = NoYes::No,
        #    boolean _deleteAllJournalLines = false)
        #{
        #    Object          dataSource;
        #    boolean         useTotalsMatching;
        #
        #    switch(_common.TableId)
        #    {
        #        case tableNum(VendInvoiceInfoTable):
        #        case tableNum(VendInvoiceInfoSubTable):
        #        case tableNum(VendInvoiceInfoLine):
        #            // Get matching flag for 3 VendInvoice tables, then fall through to update datasource
        #            useTotalsMatching = VendParameters::find().UseTotalPriceMatching == NoYes::Yes;
        #
        #        case tableNum(PurchReqLine):
        #        case tableNum(CustInvoiceTable):
        #        case tableNum(CustInvoiceLine):
        #        case tableNum(SalesTable):
        #        case tableNum(SalesLine):
        #            if (_common.isFormDataSource())
        #            {
        #                if (_common.TableId == tableNum(CustInvoiceLine) &&
        #                    !SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
        #                {
        #                    break;
        #                }
        #                dataSource = _common.dataSource();
        #                if (dataSource)
        #                {
        #                    if (formDataSourceHasMethod(dataSource, identifierStr(setTouched)))
        #                    {
        #                        dataSource.setTouched();
        #                    }
        #
        #                    if (_deleteAllJournalLines && formDataSourceHasMethod(dataSource, identifierStr(setDeleteAllJournalLines)))
        #                    {
        #                        dataSource.setDeleteAllJournalLines();
        #                    }
        #
        #                    if (formDataSourceHasMethod(dataSource, identifierStr(checkCreditLimit)))
        #                    {
        #                        dataSource.checkCreditLimit();
        #                    }
        #
        #                    if ((_useInMatching == NoYes::Yes || useTotalsMatching) &&
        #                        formDataSourceHasMethod(dataSource, identifierStr(modifiedField)))
        #                    {
        #                        // Call back to the parent datasource, notifying that no fields changed, but the invoice should be unapproved
        #                        dataSource.modifiedField(0, true);
        #                    }
        #
        #                    if (formDataSourceHasMethod(dataSource, identifierStr(updateBudgetCheckResultDisplay)))
        #                    {
        #                        dataSource.updateBudgetCheckResultDisplay();
        #                    }
        #                }
        #                if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ])
        #                    && (   _common.TableId == tableNum(CustInvoiceTable)
        #                        || _common.TableId == tableNum(CustInvoiceLine)))
        #                {
        #                    new CustFreeInvoiceCalcTotals(_common).calc();
        #                }
        #            }
        #            break;
        #
        #        case tableNum(PurchTable):
        #        case tableNum(PurchLine):
        #            if ( _common.isFormDataSource())
        #            {
        #                dataSource = _common.dataSource();
        #
        #                if (dataSource)
        #                {
        #                    // Refresh the datasource after the budget check in order to update the budget check results indicator.
        #                    dataSource.reread();
        #                }
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #updateTaxGroup
        #/// <summary>
        #/// Updates the tax group for the misc. charges associated with an entity.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #/// <param name="_taxGroup">
        #/// The new tax group.
        #/// </param>
        #/// <param name="_origTaxGroup">
        #/// The prior tax group for the entity.
        #/// </param>
        #/// <param name="_dialogButtonResult">
        #/// A result which indicates which misc. charges to update.
        #/// </param>
        #/// <param name="_onlyFixed">
        #/// A boolean value indicating whether only misc charges of category <c>Fixed</c> should be updated, optional.
        #/// </param>
        #/// <remarks>
        #/// If the <paramref name="_dialogButtonResult"/> parameter is YesToAll then all misc. charges are updated, if it is Yes then only those with the same original tax group are updated; otherwise, none are updated.
        #/// </remarks>
        #static server void updateTaxGroup(
        #    TableId         _tableId,
        #    RecId           _recId,
        #    TaxGroup        _taxGroup,
        #    TaxGroup        _origTaxGroup,
        #    DialogButton    _dialogButtonResult,
        #    boolean         _onlyFixed = false)
        #{
        #    MarkupTrans markupTrans;
        #    MarkupTable markupTable;
        #
        #    if (_dialogButtonResult != DialogButton::Yes && _dialogButtonResult != DialogButton::YesToAll)
        #    {
        #        return;
        #    }
        #    ttsbegin;
        #
        #    update_recordset markupTrans
        #    setting
        #        TaxGroup = _taxGroup
        #    where markupTrans.TransTableId  == _tableId
        #        && markupTrans.TransRecId   == _recId
        #        && !markupTrans.IsDeleted
        #        && (_dialogButtonResult     == DialogButton::YesToAll
        #            || markupTrans.TaxGroup == _origTaxGroup)
        #        && (!_onlyFixed || markupTrans.MarkupCategory == MarkupCategory::Fixed)
        #    exists join markupTable
        #        where markupTable.MarkupCode    == markupTrans.MarkupCode
        #            && markupTable.ModuleType   == markupTrans.ModuleType
        #            // Only update in customer faced scenarios with debit type = customer/vendor,
        #            // and in vendor faced scenarios with credit type = customer/vendor)
        #            && ((markupTable.CustType       == MarkupType::CustVend
        #                && markupTable.ModuleType   ==
        #                                               MarkupModuleType::Cust
        #                 )
        #                || (markupTable.VendType    == MarkupType::CustVend
        #                && markupTable.ModuleType   ==
        #                                               MarkupModuleType::Vend
        #            ));
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #updateTaxItemGroup_BR
        #/// <summary>
        #/// Updates the tax item group for the misc. charges associated with an entity.
        #/// </summary>
        #/// <param name="_tableId">
        #/// The <c>TableId</c> of the entity.
        #/// </param>
        #/// <param name="_recId">
        #/// The <c>RecId</c> of the entity.
        #/// </param>
        #/// <param name="_taxItemGroup">
        #/// The new tax item group.
        #/// </param>
        #/// <param name="_origTaxItemGroup">
        #/// The prior tax item group for the entity.
        #/// </param>
        #/// <param name="_dialogButtonResult">
        #/// A result which indicates which misc. charges to update.
        #/// </param>
        #/// <param name="_onlyFixed">
        #/// A boolean value indicating whether only misc charges of category <c>Fixed</c> should be updated, optional.
        #/// </param>
        #/// <remarks>
        #/// If the <paramref name="_dialogButtonResult"/> parameter is YesToAll then all misc. charges are updated, if it is Yes then only those with the same original tax item group are updated; otherwise, none are updated.
        #/// </remarks>
        #static server void updateTaxItemGroup_BR(
        #    TableId         _tableId,
        #    RecId           _recId,
        #    TaxItemGroup    _taxItemGroup,
        #    TaxItemGroup        _origTaxItemGroup,
        #    DialogButton    _dialogButtonResult,
        #    boolean         _onlyFixed = false)
        #{
        #    MarkupTrans markupTrans;
        #    MarkupTable markupTable;
        #
        #    if (_dialogButtonResult != DialogButton::Yes && _dialogButtonResult != DialogButton::YesToAll)
        #    {
        #        return;
        #    }
        #
        #    ttsbegin;
        #
        #    update_recordset markupTrans
        #    setting
        #        TaxItemGroup = _taxItemGroup
        #    where markupTrans.TransTableId  == _tableId
        #        && markupTrans.TransRecId   == _recId
        #        && !markupTrans.IsDeleted
        #        && (_dialogButtonResult         == DialogButton::YesToAll
        #            || markupTrans.TaxItemGroup == _origTaxItemGroup)
        #        && (!_onlyFixed || markupTrans.MarkupCategory == MarkupCategory::Fixed)
        #    exists join markupTable
        #        where markupTable.MarkupCode    == markupTrans.MarkupCode
        #            && markupTable.ModuleType   == markupTrans.ModuleType
        #            // Only update in customer faced scenarios with debit type = customer/vendor,
        #            // and in vendor faced scenarios with credit type = customer/vendor)
        #            && ((markupTable.CustType       == MarkupType::CustVend
        #                && markupTable.ModuleType   == MarkupModuleType::Cust
        #                 )
        #                || (markupTable.VendType    == MarkupType::CustVend
        #                && markupTable.ModuleType   == MarkupModuleType::Vend
        #            ));
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #viewCacheMarkupTrans
        #static RecordViewCache viewCacheMarkupTrans(Common _source, boolean _forUpdate, GoodsInRouteId_RU _goodsInRouteId = '')
        #{
        #    MarkupTrans markupTrans;
        #    ;
        #
        #    markupTrans.selectForUpdate(_forUpdate);
        #
        #    select nofetch markupTrans
        #        where   markupTrans.TransTableId    == _source.TableId    &&
        #                markupTrans.TransRecId      == _source.RecId      &&
        #                (! _goodsInRouteId || markupTrans.GoodsInRouteId_RU == _goodsInRouteId) &&
        #                markupTrans.IsDeleted       == NoYes::No;
        #
        #
        #    return new RecordViewCache(markupTrans);
        #}
        #
        #
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : PurchTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PurchTable
    EnforceFKRelation 0
    PROPERTIES
      Name                #PurchTable
      Label               #@SYS25204
      SearchLinkRefName   #EPPurchTableInfo
      TitleField1         #PurchId
      TitleField2         #PurchName
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #VendTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetHeader
      PrimaryIndex        #PurchIdx
      ClusterIndex        #PurchIdx
      SingularLabel       #@SYS15812
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS124480
      Origin              #{2C0A0159-0000-1000-B49B-F07268546162}
      LegacyId            #345
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountingDate
        DATE
        PROPERTIES
          Name                #AccountingDate
          HelpText            #@SYS335634
          Table               #PurchTable
          Origin              #{196A26BA-FC36-4D9C-92D8-04A286C0C328}
          LegacyId            #244
          ExtendedDataType    #AccountingDate
        ENDPROPERTIES
        
      FIELD #AccountingDistributionTemplate
        INT64
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #PurchTable
          Origin              #{197E10C9-08A5-4FC5-A49A-FE0F16157CE7}
          LegacyId            #243
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #AddressRefRecId
        INT64
        PROPERTIES
          Name                #AddressRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{85F453BF-3D7C-4F97-BE60-B4305AF659ED}
          LegacyId            #9
          ExtendedDataType    #AddressRefRecId
        ENDPROPERTIES
        
      FIELD #AddressRefTableId
        INT
        PROPERTIES
          Name                #AddressRefTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{D56F3EE6-990E-4F74-BDD9-6DE80F4F2904}
          LegacyId            #10
          ExtendedDataType    #AddressRefTableId
        ENDPROPERTIES
        
      FIELD #AutoSummaryModuleType
        ENUM
        PROPERTIES
          Name                #AutoSummaryModuleType
          Label               #@SYS57738
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{754527D8-990F-4AE7-9598-8D9A08A985EB}
          LegacyId            #75
          EnumType            #ModuleVendPurch
        ENDPROPERTIES
        
      FIELD #AvailSalesDate
        DATE
        PROPERTIES
          Name                #AvailSalesDate
          Table               #PurchTable
          Origin              #{35622941-0BB3-496D-B3AB-ECD8398E9A49}
          LegacyId            #16078
          ExtendedDataType    #RetailSalesDate
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeCode
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeCode
          Table               #PurchTable
          CountryRegionCodes  #NO
          IgnoreEDTRelation   #Yes
          Origin              #{1835D8B5-4522-4264-8F2E-14CFA4B357B1}
          LegacyId            #63
          ExtendedDataType    #BankCentralBankPurposeCode
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeText
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeText
          Table               #PurchTable
          CountryRegionCodes  #NO
          Origin              #{CF6DB1BB-3571-419E-BAC3-91ECB3790D82}
          LegacyId            #72
          ExtendedDataType    #BankCentralBankPurposeText
          StringSize          #140
        ENDPROPERTIES
        
      FIELD #BankDocumentType
        ENUM
        PROPERTIES
          Name                #BankDocumentType
          Label               #@SYS313726
          HelpText            #@SYS313643
          Table               #PurchTable
          Origin              #{6E0FEEBA-4803-4EC8-AB1F-0AB2ED36C360}
          LegacyId            #194
          ExtendedDataType    #BankDocumentFacilityNature
          EnumType            #BankDocumentType
        ENDPROPERTIES
        
      FIELD #CashDisc
        STRING
        PROPERTIES
          Name                #CashDisc
          HelpText            #@SYS5825
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{FDDAB1E6-EAEA-4468-BE9E-72C6175ECCD6}
          LegacyId            #15
          ExtendedDataType    #VendCashDiscCode
        ENDPROPERTIES
        
      FIELD #CashDiscPercent
        REAL
        PROPERTIES
          Name                #CashDiscPercent
          Table               #PurchTable
          Origin              #{6084F72E-7A80-4ECE-B97D-49AC9F13C085}
          LegacyId            #48
          ExtendedDataType    #DiscPct
        ENDPROPERTIES
        
      FIELD #ChangeRequestRequired
        ENUM
        PROPERTIES
          Name                #ChangeRequestRequired
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{43A0C43A-7A79-4ED8-886C-BF6F3E44E542}
          LegacyId            #127
          ExtendedDataType    #VersioningChangeRequestRequired
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ConfirmedDlv
        DATE
        PROPERTIES
          Name                #ConfirmedDlv
          Label               #@SYS4006394
          HelpText            #@SYS931
          Table               #PurchTable
          Origin              #{3CD0FB19-8418-4D66-9E85-40ED1A5D036F}
          LegacyId            #16057
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #ConfirmedDlvEarliest
        DATE
        PROPERTIES
          Name                #ConfirmedDlvEarliest
          Label               #@SYS138390
          HelpText            #@SYS138391
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{5B3438E4-FA6C-40D7-8CF0-9D43C42A7E96}
          LegacyId            #119
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #ConfirmingPO
        INT64
        PROPERTIES
          Name                #ConfirmingPO
          ConfigurationKey    #PublicSector
          Table               #PurchTable
          Origin              #{709496D1-C1B5-4A94-9ADB-A1FA52962571}
          LegacyId            #18000
          ExtendedDataType    #ConfirmingPORefRecId
        ENDPROPERTIES
        
      FIELD #ConsTarget_JP
        ENUM
        PROPERTIES
          Name                #ConsTarget_JP
          Table               #PurchTable
          Origin              #{2AD992D4-1221-45FC-A986-65C5249C5CBB}
          LegacyId            #8048
          ExtendedDataType    #VendConsTarget_JP
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ContactPersonId
        STRING
        PROPERTIES
          Name                #ContactPersonId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{7837341A-5ABD-4465-8ED9-BE041FB71E29}
          LegacyId            #57
          ExtendedDataType    #ContactPersonId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ContractNum_SA
        STRING
        PROPERTIES
          Name                #ContractNum_SA
          Table               #PurchTable
          Origin              #{C1D21789-5015-4924-8357-E73C574C9F4D}
          LegacyId            #126
          ExtendedDataType    #VendContractNumZakat_SA
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CountyOrigDest
        STRING
        PROPERTIES
          Name                #CountyOrigDest
          Table               #PurchTable
          Origin              #{8D4D0FCD-B3D8-47EB-91F7-456F85A1D9D2}
          LegacyId            #17
          ExtendedDataType    #AddressCountyOrigDest
        ENDPROPERTIES
        
      FIELD #CovStatus
        INT
        PROPERTIES
          Name                #CovStatus
          Table               #PurchTable
          Origin              #{5E443A82-57B5-4117-8B9A-DD6E5A4EA74E}
          LegacyId            #50
          ExtendedDataType    #CovStatus
        ENDPROPERTIES
        
      FIELD #CrossDockingDate
        DATE
        PROPERTIES
          Name                #CrossDockingDate
          Table               #PurchTable
          Origin              #{0FB51A82-2297-4AC2-8708-3B3750BF65C8}
          LegacyId            #16076
          ExtendedDataType    #RetailCrossDockingDate
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS5717
          Mandatory           #Yes
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{117BB636-BAE8-42B7-8C77-B891C4110B5B}
          LegacyId            #13
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #PurchTable
          Origin              #{562165EB-3DEB-4A04-8F2A-28D2782A1B30}
          LegacyId            #118
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DeliveryDate
        DATE
        PROPERTIES
          Name                #DeliveryDate
          HelpText            #@SYS2261
          Table               #PurchTable
          Origin              #{1869B0F0-9108-4B84-A369-57148BB58963}
          LegacyId            #7
          ExtendedDataType    #DlvDate
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          GroupPrompt         #@SYS7399
          Table               #PurchTable
          Origin              #{B48B85AC-EA73-4A01-9374-129A305AC717}
          LegacyId            #49
          ExtendedDataType    #LogisticsDeliveryName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryPostalAddress
        INT64
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #PurchTable
          Origin              #{D605ED99-6BB8-4077-9F9F-0B44F8A8FC80}
          LegacyId            #185
          ExtendedDataType    #LogisticsPostalAddressRecId
        ENDPROPERTIES
        
      FIELD #DeliveryType
        ENUM
        PROPERTIES
          Name                #DeliveryType
          Table               #PurchTable
          Origin              #{72CB10AB-B745-4E11-BFBB-6B786D93A603}
          LegacyId            #8
          ExtendedDataType    #PurchDlvAddrType
          EnumType            #PurchDlvAddr
        ENDPROPERTIES
        
      FIELD #DiscPercent
        REAL
        PROPERTIES
          Name                #DiscPercent
          Table               #PurchTable
          Origin              #{BCA31314-EA96-4D41-AD83-9A01338477BC}
          LegacyId            #21
          ExtendedDataType    #PurchEndDiscPct
        ENDPROPERTIES
        
      FIELD #DlvMode
        STRING
        PROPERTIES
          Name                #DlvMode
          HelpText            #@SYS12294
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{418C60E1-8FBC-4DBA-B50B-85C897C55C5E}
          LegacyId            #30
          ExtendedDataType    #VendDlvModeId
        ENDPROPERTIES
        
      FIELD #DlvTerm
        STRING
        PROPERTIES
          Name                #DlvTerm
          HelpText            #@SYS13640
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{0B1FCDB4-2E45-4E75-AA85-F59AE3AA0032}
          LegacyId            #29
          ExtendedDataType    #VendDlvTermId
        ENDPROPERTIES
        
      FIELD #DocumentState
        ENUM
        PROPERTIES
          Name                #DocumentState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{BDCE9FB6-BB82-4E76-874E-833D81346B5F}
          LegacyId            #129
          EnumType            #VersioningDocumentState
        ENDPROPERTIES
        
      FIELD #DocumentStatus
        ENUM
        PROPERTIES
          Name                #DocumentStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{24DC541C-E720-45D5-AE38-2561BA2E8A75}
          LegacyId            #56
          EnumType            #DocumentStatus
        ENDPROPERTIES
        
      FIELD #DossierImportation
        INT64
        PROPERTIES
          Name                #DossierImportation
          Label               #Numéro de dossier d'importation
          Table               #PurchTable
          Origin              #{462232CF-B118-43CE-800B-01328C017915}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Email
        STRING
        PROPERTIES
          Name                #Email
          Table               #PurchTable
          Origin              #{E639273A-2DC3-493D-A3D4-BAE814B6E862}
          LegacyId            #6
          ExtendedDataType    #EmailBase
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #EndDisc
        STRING
        PROPERTIES
          Name                #EndDisc
          Table               #PurchTable
          Origin              #{C3E5ACD9-23AC-4D47-9871-93188908E2E2}
          LegacyId            #25
          ExtendedDataType    #VendEndDiscCode
        ENDPROPERTIES
        
      FIELD #EnterpriseNumber
        STRING
        PROPERTIES
          Name                #EnterpriseNumber
          Table               #PurchTable
          Origin              #{DCBC71C8-493C-4EDA-AB79-CDCE8EC2E406}
          LegacyId            #40
          ExtendedDataType    #TaxEnterpriseNumber
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #ExchangeRateDate
        DATE
        PROPERTIES
          Name                #ExchangeRateDate
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{AB94E725-E527-4ED9-9A3D-47CD21116C26}
          ExtendedDataType    #AccountingDate
        ENDPROPERTIES
        
      FIELD #FinalizeClosingDate
        DATE
        PROPERTIES
          Name                #FinalizeClosingDate
          Visible             #No
          Table               #PurchTable
          Origin              #{15DA79E8-131E-4DB2-98CE-2118606A61E2}
          LegacyId            #252
          ExtendedDataType    #PurchFinalizeClosingDate
        ENDPROPERTIES
        
      FIELD #FixedDueDate
        DATE
        PROPERTIES
          Name                #FixedDueDate
          Table               #PurchTable
          Origin              #{B57CDA12-496A-421B-A9DC-5A07D4479A80}
          LegacyId            #80
          ExtendedDataType    #PurchFixedDueDate
        ENDPROPERTIES
        
      FIELD #FixedExchRate
        REAL
        PROPERTIES
          Name                #FixedExchRate
          Visible             #No
          Table               #PurchTable
          Origin              #{E49C72B9-020D-415A-9BA5-3A5D6AD83838}
          ExtendedDataType    #PurchFixedExchRate
        ENDPROPERTIES
        
      FIELD #FreightSlipType
        ENUM
        PROPERTIES
          Name                #FreightSlipType
          Table               #PurchTable
          Origin              #{4A7513B3-4870-486F-843E-86D3290E9933}
          LegacyId            #55
          ExtendedDataType    #VendFreightSlipType
          EnumType            #FreightSlipType
        ENDPROPERTIES
        
      FIELD #FreightZone
        STRING
        PROPERTIES
          Name                #FreightZone
          Table               #PurchTable
          Origin              #{A144B183-DC0F-426F-B63B-2BD947E8F934}
          LegacyId            #5
          ExtendedDataType    #VendFreightZoneId
        ENDPROPERTIES
        
      FIELD #FSHAutoCreated
        ENUM
        PROPERTIES
          Name                #FSHAutoCreated
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{1A9B35F4-2438-41D1-86FA-558A5CF2971D}
          LegacyId            #16075
          ExtendedDataType    #RetailAutoCreatedPurch
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InclTax
        ENUM
        PROPERTIES
          Name                #InclTax
          Table               #PurchTable
          Origin              #{B60DD1DA-6712-42F7-B4D8-3B4FE077A062}
          LegacyId            #71
          ExtendedDataType    #InclTax
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyAllowIndirectCreation
        ENUM
        PROPERTIES
          Name                #InterCompanyAllowIndirectCreation
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{EC08FD86-9B92-4B72-B8F8-77384842B8C8}
          LegacyId            #46
          ExtendedDataType    #InterCompanyAllowIndirectCreation
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyCompanyId
        STRING
        PROPERTIES
          Name                #InterCompanyCompanyId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{0296DB1E-812E-4B42-95B6-BFEA90E787E1}
          LegacyId            #87
          ExtendedDataType    #InterCompanyCompanyId
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #InterCompanyCustPurchOrderFormNum
        STRING
        PROPERTIES
          Name                #InterCompanyCustPurchOrderFormNum
          Table               #PurchTable
          Origin              #{B47BE2BB-388F-43E4-8BD1-128BEE3BF24C}
          LegacyId            #26
          ExtendedDataType    #CustPurchaseOrder
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyDirectDelivery
        ENUM
        PROPERTIES
          Name                #InterCompanyDirectDelivery
          Table               #PurchTable
          Origin              #{2BC00527-BF3C-4D48-A079-6732471BA796}
          LegacyId            #18
          ExtendedDataType    #InterCompanyDirectDelivery
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyOrder
        ENUM
        PROPERTIES
          Name                #InterCompanyOrder
          Table               #PurchTable
          Origin              #{F103156B-98EA-4372-B17E-646454921959}
          LegacyId            #89
          ExtendedDataType    #InterCompanyVendor
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyOrigin
        ENUM
        PROPERTIES
          Name                #InterCompanyOrigin
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{434F370F-429B-4026-B5D7-027D58A1A6AF}
          LegacyId            #47
          EnumType            #InterCompanyOrigin
        ENDPROPERTIES
        
      FIELD #InterCompanyOriginalCustAccount
        STRING
        PROPERTIES
          Name                #InterCompanyOriginalCustAccount
          Table               #PurchTable
          Origin              #{AFB047BC-DBAF-4EBA-B346-67CB5970E32F}
          LegacyId            #12
          ExtendedDataType    #InterCompanyOriginalCustAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyOriginalSalesId
        STRING
        PROPERTIES
          Name                #InterCompanyOriginalSalesId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{6BDBDFBC-93F2-44AF-B146-D0C425EF18A4}
          LegacyId            #11
          ExtendedDataType    #InterCompanyOriginalSalesId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanySalesId
        STRING
        PROPERTIES
          Name                #InterCompanySalesId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{2A7DE94E-1315-488B-8D90-D35D723B0F02}
          LegacyId            #88
          ExtendedDataType    #InterCompanySalesId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IntrastatAddValue_LV
        REAL
        PROPERTIES
          Name                #IntrastatAddValue_LV
          Table               #PurchTable
          Origin              #{F30FAF9F-AF0F-4BD5-BC5A-E86DFC17F9A9}
          LegacyId            #16014
          ExtendedDataType    #LvIntrastatAddValue
        ENDPROPERTIES
        
      FIELD #IntrastatFulfillmentDate_HU
        DATE
        PROPERTIES
          Name                #IntrastatFulfillmentDate_HU
          Table               #PurchTable
          Origin              #{CA9F3ED9-54CC-4595-9740-13DAFC26045C}
          LegacyId            #8142
          ExtendedDataType    #IntrastatFulfillmentDate_HU
        ENDPROPERTIES
        
      FIELD #InventLocationId
        STRING
        PROPERTIES
          Name                #InventLocationId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{3C988E04-D79D-4B63-AEFE-FF6E6DCA22DE}
          LegacyId            #61
          ExtendedDataType    #PurchInventLocationId
        ENDPROPERTIES
        
      FIELD #InventSiteId
        STRING
        PROPERTIES
          Name                #InventSiteId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{6EC57FA1-7C97-4197-9DD2-4A4F813157DD}
          LegacyId            #52
          ExtendedDataType    #InventSiteId
        ENDPROPERTIES
        
      FIELD #InvoiceAccount
        STRING
        PROPERTIES
          Name                #InvoiceAccount
          HelpText            #@SYS3548
          Mandatory           #Yes
          Table               #PurchTable
          Origin              #{08884263-311C-4D1D-B94E-0E8FBF75C666}
          LegacyId            #4
          ExtendedDataType    #VendInvoiceAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InvoiceRegister_LT
        ENUM
        PROPERTIES
          Name                #InvoiceRegister_LT
          Table               #PurchTable
          CountryRegionCodes  #LT,LV
          Origin              #{C076E569-34B5-4562-897D-BAD9FC4F6EA4}
          LegacyId            #16017
          ExtendedDataType    #LtInvoiceAutoNumbering
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsEncumbranceRequired
        ENUM
        PROPERTIES
          Name                #IsEncumbranceRequired
          Visible             #No
          Table               #PurchTable
          Origin              #{B724100D-9456-4AF8-94D2-77BDCB18EE86}
          LegacyId            #198
          EnumType            #UnknownNoYes
        ENDPROPERTIES
        
      FIELD #IsModified
        ENUM
        PROPERTIES
          Name                #IsModified
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{8FD35614-B508-4F6A-8138-E503283CF7AF}
          LegacyId            #132
          ExtendedDataType    #VersioningIsModified
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemBuyerGroupId
        STRING
        PROPERTIES
          Name                #ItemBuyerGroupId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{FFF4C29D-3434-4EFE-A904-5B4CD5148F2B}
          LegacyId            #64
          ExtendedDataType    #ItemBuyerGroupId
        ENDPROPERTIES
        
      FIELD #LanguageId
        STRING
        PROPERTIES
          Name                #LanguageId
          HelpText            #@SYS8305
          Mandatory           #Yes
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{291423B8-E32F-46E0-B8C1-368A9C781DD1}
          LegacyId            #74
          ExtendedDataType    #VendLanguageId
          StringSize          #7
        ENDPROPERTIES
        
      FIELD #LineDisc
        STRING
        PROPERTIES
          Name                #LineDisc
          HelpText            #@SYS2174
          Table               #PurchTable
          Origin              #{9F394D6C-A0F5-4ECC-A388-D891CFB7D114}
          LegacyId            #20
          ExtendedDataType    #VendLineDiscCode
        ENDPROPERTIES
        
      FIELD #ListCode
        ENUM
        PROPERTIES
          Name                #ListCode
          Table               #PurchTable
          Origin              #{78A583ED-2B3D-4AB4-822B-0A361B430CDB}
          LegacyId            #195
          ExtendedDataType    #ListcodeId
          EnumType            #Listcode
        ENDPROPERTIES
        
      FIELD #LocalDeliveryDate
        DATE
        PROPERTIES
          Name                #LocalDeliveryDate
          Table               #PurchTable
          Origin              #{45A260E3-3C88-4F10-8DE9-53E1247AE41B}
          LegacyId            #16079
          ExtendedDataType    #RetailLocalDeliveryDate
        ENDPROPERTIES
        
      FIELD #ManualEntryChangepolicy
        INT64
        PROPERTIES
          Name                #ManualEntryChangepolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{7BF71115-57CE-473B-B464-7CBDDC1EE89E}
          LegacyId            #168
          ExtendedDataType    #PriceDiscPolicyManual
        ENDPROPERTIES
        
      FIELD #MarkupGroup
        STRING
        PROPERTIES
          Name                #MarkupGroup
          HelpText            #@SYS9643
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{0AB933B5-46E8-463B-A36F-72ECD5C71104}
          LegacyId            #32
          ExtendedDataType    #VendMarkupGroupId
        ENDPROPERTIES
        
      FIELD #MatchingAgreement
        INT64
        PROPERTIES
          Name                #MatchingAgreement
          Table               #PurchTable
          Origin              #{2F0A0A25-F9D5-45D6-AFE1-C186FA72FBC3}
          LegacyId            #153
          ExtendedDataType    #AgreementHeaderRecId
        ENDPROPERTIES
        
      FIELD #MCRDropShipment
        ENUM
        PROPERTIES
          Name                #MCRDropShipment
          Table               #PurchTable
          Origin              #{82E474ED-B98F-4D6C-BFE2-8EE16C0327C9}
          LegacyId            #30001
          ExtendedDataType    #MCRDropShipment
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MultiLineDisc
        STRING
        PROPERTIES
          Name                #MultiLineDisc
          Table               #PurchTable
          Origin              #{BC90F13C-F021-4729-A395-84965264DBBB}
          LegacyId            #24
          ExtendedDataType    #VendMultiLineDiscCode
        ENDPROPERTIES
        
      FIELD #NumberSequenceGroup
        STRING
        PROPERTIES
          Name                #NumberSequenceGroup
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{7ADDCF5C-7697-49A6-90B4-DB3203A9FC26}
          LegacyId            #73
          ExtendedDataType    #NumberSequenceGroupId
        ENDPROPERTIES
        
      FIELD #OneTimeSupplier
        ENUM
        PROPERTIES
          Name                #OneTimeSupplier
          Visible             #No
          Table               #PurchTable
          Origin              #{D27466B6-8B77-4676-B47A-C0ED3E5A2BF9}
          LegacyId            #16055
          ExtendedDataType    #OneTimeSupplier
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #OneTimeVendor
        ENUM
        PROPERTIES
          Name                #OneTimeVendor
          Table               #PurchTable
          Origin              #{C71ED56E-D8D1-44DC-9E7A-A772089FBC87}
          LegacyId            #53
          ExtendedDataType    #OneTimeSupplier
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #OrderAccount
        STRING
        PROPERTIES
          Name                #OrderAccount
          HelpText            #@SYS2496
          Mandatory           #Yes
          Table               #PurchTable
          Origin              #{7DBFBB33-D831-44FE-992A-6B2425D7C251}
          LegacyId            #3
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #PurchTable
          Origin              #{778C186E-2C92-4FBC-866B-6A06A2E585C0}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PackingSlipRegister_LT
        ENUM
        PROPERTIES
          Name                #PackingSlipRegister_LT
          Table               #PurchTable
          CountryRegionCodes  #LT,LV
          Origin              #{5B77CD8A-E473-41DB-84F5-494ADD1126F4}
          LegacyId            #16018
          ExtendedDataType    #LtPackingSlipAutoNumbering
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Payment
        STRING
        PROPERTIES
          Name                #Payment
          HelpText            #@SYS13766
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{1849A526-5CFA-44EB-82AA-A64CF21E9A5D}
          LegacyId            #14
          ExtendedDataType    #VendPaymTermId
        ENDPROPERTIES
        
      FIELD #PaymentSched
        STRING
        PROPERTIES
          Name                #PaymentSched
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{0059B250-48FC-4560-B7CB-5CBE13840754}
          LegacyId            #51
          ExtendedDataType    #PaymSchedId
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #PaymMode
        STRING
        PROPERTIES
          Name                #PaymMode
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{01A4003D-3508-4E32-8F39-4560AEA608B6}
          LegacyId            #78
          ExtendedDataType    #VendPaymMode
        ENDPROPERTIES
        
      FIELD #PaymSpec
        STRING
        PROPERTIES
          Name                #PaymSpec
          Table               #PurchTable
          Origin              #{35E3218E-EE8E-425B-AC33-BAA1CCD1181B}
          LegacyId            #79
          ExtendedDataType    #VendPaymSpec
        ENDPROPERTIES
        
      FIELD #Port
        STRING
        PROPERTIES
          Name                #Port
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{6A53F75C-E3E4-47D6-905A-E3BCF2C242EC}
          LegacyId            #68
          ExtendedDataType    #IntrastatPortId
        ENDPROPERTIES
        
      FIELD #PostingProfile
        STRING
        PROPERTIES
          Name                #PostingProfile
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{833165B1-AEA4-42D6-B874-9FBDB1718879}
          LegacyId            #36
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PriceGroupId
        STRING
        PROPERTIES
          Name                #PriceGroupId
          Table               #PurchTable
          Origin              #{57A85BA3-543D-4028-B5F7-F0D27C560CFC}
          LegacyId            #23
          ExtendedDataType    #VendPriceGroup
        ENDPROPERTIES
        
      FIELD #ProjId
        STRING
        PROPERTIES
          Name                #ProjId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{C2FAF5ED-8BB3-4FC2-A8B2-7C6BF47C6D80}
          LegacyId            #65
          ExtendedDataType    #ProjId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchaseType
        ENUM
        PROPERTIES
          Name                #PurchaseType
          Table               #PurchTable
          Origin              #{EFCE8B1E-B38F-4172-8A56-ADE47B2BD906}
          LegacyId            #33
          EnumType            #PurchaseType
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          Mandatory           #Yes
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{ECB6CFAB-2074-4A0B-99A3-078C54D26095}
          LegacyId            #1
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchName
        STRING
        PROPERTIES
          Name                #PurchName
          Table               #PurchTable
          Origin              #{86E26257-48A8-4BD9-AE07-E222ACADF548}
          LegacyId            #2
          ExtendedDataType    #PurchName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #PurchPoolId
        STRING
        PROPERTIES
          Name                #PurchPoolId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{75D52E24-7D11-4918-BB21-18B349F88A18}
          LegacyId            #66
          ExtendedDataType    #PurchPoolId
        ENDPROPERTIES
        
      FIELD #PurchStatus
        ENUM
        PROPERTIES
          Name                #PurchStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{614E0A41-8043-447E-A835-3B90186A34F1}
          LegacyId            #31
          EnumType            #PurchStatus
        ENDPROPERTIES
        
      FIELD #ReasonTableRef
        INT64
        PROPERTIES
          Name                #ReasonTableRef
          Visible             #No
          Table               #PurchTable
          Origin              #{D4362A66-FD9D-4EE8-8DCA-5DEA153A36F0}
          LegacyId            #128
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #ReceiptDateConfirmed
        DATE
        PROPERTIES
          Name                #ReceiptDateConfirmed
          SaveContents        #No
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{052A418D-DA76-44C9-A597-3D62B3F574F1}
          LegacyId            #39
          ExtendedDataType    #SalesReceiptDateConfirmed
        ENDPROPERTIES
        
      FIELD #ReplenishmentLocation
        STRING
        PROPERTIES
          Name                #ReplenishmentLocation
          Label               #@RET827
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchTable
          Origin              #{1B0437D3-E59A-4011-9CF7-5FE137B83D1E}
          LegacyId            #16080
          ExtendedDataType    #InventLocationId
        ENDPROPERTIES
        
      FIELD #ReqAttention
        STRING
        PROPERTIES
          Name                #ReqAttention
          HelpText            #@SYS344211
          Table               #PurchTable
          Origin              #{D27DBAFA-FA80-4141-B24D-CA50B7262F79}
          LegacyId            #95
          ExtendedDataType    #PurchReqAttention
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #Requester
        INT64
        PROPERTIES
          Name                #Requester
          Table               #PurchTable
          Origin              #{F4D3C49F-407B-4365-9F3E-2B2C8376B4F7}
          LegacyId            #234
          ExtendedDataType    #PurchRequester
        ENDPROPERTIES
        
      FIELD #RetailConcessionPurch
        ENUM
        PROPERTIES
          Name                #RetailConcessionPurch
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{4D449F15-8742-4571-B34B-119351CA6119}
          LegacyId            #16087
          ExtendedDataType    #RetailConcessionPurch
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #RetailDriverDetails
        STRING
        PROPERTIES
          Name                #RetailDriverDetails
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{D45540E9-B16C-4FB4-8CF6-7C84794A50FA}
          LegacyId            #16085
          ExtendedDataType    #RetailDriverDetails
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #RetailRetailStatusType
        ENUM
        PROPERTIES
          Name                #RetailRetailStatusType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{13074795-324C-494B-8E27-8ECB3E6DF871}
          LegacyId            #16082
          ExtendedDataType    #RetailRetailStatusType
          EnumType            #RetailRetailStatusTypeBase
        ENDPROPERTIES
        
      FIELD #ReturnItemNum
        STRING
        PROPERTIES
          Name                #ReturnItemNum
          Table               #PurchTable
          Origin              #{60AC89EA-3013-454B-A62B-B5574EF8EF11}
          LegacyId            #54
          ExtendedDataType    #PurchReturnItemNum
        ENDPROPERTIES
        
      FIELD #ReturnReasonCodeId
        STRING
        PROPERTIES
          Name                #ReturnReasonCodeId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{84B5FED6-307B-45E0-861F-CD77051BD975}
          LegacyId            #93
          ExtendedDataType    #ReturnReasonCodeId
        ENDPROPERTIES
        
      FIELD #ReturnReplacementCreated
        ENUM
        PROPERTIES
          Name                #ReturnReplacementCreated
          Table               #PurchTable
          Origin              #{7B6E075E-4729-4F20-B2EB-C83499104AD0}
          LegacyId            #94
          ExtendedDataType    #ReturnReplacementCreated
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ServiceAddress
        STRING
        PROPERTIES
          Name                #ServiceAddress
          Label               #@SYS88743
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchTable
          Origin              #{ED2702A5-D636-4F74-A91A-B39C41F32CEA}
          LegacyId            #16054
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #ServiceCategory
        STRING
        PROPERTIES
          Name                #ServiceCategory
          Table               #PurchTable
          Origin              #{22E38F8A-538F-4C10-866E-093C8D6B2614}
          LegacyId            #16077
          ExtendedDataType    #RetailServiceCategoryId
        ENDPROPERTIES
        
      FIELD #ServiceDate
        DATE
        PROPERTIES
          Name                #ServiceDate
          Table               #PurchTable
          Origin              #{823B3B4F-D75A-4E5E-8203-8A1E02869BEF}
          LegacyId            #16056
          ExtendedDataType    #ServiceDate
        ENDPROPERTIES
        
      FIELD #ServiceName
        STRING
        PROPERTIES
          Name                #ServiceName
          Label               #@SYS110763
          Table               #PurchTable
          Origin              #{0320DB53-B449-4081-B9E0-34FE5FE2FB20}
          LegacyId            #16053
          ExtendedDataType    #VATNum
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SettleVoucher
        ENUM
        PROPERTIES
          Name                #SettleVoucher
          Table               #PurchTable
          Origin              #{C7292C1D-4B09-47EB-A361-521A9FD62EE8}
          LegacyId            #45
          ExtendedDataType    #PurchSettlementType
          EnumType            #SettlementType
        ENDPROPERTIES
        
      FIELD #ShippingDateConfirmed
        DATE
        PROPERTIES
          Name                #ShippingDateConfirmed
          SaveContents        #No
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{3E1F9851-87C9-494D-8E33-49FD1CC17E14}
          LegacyId            #38
          ExtendedDataType    #SalesShippingDateConfirmed
        ENDPROPERTIES
        
      FIELD #ShippingDateRequested
        DATE
        PROPERTIES
          Name                #ShippingDateRequested
          SaveContents        #No
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{E5378DAB-D736-4B9E-B03F-7BD67090BEE2}
          LegacyId            #34
          ExtendedDataType    #SalesShippingDateRequested
        ENDPROPERTIES
        
      FIELD #SkipUpdate
        ENUM
        PROPERTIES
          Name                #SkipUpdate
          SaveContents        #No
          Visible             #No
          Table               #PurchTable
          Origin              #{054E30C4-0A5E-4909-8DDB-7A64685EEB7A}
          LegacyId            #91
          EnumType            #InterCompanySkipUpdate
        ENDPROPERTIES
        
      FIELD #SourceDocumentHeader
        INT64
        PROPERTIES
          Name                #SourceDocumentHeader
          Label               #@SYS314386
          Visible             #No
          Table               #PurchTable
          Origin              #{89F1C22E-5725-4232-849D-BA2B34208310}
          LegacyId            #203
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@SYS319494
          Visible             #No
          Table               #PurchTable
          Origin              #{17BEC899-3678-49A9-B599-A01FD130119F}
          LegacyId            #202
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #StatProcId
        STRING
        PROPERTIES
          Name                #StatProcId
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{69B54C7C-0D28-4389-A64E-C3E40044127E}
          LegacyId            #83
          ExtendedDataType    #IntrastatProcId
        ENDPROPERTIES
        
      FIELD #SystemEntryChangePolicy
        INT64
        PROPERTIES
          Name                #SystemEntryChangePolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{420EB6E0-67F0-485B-89A6-3530B3470EB9}
          LegacyId            #167
          ExtendedDataType    #PriceDiscPolicySystem
        ENDPROPERTIES
        
      FIELD #SystemEntrySource
        ENUM
        PROPERTIES
          Name                #SystemEntrySource
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchTable
          Origin              #{D1DDA06F-4553-439F-A162-D567175CEBC5}
          LegacyId            #166
          EnumType            #PriceDiscSystemSource
        ENDPROPERTIES
        
      FIELD #TAMVendRebateGroupId
        STRING
        PROPERTIES
          Name                #TAMVendRebateGroupId
          Table               #PurchTable
          Origin              #{521A159D-7F0C-4530-87A5-E00F71B35927}
          ExtendedDataType    #TAMVendRebateGroupId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          HelpText            #@SYS27938
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{EC323E1E-9DBA-45DA-A02E-988B8103C59F}
          LegacyId            #28
          ExtendedDataType    #TaxGroup
        ENDPROPERTIES
        
      FIELD #TaxPeriodPaymentCode_PL
        STRING
        PROPERTIES
          Name                #TaxPeriodPaymentCode_PL
          Table               #PurchTable
          Origin              #{5D980705-202A-4D8A-A6DC-6B49BEEA2183}
          ExtendedDataType    #PlTaxPeriodPaymentCode
        ENDPROPERTIES
        
      FIELD #TransactionCode
        STRING
        PROPERTIES
          Name                #TransactionCode
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{768944A6-CDA2-41D7-AB34-990667F31CD8}
          LegacyId            #37
          ExtendedDataType    #IntrastatTransactionCodeId
        ENDPROPERTIES
        
      FIELD #Transport
        STRING
        PROPERTIES
          Name                #Transport
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{F0D857F3-E4B2-40CC-B0B7-44CAC67E25E0}
          LegacyId            #76
          ExtendedDataType    #IntrastatTransport
        ENDPROPERTIES
        
      FIELD #TransportationDocument
        INT64
        PROPERTIES
          Name                #TransportationDocument
          Visible             #No
          Table               #PurchTable
          Origin              #{472E533E-E629-40DD-864B-7DE2821FEC51}
          ExtendedDataType    #TransportationDocumentRecId
        ENDPROPERTIES
        
      FIELD #UnitedVATInvoice_LT
        ENUM
        PROPERTIES
          Name                #UnitedVATInvoice_LT
          Table               #PurchTable
          Origin              #{362D6E21-3DF3-4C9A-AD96-13CE55F155C5}
          LegacyId            #8143
          ExtendedDataType    #UnitedVATInvoice_LT
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #URL
        STRING
        PROPERTIES
          Name                #URL
          Table               #PurchTable
          Origin              #{6BA2620F-A5B3-4BBD-A709-F2C395E306E4}
          LegacyId            #35
          ExtendedDataType    #URLBase
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #VATNum
        STRING
        PROPERTIES
          Name                #VATNum
          Table               #PurchTable
          Origin              #{60FA780D-ECF3-4188-AF8B-B0430896AED5}
          LegacyId            #67
          ExtendedDataType    #VATNumJournal
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          HelpText            #@SYS17188
          Mandatory           #Yes
          Table               #PurchTable
          IgnoreEDTRelation   #Yes
          Origin              #{A42D7AC1-B148-493D-930A-8196420FDB97}
          LegacyId            #19
          ExtendedDataType    #VendGroupId
        ENDPROPERTIES
        
      FIELD #VendInvoiceDeclaration_IS
        INT64
        PROPERTIES
          Name                #VendInvoiceDeclaration_IS
          Table               #PurchTable
          Origin              #{95CDC79D-6B2A-44EB-B351-061B6B4B65DC}
          LegacyId            #176
          ExtendedDataType    #InvoiceDeclarationId_IS
        ENDPROPERTIES
        
      FIELD #VendorRef
        STRING
        PROPERTIES
          Name                #VendorRef
          Table               #PurchTable
          Origin              #{6643A365-5A77-431A-94FD-78599CE74420}
          LegacyId            #86
          ExtendedDataType    #VendRef
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #WorkerPurchPlacer
        INT64
        PROPERTIES
          Name                #WorkerPurchPlacer
          Table               #PurchTable
          Origin              #{105899E6-B6E2-47A2-B1A0-05D37F083713}
          LegacyId            #184
          ExtendedDataType    #PurchPlacer
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoSummary
        PROPERTIES
          Name                #AutoSummary
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #PurchName
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #OrderAccount
          #PurchName
          #InvoiceAccount
          #PurchStatus
          #DocumentStatus
          #DeliveryDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Address
        PROPERTIES
          Name                #Address
          Label               #@SYS9362
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryPostalAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #OrderAccount
          #InvoiceAccount
          #PurchaseType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressReference
        PROPERTIES
          Name                #AddressReference
          Label               #@SYS88679
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressRefRecId
          #AddressRefTableId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemBuyerGroupId
          #WorkerPurchPlacer
          #Requester
          #PurchPoolId
          #LanguageId
          #ChangeRequestRequired
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Agreement
        PROPERTIES
          Name                #Agreement
          Label               #@SYS87179
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingAgreement
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #RetailRetailStatusType
          #RetailDriverDetails
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Attention
        PROPERTIES
          Name                #Attention
          Label               #@SYS1593
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqAttention
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CaseMoreInformation
        PROPERTIES
          Name                #CaseMoreInformation
          Label               #@SYS314356
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #OrderAccount
          #InvoiceAccount
          #PurchaseType
          #DocumentStatus
          #PurchStatus
          #CurrencyCode
          #ProjId
          #agreementIsLinked
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ConfirmingPO
        PROPERTIES
          Name                #ConfirmingPO
          Label               #@SPS591
        ENDPROPERTIES
        
        GROUPFIELDS
          #ConfirmingPO
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ConsTarget_JP
        PROPERTIES
          Name                #ConsTarget_JP
          Label               #@SYS106495
        ENDPROPERTIES
        
        GROUPFIELDS
          #ConsTarget_JP
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ContactInfo
        PROPERTIES
          Name                #ContactInfo
          Label               #@SYS21663
        ENDPROPERTIES
        
        GROUPFIELDS
          #URL
          #Email
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Contract_SA
        PROPERTIES
          Name                #Contract_SA
          Label               #@SYS73302
        ENDPROPERTIES
        
        GROUPFIELDS
          #ContractNum_SA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Crossdocking
        PROPERTIES
          Name                #Crossdocking
          Label               #@RET806
        ENDPROPERTIES
        
        GROUPFIELDS
          #ServiceCategory
          #ReplenishmentLocation
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CrossdockingDates
        PROPERTIES
          Name                #CrossdockingDates
          Label               #@RET998
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryDate
          #CrossDockingDate
          #LocalDeliveryDate
          #AvailSalesDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryDate
          #ConfirmedDlv
          #ConfirmedDlvEarliest
          #DlvMode
          #DlvTerm
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliverySummary
        PROPERTIES
          Name                #DeliverySummary
          Label               #@SYS22058
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
          #AccountingDistributionTemplate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS11829
        ENDPROPERTIES
        
        GROUPFIELDS
          #MultiLineDisc
          #EndDisc
          #LineDisc
          #DiscPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiscountMiscCharges
        PROPERTIES
          Name                #DiscountMiscCharges
          Label               #@SYS22031
        ENDPROPERTIES
        
        GROUPFIELDS
          #PriceGroupId
          #LineDisc
          #MultiLineDisc
          #EndDisc
          #DiscPercent
          #MarkupGroup
          #TAMVendRebateGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DocumentPreview
        PROPERTIES
          Name                #DocumentPreview
          Label               #@SYS117648
        ENDPROPERTIES
        
        GROUPFIELDS
          #workflowInstructions
          #PurchId
          #createdDateTime
          #vendorName
          #amountOrderedNotInvoicedMST
          #DeliveryDate
          #workflowLastComment
          #workflowWorkItemDueDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPDelivery
        PROPERTIES
          Name                #EPDelivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryDate
          #DlvTerm
          #DlvMode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ExternalReference
        PROPERTIES
          Name                #ExternalReference
          Label               #@SYS21697
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendorRef
          #ReturnItemNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #CountyOrigDest
          #ListCode
          #IntrastatAddValue_LV
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #HeaderToLineUpdate
        PROPERTIES
          Name                #HeaderToLineUpdate
          Label               #@SYS62436
        ENDPROPERTIES
        
        GROUPFIELDS
          #OrderAccount
          #TaxGroup
          #AccountingDistributionTemplate
          #DefaultDimension
          #InventLocationId
          #TransactionCode
          #Port
          #StatProcId
          #PriceGroupId
          #LineDisc
          #MarkupGroup
          #DeliveryDate
          #ConfirmedDlv
          #LanguageId
          #Transport
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS93837
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyOrder
          #InterCompanyCompanyId
          #InterCompanySalesId
          #interCompanyOriginDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyOriginal
        PROPERTIES
          Name                #InterCompanyOriginal
          Label               #@SYS93838
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyOriginalSalesId
          #InterCompanyOriginalCustAccount
          #InterCompanyCustPurchOrderFormNum
          #InterCompanyDirectDelivery
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReturn
        PROPERTIES
          Name                #InterCompanyReturn
          Label               #@SYS120343
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnReasonCodeId
          #ReturnReplacementCreated
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Inventory
        PROPERTIES
          Name                #Inventory
          Label               #@SYS981
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventSiteId
          #InventLocationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ItemOrderCreation
        PROPERTIES
          Name                #ItemOrderCreation
          Label               #@RET876
        ENDPROPERTIES
        
        GROUPFIELDS
          #FSHAutoCreated
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ListCode
        PROPERTIES
          Name                #ListCode
          Label               #@SYS89034
        ENDPROPERTIES
        
        GROUPFIELDS
          #ListCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #NotificationToTheCentralBank
        PROPERTIES
          Name                #NotificationToTheCentralBank
          Label               #@SYS67156
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankCentralBankPurposeCode
          #BankCentralBankPurposeText
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Payment
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #Payment
          #FixedDueDate
          #PaymMode
          #PaymSpec
          #PaymentSched
          #CashDisc
          #CashDiscPercent
          #BankDocumentType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS5943
        ENDPROPERTIES
        
        GROUPFIELDS
          #PostingProfile
          #SettleVoucher
          #NumberSequenceGroup
          #AccountingDate
          #InvoiceRegister_LT
          #PackingSlipRegister_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Project
        PROPERTIES
          Name                #Project
          Label               #@SYS4534
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSAGroup
        PROPERTIES
          Name                #PSAGroup
          Label               #@PSA43
        ENDPROPERTIES
        
        GROUPFIELDS
          #ServiceName
          #ServiceAddress
          #OneTimeSupplier
          #ServiceDate
          #ConfirmedDlv
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseTable
        PROPERTIES
          Name                #PurchaseTable
          Label               #@SYS1653
        ENDPROPERTIES
        
        GROUPFIELDS
          #ContactPersonId
          #ReturnItemNum
          #CovStatus
          #VendGroup
          #PurchaseType
          #MarkupGroup
          #PostingProfile
          #SettleVoucher
          #PurchStatus
          #PurchName
          #DocumentStatus
          #DeliveryType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Reasons
        PROPERTIES
          Name                #Reasons
          Label               #@SYS111245
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReasonTableRef
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Requisitioner
        PROPERTIES
          Name                #Requisitioner
          Label               #@SYS108788
        ENDPROPERTIES
        
        GROUPFIELDS
          #Requester
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RetailConcession
        PROPERTIES
          Name                #RetailConcession
          Label               #@RET742
        ENDPROPERTIES
        
        GROUPFIELDS
          #RetailConcessionPurch
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #VATNum
          #EnterpriseNumber
          #InclTax
          #UnitedVATInvoice_LT
          #TaxPeriodPaymentCode_PL
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SourceDocumentHeader
        PROPERTIES
          Name                #SourceDocumentHeader
          Label               #@SYS314386
        ENDPROPERTIES
        
        GROUPFIELDS
          #SourceDocumentHeader
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@SYS132694
        ENDPROPERTIES
        
        GROUPFIELDS
          #SourceDocumentLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS25587
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchStatus
          #displayDocumentStatus
          #DocumentState
          #qualityOrderStatusDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryNumber
        PROPERTIES
          Name                #SummaryNumber
          Label               #*** OUTDATED ***
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryPurchase
        PROPERTIES
          Name                #SummaryPurchase
          Label               #@SYS24162
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryUpdate
        PROPERTIES
          Name                #SummaryUpdate
          Label               #@SYS57755
        ENDPROPERTIES
        
        GROUPFIELDS
          #OrderAccount
          #InvoiceAccount
          #FreightZone
          #CurrencyCode
          #Payment
          #CashDisc
          #LineDisc
          #DiscPercent
          #DefaultDimension
          #PriceGroupId
          #MultiLineDisc
          #EndDisc
          #DlvTerm
          #DlvMode
          #PurchaseType
          #PostingProfile
          #TransactionCode
          #PaymentSched
          #FreightSlipType
          #ContactPersonId
          #InventLocationId
          #ItemBuyerGroupId
          #PurchPoolId
          #VATNum
          #InclTax
          #NumberSequenceGroup
          #LanguageId
          #PaymMode
          #PaymSpec
          #FixedDueDate
          #InterCompanyCompanyId
          #InterCompanyOriginalCustAccount
          #InterCompanyDirectDelivery
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryUpdateParameters
        PROPERTIES
          Name                #SummaryUpdateParameters
          Label               #@SYS57738
        ENDPROPERTIES
        
        GROUPFIELDS
          #AutoSummaryModuleType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Transport
        PROPERTIES
          Name                #Transport
          Label               #@SYS3843
        ENDPROPERTIES
        
        GROUPFIELDS
          #FreightZone
          #FreightSlipType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #UnGrouped
        PROPERTIES
          Name                #UnGrouped
          Label               #@MCR23892
        ENDPROPERTIES
        
        GROUPFIELDS
          #MCRDropShipment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendInvoiceDeclaration
        PROPERTIES
          Name                #VendInvoiceDeclaration
          Label               #@SYS126906
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendInvoiceDeclaration_IS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Vendor
        PROPERTIES
          Name                #Vendor
          Label               #@SYS9455
        ENDPROPERTIES
        
        GROUPFIELDS
          #OrderAccount
          #OneTimeVendor
          #InvoiceAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSDiscount
        PROPERTIES
          Name                #VSSDiscount
          Label               #@SYS22031
        ENDPROPERTIES
        
        GROUPFIELDS
          #CashDisc
          #CashDiscPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSForeignTrade
        PROPERTIES
          Name                #VSSForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSSalesTax
        PROPERTIES
          Name                #VSSSalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #VATNum
          #EnterpriseNumber
          #InclTax
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WebCategoryBrowsing
        PROPERTIES
          Name                #WebCategoryBrowsing
          Label               #@SYS74258
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchStatus
          #PurchaseType
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #PurchIdx
      PROPERTIES
        Name                #PurchIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B080001-0159-1000-5075-726368496478}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
      ENDINDEXFIELDS
      
      #VendIdx
      PROPERTIES
        Name                #VendIdx
        AllowDuplicates     #No
        Origin              #{2B070002-0159-1000-5665-6E6449647800}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #OrderAccount
        #PurchId
      ENDINDEXFIELDS
      
      #StatusOrderAccIdx
      PROPERTIES
        Name                #StatusOrderAccIdx
        Origin              #{2B110004-0159-1000-87B6-F6C8E50D3134}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchStatus
        #OrderAccount
      ENDINDEXFIELDS
      
      #ProjIdx
      PROPERTIES
        Name                #ProjIdx
        ConfigurationKey    #ProjBasic
        Origin              #{2B070005-0159-1000-5072-6F6A49647800}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #ProjId
        #PurchId
      ENDINDEXFIELDS
      
      #AgreementHeaderIdx
      PROPERTIES
        Name                #AgreementHeaderIdx
        Origin              #{2B120017-0159-1000-09A6-8E2BD269E89A}
        LegacyId            #23
      ENDPROPERTIES
      
      INDEXFIELDS
        #MatchingAgreement
      ENDINDEXFIELDS
      
      #OrderAccCreatedDateTimeIdx
      PROPERTIES
        Name                #OrderAccCreatedDateTimeIdx
        Origin              #{58549996-3A05-4D9A-90C5-990DA1D46627}
        LegacyId            #41
      ENDPROPERTIES
      
      INDEXFIELDS
        #OrderAccount
        #createdDateTime
      ENDINDEXFIELDS
      
      #SDHeaderIdx
      PROPERTIES
        Name                #SDHeaderIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{57111D7A-3845-4DD7-884C-EBD394359A02}
        LegacyId            #49
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentHeader
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #ConsTarget_JPIdx
      PROPERTIES
        Name                #ConsTarget_JPIdx
        Origin              #{DA84C9EB-526A-4668-AE4F-48E42695BC04}
        LegacyId            #8007
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceAccount
        #ConsTarget_JP
      ENDINDEXFIELDS
      
      #DropShipIdx
      PROPERTIES
        Name                #DropShipIdx
        Origin              #{EC02665E-99E4-4D48-A4AF-426EB10FEBD6}
        LegacyId            #30001
      ENDPROPERTIES
      
      INDEXFIELDS
        #MCRDropShipment
        #PurchId
      ENDINDEXFIELDS
      
      #MCRDeliveryDateIdx
      PROPERTIES
        Name                #MCRDeliveryDateIdx
        ConfigurationKey    #MCRCallCenter
        Origin              #{17C52150-E0AC-4E42-A49B-80C6E68ADBD4}
        LegacyId            #30002
      ENDPROPERTIES
      
      INDEXFIELDS
        #DeliveryDate
      ENDINDEXFIELDS
      
      #SourceDocumentLineIdx
      PROPERTIES
        Name                #SourceDocumentLineIdx
        UniqueAcrossCompanies #Yes
        Origin              #{11566540-1D79-4F5C-BAE3-817B6686CA40}
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AccountingDistributionTemplate
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #AccountingDistributionTemplate
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #AccountingDistributionTemplate
          Role                #AccountingDistributionTemplate_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountingDistributionTemplate
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Agreement
        PROPERTIES
          Name                #Agreement
          Table               #AgreementHeader
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #AgreementHeader
          Role                #AgreementHeader_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MatchingAgreement
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankCentralBankPurpose
        PROPERTIES
          Name                #BankCentralBankPurpose
          Table               #BankCentralBankPurpose
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #BankCentralBankPurpose
          Role                #BankCentralBankPurpose_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankCentralBankPurposeCode
            RelatedField        #Code
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CashDisc
        PROPERTIES
          Name                #CashDisc
          Table               #CashDisc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CashDisc
          Role                #CashDisc_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CashDisc
            RelatedField        #CashDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
          RelationshipType    #Link
          UseDefaultRoleNames #Yes
          RelatedTableRole    #Common
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ConfirmingPO
        PROPERTIES
          Name                #ConfirmingPO
          Table               #ConfirmingPO
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          RelatedTableRole    #ConfirmingPO
          Role                #ConfirmingPO_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ConfirmingPO
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ContactPerson
        PROPERTIES
          Name                #ContactPerson
          Table               #ContactPerson
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ContactPerson_1
          Role                #ContactPerson_1_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ContactPersonId
            RelatedField        #ContactPersonId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CountyOrigDest
        PROPERTIES
          Name                #CountyOrigDest
          Table               #LogisticsAddressCounty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressCounty
          Role                #LogisticsAddressCounty_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountyOrigDest
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Currency
          Role                #Currency_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DataArea
        PROPERTIES
          Name                #DataArea
          Table               #DataArea
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #DataArea
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #DataArea
            RelatedField        #isVirtual
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #id
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueSet
          Role                #DimensionAttributeValueSet_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DeliveryPostalAddress
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsPostalAddress
          Role                #LogisticsPostalAddress_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DeliveryPostalAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvMode
        PROPERTIES
          Name                #DlvMode
          Table               #DlvMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DlvMode
          Role                #DlvMode_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvMode
            RelatedField        #Code
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvTerm
        PROPERTIES
          Name                #DlvTerm
          Table               #DlvTerm
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DlvTerm
          Role                #DlvTerm_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvTerm
            RelatedField        #Code
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DossierImportaion
        PROPERTIES
          Name                #DossierImportaion
          Table               #DossierImportation
          RelatedTableCardinality   #ZeroOne
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DossierImportation
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InterCompany
        PROPERTIES
          Name                #InterCompany
          Table               #DataArea
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InterCompany
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #id
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #DataArea
            RelatedField        #isVirtual
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatPort
        PROPERTIES
          Name                #IntrastatPort
          Table               #IntrastatPort
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IntrastatPort
          Role                #IntrastatPort_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Port
            RelatedField        #PortId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatStatProc
        PROPERTIES
          Name                #IntrastatStatProc
          Table               #IntrastatStatProc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IntrastatStatProc
          Role                #IntrastatStatProc_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #StatProcId
            RelatedField        #StatProcId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransactionCode
        PROPERTIES
          Name                #IntrastatTransactionCode
          Table               #IntrastatTransactionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IntrastatTransactionCode
          Role                #IntrastatTransactionCode_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransactionCode
            RelatedField        #TransactionCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransportMode
        PROPERTIES
          Name                #IntrastatTransportMode
          Table               #IntrastatTransportMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IntrastatTransportMode
          Role                #IntrastatTransportMode_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Transport
            RelatedField        #TransPortCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventBuyerGroup
        PROPERTIES
          Name                #InventBuyerGroup
          Table               #InventBuyerGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventBuyerGroup
          Role                #InventBuyerGroup_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemBuyerGroupId
            RelatedField        #Group
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventLocation
        PROPERTIES
          Name                #InventLocation
          Table               #InventLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventLocation
          Role                #InventLocation_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventLocationId
            RelatedField        #InventLocationId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventSite
        PROPERTIES
          Name                #InventSite
          Table               #InventSite
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventSite
          Role                #InventSite_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventSiteId
            RelatedField        #SiteId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InvoiceDeclarationId_FK
        PROPERTIES
          Name                #InvoiceDeclarationId_FK
          Table               #VendInvoiceDeclaration_IS
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DeclarationUsedForInvoicing
          Role                #PurchaseOrders
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendInvoiceDeclaration_IS
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InvoiceVendor
        PROPERTIES
          Name                #InvoiceVendor
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendTable
          Role                #VendTable_PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InvoiceAccount
            RelatedField        #AccountNum
            SourceEDT           #VendInvoiceAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LanguageTable
        PROPERTIES
          Name                #LanguageTable
          Table               #LanguageTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LanguageId
            RelatedField        #LanguageId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #LanguageTable
            RelatedField        #LabelFile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MarkupGroup
        PROPERTIES
          Name                #MarkupGroup
          Table               #MarkupGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #MarkupGroup
          Role                #MarkupGroup_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #MarkupGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MarkupGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRHoldCodeTrans
        PROPERTIES
          Name                #MCRHoldCodeTrans
          Table               #MCRHoldCodeTrans
          Validate            #No
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchId
            RelatedField        #InventRefId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #NumberSequenceGroup
        PROPERTIES
          Name                #NumberSequenceGroup
          Table               #NumberSequenceGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #NumberSequenceGroup
          Role                #NumberSequenceGroup_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #NumberSequenceGroup
            RelatedField        #numberSequenceGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #OrderVendor
        PROPERTIES
          Name                #OrderVendor
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendTable_1
          Role                #VendTable_1_PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OrderAccount
            RelatedField        #AccountNum
            SourceEDT           #VendAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PaymSched
        PROPERTIES
          Name                #PaymSched
          Table               #PaymSched
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PaymSched
          Role                #PaymSched_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PaymentSched
            RelatedField        #Name
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PaymTerm
        PROPERTIES
          Name                #PaymTerm
          Table               #PaymTerm
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PaymTerm
          Role                #PaymTerm_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Payment
            RelatedField        #PaymTermId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PlTaxDueTable
        PROPERTIES
          Name                #PlTaxDueTable
          Table               #PlTaxDueTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PlTaxDueTable
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TaxPeriodPaymentCode_PL
            RelatedField        #TaxPeriodPaymentCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId1
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId1
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy
          Role                #PriceDiscChangePolicy_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SystemEntryChangePolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId2
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId2
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy_1
          Role                #PriceDiscChangePolicy_1_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ManualEntryChangepolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjTable
        PROPERTIES
          Name                #ProjTable
          Table               #ProjTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjTable_1
          Role                #ProjTable_1_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjId
            RelatedField        #ProjId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchPool
        PROPERTIES
          Name                #PurchPool
          Table               #PurchPool
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchPool
          Role                #PurchPool_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchPoolId
            RelatedField        #PurchPoolId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReasonTableRef
        PROPERTIES
          Name                #ReasonTableRef
          Table               #ReasonTableRef
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ReasonTableRef
          Role                #ReasonTableRef_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReasonTableRef
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReplenishmentLocation
        PROPERTIES
          Name                #ReplenishmentLocation
          Table               #InventLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #ReplenishmentLocation
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ReplenishmentLocation
            RelatedField        #InventLocationId
            SourceEDT           #InventLocationId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Requester_FK
        PROPERTIES
          Name                #Requester_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker_1
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Requester
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RetailServiceCategory
        PROPERTIES
          Name                #RetailServiceCategory
          Table               #RetailServiceCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ServiceCategory
            RelatedField        #ServiceCategory
            SourceEDT           #RetailServiceCategoryId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReturnReasonCode
        PROPERTIES
          Name                #ReturnReasonCode
          Table               #ReturnReasonCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ReturnReasonCode
          Role                #ReturnReasonCode_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReturnReasonCodeId
            RelatedField        #ReasonCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTable
        PROPERTIES
          Name                #SalesTable
          Table               #SalesTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesTable
          Role                #SalesTable_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchTable
            Field               #InterCompanyOrder
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchTable
            Field               #InterCompanyCompanyId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchTable
            Field               #InterCompanySalesId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTableInterCompany
        PROPERTIES
          Name                #SalesTableInterCompany
          Table               #SalesTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesTableInterCompany
          Role                #SalesTableInterCompany_Order
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchTable
            Field               #InterCompanyOrder
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #dataAreaId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanySalesId
            RelatedField        #SalesId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentHeader
        PROPERTIES
          Name                #SourceDocumentHeader
          Table               #SourceDocumentHeader
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SourceDocumentHeader
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SourceDocumentHeader
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SourceDocumentLine
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TAMVendRebateGroup
        PROPERTIES
          Name                #TAMVendRebateGroup
          Table               #TAMVendRebateGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TAMVendRebateGroupId
            RelatedField        #VendRebateGroupId
            SourceEDT           #TAMVendRebateGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxGroupHeading
          Role                #TaxGroupHeading_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TransportationDocument
        PROPERTIES
          Name                #TransportationDocument
          Table               #TransportationDocument
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransportationDocument
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendGroup
          Role                #VendGroup_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger
        PROPERTIES
          Name                #VendLedger
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendLedger
          Role                #VendLedger_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfile
            RelatedField        #PostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLineDiscountGroup
        PROPERTIES
          Name                #VendLineDiscountGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendLineDiscountGroup
          Role                #PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #LineDisc
            RelatedField        #GroupId
            SourceEDT           #VendLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #VendLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #VendLineDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendMarkupGroup
        PROPERTIES
          Name                #VendMarkupGroup
          Table               #MarkupGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendMarkupGroup
          Role                #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MarkupGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #MarkupGroup
            RelatedField        #Module
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendMultiLineDiscountGroup
        PROPERTIES
          Name                #VendMultiLineDiscountGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendMultiLineDiscountGroup
          Role                #PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MultiLineDisc
            RelatedField        #GroupId
            SourceEDT           #VendMultiLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #VendMultiLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #VendMultiLineDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPaymModeSpec
        PROPERTIES
          Name                #VendPaymModeSpec
          Table               #VendPaymModeSpec
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendPaymModeSpec
          Role                #VendPaymModeSpec_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymMode
            RelatedField        #PaymMode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymSpec
            RelatedField        #Specification
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPaymModeTable
        PROPERTIES
          Name                #VendPaymModeTable
          Table               #VendPaymModeTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PaymMode
            RelatedField        #PaymMode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPriceGroup
        PROPERTIES
          Name                #VendPriceGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendPriceGroup
          Role                #PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PriceGroupId
            RelatedField        #GroupId
            SourceEDT           #VendPriceGroup
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #VendPriceGroup
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #VendPriceGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTotalDiscountGroup
        PROPERTIES
          Name                #VendTotalDiscountGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendTotalDiscountGroup
          Role                #PurchTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #EndDisc
            RelatedField        #GroupId
            SourceEDT           #VendEndDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #VendEndDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #VendEndDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #WorkerPurchPlacer_FK
        PROPERTIES
          Name                #WorkerPurchPlacer_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #HcmWorker_PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #WorkerPurchPlacer
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #TMSRouteTable(PurchTable)
      PROPERTIES
        Table               #TMSRouteTable
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #TMSApportionedValue(PurchTable)
      PROPERTIES
        Table               #TMSApportionedValue
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #TMSAppointment(PurchTable)
      PROPERTIES
        Table               #TMSAppointment
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #WHSPurchLine(PurchTable)
      PROPERTIES
        Table               #WHSPurchLine
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #MCROrderEventTable(PurchTable)
      PROPERTIES
        Table               #MCROrderEventTable
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #PurchTotalsSummary(PurchTable)
      PROPERTIES
        Table               #PurchTotalsSummary
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #TransportationDocument
      PROPERTIES
        Table               #TransportationDocument
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchTable_W(PurchTable)
      PROPERTIES
        Table               #PurchTable_W
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #PurchTable_BR(PurchTable)
      PROPERTIES
        Table               #PurchTable_BR
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #PurchTable_RU(PurchTable)
      PROPERTIES
        Table               #PurchTable_RU
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #PurchTable_Intrastat(PurchTable)
      PROPERTIES
        Table               #PurchTable_Intrastat
        DeleteAction        #Cascade
        Relation            #PurchTable
      ENDPROPERTIES
      
      #BankLGGuaranteePurchaseOrder(PurchTable)
      PROPERTIES
        Table               #BankLGGuaranteePurchaseOrder
        DeleteAction        #Restricted
        Relation            #PurchTable
      ENDPROPERTIES
      
      #CustVendCreditInvoicingTable
      PROPERTIES
        Table               #CustVendCreditInvoicingTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InterCompanyPurchSalesReference
      PROPERTIES
        Table               #InterCompanyPurchSalesReference
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #LedgerCov
      PROPERTIES
        Table               #LedgerCov
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PrintMgmtDocInstance
      PROPERTIES
        Table               #PrintMgmtDocInstance
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchPrepayTable
      PROPERTIES
        Table               #PurchPrepayTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #TaxWorkRegulation
      PROPERTIES
        Table               #TaxWorkRegulation
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendPaymSched
      PROPERTIES
        Table               #VendPaymSched
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #accountClearing
        #// <GEERU>
        #public LedgerDimensionDefaultAccount accountClearing(VendPostingProfile _postingProfile_RU = '')
        #// </GEERU>
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) && _postingProfile_RU)
        #    {
        #        return VendLedgerAccounts::clearingLedgerDimension(this.InvoiceAccount,
        #                                                           _postingProfile_RU);
        #    }
        #    // </GEERU>
        #    return VendLedgerAccounts::clearingLedgerDimension(this.InvoiceAccount,
        #                                                       this.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #accountVend
        #// <GEERU>
        #public LedgerDimensionDefaultAccount accountVend(VendPostingProfile _postingProfile_RU = '')
        #// </GEERU>
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) && _postingProfile_RU)
        #    {
        #        return VendLedgerAccounts::summaryLedgerDimension(this.InvoiceAccount,
        #                                                           _postingProfile_RU);
        #    }
        #    // </GEERU>
        #    return VendLedgerAccounts::summaryLedgerDimension(this.InvoiceAccount,
        #                                                       this.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #agreementDocumentTitle_RU
        #/// <summary>
        #///     Gets the document title of the related agreement.
        #/// </summary>
        #/// <returns>
        #///     The agreement document title.
        #/// </returns>
        #public display AgreementDocumentTitle agreementDocumentTitle_RU()
        #{
        #    return PurchAgreementHeader::find(this.MatchingAgreement).DocumentTitle;
        #}
      ENDSOURCE
      SOURCE #agreementHeaderExt_RU
        #/// <summary>
        #///     Retrieves the record ID of the <c>AgreementHeaderExt_RU</c> that is attached to the current purchase order.
        #/// </summary>
        #/// <returns>
        #///     The agreement record ID.
        #/// </returns>
        #public AgreementHeaderExtRecId_RU agreementHeaderExt_RU()
        #{
        #    PurchTable_RU   purchTable_RU;
        #    #isoCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchTable_RU = this.purchTable_RU();
        #    }
        #
        #    return purchTable_RU.AgreementHeaderExt_RU;
        #}
      ENDSOURCE
      SOURCE #agreementIsLinked
        #//BP Deviation documented
        #display public PurchAgreementIsLinked agreementIsLinked()
        #{
        #    if (this.MatchingAgreement)
        #    {
        #        return NoYes::Yes;
        #    }
        #    return NoYes::No;
        #}
      ENDSOURCE
      SOURCE #allowAccountingDateChange
        #/// <summary>
        #/// Determine if it is allowed to change the accounting date.
        #/// </summary>
        #/// <returns>
        #/// true if it is allowed to change the accounting date; otherwise false.
        #/// </returns>
        #public boolean allowAccountingDateChange()
        #{
        #    boolean             ok = true;
        #
        #    if (!SourceDocumentHeaderProvider::allowAccountingDateChange(this.SourceDocumentHeader))
        #    {
        #        ok = checkFailed("@SYS344799");
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #allowCurrencyChange
        #/// <summary>
        #/// Determines whether a change to the <c>CurrencyCode</c> is enabled.
        #/// </summary>
        #/// <param name="_giveWarning">
        #/// A Boolean value that specifies whether to notify the user who a currency change is not enabled.
        #/// </param>
        #/// <returns>
        #/// false if there has been any invoicing activity, either posted or pending; otherwise, true.
        #/// </returns>
        #public boolean allowCurrencyChange(boolean _giveWarning = true)
        #{
        #    boolean             ok = true;
        #
        #    if (this.PurchStatus == PurchStatus::Invoiced || this.existInvoice() || this.isInvoiceMatched())
        #    {
        #        if(_giveWarning)
        #        {
        #            ok = checkFailed(strFmt("@SYS129442", this.PurchId));
        #        }
        #    }
        #
        #    return ok;
        #
        #}
      ENDSOURCE
      SOURCE #amountCur2MST
        #/// <summary>
        #/// Gets the <c>amountCur2MST</c> value for the current record in <c>PurchTable</c> table.
        #/// </summary>
        #/// <returns>
        #/// The <c>amountCur2MST</c> value of the current record.
        #/// </returns>
        #
        #// BP Deviation Documented
        #display AmountMST amountCur2MST()
        #{
        #    return Currency::amountCur2MST(this.amountRemainingExclTax(), this.CurrencyCode);
        #}
      ENDSOURCE
      SOURCE #amountDelivered
        #//BP deviation documented
        #server display AmountCur  amountDelivered()
        #{
        #    PurchLine       purchLine;
        #    AmountCur       amountCur = 0;
        #
        #    while select purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId         == this.PurchId
        #          && !purchLine.IsDeleted
        #    {
        #        amountCur += purchLine.calcLineAmountExclTax(purchLine.PurchQty - purchLine.RemainPurchPhysical);
        #    }
        #
        #    return amountCur;
        #}
      ENDSOURCE
      SOURCE #amountInvoiced
        #//BP Deviation documented
        #server display AmountCur amountInvoiced()
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #
        #    select sum(InvoiceAmount) from vendInvoiceJour
        #              where vendInvoiceJour.PurchId == this.PurchId;
        #
        #    return vendInvoiceJour.InvoiceAmount;
        #}
      ENDSOURCE
      SOURCE #amountInvoicedExclTax
        #//BP deviation documented
        #server display AmountCur  amountInvoicedExclTax()
        #{
        #    PurchLine       purchLine;
        #    AmountCur       amountCur = 0;
        #
        #    while select purchLine
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        amountCur += purchLine.calcLineAmountExclTax(purchLine.PurchQty - purchLine.RemainPurchFinancial);
        #    }
        #
        #    return amountCur;
        #}
        #
      ENDSOURCE
      SOURCE #amountOrderedNotInvoiced
        #//BP Deviation documented
        #server display AmountCur amountOrderedNotInvoiced()
        #{
        #    PurchLine       purchLine;
        #    AmountCur       ordered;
        #
        #    while select purchLine
        #        index PurchLineIdx
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        ordered += purchLine.calcLineAmountExclTax(purchLine.RemainPurchPhysical+purchLine.RemainPurchFinancial);
        #    }
        #
        #    return ordered;
        #}
      ENDSOURCE
      SOURCE #amountOrderedNotInvoicedMST
        #/// <summary>
        #///     Purchase order balance converted into MST.
        #/// </summary>
        #/// <returns>
        #///     Returns the purchase order balance of not invoiced lines converted from the purchase orders currency into company currency.
        #/// </returns>
        #
        #//BP Deviation documented
        #server display AmountMST  amountOrderedNotInvoicedMST()
        #{
        #    return Currency::amountCur2MST(this.amountOrderedNotInvoiced(), this.CurrencyCode);
        #}
      ENDSOURCE
      SOURCE #amountRemainingExclTax
        #//BP deviation documented
        #server display AmountCur  amountRemainingExclTax()
        #{
        #    PurchLine       purchLine;
        #    AmountCur       amountCur = 0;
        #
        #    while select purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        amountCur += purchLine.calcLineAmountExclTax(purchLine.RemainPurchPhysical);
        #    }
        #
        #    return amountCur;
        #}
        #
      ENDSOURCE
      SOURCE #amountRemainingMST
        #//BP deviation documented
        #server display AmountMST amountRemainingMST()
        #{
        #    PurchLine       purchLine;
        #    AmountMST       amountMST = 0;
        #    AmountMST       lineAmountMSTExclTax, receivedInTotalPrice;
        #
        #    while select purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        lineAmountMSTExclTax = purchLine.lineAmountMSTExclTax();
        #        receivedInTotalPrice = purchLine.receivedInTotalPrice();
        #        amountMST += (lineAmountMSTExclTax-receivedInTotalPrice);
        #    }
        #
        #    return amountMST;
        #}
      ENDSOURCE
      SOURCE #associateWithPurchAgreement
        #/// <summary>
        #/// Associates the purchase order with the specified agreement order.
        #/// </summary>
        #/// <param name="_purchAgreementHeader">
        #/// The <c>PurchAgreementHeader</c> record with which to associate the purchase line.
        #/// </param>
        #void  associateWithPurchAgreement(PurchAgreementHeader _purchAgreementHeader)
        #{
        #    this.type().associateWithAgreementHeader(_purchAgreementHeader);
        #}
      ENDSOURCE
      SOURCE #autoApproveChangeRequest
        #/// <summary>
        #/// Submits and approves a change request for a purchase order.
        #/// </summary>
        #/// <param name="isPlanOrderRef">
        #/// The boolean to identify whether the PO reference to a planned order
        #/// </param>
        #server public void autoApproveChangeRequest(boolean isPlanOrderRef = false)
        #{
        #    VersioningPurchaseOrder versioningPurchaseOrder;
        #
        #    if (this.ChangeRequestRequired)
        #    {
        #        versioningPurchaseOrder = VersioningPurchaseOrder::newPurchaseOrder(this);
        #        versioningPurchaseOrder.submitChangeRequest();
        #        versioningPurchaseOrder.approveChangeRequest(isPlanOrderRef);
        #    }
        #}
      ENDSOURCE
      SOURCE #calcDue_RU
        ##ISOCountryRegionCodes
        #public void calcDue_RU()
        #{
        #    if (! this.PaymentSched && SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        #    {
        #        this.FixedDueDate = PaymTerm::find(this.Payment).due(this.DeliveryDate, this.paymDayId());
        #    }
        #}
      ENDSOURCE
      SOURCE #canApplyAllocationOrDistributionTemplate
        #/// <summary>
        #/// Determines whether to use an allocation or distribution template to create the distributons of the transaction header.
        #/// </summary>
        #/// <returns>
        #/// true if the distribution template can be used; otherwise, false.
        #/// </returns>
        #public boolean canApplyAllocationOrDistributionTemplate()
        #{
        #    boolean projMultipleFundingSources = false;
        #
        #    projMultipleFundingSources = (this.ProjId && ProjInvoiceTable::hasMultipleFundingSources(ProjTable::projInvoiceStatic(this.ProjId).ProjInvoiceProjId));
        #
        #    if (!this.isInvoiceMatched() && !(projMultipleFundingSources))
        #    {
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #canAutoUpdatePurchOrder
        #/// <summary>
        #/// Indicates whether the table buffer is restricted by the change management functionality.
        #/// </summary>
        #/// <returns>
        #/// true if the buffer can be updated; otherwise, false.
        #/// </returns>
        #public boolean canAutoUpdatePurchOrder()
        #{
        #    return !this.ChangeRequestRequired;
        #}
      ENDSOURCE
      SOURCE #canConfirmationRequestBeUpdated
        #/// <summary>
        #///     Checks the current purchase order can be updated for Confirmation Request.
        #/// </summary>
        #/// <returns>
        #///     True if it is possible to update the purchase order for Confirmation Request.
        #/// </returns>
        #public boolean canConfirmationRequestBeUpdated()
        #{
        #    return this.type().canConfirmationRequestBeUpdated();
        #}
      ENDSOURCE
      SOURCE #canFinalize
        #/// <summary>
        #///    Determines if the purchase order can be finalized.
        #/// </summary>
        #/// <returns>
        #///    true if the the purchase order can be finalized; otherwise, false.
        #/// </returns>
        #public boolean canFinalize()
        #{
        #    return (this.PurchStatus == PurchStatus::Invoiced
        #        ||  this.PurchStatus == PurchStatus::Canceled)
        #        && this.DocumentState == VersioningDocumentState::Confirmed;
        #}
      ENDSOURCE
      SOURCE #canModifyPurchaseOrder
        #/// <summary>
        #/// Determines if modifications that have a financial impact are allowed to be made when the french feature is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if there exists an accounting distribution state of complete or finalized for the document or the commitments feature is disabled; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// This method should only be used by the French commitments feature, it is not intended for use by other scenarios.
        #/// </remarks>
        #public boolean canModifyPurchaseOrder()
        #{
        #    AccountingEvent accountingEvent;
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        select firstonly RecId from accountingEvent
        #            where accountingEvent.SourceDocumentHeader  == this.SourceDocumentHeader
        #               && (accountingEvent.State    == AccountingEventState::Complete
        #                   || accountingEvent.State == AccountingEventState::Journalized);
        #    }
        #
        #    return accountingEvent.RecId == 0;
        #}
      ENDSOURCE
      SOURCE #canRenumberLineNumbers
        #/// <summary>
        #/// Determines whether the line number field can be edited.
        #/// </summary>
        #/// <returns>
        #/// true if the line number field can be edited; otherwise, false.
        #/// </returns>
        #public boolean canRenumberLineNumbers()
        #{
        #    return !this.isVersioned();
        #}
      ENDSOURCE
      SOURCE #canSubmitToWorkflow
        #/// <summary>
        #///     This method are testing if the current <c>PurchTable</c> can be submitted to workflow.
        #/// </summary>
        #/// <param name="workflowType">Workflow type</param>
        #/// <returns>
        #///     Returns true if the current record can be submitted to workflow, otherwise false.
        #/// </returns>
        #public boolean  canSubmitToWorkflow(str workflowType = '')
        #{
        #    boolean     canSubmit = false;
        #
        #    if (this.RecId && this.DocumentState  == VersioningDocumentState::Draft)
        #    {
        #        canSubmit = true;
        #    }
        #
        #    return canSubmit;
        #}
      ENDSOURCE
      SOURCE #checkAccount
        #boolean  checkAccount()
        #{
        #    boolean             ok = true;
        #    boolean             isVendReleaseDateExpired;
        #    InvoiceReleaseDate  vendReleaseDate;
        #    CustVendorBlocked   vendBlocked;
        #
        #    //initializations
        #    vendReleaseDate = utcDateTimeNull();
        #    isVendReleaseDateExpired = VendTable::isVendReleaseDateExpired(this.OrderAccount);
        #
        #    if (VendTable::blockedReleaseDate(this.OrderAccount) != utcDateTimeNull())
        #    {
        #        vendReleaseDate = DateTimeUtil::applyTimeZoneOffset(VendTable::blockedReleaseDate(this.OrderAccount), DateTimeUtil::getUserPreferredTimeZone());
        #    }
        #
        #    vendBlocked = VendTable::blocked(this.OrderAccount);
        #
        #    if ( vendBlocked == CustVendorBlocked::All)
        #    {
        #        if (!vendReleaseDate)
        #        {
        #            ok = checkFailed(strFmt("@SYS128411", this.OrderAccount, CustVendorBlocked::All));
        #        }
        #        else if (!isVendReleaseDateExpired)
        #        {
        #            ok = checkFailed(strFmt("@SYS128412", this.OrderAccount, CustVendorBlocked::All,DateTimeUtil::date(vendReleaseDate)));
        #        }
        #    }
        #
        #    // If the commitments feature is enabled, then we want to validate that the order account matches what is on the commitment.
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled() && !this.checkVendorOnAllPurchLineCommitments())
        #    {
        #        ok = checkFailed("@SPS2134");
        #        this.OrderAccount = this.orig().OrderAccount;
        #    }
        #    // <GIN>
        #    if (TaxParameters::isCustomsEnable_IN()
        #        && this.purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #        && this.PurchaseType          != PurchaseType::Purch)
        #    {
        #        return checkFailed("@GLS5766");
        #    }
        #    // </GIN>
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkAccountingDateFiscalYear
        #/// <summary>
        #/// Determine if the change of the accounting data is allowed.
        #/// </summary>
        #/// <returns>
        #/// Returns true if a change of the accounting data is allowed; otherwise false.
        #/// </returns>
        #public boolean checkAccountingDateFiscalYear()
        #{
        #    boolean     ok = true;
        #
        #    boolean isFiscalYearChanged()
        #    {
        #        return (this.AccountingDate != this.orig().AccountingDate &&
        #                (this.AccountingDate < FiscalCalendars::findFirstDayofYear(CompanyInfo::fiscalCalendarRecId(), this.orig().AccountingDate) ||
        #                 this.AccountingDate > FiscalCalendars::findLastDayofYear(CompanyInfo::fiscalCalendarRecId(), this.orig().AccountingDate)));
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(LedgerAdv2BudgetCtrl)))
        #    {
        #        if (isFiscalYearChanged())
        #        {
        #            ok = ok && !SourceDocumentHeaderProvider::isJournalized(this.SourceDocumentHeader);
        #            ok = ok && !SourceDocumentHeaderProvider::hasBudgetReservations(this.SourceDocumentHeader);
        #        }
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkAgreement_RU
        #/// <summary>
        #///     Validates the <c>AgreementHeaderExt_RU</c> field for purchase order.
        #/// </summary>
        #/// <param name="_agreementHeaderExtRecId">
        #///     The record ID of the purchase agreement; optional.
        #/// </param>
        #/// <returns>
        #///     true if the <c>AgreementHeaderExt_RU</c> field is valid; otherwise, false.
        #/// </returns>
        #public boolean checkAgreement_RU(AgreementHeaderExtRecId_RU _agreementHeaderExtRecId = this.purchTable_RU().AgreementHeaderExt_RU)
        #{
        #    PurchAgreementHeader purchAgreementHeader;
        #    boolean ok = true;
        #
        #    if (PurchLine::exist(this.PurchId))
        #    {
        #        ok = checkFailed("@GLS220553");
        #    }
        #
        #    if (ok && _agreementHeaderExtRecId)
        #    {
        #        purchAgreementHeader = PurchAgreementHeaderExt_RU::purchAgreementHeader(_agreementHeaderExtRecId);
        #
        #        if (!purchAgreementHeader.canReleaseAgreement(this.DeliveryDate))
        #        {
        #            ok = checkFailed("@SYS103075");
        #        }
        #
        #        if (purchAgreementHeader.VendAccount != this.OrderAccount)
        #        {
        #            ok = checkFailed("@SYS334899");
        #        }
        #
        #        if (ok && this.InvoiceAccount && purchAgreementHeader.purchAgreementHeaderDefault().VendorInvoiceAccount != this.InvoiceAccount)
        #        {
        #            ok = checkFailed("@SYS334899");
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCancel
        #/// <summary>
        #/// Checks whether the order can be canceled.
        #/// </summary>
        #/// <returns>
        #/// true if the order can be canceled; otherwise, false.
        #/// </returns>
        #public boolean checkCancel()
        #{
        #    return this.RecId && this.PurchStatus == PurchStatus::Backorder
        #        && (this.DocumentState != VersioningDocumentState::InReview
        #        && this.DocumentState != VersioningDocumentState::Finalized)
        #        && VersioningPurchaseOrder::checkHistoryExist(this);
        #}
      ENDSOURCE
      SOURCE #checkCashPayment
        #boolean  checkCashPayment()
        #{
        #    // <GEERU>
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #
        #    // <GEERU>
        #    if (this.PaymentSched
        #        && (PaymTerm::isCashAccount(this.Payment)
        #            || (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #                && this.purchTable_W().EmplAccount_RU)))
        #    // </GEERU>
        #    {
        #        return checkFailed(strFmt("@SYS28733"));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkContactPerson
        #boolean checkContactPerson()
        #{
        #    ContactPerson   contactPerson;
        #
        #    if (this.ContactPersonId)
        #    {
        #        contactPerson = ContactPerson::find(this.ContactPersonId);
        #        if (contactPerson.ContactForParty != this.party())
        #        {
        #            return false;
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCurrencyCode
        #client server boolean  checkCurrencyCode()
        #{
        #    boolean oK = true;
        #
        #    if (this)
        #    {
        #        if (this.CurrencyCode != this.orig().CurrencyCode &&
        #            PurchLine::existDifferentCurrency(this.PurchId,this.CurrencyCode))
        #        {
        #            warning("@SYS15290");
        #
        #            this.CurrencyCode = this.orig().CurrencyCode;
        #        }
        #
        #        if (this.CurrencyCode != this.orig().CurrencyCode &&
        #            MarkupTrans::existDifferentCurrency(this.TableId, this.RecId, this.CurrencyCode))
        #        {
        #            warning("@SYS24528");
        #
        #            this.CurrencyCode = this.orig().CurrencyCode;
        #        }
        #    }
        #
        #    return oK;
        #}
      ENDSOURCE
      SOURCE #checkDelete
        #boolean checkDelete()
        #{
        #    return this.type().checkDelete();
        #}
        #
      ENDSOURCE
      SOURCE #checkFullyDistributedAndQualified
        #/// <summary>
        #/// Checks if all purchase order lines are fully distributed and fully qualified.
        #/// </summary>
        #/// <param name="_caller">
        #/// The calling source document processor caller.
        #/// </param>
        #/// <param name="_user">
        #/// The user that submitted the source document implementation for processing; optional.
        #/// </param>
        #/// <returns>
        #/// true if all purchase order lines are fully distributed and qualified; otherwise, false.
        #/// </returns>
        #server boolean checkFullyDistributedAndQualified(
        #    SourceDocumentProcessorCaller           _caller = null,
        #    UserId                                  _user = curUserId()
        #    )
        #{
        #    SourceDocumentHeader    sourceDocumentHeader;
        #    SourceDocumentLine      sourceDocumentLine;
        #
        #    // Make sure all lines are fully distributed - Completed and finalized lines will not be changed
        #    sourceDocumentHeader = SourceDocumentHeader::find(this.SourceDocumentHeader);
        #
        #    // Cache max accounting distribution numbers to avoid having to look up each line individually during submit
        #    AccountingDistributionProcessor::cacheAccountingDistNumbersForHeader(sourceDocumentHeader);
        #
        #    if (sourceDocumentHeader)
        #    {
        #        while select sourceDocumentLine
        #            where sourceDocumentLine.SourceDocumentHeader == sourceDocumentHeader.RecId
        #                && sourceDocumentLine.ParentSourceDocumentLine == 0
        #                && (sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Draft
        #                    || sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::PartlyDistributed)
        #        {
        #            SourceDocumentLineProcessor::submitSourceDocumentLine(
        #                sourceDocumentLine,
        #                false,
        #                SourceDocumentLineAccountingStatus::FullyDistributed,
        #                _caller,
        #                _user);
        #        }
        #    }
        #
        #    return SourceDocumentProvider::areSourceDocAccDistAccountValid(
        #        SourceDocumentHeader::find(this.SourceDocumentHeader), true, true);
        #}
        #
      ENDSOURCE
      SOURCE #checkIfHeaderMiscChargesItems
        #/// <summary>
        #/// Retrieves the warning icon the of the header miscellaneous charges of a debit or credit type are
        #/// equal to the item and they have not been allocated to lines
        #/// </summary>
        #/// <returns>
        #/// The warning icon of the header miscellaneous charges of debit or credit type are equal to the item
        #/// and they have not been allocated to lines; otherwise, null.
        #/// </returns>
        #//BP Deviation documented
        #display ImageRes checkIfHeaderMiscChargesItems()
        #{
        #    #resAppl
        #    ImageRes icon;
        #
        #    if(Markup::hasMarkupTypeItem(this))
        #    {
        #        icon = #ImageWarning;
        #    }
        #
        #    return  icon;
        #}
        #
        #
      ENDSOURCE
      SOURCE #checkIfUpdate
        #/// <summary>
        #///    Determines if the various posting updates are allowed for the order.
        #/// </summary>
        #/// <param name = "_packedCheckIfUpdateContract">
        #///     Specifies which of the posting update allowance values for the order to get; optional.
        #/// </param>
        #/// <returns>
        #///    A packed <c>PurchTableCanBeUpdatedContract</c> class with the values of whether the order can do a posting of a given type.
        #/// </returns>
        #server container checkIfUpdate(container _packedCheckIfUpdateContract = conNull())
        #{
        #    return this.type().checkIfUpdate(_packedCheckIfUpdateContract);
        #}
        #
        #
      ENDSOURCE
      SOURCE #checkIfUpdate_IN
        #/// <summary>
        #/// Determines if the various posting updates are allowed for the order.
        #/// </summary>
        #/// <returns>
        #/// A packed <c>PurchTableCanBeUpdatedContract</c> class with the values of whether the order can do a posting of a given type.
        #/// </returns>
        #// <GIN>
        #public container checkIfUpdate_IN()
        #{
        #    return this.type().checkIfUpdate_IN();
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #checkIntrastatFulfillDate_HU
        #/// <summary>
        #/// Validates Intrastat fulfillment date.
        #/// </summary>
        #/// <returns>
        #/// ture if Intrastat fulfillment date is valid; otherwise, false.
        #/// </returns>
        #public boolean checkIntrastatFulfillDate_HU()
        #{
        #    VendTable                       vendTable;
        #    LogisticsAddressCountryRegionId country;
        #    IntrastatParameters             intrastatParameters;
        #
        #
        #    vendTable           = VendTable::find(this.OrderAccount);
        #    country             = vendTable.invoiceAddress().CountryRegionId;
        #    intrastatParameters = IntrastatParameters::find();
        #
        #    if (! country)
        #    {
        #        return checkFailed(strFmt("@GLS107637"));
        #    }
        #
        #    if (! IntrastatCountryRegionParameters::isInEU(country))
        #    {
        #        return true;
        #    }
        #
        #    if (intrastatParameters.IntrastatFulfillmentDateEmptyWarning_HU && ! this.IntrastatFulfillmentDate_HU)
        #    {
        #        return checkFailed(strFmt("@SYS4080009", fieldPName(PurchTable, IntrastatFulfillmentDate_HU)));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkInventOwner_RU
        #boolean checkInventOwner_RU()
        #{
        #    InventTransOrigin   inventTransOrigin;
        #    InventDim           inventDim;
        #    boolean             ok = true;
        #    PurchTable          purchTableOrig = this.orig();
        #    PurchTable_RU       purchTable_RU = this.purchTable_RU();
        #
        #    if (purchTableOrig &&
        #        (this.OrderAccount          != purchTableOrig.OrderAccount  ||
        #         purchTable_RU.AgreementHeaderExt_RU != purchTable_RU.orig().AgreementHeaderExt_RU))
        #    {
        #        select firstonly RecId from inventTransOrigin
        #            where inventTransOrigin.ReferenceCategory == InventTransType::Purch
        #               && inventTransOrigin.ReferenceId       == this.PurchId
        #        join TableId from inventDim
        #            where inventDim.InventDimId     == inventTransOrigin.ItemInventDimId
        #               && inventDim.InventOwnerId_RU;
        #
        #        if (inventTransOrigin.RecId)
        #        {
        #            ok = checkFailed(strFmt("@GLS115695", fieldId2pname(tableNum(InventDim), fieldNum(InventDim, InventOwnerId_RU))));
        #        }
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkInventProfile_RU
        #boolean checkInventProfile_RU(boolean _checkProfileId = false)
        #{
        #    PurchTable          purchTableTmp;
        #    PurchTable_RU       purchTableTmp_RU;
        #    PurchLine           purchLine;
        #    InventDim           inventDim;
        #    InventProfile_RU    inventProfile;
        #    boolean             ok = true;
        #    PurchTable_RU       purchTable_RU = this.purchTable_RU();
        #
        #    purchTableTmp.data(this);
        #    purchTableTmp_RU = purchTableTmp.purchTable_RU();
        #
        #    purchTable_RU.setInventProfileId_RU();
        #    this.packPurchTable_RU(purchTable_RU);
        #
        #    if (purchTable_RU.InventProfileType_RU != InventProfileType_RU::NotSpecified)
        #    {
        #        select firstonly purchLine
        #            where purchLine.PurchId                 == this.PurchId
        #        join inventDim
        #            where inventDim.InventDimId             == purchLine.InventDimId
        #        join inventProfile
        #            where inventProfile.InventProfileId     == inventDim.InventProfileId_RU
        #               && inventProfile.InventProfileType   != purchTable_RU.InventProfileType_RU;
        #
        #        if (purchLine)
        #        {
        #            ok = checkFailed(strFmt("@GLS113728",
        #                                    inventDim.InventProfileId_RU,
        #                                    purchTable_RU.InventProfileType_RU));
        #        }
        #
        #        if (purchTable_RU.InventProfileType_RU != InventProfileType_RU::General)
        #        {
        #            select firstonly RecId from purchLine
        #                where purchLine.PurchId == this.PurchId &&
        #                     (purchLine.StockedProduct == NoYes::No ||
        #                     (purchLine.ProcurementCategory         &&
        #                     !purchLine.ItemId));
        #
        #            if (purchLine.RecId)
        #            {
        #                ok = checkFailed(
        #                    strFmt("@GLS220092",
        #                        purchTable_RU.InventProfileType_RU));
        #            }
        #        }
        #        else if (InventProfile_RU::find(purchTableTmp_RU.InventProfileId_RU).StockInTransit ==StockInTransit_RU::BoughtInTransit)
        #        {
        #            select firstonly RecId from purchLine
        #                where purchLine.PurchId == this.PurchId     &&
        #                     (purchLine.StockedProduct == NoYes::No ||
        #                     (purchLine.ProcurementCategory         &&
        #                     !purchLine.ItemId));
        #
        #            if (purchLine.RecId)
        #            {
        #                ok = checkFailed(
        #                    strFmt("@GLS220091",
        #                        purchTable_RU.InventProfileId_RU));
        #            }
        #        }
        #    }
        #
        #    if (! _checkProfileId &&
        #        PurchTable2LineParameters::find(
        #            PurchTable::fieldIdToInternalFieldId_W(
        #                fieldNum(PurchTable_RU, InventProfileId_RU),
        #                tableNum(PurchTable_RU))).Table2LineUpdate == TradeTable2LineUpdate::Never)
        #    {
        #        // force check for consistent
        #        _checkProfileId = true;
        #    }
        #
        #    if (_checkProfileId &&  purchTableTmp_RU.InventProfileId_RU)
        #    {
        #        select firstonly RecId from purchLine
        #            where purchLine.PurchId             == this.PurchId
        #        join InventProfileId_RU from inventDim
        #            where inventDim.InventDimId         == purchLine.InventDimId
        #        join TableId from inventProfile
        #            where inventProfile.InventProfileId == inventDim.InventProfileId_RU
        #               && inventProfile.InventProfileId != purchTableTmp_RU.InventProfileId_RU;
        #
        #        if (purchLine.RecId)
        #        {
        #            ok = checkFailed(strFmt("@GLS113727",
        #                                    inventDim.InventProfileId_RU,
        #                                    purchTableTmp_RU.InventProfileId_RU));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMarkupTrans
        #server boolean checkMarkupTrans(boolean _warningOnly = true)
        #{
        #    return MarkupTrans::checkMarkupTrans(this.TableId, this.RecId, _warningOnly);
        #}
        #
      ENDSOURCE
      SOURCE #checkPayment
        #boolean checkPayment()
        #{
        #    #ISOCountryRegionCodes
        #
        #    if (this.PaymentSched && this.FixedDueDate)
        #    {
        #        return checkFailed("@SYS69828");
        #    }
        #
        #    if (this.Payment                                                    &&
        #        !this.DeliveryDate                                              &&
        #        SysCountryRegionCode::isLegalEntityInCountryRegion([#isoES])    &&
        #        this.payment().UseDeliveryDateForDueDate_ES)
        #    {
        #        return checkFailed(strFmt("@SYS4000477", this.Payment));
        #    }
        #
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #checkUpdate
        #boolean  checkUpdate(boolean  useWarning        = true,
        #                     boolean _interCompanyCheck = true)
        #{
        #    boolean     ok = (this ? true : false);
        #    SalesTable  salesTable;
        #
        #    if (this.ChangeRequestRequired && this.DocumentState >= VersioningDocumentState::Approved)
        #    {
        #        return false;
        #    }
        #
        #    if (this.isFinalized())
        #    {
        #        return false;
        #    }
        #
        #    if (this  &&  this.PurchStatus == PurchStatus::Invoiced)
        #    {
        #        switch (PurchParameters::find().AccesLevelInvoiced)
        #        {
        #
        #
        #
        #            case SalesPurchAccesLevel::None    :   ok = true;
        #                                                    break;
        #
        #            case SalesPurchAccesLevel::Warning  :   if (useWarning && Box::yesNo("@SYS27044",DialogButton::Yes) != DialogButton::Yes)
        #                                                        ok = false;
        #                                                    break;
        #
        #            case SalesPurchAccesLevel::Locked   :   ok = false;
        #                                                    break;
        #        }
        #    }
        #
        #    if (_interCompanyCheck)
        #    {
        #        if (!ok
        #        &&  this.isInterCompanyOrder())
        #        {
        #            warning("@SYS106306");
        #        }
        #
        #        if (ok
        #        &&  this.SkipUpdate != InterCompanySkipUpdate::InterCompany
        #        &&  this.SkipUpdate != InterCompanySkipUpdate::Both
        #        &&  this.isInterCompanyOrder())
        #        {
        #            changecompany(this.InterCompanyCompanyId)
        #            {
        #                salesTable = null;
        #                salesTable = SalesTable::find(this.InterCompanySalesId);
        #                if (salesTable)
        #                {
        #                    salesTable.SkipUpdate = InterCompanySkipUpdate::InterCompany;
        #                    ok = SalesTableType::construct(salesTable).checkUpdate(false,_interCompanyCheck);
        #                }
        #            }
        #        }
        #
        #        if (ok
        #        &&  this.SkipUpdate != InterCompanySkipUpdate::Internal
        #        &&  this.SkipUpdate != InterCompanySkipUpdate::Both
        #        &&  this.isInterCompanyOrder())
        #        {
        #            salesTable = null;
        #            salesTable = SalesTable::find(this.InterCompanyOriginalSalesId);
        #            if (salesTable && salesTable.isInterCompanyOrder())
        #            {
        #                salesTable.SkipUpdate = InterCompanySkipUpdate::Internal;
        #                ok = SalesTableType::construct(salesTable).checkUpdate(false,_interCompanyCheck);
        #            }
        #        }
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkVendorOnAllPurchLineCommitments
        #/// <summary>
        #/// Validates that there are no purchase order lines associated with a commitment that has a different vendor than the current order account.
        #/// </summary>
        #/// <returns>
        #/// true if there are no purchase order lines for the current purchase order that are associated with a
        #/// commitment that has a different vendor account than the current order account; otherwise, false.
        #/// </returns>
        #public boolean checkVendorOnAllPurchLineCommitments()
        #{
        #    PurchLine                   purchLine;
        #    PurchCommitmentLine_PSN     purchCommitmentLine_PSN;
        #    PurchCommitmentHeader_PSN   purchCommitmentHeader_PSN;
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        select firstonly RecId from purchLine
        #            where purchLine.PurchId == this.PurchId
        #        join firstonly RecId from purchCommitmentLine_PSN
        #            where purchCommitmentLine_PSN.RecId == purchLine.PurchCommitmentLine_PSN
        #        join firstonly RecId from purchCommitmentHeader_PSN
        #            where purchCommitmentHeader_PSN.RecId   == purchCommitmentLine_PSN.PurchCommitmentHeader_PSN
        #               && purchCommitmentHeader_PSN.VendorAccount != ''
        #               && purchCommitmentHeader_PSN.VendorAccount != this.OrderAccount;
        #
        #        return purchCommitmentHeader_PSN.RecId == 0;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #clearAddressReference
        #public void clearAddressReference()
        #{
        #    this.AddressRefRecId    = 0;
        #    this.AddressRefTableId  = 0;
        #}
      ENDSOURCE
      SOURCE #clearingPeriod
        #//BP Deviation documented
        #display ClearingPeriod clearingPeriod()
        #{
        #    return this.payer().clearingPeriod();
        #}
      ENDSOURCE
      SOURCE #companyInfo
        #/// <summary>
        #/// Retrieves the <c>CompanyInfo</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>CompanyInfo</c> record.
        #/// </returns>
        #public CompanyInfo companyInfo()
        #{
        #    return CompanyInfo::findDataArea(this.company());
        #}
      ENDSOURCE
      SOURCE #contactPerson
        #ContactPerson contactPerson(boolean update = false)
        #{
        #    return ContactPerson::find(this.ContactPersonId, update);
        #}
      ENDSOURCE
      SOURCE #contactPersonName
        #//BP Deviation documented
        #display ContactPersonName  contactPersonName()
        #{
        #    return ContactPerson::name(this.ContactPersonId);
        #}
      ENDSOURCE
      SOURCE #contactPersonPhone
        #/// <summary>
        #///    Gets the phone for the contact person.
        #/// </summary>
        #/// <returns>
        #///    The phone for the contact person.
        #/// </returns>
        #public display ContactPersonPhone contactPersonPhone()
        #{
        #    return this.contactPerson().phone();
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #server void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurrencyConversion = TradeCurencyConversion::ExchRate, TransDate _exchRateDate = systemDateGet())
        #{
        #    PurchLine                   purchLine;
        #    MarkupTrans                 markupTrans;
        #
        #    ttsbegin;
        #
        #    VersioningPurchaseOrder::newPurchaseOrder(this,true).change(this,this.orig());
        #
        #    while select forupdate purchLine
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        purchLine.convertCurrencyCode(currencyCode, tradeCurrencyConversion,_exchRateDate);
        #        purchLine.IsModified = NoYes::Yes;
        #        purchLine.doUpdate();
        #
        #        if(purchLine.MatchingAgreementLine && !AgreementLine::find(purchLine.MatchingAgreementLine).isLinkValid(purchLine,false))
        #        {
        #            purchLine.unLinkAgreementLine();
        #            info(strFmt("@SYS306907", this.PurchId, purchLine.ItemId));
        #        }
        #
        #        if(purchLine.ProjId && (purchLine.RemainPurchFinancial+purchLine.RemainPurchPhysical)!=0) //Committed cost updated since vender conrency changes
        #        {
        #            this.projCostControlUpdate(purchLine,ProjCommittedCostUpdateAction::UpdateReverse);
        #        }
        #    }
        #
        #    while select forupdate markupTrans
        #          where markupTrans.TransTableId  == this.TableId
        #            &&  markupTrans.TransRecId    == this.RecId
        #            &&  !markupTrans.IsDeleted
        #    {
        #        markupTrans.convertCurrencyCode(currencyCode,_exchRateDate);
        #        markupTrans.IsModified = NoYes::Yes;
        #        markupTrans.doUpdate();
        #    }
        #
        #    if (PurchPrepayTable::exist(this.PurchId))
        #    {
        #        PurchPrepayTable::convertCurrencyCode(this.PurchId, currencyCode, _exchRateDate);
        #    }
        #
        #    VendPaymSched::deleteVendPaymSched(this.TableId, this.RecId);
        #
        #    this.CurrencyCode = currencyCode;
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #copyAddressToLine
        #server void  copyAddressToLine(DialogButton                 _copyAddress,
        #                               LogisticsPostalAddressRecId  _originalDeliveryPostalAddress)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_copyAddress == DialogButton::Cancel)
        #    {
        #        return;
        #    }
        #
        #    ttsbegin;
        #    // <GBR>
        #    if (BrazilParameters::isEnabled())
        #    {
        #        while select forupdate purchLine
        #            where purchLine.PurchId         == this.PurchId
        #               && !purchLine.IsInvoiceMatched
        #               && !purchLine.IsDeleted
        #               &&
        #                (_copyAddress                     == DialogButton::YesToAll ||
        #                 purchLine.DeliveryPostalAddress  == _originalDeliveryPostalAddress)
        #               &&
        #                (!purchLine.mcrDropShipment                      ||
        #                (purchLine.PurchStatus != PurchStatus::Invoiced &&
        #                 purchLine.PurchStatus != PurchStatus::Received))
        #
        #        {
        #            purchLine.setAddressFromPurchTable(this);
        #            purchLine.onDeliveryPostalAddressChange_BR();
        #            purchLine.write();
        #        }
        #    }
        #    else
        #    {
        #    // </GBR>
        #        purchLine.skipDataMethods(true);
        #        update_recordset purchLine
        #            setting DeliveryPostalAddress = this.DeliveryPostalAddress,
        #                    DeliveryName          = this.DeliveryName,
        #                    AddressRefRecId       = this.AddressRefRecId,
        #                    AddressRefTableId     = this.AddressRefTableId
        #            where purchLine.PurchId         == this.PurchId
        #               && !purchLine.IsInvoiceMatched
        #               && !purchLine.IsDeleted
        #               &&
        #                (_copyAddress                     == DialogButton::YesToAll ||
        #                 purchLine.DeliveryPostalAddress  == _originalDeliveryPostalAddress);
        #    // <GBR>
        #    }
        #    // </GBR>
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #copyDimension
        #/// <summary>
        #/// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </summary>
        #/// <param name="_defaultDimension">
        #/// A dimension set to apply to the <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_dimensionCopy">
        #/// A <c>dimensionCopy</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten.
        #/// </remarks>
        #
        #public
        #server
        #DimensionDefault copyDimension(
        #    DimensionDefault _defaultDimension,
        #    DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this, CompanyInfo::findDataArea(curext()).RecId)
        #    )
        #{
        #    return _dimensionCopy.copy(_defaultDimension);
        #}
      ENDSOURCE
      SOURCE #copyFromPurchTableHistory
        #/// <summary>
        #/// Copies data from a <c>PurchTableHistory</c> record.
        #/// </summary>
        #/// <param name="_purchTableHistory">
        #/// A <c>PurchTableHistory</c> record to copy data from.
        #/// </param>
        #void copyFromPurchTableHistory(PurchTableHistory _purchTableHistory)
        #{
        #    // <GEEU>
        #    #ISOCountryRegionCodes
        #    // </GEEU>
        #
        #    this.DlvTerm                = _purchTableHistory.DlvTerm;
        #    this.DlvMode                = _purchTableHistory.DlvMode;
        #    this.LanguageId             = _purchTableHistory.LanguageId;
        #    this.Payment                = _purchTableHistory.Payment;
        #    this.CashDisc               = _purchTableHistory.CashDisc;
        #    this.CurrencyCode           = _purchTableHistory.CurrencyCode;
        #    this.DefaultDimension       = this.copyDimension(_purchTableHistory.DefaultDimension);
        #    this.InclTax                = _purchTableHistory.InclTax;
        #    this.AccountingDistributionTemplate   = _purchTableHistory.AccountingDistributionTemplate;
        #
        #    // <GEEU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        #    {
        #        TransportationDocument::copy(_purchTableHistory, this);
        #    }
        #    // </GEEU>
        #}
      ENDSOURCE
      SOURCE #copyPaymentSched
        #server void  copyPaymentSched(VendInvoiceJour vendInvoiceJour)
        #{
        #    VendPaymSched       vendorPaymSched;
        #    VendPaymSchedLine   vendPaymSchedLine;
        #
        #    VendPaymSched       newVendPaymSched;
        #    VendPaymSchedLine   newVendPaymSchedLine;
        #
        #    ttsbegin;
        #
        #    select firstonly vendorPaymSched
        #        where vendorPaymSched.ExtTableId    == this.TableId &&
        #              vendorPaymSched.ExtRecId      == this.RecId;
        #
        #    if (vendorPaymSched)
        #    {
        #        newVendPaymSched            = vendorPaymSched.data();
        #        newVendPaymSched.ExtTableId = vendInvoiceJour.TableId;
        #        newVendPaymSched.ExtRecId   = vendInvoiceJour.RecId;
        #        newVendPaymSched.insert();
        #
        #        while select vendPaymSchedLine
        #            where vendPaymSchedLine.FatherRecID == vendorPaymSched.RecId
        #            &&   !vendPaymSchedLine.IsDeleted
        #        {
        #            newVendPaymSchedLine                = vendPaymSchedLine.data();
        #            newVendPaymSchedLine.FatherRecID    = newVendPaymSched.RecId;
        #            newVendPaymSchedLine.insert();
        #        }
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createDate
        #/// <summary>
        #/// Retrieves the creation date of the current records.
        #/// </summary>
        #/// <returns>
        #/// The creation date of the current records.
        #/// </returns>
        #/// <remarks>
        #/// This method returns only the date. It is used in fact boxes.
        #/// </remarks>
        #//BP Deviation documented
        #display CreationDate  createDate()
        #{
        #    return DateTimeUtil::date(this.CreatedDateTime);
        #}
      ENDSOURCE
      SOURCE #createInventTrans_BR
        #/// <summary>
        #/// Returns if the invoice will create inventory transactions based on <c>SalesPurchOperationTye_BR</c> configuration.
        #/// </summary>
        #/// <returns>
        #/// Returns true is operation type is not set on <c>PurchTable</c> or the operation type is configured to inventory transactions.
        #/// </returns>
        #public boolean createInventTrans_BR()
        #{
        #    PurchTable_BR   purchTable_BR = this.purchTable_BR();
        #
        #    return BrazilParameters::isEnabled() == false
        #        || purchTable_BR.SalesPurchOperationType_BR == false
        #        || SalesPurchOperationType_BR::find(purchTable_BR.SalesPurchOperationType_BR).CreateInventTrans;
        #}
        #
      ENDSOURCE
      SOURCE #createMarkupTrans
        #server void  createMarkupTrans(
        #    boolean _deleteExistingMarkupTrans = true
        #)
        #{;
        #    Markup::insertMarkupTrans(HeadingLine::Heading,
        #                             MarkupModuleType::Vend,
        #                             this,
        #                             this.OrderAccount,
        #                             this.MarkupGroup,
        #                             this.CurrencyCode,
        #                             this.LanguageId,
        #                             '',
        #                             this.MarkupGroup
        #                            ,false
        #                            ,_deleteExistingMarkupTrans
        #                            );
        #}
      ENDSOURCE
      SOURCE #createOneTimeAccount
        #server void  createOneTimeAccount()
        #{
        #    boolean resetTmpVendorName;
        #
        #    if (!this.PurchName)
        #    {//PurchName is used as vendor name and is mandatory.
        #     //The vendor name is updated again in transferToOnetimeVendor which is called as soon as the purchase order is being created.
        #        this.PurchName = "@SYS130384";
        #        resetTmpVendorName = true;
        #    }
        #
        #    this.OrderAccount       = VendTable::createOneTimeAccount(this);
        #    this.initFromVendTable();
        #
        #    if (resetTmpVendorName)
        #    {
        #        this.PurchName = '';
        #    }
        #
        #    if (!this.InvoiceAccount)
        #    {
        #        this.InvoiceAccount = this.OrderAccount;
        #    }
        #}
      ENDSOURCE
      SOURCE #createPaymentSched
        #client server void  createPaymentSched()
        #{
        #    CustVendPaymSched   custVendPaymSched;
        #    PurchTotals         purchTotals = PurchTotals::newPurchTable(this, PurchUpdate::All);
        #
        #    purchTotals.calc();
        #
        #    custVendPaymSched = CustVendPaymSched::construct(SysModule::Vend,this);
        #    custVendPaymSched.setPurchTotals(purchTotals);
        #    custVendPaymSched.createPaymSched(PaymSched::find(this.PaymentSched));
        #}
        #
      ENDSOURCE
      SOURCE #createVendTrans_BR
        #/// <summary>
        #///     Indicates whether the corresponding fiscal document will create vendor transactions based on <c>SalesPurchOperationTye_BR</c> configuration.
        #/// </summary>
        #/// <returns>
        #///     Returns true if operation type is not set on <c>PurchTable</c> or the operation type is configured to create vendor transactions.
        #/// </returns>
        #public boolean createVendTrans_BR()
        #{
        #    PurchTable_BR purchTable_BR;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR]))
        #    {
        #        purchTable_BR = this.purchTable_BR();
        #    }
        #
        #    return BrazilParameters::isEnabled() == false
        #        || purchTable_BR.SalesPurchOperationType_BR == 0
        #        || SalesPurchOperationType_BR::find(purchTable_BR.SalesPurchOperationType_BR).CreateFinancialTrans;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void  delete()
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.delete();
        #
        #    TradeBLWIJournalPurposeCodes::deleteRecord(this.RecId, TradeBLWITypeOfForm::PurchTable);
        #
        #}
        #
      ENDSOURCE
      SOURCE #deliveryAddress
        #LogisticsPostalAddress deliveryAddress()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryAddressing
        #//BP deviation documented
        #display LogisticsAddressing deliveryAddressing()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress).Address;
        #}
      ENDSOURCE
      SOURCE #deliveryCNPJCPFNUM_BR
        #/// <summary>
        #/// Returns the delivery CNPJ or CPF for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the CNPJ or CPF of the vendor if the adddress is a primary address.
        #/// Returns the CNPJ or CPF related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display CNPJCPFNum_BR deliveryCNPJCPFNUM_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    select firstonly dirPartyLocation where dirPartyLocation.Location == this.deliveryLocation();
        #
        #    return dirPartyLocation.cnpjCPFNum_BR();
        #}
      ENDSOURCE
      SOURCE #deliveryDateDisplay
        #//BP Deviation documented
        #display DlvDate deliveryDateDisplay(DlvDate blankDate = systemDateGet())
        #{
        #    if (this.DeliveryDate)
        #        return this.DeliveryDate;
        #
        #    return blankDate;
        #}
      ENDSOURCE
      SOURCE #deliveryIENum_BR
        #/// <summary>
        #/// Returns the delivery IE for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the IE of the vendor if the adddress is a primary address.
        #/// Returns the IE related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display IENum_BR deliveryIENum_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    select firstonly dirPartyLocation where dirPartyLocation.Location == this.deliveryLocation();
        #
        #    return dirPartyLocation.ieNum_BR();
        #}
      ENDSOURCE
      SOURCE #deliveryLocation
        #/// <summary>
        #/// Retrieves the <c>RecId</c> field of the <c>LogisticsLocation</c> record that is associated with the
        #/// specified <c>DeliveryPostalAddress</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>RecId</c> field of the <c>LogisticsLocation</c> record that is associated with the specified
        #/// <c>DeliveryPostalAddress</c> record.
        #/// </returns>
        #public LogisticsLocationRecId deliveryLocation()
        #{
        #    return LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #dispLastConsDate_JP
        #/// <summary>
        #/// Get the latest consolidation date for this purchase order.
        #/// </summary>
        #/// <returns>
        #/// Consolidation date.
        #/// </returns>
        #// <GJP>
        #//BP Deviation documented
        #public display CustVendConsDate_JP dispLastConsDate_JP()
        #{
        #    return this.SalesPurchTable::getLastConsDate_JP();
        #}
        #// </GJP>
        #
      ENDSOURCE
      SOURCE #dispLastConsId_JP
        #/// <summary>
        #/// Gets latest consolidation invoice Id for this purchase order.
        #/// </summary>
        #/// <returns>
        #/// Consolidation invoice Id.
        #/// </returns>
        #// <GJP>
        #//BP Deviation documented
        #public display VendConsId_JP dispLastConsId_JP()
        #{
        #    return this.SalesPurchTable::getLastConsId_JP();
        #}
        #// </GJP>
        #
      ENDSOURCE
      SOURCE #displayBankDocumentInfo
        #/// <summary>
        #/// Gives the title on top of the preview pane on the BankLCImportListPage form.
        #/// </summary>
        #/// <returns>
        #/// Title field of the preview pane.
        #/// </returns>
        #public display Caption displayBankDocumentInfo()
        #{
        #    return strFmt("@SYS327590", this.PurchId, this.BankDocumentType);
        #}
      ENDSOURCE
      SOURCE #displayBudgetCheckResult
        #/// <summary>
        #/// Retrieves the image position that displays the <c>BudgetCheckResult</c> value for the given
        #/// <c>PurchTable</c> record in the <c>BudgetCheckResult</c> values image list.
        #/// </summary>
        #/// <returns>
        #/// An <c>ImageBudgetCheckResult</c> value that indicates the position of the image in the
        #/// <c>BudgetCheckResult</c> values image list.
        #/// </returns>
        #// BP Deviation Documented
        #public display ImageBudgetCheckResult displayBudgetCheckResult()
        #{
        #    return BudgetControlResult::getBudgetCheckResultImagePos(this.getBudgetCheckResult());
        #}
        #
      ENDSOURCE
      SOURCE #displayDocumentStatus
        #/// <summary>
        #/// Displays the label text for the current value in the document status field.
        #/// </summary>
        #/// <returns>
        #/// A label text for the current document status.
        #/// </returns>
        #/// <remarks>
        #/// The label for the packing slip value on the enumeration is packing slip, but it should be product receipt for purchase.
        #/// </remarks>
        #display PurchDocumentStatusDisplay displayDocumentStatus()
        #{
        #    SysDictEnum                 dictEnum;
        #    PurchDocumentStatusDisplay  documentStatusTxt;
        #
        #    if (this.DocumentStatus == DocumentStatus::PackingSlip)
        #    {
        #        documentStatusTxt = "@SYS333836";
        #    }
        #    else
        #    {
        #        dictEnum = SysDictEnum::newName(enumStr(DocumentStatus));
        #        documentStatusTxt = dictEnum.value2Label(this.DocumentStatus);
        #    }
        #
        #    return documentStatusTxt;
        #}
      ENDSOURCE
      SOURCE #displayProformaAmountForBankLC
        #/// <summary>
        #/// Displays the total proforma invoice amount of the purchase order.
        #/// </summary>
        #/// <returns>
        #/// The total proforma invoice amount.
        #/// </returns>
        #// BP deviation documented
        #display AmountCur displayProformaAmountForBankLC()
        #{
        #    return BankLCImport::amountProformaTotalInclTax(this.PurchId);
        #}
      ENDSOURCE
      SOURCE #editableInWorkflow
        #/// <summary>
        #/// Indicates whether the user can modify the record when an active workflow is running.
        #/// </summary>
        #/// <returns>
        #/// true if the user has rights to modify the record; false.
        #/// </returns>
        #public boolean  editableInWorkflow()
        #{
        #    WorkflowElementTable    workflowElementTable;
        #    WorkflowWorkItemTable   workflowWorkItemTable;
        #
        #    select firstonly ElementId from workflowWorkItemTable
        #                where   workflowWorkItemTable.RefTableId == this.TableId
        #                  &&    workflowWorkItemTable.RefRecId   == this.RecId
        #                  &&    workflowWorkItemTable.UserId     == curUserId()
        #                  &&    workflowWorkItemTable.Status     == WorkflowWorkItemStatus::Pending
        #            join ElementId, ElementType from workflowElementTable
        #                where   workflowElementTable.ElementId   == workflowWorkItemTable.ElementId
        #                   &&   (workflowElementTable.ElementName == workFlowApprovalStr(PurchTableApprovalEdit)
        #                        || workflowElementTable.ElementName == workFlowTaskStr(PurchTableTaskEdit));
        #
        #    return workflowWorkItemTable.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #editAllowed
        #/// <summary>
        #///     Determines whether the purchase order can be edited.
        #/// </summary>
        #/// <param name="checkLines">
        #///     Check if any purchase order lines has editable work item assigned.
        #/// </param>
        #/// <returns>
        #///     true when the purchase order can be edited; otherwise, false.
        #/// </returns>
        #boolean  editAllowed(boolean checkLines = false)
        #{
        #    boolean     editHeader = true;
        #    boolean     editLine = false;
        #    PurchLine   purchLine;
        #
        #    if (!this.checkUpdate(false,false))
        #        editHeader = false;
        #
        #    if (editHeader)
        #    {
        #        // Check if the record is in an active running workflow
        #        if (this.DocumentState == VersioningDocumentState::InReview)
        #        {
        #            editHeader = this.editableInWorkflow();
        #
        #            if (!editHeader && checkLines)
        #            {
        #                // Check if the line record is in an active running workflow
        #                while select purchLine
        #                    where  purchLine.PurchId == this.PurchId
        #                        && purchLine.IsDeleted == NoYes::No
        #                {
        #                    if (purchLine.editableInWorkflow())
        #                    {
        #                        editLine = true;
        #                        break;
        #                    }
        #                }
        #            }
        #        }
        #    }
        #    if (this.mcrDropShipment
        #        && (    this.PurchStatus == PurchStatus::Received
        #            ||  this.PurchStatus == PurchStatus::Invoiced))
        #    {
        #        editHeader = false;
        #    }
        #
        #    return editHeader || editLine;
        #}
        #
      ENDSOURCE
      SOURCE #editContactPersonName
        #//BP Deviation documented
        #client server edit ContactPersonName  editContactPersonName(boolean _set, ContactPersonName _name)
        #{
        #    ContactPersonName   name = _name;
        #    ContactPerson       contactPerson;
        #    ContactPersonId     contactPersonId;
        #    DirPartyTable       partyTable;
        #    VendTable           vendTable;
        #    if (_set)
        #    {
        #        if (name)
        #        {
        #            contactPersonId = this.ContactPersonId;
        #            contactPerson = ContactPerson::find(_name);
        #            this.ContactPersonId = contactPerson.ContactPersonId;
        #            if (this.ContactPersonId)
        #            {
        #                name = contactPerson.personName();
        #            }
        #            else
        #            {
        #                select contactPerson join AccountNum, Party from vendTable
        #                        where vendTable.AccountNum ==   this.OrderAccount
        #                        && vendTable.Party == contactPerson.ContactForParty
        #                    join Name from partyTable
        #                        where partyTable.RecId == contactPerson.Party &&
        #                              partyTable.Name        like name;
        #
        #                if (contactPerson)
        #                {
        #                    this.ContactPersonId=contactPerson.ContactPersonId;
        #                    name=partyTable.Name;
        #                }
        #            }
        #            if (contactPersonId != this.ContactPersonId)
        #            {
        #                if (this.checkContactPerson())
        #                {
        #                    this.initFromContactInfo();
        #                    if (this.dataSource())
        #                    {
        #                        this.dataSource().refresh();
        #                    }
        #                }
        #                else
        #                {
        #                    this.ContactPersonId = contactPersonId;
        #                }
        #            }
        #        }
        #        else
        #        {
        #            this.ContactPersonId = '';
        #        }
        #    }
        #    else
        #    {
        #        name = this.contactPersonName();
        #    }
        #    return name;
        #}
      ENDSOURCE
      SOURCE #editReasonCode
        #/// <summary>
        #/// Gets and sets the reason code by using the <c>ReasonCodeMap</c> map.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether the reason code is set.
        #/// </param>
        #/// <param name="_reasonCode">
        #/// The new reason code when <paramref name="_set" /> is true.
        #/// </param>
        #/// <returns>
        #/// The reason code of the record in the <c>ReasonTableRef</c> table.
        #/// </returns>
        #
        #//BP Deviation Documented
        #public edit ReasonCode editReasonCode(boolean _set, ReasonCode _reasonCode)
        #{
        #    if (_set && this.RecId && this.ReasonTableRef && PurchTableHistory::find(this.PurchId).ReasonTableRef == this.ReasonTableRef)
        #    {
        #            this.ReasonTableRef = 0;
        #    }
        #    return this.ReasonCodeMap::editReasonCode(_set, _reasonCode);
        #}
      ENDSOURCE
      SOURCE #editReasonComment
        #/// <summary>
        #/// Gets and sets the reason comment using the <c>ReasonCodeMap</c>.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether the reason code is set.
        #/// </param>
        #/// <param name="_reasonComment">
        #/// The new reason comment when <paramref name="_set"/> is true.
        #/// </param>
        #/// <returns>
        #/// The reason comment of the record in the <c>ReasonTableRef</c> table.
        #/// </returns>
        #//BP Deviation Documented
        #public edit ReasonComment editReasonComment(boolean _set, ReasonComment _reasonComment)
        #{
        #    if (_set && this.RecId && this.ReasonTableRef && PurchTableHistory::find(this.PurchId).ReasonTableRef == this.ReasonTableRef)
        #    {
        #            this.ReasonTableRef = 0;
        #    }
        #    return this.ReasonCodeMap::editReasonComment(_set, _reasonComment);
        #}
      ENDSOURCE
      SOURCE #enableDataSourceFields_BR
        #/// <summary>
        #/// Sets if the <c>PurchTable.SalesPurchOperationType_BR</c> field is editable, if the data source is a form.
        #/// </summary>
        #public void enableDataSourceFields_BR()
        #{
        #    FormDataObject  formDataObject;
        #    PurchTable_BR   purchTable_BR = this.purchTable_BR();
        #
        #    if (purchTable_BR.isFormDataSource())
        #    {
        #        formDataObject = purchTable_BR.dataSource().object(fieldNum(PurchTable_BR, SalesPurchOperationType_BR));
        #        formDataObject.allowEdit(this.type().canEditSalesPurchOperationType_BR());
        #
        #        formDataObject = this.dataSource().object(fieldNum(PurchTable, Port));
        #        formDataObject.visible(false);
        #    }
        #}
      ENDSOURCE
      SOURCE #existActivity
        #/// <summary>
        #/// Indicates whether a purchase order is selected for posting of any kind.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order is selected for posting; otherwise, false.
        #/// </returns>
        #public server boolean existActivity()
        #{
        #    PurchParmTable      purchParmTable;
        #    PurchParmSubTable   purchParmSubTable;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    VendInvoiceInfoSubTable vendInvoiceInfoSubTable;
        #
        #    select firstonly RecId from purchParmTable
        #        where  purchParmTable.ParmJobStatus == ParmJobStatus::Waiting
        #    exists join purchParmSubTable
        #        where  purchParmSubTable.OrigPurchId == this.PurchId &&
        #               purchParmSubTable.ParmId      == purchParmTable.ParmId &&
        #               purchParmSubTable.TableRefId  == purchParmTable.TableRefId;
        #
        #    if(purchParmTable.RecId != 0)
        #    {
        #        return true;
        #    }
        #
        #    select firstonly RecId from vendInvoiceInfoTable
        #        where  vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #    exists join vendInvoiceInfoSubTable
        #        where  vendInvoiceInfoSubTable.OrigPurchId == this.PurchId &&
        #               vendInvoiceInfoSubTable.ParmId      == vendInvoiceInfoTable.ParmId &&
        #               vendInvoiceInfoSubTable.TableRefId  == vendInvoiceInfoTable.TableRefId;
        #
        #    if(vendInvoiceInfoSubTable.RecId != 0)
        #    {
        #        return true;
        #    }
        #
        #    return false;
        #}
        #
      ENDSOURCE
      SOURCE #existingJournals
        #server container existingJournals()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        return[this.lastPurchaseOrder(),
        #               this.lastReceiptsList(),
        #               this.lastPackingSlip(),
        #               this.lastInvoice(),
        #               this.lastInvoice4Paym_RU(),
        #               this.lastFacture_RU()];
        #    }
        #    // </GEERU>
        #    // <GEEPL>
        #    else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        #    {
        #        return[this.lastPurchaseOrder(),
        #                this.lastReceiptsList(),
        #                this.lastPackingSlip(),
        #                this.lastInvoice(),
        #                this.lastInventExtPackingSlip()];
        #    }
        #    else
        #    {
        #    // </GEEPL>
        #        return[this.lastPurchaseOrder(),
        #               this.lastReceiptsList(),
        #               this.lastPackingSlip(),
        #               this.lastInvoice()];
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #}
      ENDSOURCE
      SOURCE #existInterCompanyPurchSalesReference
        #/// <summary>
        #/// Checks whether InterCompany Purchase/Sales reference exists.
        #/// </summary>
        #/// <returns>
        #/// true if InterCompany Purchace/Sales reference exists; otherwise, false.
        #/// </returns>
        #public boolean existInterCompanyPurchSalesReference()
        #{
        #    InterCompanyPurchSalesReference interCompanyPurchSalesReference;
        #
        #    select firstonly RecId from interCompanyPurchSalesReference
        #        where interCompanyPurchSalesReference.PurchId == this.PurchId;
        #
        #    return interCompanyPurchSalesReference.RecId ? true : false;
        #}
        #
      ENDSOURCE
      SOURCE #existInvoice
        #/// <summary>
        #/// Determines whether any unposted invoices exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if a pending invoice exists for this purchase order; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// It includes unposted invoices saved in batches or in the process of being edited. Additionally it
        #/// includes those invoices actually saved as pending.
        #/// </remarks>
        #public boolean existInvoice()
        #{
        #    if (this.PurchStatus == PurchStatus::Backorder || this.PurchStatus == PurchStatus::Received)
        #    {
        #        return this.existInvoiceServer();
        #    }
        #    return false;
        #}
        #
      ENDSOURCE
      SOURCE #existInvoiceServer
        #/// <summary>
        #/// Determines whether any saved invoices exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if a saved invoice exists for this purchase order; otherwise, false.
        #/// </returns>
        #public server boolean existInvoiceServer()
        #{
        #    VendInvoiceInfoLine  vendInvoiceInfoLine;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    if (this.PurchStatus == PurchStatus::Backorder || this.PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #                where vendInvoiceInfoLine.OrigPurchId == this.PurchId
        #                exists join vendInvoiceInfoTable
        #                where  (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                        vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                        vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                        vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId;
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #
        #        // If there are no lines for this PO, check invoice headers
        #        select firstonly RecId from vendInvoiceInfoTable
        #                where vendInvoiceInfoTable.PurchId == this.PurchId &&
        #                     (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                      vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors);
        #
        #        if (vendInvoiceInfoTable.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existMarkedSettlement
        #boolean existMarkedSettlement(FieldId _fieldId)
        #{
        #    if (this.SettleVoucher && SpecTrans::getSpecTransCount(this.DataAreaId, this.TableId, this.RecId))
        #    {
        #        switch(_fieldId)
        #        {
        #            case fieldNum(PurchTable, OrderAccount):    error("@SYS99930");
        #                                                        break;
        #
        #            case fieldNum(PurchTable, InvoiceAccount):  error("@SYS100000");
        #                                                        break;
        #
        #            default:                                    return false;
        #        }
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existPurchLine
        #boolean existPurchLine()
        #{
        #    Query       query;
        #    QueryRun    queryRun;
        #    PurchLine   purchLine;
        #
        #    query = this.queryPurchLine();
        #    query.dataSourceTable(tableNum(PurchLine)).firstOnly(true);
        #
        #    queryRun = new QueryRun(query);
        #    while (queryRun.next())
        #    {
        #        if (queryRun.changed(tableNum(PurchLine)))
        #        {
        #            purchLine = queryRun.get(tableNum(PurchLine));
        #            if (purchLine.RecId)
        #            {
        #                break;
        #            }
        #        }
        #    }
        #
        #    return purchLine.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existUnallocatedMiscCharge
        #/// <summary>
        #/// Determines if there are unallocated miscellaneous charges for the current purchase order.
        #/// </summary>
        #/// <returns>
        #/// true if there are unallocated miscellaneous charges for the current purchase order; otherwise, false.
        #/// </returns>
        #public boolean existUnallocatedMiscCharge()
        #{
        #    MarkupTrans markupTrans;
        #
        #    select firstonly RecId from markupTrans
        #        where markupTrans.TransTableId == this.TableId
        #           && markupTrans.TransRecId == this.RecId;
        #
        #    return markupTrans.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #factureJourSortedList_RU
        #// Returns all factures created on this purch order
        #public RecordSortedList factureJourSortedList_RU()
        #{
        #    return this.SalesPurchTable::factureJourSortedList_RU();
        #}
      ENDSOURCE
      SOURCE #fieldChanged
        #boolean  fieldChanged(FieldId  fieldId)
        #{
        #    boolean  ok = false;
        #
        #    if (!this.RecId)
        #        ok = true;
        #
        #    if (this.orig().(fieldId) != this.(fieldId))
        #        ok = true;
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #firstPackingSlipDate
        #/// <summary>
        #/// Retrieves the first delivery date for the packing slip.
        #/// </summary>
        #/// <returns>
        #/// The delivery date.
        #/// </returns>
        #//BP Deviation documented
        #client server
        #display TransDate firstPackingSlipDate()
        #{
        #    VendPackingSlipPurchLink    vendPackingSlipPurchLink;
        #
        #    return (select minof(DeliveryDate) from vendPackingSlipPurchLink
        #                where vendPackingSlipPurchLink.OrigPurchId == this.PurchId).DeliveryDate;
        #}
      ENDSOURCE
      SOURCE #getBudgetCheckResult
        #/// <summary>
        #/// Calculates the <c>BudgetCheckResult</c> value for the given <c>PurchTable</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>BudgetCheckResult</c> value which is calculated using the query.
        #/// </returns>
        #public BudgetCheckResult getBudgetCheckResult()
        #{
        #    BudgetSourceSourceDocumentHeader budgetSourceSourceDocumentHeader;
        #
        #    // Get the budget check result for the header only, exclude the line results
        #    budgetSourceSourceDocumentHeader = BudgetSourceSourceDocumentHeader::newBudgetSourceSourceDocumentHeader(this.SourceDocumentHeader);
        #
        #    return budgetSourceSourceDocumentHeader.getHeaderBudgetCheckResult(tableNum(PurchLine));
        #}
      ENDSOURCE
      SOURCE #getDeliveryEntityRecord
        #/// <summary>
        #///     Gets the delivery entity record based on the postal address.
        #/// </summary>
        #/// <returns>
        #///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
        #/// </returns>
        #public Common getDeliveryEntityRecord()
        #{
        #    return this.TradePostalAddress::getDeliveryEntityRecord();
        #}
      ENDSOURCE
      SOURCE #getExtension_BR
        #/// <summary>
        #/// Retrieves the Brazilian extension table of the <c>PurchTable</c> table.
        #/// </summary>
        #/// <param name="_packNewExtensionTable">
        #/// A boolean value to determine if an empty buffer should be packed when the extension does not exist.
        #/// </param>
        #/// <returns>
        #/// The extension <c>PurchTable_BR</c> table record.
        #/// </returns>
        #public PurchTable_BR getExtension_BR(boolean _packNewExtensionTable = true)
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchTable_BR), _packNewExtensionTable);
        #}
        #
      ENDSOURCE
      SOURCE #getFinalDiscPriceDate
        #/// <summary>
        #/// Calculates the date for which the total discount should be calculated according to the price date
        #/// type setting.
        #/// </summary>
        #/// <returns>
        #/// The date for which the total discount must be calculated.
        #/// </returns>
        #/// <remarks>
        #/// The price date type can be set up to use today or the delivery date as the price date.
        #/// </remarks>
        #PriceDate getFinalDiscPriceDate()
        #{
        #    PurchParameters         purchParameters;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    PriceAgreementDate_RU   priceAgreementDate;
        #    PurchLine               purchLine;
        #    PurchLine_W             purchLine_W;
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        priceAgreementDate = this.SalesPurchTable::getPriceAgreementDate();
        #        if (! priceAgreementDate)
        #        {
        #            select minof(PriceAgreementDate_RU) from purchLine_W
        #                exists join purchLine
        #                    where purchLine.RecId    == purchLine_W.PurchLine
        #                        && purchLine.PurchId == this.PurchId;
        #
        #            priceAgreementDate = purchLine_W.PriceAgreementDate_RU;
        #        }
        #
        #        if (priceAgreementDate)
        #        {
        #            return priceAgreementDate;
        #        }
        #    }
        #    // </GEERU>
        #
        #    purchParameters = PurchParameters::find();
        #
        #    switch (purchParameters.PriceDateType)
        #    {
        #        case PurchPriceDateType::DeliveryDate:
        #            return (select minof(DeliveryDate) from purchLine
        #                where purchLine.PurchId         == this.PurchId
        #                   && !purchLine.IsDeleted).DeliveryDate;
        #
        #        default:
        #            return systemDateGet();
        #    }
        #}
      ENDSOURCE
      SOURCE #getLastAccountingEventDate
        #/// <summary>
        #/// Retrieves the accounting date of the last accounting event for the purchase order.
        #/// </summary>
        #/// <returns>
        #/// The accounting date of the last accounting event for the purchase order.
        #/// </returns>
        #public AccountingDate getLastAccountingEventDate()
        #{
        #    return this.AccountingDate;
        #}
      ENDSOURCE
      SOURCE #hasIssueFiscalDocument
        #/// <summary>
        #///     Indicates whether an incoming fiscal document should be generated at invoice posting.
        #/// </summary>
        #/// <returns>
        #///     true if an incoming fiscal document should be generated; Otherwise, false.
        #/// </returns>
        #public boolean hasIssueFiscalDocument()
        #{
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #    {
        #        return true;
        #    }
        #    else
        #    {
        #        return this.vendTable_OrderAccount().NonTaxable_BR == NoYes::Yes;
        #    }
        #}
      ENDSOURCE
      SOURCE #icCheckUpdateHeaderDiscounts
        #/// <summary>
        #///     Determines if prices and disounts can be updated in the context of intercompany.
        #/// </summary>
        #/// <returns>
        #///     true if the context is not intercompany or if the context is intercompany and prices and discounts can be updated; otherwise, false.
        #/// </returns>
        #public boolean icCheckUpdateHeaderDiscounts()
        #{
        #    return !this.isInterCompanyOrder()
        #        || (this.PurchaseType != PurchaseType::ReturnItem
        #            && this.interCompanyEndpointActionPolicy().PriceDiscountSearch);
        #}
      ENDSOURCE
      SOURCE #initFiscalDocumentType_BR
        #/// <summary>
        #/// Initializes the fiscal document type; implemented in derived classes.
        #/// </summary>
        #public void initFiscalDocumentType_BR()
        #{
        #}
      ENDSOURCE
      SOURCE #initFromContactInfo
        #public void initFromContactInfo()
        #{
        #    ContactPerson contactPerson = this.contactPerson();
        #
        #    if (contactPerson)
        #    {
        #        this.url = contactPerson.url();
        #        this.Email = contactPerson.email();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #initFromPayment
        #public void initFromPayment()
        #{
        #    // <GEERU><GEEU>
        #    PurchTable_W       purchTable_W;
        #    #EECountryRegionCodes
        #    // </GEERU></GEEU>
        #
        #    this.PaymentSched = this.payment().PaymSched;
        #    this.FixedDueDate = dateNull();
        #
        #    // <GEERU><GEEU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion(#easternEuropeAllandRU))
        #    {
        #        if (! PaymTerm::isEmplAccountUsed_RU(this.Payment))
        #        {
        #            purchTable_W = this.purchTable_W();
        #            purchTable_W.EmplAccount_RU =  "";
        #            this.packPurchTable_W(purchTable_W);
        #        }
        #    }
        #    else
        #    {
        #        this.CashDisc = "";
        #    }
        #    // </GEERU></GEEU>
        #}
      ENDSOURCE
      SOURCE #initFromProjInvoiceTable
        #public void initFromProjInvoiceTable()
        #{
        #    ProjTable           projTable;
        #    ProjInvoiceTable    projInvoiceTable;
        #    #ISOCountryRegionCodes
        #
        #    projTable               = this.projTable();
        #    projInvoiceTable        = projTable.projInvoice();
        #
        #    this.TransactionCode    = projInvoiceTable.TransactionCodeId;
        #    this.DefaultDimension   = this.copyDimension(projTable.DefaultDimension);
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
        #    {
        #        this.BankCentralBankPurposeCode = projInvoiceTable.BankCentralBankPurposeCode;
        #        this.BankCentralBankPurposeText = projInvoiceTable.BankcentralBankPurposeText;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchAgreementHeader
        #/// <summary>
        #/// Initiates a <c>PurchTable</c> record with values based on <c>PurchAgreementHeader</c> record.
        #/// </summary>
        #/// <param name="_purchAgreementHeader">
        #/// A record of the table <c>PurchAgreementHeader</c>.
        #/// </param>
        #/// <param name="_copyDeliveryLocation">
        #/// When set to true delivery location is copyed from <c>PurchAgreementHeader</c>.
        #/// Default is true.
        #/// </param>
        #/// <param name="_copyCurrencyCode">
        #/// When set to true Currency code is copyed from <c>PurchAgreementHeader</c>.
        #/// Default is false.
        #/// </param>
        #public void initFromPurchAgreementHeader(PurchAgreementHeader _purchAgreementHeader, boolean _copyDeliveryLocation = true, boolean _copyCurrencyCode = false)
        #{
        #    AgreementHeaderDefault      agreementHeaderDefault;
        #    PurchAgreementHeaderDefault purchAgreementHeaderDefault;
        #    CashDisc                    cashDisc;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    PurchAgreementHeaderExt_RU  purchAgreementHeaderExt;
        #    PurchTable_RU               purchTable_RU;
        #    // </GEERU>
        #
        #    select firstonly DeliveryPostalAddress, DeliveryName, Project, ContactPerson,
        #                     CashDiscountCode, MiscChargeGroup, DeliveryTerm, DeliveryMode,
        #                     PaymentSchedule, PaymentTerms
        #        from agreementHeaderDefault
        #        where agreementHeaderDefault.AgreementHeader == _purchAgreementHeader.RecId
        #        join firstonly    MethodOfPayment
        #                        , PaymentSpecification
        #                        , BuyerGroup
        #                        , VendorInvoiceAccount
        #                        , PurchasePool
        #            from purchAgreementHeaderDefault
        #            where purchAgreementHeaderDefault.PurchaseAgreementHeader == _purchAgreementHeader.RecId
        #        // <GEERU>
        #        outer join firstonly RecId,
        #                             InventProfileType,
        #                             InventProfileId,
        #                             VendPostingProfile,
        #                             vatOperationCode,
        #                             vatChargeSource
        #        from purchAgreementHeaderExt
        #        where purchAgreementHeaderExt.AgreementHeader == _purchAgreementHeader.RecId
        #        // </GEERU>
        #            ;
        #
        #    this.MatchingAgreement = _purchAgreementHeader.RecId;
        #
        #    // <SCM>
        #    // Merge dimension from AgeementHeader and currently set on the PurchTable record
        #    this.DefaultDimension = this.mergeDimension(_purchAgreementHeader.DefaultDimension, this.DefaultDimension);
        #    //</SCM>
        #
        #    if (_copyDeliveryLocation)
        #    {
        #        this.DeliveryPostalAddress = agreementHeaderDefault.DeliveryPostalAddress;
        #        this.DeliveryName     = agreementHeaderDefault.DeliveryName;
        #    }
        #
        #    if (_copyCurrencyCode)
        #    {
        #        this.CurrencyCode     = _purchAgreementHeader.Currency;
        #    }
        #
        #    if (agreementHeaderDefault.Project)
        #    {
        #        this.ProjId = agreementHeaderDefault.Project;
        #    }
        #    this.ContactPersonId  = agreementHeaderDefault.ContactPerson;
        #    this.CashDisc         = agreementHeaderDefault.CashDiscountCode;
        #    this.MarkupGroup      = agreementHeaderDefault.MiscChargeGroup;
        #    this.DlvTerm          = agreementHeaderDefault.DeliveryTerm;
        #    this.DlvMode          = agreementHeaderDefault.DeliveryMode;
        #    this.PaymentSched     = agreementHeaderDefault.PaymentSchedule;
        #    this.Payment          = agreementHeaderDefault.PaymentTerms;
        #
        #    if (agreementHeaderDefault.CashDiscountCode)
        #    {
        #        // If CashDiscountCode is set for agreement header, query cash discount record and set proper CashDiscPercent value from it.
        #        cashDisc = CashDisc::find(agreementHeaderDefault.CashDiscountCode);
        #        this.CashDiscPercent = (cashDisc.RecId) ? cashDisc.Percent : 0.0;
        #    }
        #
        #
        #    this.PaymMode         = purchAgreementHeaderDefault.MethodOfPayment;
        #    this.PaymSpec         = purchAgreementHeaderDefault.PaymentSpecification;
        #    this.ItemBuyerGroupId = purchAgreementHeaderDefault.BuyerGroup;
        #    this.PurchPoolId      = purchAgreementHeaderDefault.PurchasePool;
        #
        #    if (purchAgreementHeaderDefault.VendorInvoiceAccount)
        #    {
        #        // Copy VendorInvoiceAccount from Agreement ONLY if it is not-empty.
        #        this.InvoiceAccount = purchAgreementHeaderDefault.VendorInvoiceAccount;
        #    }
        #
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchTable_RU = this.purchTable_RU();
        #
        #        this.CurrencyCode     = _purchAgreementHeader.Currency;
        #        this.LanguageId       = _purchAgreementHeader.Language;
        #
        #        purchTable_RU.AgreementHeaderExt_RU = purchAgreementHeaderExt.RecId;
        #
        #        this.DefaultDimension = this.copyDimension(_purchAgreementHeader.DefaultDimension);
        #
        #        if (purchAgreementHeaderExt.InventProfileType || purchAgreementHeaderExt.InventProfileId)
        #        {
        #            purchTable_RU.InventProfileType_RU = purchAgreementHeaderExt.InventProfileType;
        #            purchTable_RU.InventProfileId_RU   = purchAgreementHeaderExt.InventProfileId;
        #        }
        #
        #        if (purchAgreementHeaderExt.VendPostingProfile)
        #        {
        #            this.PostingProfile = purchAgreementHeaderExt.VendPostingProfile;
        #        }
        #
        #        purchTable_RU.vatOperationCode_RU = purchAgreementHeaderExt.vatOperationCode;
        #        purchTable_RU.vatChargeSource_RU  = purchAgreementHeaderExt.vatChargeSource;
        #
        #        this.packPurchTable_RU(purchTable_RU);
        #
        #        if (this.PaymentSched)
        #        {
        #            this.FixedDueDate = dateNull();
        #        }
        #
        #        if (purchAgreementHeaderExt.VendPostingProfile)
        #        {
        #            this.PostingProfile = purchAgreementHeaderExt.VendPostingProfile;
        #        }
        #    }
        #    // </GEERU>
        #
        #    TMSPurchTable::initFromTMSPurchAgreement(this.PurchId, _purchAgreementHeader.RecId);
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQReplyTable
        #/// <summary>
        #///    Initializes a <c>PurchTable</c> table buffer based on an <c>PurchRFQReplyTable</c> table buffer.
        #/// </summary>
        #/// <param name="_purchRFQReplyTable">
        #///    The <c>PurchRFQReplyTable</c> table buffer that is to initialize <c>PurchTable</c> table buffer from.
        #/// </param>
        #public void initFromPurchRFQReplyTable(PurchRFQReplyTable    _purchRFQReplyTable)
        #{
        #    this.Payment        = _purchRFQReplyTable.Payment;
        #    this.CurrencyCode   = _purchRFQReplyTable.CurrencyCode;
        #    this.DlvTerm        = _purchRFQReplyTable.DlvTerm;
        #    this.DlvMode        = _purchRFQReplyTable.DlvMode;
        #    this.DiscPercent    = _purchRFQReplyTable.DiscPercent;
        #    this.DeliveryDate   = _purchRFQReplyTable.DeliveryDate;
        #    this.VendorRef      = _purchRFQReplyTable.VendRef;
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQTable
        #/// <summary>
        #///    Initializes the <c>PurchTable</c> record from a <c>PurchRFQTable</c> record.
        #/// </summary>
        #/// <param name="_purchRFQTable">
        #///    The <c>PurchRFQTable</c> record from which to initialize.
        #/// </param>
        #public void initFromPurchRFQTable(PurchRFQTable    _purchRFQTable)
        #{
        #    // <GBR>
        #    PurchTable_BR       purchTable_BR;
        #    // </GBR>
        #
        #    this.PurchaseType               = PurchaseType::Purch;
        #    this.LanguageId                 = _purchRFQTable.LanguageId;
        #    this.Payment                    = _purchRFQTable.Payment;
        #    this.PaymMode                   = _purchRFQTable.PaymMode;
        #    this.PaymSpec                   = _purchRFQTable.PaymSpec;
        #    this.PaymentSched               = _purchRFQTable.PaymentSched;
        #    this.NumberSequenceGroup        = _purchRFQTable.NumberSequenceGroup;
        #    this.CashDisc                   = _purchRFQTable.CashDisc;
        #    if(this.CashDisc)
        #    {
        #        this.CashDiscPercent        = CashDisc::find(_purchRFQTable.CashDisc).Percent;
        #    }
        #    this.EndDisc                    = _purchRFQTable.EndDisc;
        #
        #    this.CurrencyCode               = _purchRFQTable.CurrencyCode;
        #    this.DlvTerm                    = _purchRFQTable.DlvTerm;
        #    this.DlvMode                    = _purchRFQTable.DlvMode;
        #    this.DefaultDimension           =  this.copyDimension(_purchRFQTable.DefaultDimension);
        #    this.TaxGroup                   = _purchRFQTable.TaxGroup;
        #    this.InclTax                    = _purchRFQTable.InclTax;
        #
        #    this.DeliveryPostalAddress      = _purchRFQTable.DeliveryPostalAddress;
        #    this.AddressRefRecId            = _purchRFQTable.AddressRefRecId;
        #    this.AddressRefTableId          = _purchRFQTable.AddressRefTableId;
        #    this.InventSiteId               = _purchRFQTable.InventSiteId;
        #    this.InventLocationId           = _purchRFQTable.InventLocationId;
        #
        #    this.ProjId                     = _purchRFQTable.ProjId;
        #
        #    // <GBR>
        #    if (BrazilParameters::isEnabled())
        #    {
        #        purchTable_BR = this.purchTable_BR();
        #        purchTable_BR.VendFinalUser_BR           = _purchRFQTable.VendFinalUser_BR;
        #        purchTable_BR.ServiceCodeOnDlvAddress_BR = _purchRFQTable.ServiceCodeOnDlvAddress_BR;
        #        purchTable_BR.SalesPurchOperationType_BR = _purchRFQTable.SalesPurchOperationType_BR;
        #        this.packPurchTable_BR(purchTable_BR);
        #
        #        this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #    }
        #    // </GBR>
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #/// <summary>
        #///    Initializes the <c>PurchTable</c> record from another purchase order record.
        #/// </summary>
        #/// <param name="_purchTable">
        #///    The purchase order from which to initialize.
        #/// </param>
        #public void initFromPurchTable(PurchTable _purchTable)
        #{
        #    this.LanguageId                 = _purchTable.LanguageId;
        #    this.Payment                    = _purchTable.Payment;
        #    this.PaymMode                   = _purchTable.PaymMode;
        #    this.PaymSpec                   = _purchTable.PaymSpec;
        #    this.NumberSequenceGroup        = _purchTable.NumberSequenceGroup;
        #    this.CashDisc                   = _purchTable.CashDisc;
        #    this.CashDiscPercent            = _purchTable.CashDiscPercent;
        #    this.DiscPercent                = _purchTable.DiscPercent;
        #    this.CurrencyCode               = _purchTable.CurrencyCode;
        #    this.DlvTerm                    = _purchTable.DlvTerm;
        #    this.DlvMode                    = _purchTable.DlvMode;
        #    this.DefaultDimension           = this.copyDimension(_purchTable.DefaultDimension);
        #    this.TaxGroup                   = _purchTable.TaxGroup;
        #    this.InclTax                    = _purchTable.InclTax;
        #    this.Transport                  = _purchTable.Transport;
        #    this.Port                       = _purchTable.Port;
        #    this.StatProcId                 = _purchTable.StatProcId;
        #    this.AccountingDistributionTemplate = _purchTable.AccountingDistributionTemplate;
        #
        #    if (!this.RecId || !this.skipAddressFields())
        #    {
        #        this.DeliveryPostalAddress      = _purchTable.DeliveryPostalAddress;
        #        this.AddressRefRecId            = _purchTable.AddressRefRecId;
        #        this.AddressRefTableId          = _purchTable.AddressRefTableId;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchTableHistory
        #/// <summary>
        #/// Initializes the history record that is based on the specified <c>PurchTableHistory</c> record.
        #/// </summary>
        #/// <param name="_purchTableHistory">
        #/// A <c>PurchTableHistory</c> record on which to base initialization.
        #/// </param>
        #public void initFromPurchTableHistory(PurchTableHistory _purchTableHistory)
        #{
        #    // <GEEU>
        #    #ISOCountryRegionCodes
        #    // </GEEU>
        #    // <GEERU>
        #    PurchTableMap_RU        purchTableMap_RU;
        #    PurchTable_RU           purchTable_RU;
        #    // </GEERU>
        #    PurchTableMap_W         purchTableMap_W;
        #    PurchTable_W            purchTable_W;
        #    // <GBR>
        #    PurchTableMap_BR        purchTableMap_BR;
        #    PurchTable_BR           purchTable_BR;
        #    // </GBR>
        #
        #    PurchTableMap purchTableMap;
        #
        #    purchTableMap.data(_purchTableHistory.data());
        #    this.data(purchTableMap.data());
        #
        #    // <GEEU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        #    {
        #        // Reset and copy the TransportationDocument reference as it is required to be unique.
        #        this.TransportationDocument = 0;
        #        TransportationDocument::copy(_purchTableHistory, this);
        #    }
        #    // </GEEU>
        #
        #    // <GEERU>
        #    if (PurchTable_RU::isExtensionEnabled())
        #    {
        #        purchTableMap_RU.data(_purchTableHistory.purchTableHistory_RU());
        #        purchTable_RU.data(purchTableMap_RU.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchTable_RU);
        #    }
        #    // </GEERU>
        #    // <GBR>
        #    if (PurchTable_BR::isExtensionEnabled())
        #    {
        #        purchTableMap_BR.data(_purchTableHistory.purchTableHistory_BR());
        #        purchTable_BR.data(purchTableMap_BR.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchTable_BR);
        #    }
        #    // </GBR>
        #    if (PurchTable_W::isExtensionEnabled())
        #    {
        #        purchTableMap_W.data(_purchTableHistory.purchTableHistory_W());
        #        purchTable_W.data(purchTableMap_W.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchTable_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesTable
        #/// <summary>
        #///    Initializes the <c>PurchTable</c> record from a <c>SalesTable</c> record.
        #/// </summary>
        #/// <param name="_salesTable">
        #///    The <c>SalesTable</c> record from which to initialize.
        #/// </param>
        #public void initFromSalesTable(SalesTable _salesTable)
        #{
        #    this.InterCompanyOriginalSalesId        = _salesTable.SalesId;
        #    this.InterCompanyOriginalCustAccount    = _salesTable.CustAccount;
        #    this.InterCompanyDirectDelivery         = _salesTable.InterCompanyDirectDelivery;
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendInvoiceJour
        #/// <summary>
        #///    Initializes a <c>PurchTable</c> table buffer based on an <c>VendInvoiceJour</c> table buffer.
        #/// </summary>
        #/// <param name="_vendInvoiceJour">
        #///    The <c>VendInvoiceJour</c> table buffer that is to initialize <c>PurchTable</c> table buffer from.
        #/// </param>
        #public void initFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
        #{
        #    this.Payment                    = _vendInvoiceJour.Payment;
        #    this.NumberSequenceGroup        = _vendInvoiceJour.NumberSequenceGroup;
        #    this.CashDisc                   = _vendInvoiceJour.CashDiscCode;
        #    this.CashDiscPercent            = _vendInvoiceJour.CashDiscPercent;
        #
        #    this.CurrencyCode               = _vendInvoiceJour.CurrencyCode;
        #    this.DefaultDimension           = this.copyDimension(_vendInvoiceJour.DefaultDimension);
        #    this.InclTax                    = _vendInvoiceJour.InclTax;
        #
        #    // <GEELV>
        #    this.IntrastatAddValue_LV       = _vendInvoiceJour.IntrastatAddValue_LV;
        #    // </GEELV>
        #}
      ENDSOURCE
      SOURCE #initFromVendPackingSlipJour
        #/// <summary>
        #///    Initializes a <c>PurchTable</c> table buffer based on an <c>VendPackingSlipJour</c> table buffer.
        #/// </summary>
        #/// <param name="_vendPackingSlipJour">
        #///    The <c>VendPackingSlipJour</c> table buffer that is to initialize <c>PurchTable</c> table buffer from.
        #/// </param>
        #public void  initFromVendPackingSlipJour(VendPackingSlipJour _vendPackingSlipJour)
        #{
        #    this.DlvTerm                = _vendPackingSlipJour.DlvTerm;
        #    this.DlvMode                = _vendPackingSlipJour.DlvMode;
        #    this.DefaultDimension       = this.copyDimension(_vendPackingSlipJour.DefaultDimension);
        #}
      ENDSOURCE
      SOURCE #initFromVendTable
        #/// <summary>
        #///    Initializes the <c>PurchTable</c> record from a <c>VendTable</c> record.
        #/// </summary>
        #/// <param name="_vendTable">
        #///    The vendor record from which to initialize; optional.
        #/// </param>
        #server public void  initFromVendTable(VendTable _vendTable = this.vendTable_OrderAccount())
        #{
        #    container               purchTableContainer;
        #    XppILExecutePermission  xppILExecutePermission;
        #    PaymTerm                paymTerm;
        #    #ISOCountryRegionCodes;
        #
        #    // Transition to IL to update the sales quantity
        #    xppILExecutePermission = new XppILExecutePermission();
        #    xppILExecutePermission.assert();
        #
        #    purchTableContainer = runTableMethodIL(tableStr(PurchTable),
        #                        tableStaticMethodStr(PurchTable, initFromVendTableIL),
        #                        [buf2Con(this, true), buf2Con(_vendTable, true)]);
        #    CodeAccessPermission::revertAssert();
        #
        #    this.con2buf(purchTableContainer);
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled() && !this.Payment)
        #    {
        #        paymTerm = PaymTerm::getDefaultPaymTerm();
        #
        #        if (paymTerm.RecId)
        #        {
        #            this.Payment = paymTerm.PaymTermId;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendTableMandatoryFields
        #server public void  initFromVendTableMandatoryFields()
        #{
        #    VendTable  vendTable = this.vendTable_OrderAccount();
        #    // <GEERU>
        #    PurchTable_RU   purchTable_RU;
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #
        #
        #    this.VendGroup                  = vendTable.VendGroup;
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchTable_RU = this.purchTable_RU();
        #        purchTable_RU.vatOperationCode_RU   = vendTable.vatOperationCode_RU;
        #        this.packPurchTable_RU(purchTable_RU);
        #    }
        #    // </GEERU>
        #    this.ChangeRequestRequired      = (PurchParameters::find().ChangeRequestAllowOverride && vendTable.ChangeRequestOverride) ? vendTable.ChangeRequestEnabled : PurchParameters::find().ChangeRequestEnabled;
        #}
        #
      ENDSOURCE
      SOURCE #initInvoiceAccount
        #void  initInvoiceAccount()
        #{
        #    VendTable   vendTable       = this.vendTable_InvoiceAccount();
        #
        #    this.NumberSequenceGroup    = vendTable.NumberSequenceGroup;
        #    this.Payment                = vendTable.PaymTermId;
        #
        #    this.initFromPayment();
        #
        #    if (vendTable.PaymSched)
        #        this.PaymentSched       = vendTable.PaymSched;
        #
        #    this.PaymMode               = vendTable.PaymMode;
        #    this.PaymSpec               = vendTable.PaymSpec;
        #
        #    this.CashDisc               = vendTable.CashDisc;
        #    this.setListCode();
        #}
      ENDSOURCE
      SOURCE #initValue
        #void  initValue(PurchaseType  _purchaseType = PurchParameters::find().PurchaseType)
        #{
        #    PurchTableType  purchTableType;
        #
        #    this.PurchaseType   = _purchaseType;
        #
        #    super();
        #
        #    purchTableType = this.type();
        #    purchTableType.initValue();
        #}
      ENDSOURCE
      SOURCE #insert
        #void  insert(boolean _interCompanySilent = false,
        #             AccountingDate _accountingDate = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::getSystemDateTime(), DateTimeUtil::getUserPreferredTimeZone())))
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.insert(_interCompanySilent, _accountingDate);
        #
        #    TradeBLWIFormCodes::createRecord(TradeBLWICustVend::Vendor, this.RecId, this.OrderAccount, TradeBLWITypeOfForm::PurchTable);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        PurchTotalsSummaryController::onInsert(this);
        #    }
        #}
      ENDSOURCE
      SOURCE #interCompanyAllowIndirectCreationOrig
        #//BP deviation documented
        #display InterCompanyAllowIndirectCreationTxt interCompanyAllowIndirectCreationOrig()
        #{
        #    InterCompanyAllowIndirectCreationTxt interCompanyAllowIndirectCreationTxt;
        #
        #    if (this.InterCompanyDirectDelivery
        #    && !this.InterCompanyAllowIndirectCreation)
        #    {
        #        interCompanyAllowIndirectCreationTxt = "@SYS95179";
        #    }
        #    return interCompanyAllowIndirectCreationTxt;
        #}
      ENDSOURCE
      SOURCE #interCompanyCheckCurrency
        #boolean interCompanyCheckCurrency()
        #{
        #    MarkupTrans     markupTrans;
        #
        #    if (this.isInterCompanyOrder()
        #    &&  this.CurrencyCode != this.orig().CurrencyCode)
        #    {
        #        if (PurchLine::exist(this.PurchId))
        #            return checkFailed(strFmt("@SYS105402"));
        #
        #        select firstonly markupTrans
        #               index hint TableRecIdIdx
        #               where markupTrans.TransTableId == this.TableId
        #               &&    markupTrans.TransRecId   == this.RecId
        #               &&   !markupTrans.IsDeleted;
        #        if (markupTrans)
        #        {
        #            return checkFailed(strFmt("@SYS105402"));
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #interCompanyEndpointActionPolicy
        #/// <summary>
        #/// Gets the intercompany trading policy for the current <c>PurchTable</c> table record.
        #/// </summary>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>InterCompanyEndpointActionPolicy</c> table; otherwise, an empty record.
        #/// </returns>
        #public InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy(boolean   _forUpdate = false)
        #{
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #    changecompany (
        #                   this.company()
        #                   )
        #    {
        #        interCompanyEndpointActionPolicy = VendTable::find(this.OrderAccount).interCompanyTradingPartner().interCompanyEndpointActionPolicy(_forUpdate);
        #    }
        #    return interCompanyEndpointActionPolicy;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyOriginDisplay
        #//BP Deviation Documented
        #display InterCompanyOriginDisplay interCompanyOriginDisplay()
        #{
        #    InterCompanyOriginDisplay   interCompanyOriginDisplay;
        #    DictEnum                    dictEnum = new DictEnum(enumNum(InterCompanyOrigin));
        #
        #    if (this.InterCompanyOrder)
        #    {
        #        interCompanyOriginDisplay = dictEnum.value2Name(this.InterCompanyOrigin);
        #    }
        #    return interCompanyOriginDisplay;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyPurchSalesReferenceCreate
        #void interCompanyPurchSalesReferenceCreate(SalesId _origSalesId = this.InterCompanyOriginalSalesId)
        #{
        #    InterCompanyPurchSalesReference     interCompanyPurchSalesReference;
        #
        #    if (this.PurchId
        #    &&  _origSalesId)
        #    {
        #        ttsbegin;
        #        select firstonly interCompanyPurchSalesReference
        #               index hint SalesPurchIdx
        #               where interCompanyPurchSalesReference.SalesId == _origSalesId
        #               &&    interCompanyPurchSalesReference.PurchId == this.PurchId;
        #
        #        if (!interCompanyPurchSalesReference)
        #        {
        #            interCompanyPurchSalesReference.clear();
        #            interCompanyPurchSalesReference.SalesId = _origSalesId;
        #            interCompanyPurchSalesReference.PurchId = this.PurchId;
        #            interCompanyPurchSalesReference.insert();
        #        }
        #        ttscommit;
        #    }
        #
        #    if (this.PurchId
        #    &&  this.InterCompanyOriginalSalesId
        #    &&  this.InterCompanyOriginalSalesId != _origSalesId)
        #    {
        #        this.InterCompanyOriginalSalesId     = '';
        #        this.InterCompanyOriginalCustAccount = '';
        #        this.InterCompanyOrigin              = InterCompanyOrigin::Source;
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #interCompanySalesInfo
        #//BP Deviation Documented
        #public server container interCompanySalesInfo()
        #{
        #    SalesTable              salesTable;
        #    InterCompanySalesType   salesType;
        #    SalesStatus             salesStatus;
        #    DocumentStatus          documentStatus;
        #    date                    documentDate;
        #    Num                     documentNum;
        #    DictEnum        dictEnum = new DictEnum(enumNum(SalesType));
        #;
        #    if (this.InterCompanyOrder
        #    &&  this.InterCompanyCompanyId)
        #    {
        #        changecompany(this.InterCompanyCompanyId)
        #        {
        #            select SalesId, SalesType, SalesStatus, DocumentStatus, QuotationId from salesTable
        #                   index hint SalesIdx
        #                   where salesTable.SalesId == this.InterCompanySalesId;
        #
        #            if (salesTable.RecId)
        #                salesType = dictEnum.value2Name(salesTable.SalesType);
        #
        #            salesStatus    = salesTable.SalesStatus;
        #            documentStatus = salesTable.DocumentStatus;
        #
        #            switch(salesTable.DocumentStatus)
        #            {
        #                case DocumentStatus::Quotation:
        #                    documentDate = salesTable.lastQuotationDate();
        #                    documentNum  = salesTable.lastQuotation();
        #                    break;
        #                case DocumentStatus::Confirmation:
        #                    documentDate = salesTable.lastConfirmDate();
        #                    documentNum  = salesTable.lastConfirm();
        #                    break;
        #                case DocumentStatus::PickingList:
        #                    documentDate = salesTable.lastPickingListDate();
        #                    documentNum  = salesTable.lastPickingList();
        #                    break;
        #                case DocumentStatus::PackingSlip:
        #                    documentDate = salesTable.lastPackingSlipDate();
        #                    documentNum  = salesTable.lastPackingSlip();
        #                    break;
        #                case DocumentStatus::Invoice:
        #                    documentDate = salesTable.lastInvoiceDate();
        #                    documentNum  = salesTable.lastInvoice();
        #                    break;
        #            }
        #        }
        #    }
        #    return [salesType,salesStatus,documentStatus,documentDate,documentNum];
        #}
      ENDSOURCE
      SOURCE #interCompanySalesTable
        #/// <summary>
        #///    Finds and returns the intercompany sales order header record.
        #/// </summary>
        #/// <param name="_forUpdate">
        #///    Specifies whether the intercompany sales order header record should be selected for update.
        #/// </param>
        #/// <returns>
        #///    The intercompany sales order header record.
        #/// </returns>
        #public SalesTable  interCompanySalesTable(boolean  _forUpdate = false)
        #{
        #    SalesTable  salesTable;
        #
        #    if (this.InterCompanyOrder
        #    &&  this.InterCompanyCompanyId
        #    &&  TradeInterCompany::checkDataAreaAccess(this.InterCompanyCompanyId,false))
        #    {
        #        changecompany(this.InterCompanyCompanyId)
        #        {
        #            salesTable = SalesTable::find(this.InterCompanySalesId, _forUpdate);
        #        }
        #
        #    }
        #    return salesTable;
        #}
      ENDSOURCE
      SOURCE #interCompanySalesTableOriginal
        #SalesTable  interCompanySalesTableOriginal(boolean  _forUpdate = false)
        #{
        #    SalesTable  salesTable;
        #;
        #    if (this.InterCompanyOriginalSalesId)
        #    {
        #        changecompany (
        #                       this.company()
        #                       )
        #        {
        #            salesTable = SalesTable::find(this.InterCompanyOriginalSalesId, _forUpdate);
        #        }
        #    }
        #    return salesTable;
        #}
      ENDSOURCE
      SOURCE #interCompanyTradingValueMap
        #/// <summary>
        #/// Gets the intercompany trading value mapping for the current <c>PurchTable</c> table record.
        #/// </summary>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>InterCompanyTradingValueMap</c> table; otherwise, an empty record.
        #/// </returns>
        #public InterCompanyTradingValueMap interCompanyTradingValueMap(boolean   _forUpdate = false)
        #{
        #    InterCompanyTradingValueMap     interCompanyTradingValueMap;
        #
        #    changecompany (
        #                   this.company()
        #                   )
        #    {
        #        interCompanyTradingValueMap = VendTable::find(this.OrderAccount).interCompanyTradingPartner().interCompanyTradingValueMap(_forUpdate);
        #    }
        #    return interCompanyTradingValueMap;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyUpdateNow
        #boolean  interCompanyUpdateNow()
        #{
        #    boolean  ok;
        #    // <GEERU>
        #    #isoCountryRegionCodes
        #    boolean         isCountryRegionRU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    PurchTable_RU   purchTable_RU;
        #    // </GEERU>
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    // <GEERU>
        #    if (isCountryRegionRU)
        #    {
        #        purchTable_RU = this.purchTable_RU();
        #    }
        #    // </GEERU>
        #
        #    if (this.orig().PurchaseType                      != this.PurchaseType
        #    ||  this.orig().CurrencyCode                      != this.CurrencyCode
        #    ||  this.orig().DlvTerm                           != this.DlvTerm
        #    ||  this.orig().DlvMode                           != this.DlvMode
        #    ||  this.orig().DeliveryDate                      != this.DeliveryDate
        #    ||  this.orig().ReceiptDateConfirmed              != this.ReceiptDateConfirmed
        #    ||  this.orig().ShippingDateRequested             != this.ShippingDateRequested
        #    ||  this.orig().ShippingDateConfirmed             != this.ShippingDateConfirmed
        #    ||  this.orig().DeliveryPostalAddress             != this.DeliveryPostalAddress
        #    ||  this.orig().InterCompanyOriginalSalesId       != this.InterCompanyOriginalSalesId
        #    ||  this.orig().InterCompanyOriginalCustAccount   != this.InterCompanyOriginalCustAccount
        #    ||  this.orig().InterCompanyDirectDelivery        != this.InterCompanyDirectDelivery
        #    ||  this.orig().DefaultDimension                  != this.DefaultDimension
        #    ||  this.orig().InterCompanyCustPurchOrderFormNum != this.InterCompanyCustPurchOrderFormNum
        #    ||  this.orig().VendorRef                         != this.VendorRef
        #    ||  this.orig().ReturnItemNum                     != this.ReturnItemNum
        #    ||  this.orig().DiscPercent                       != this.DiscPercent
        #    // <GEERU>
        #    ||  (isCountryRegionRU
        #        && purchTable_RU.orig().InventProfileId_RU    != purchTable_RU.InventProfileId_RU)
        #    // </GEERU>
        #    ||  this.orig().MatchingAgreement                 != this.MatchingAgreement)
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #invoiceName
        #//BP Deviation documented
        #display VendName invoiceName()
        #{
        #    return this.vendTable_InvoiceAccount().name();
        #}
        #
      ENDSOURCE
      SOURCE #isBankDocumentCreated
        #/// <summary>
        #/// Indicates whether the bank document has been created for this order.
        #/// </summary>
        #/// <returns>
        #/// true if it is created; otherwise, false.
        #/// </returns>
        #public boolean isBankDocumentCreated()
        #{
        #    return this.isBankLCCreated()
        #        || this.isBankLGCreated();
        #}
      ENDSOURCE
      SOURCE #isBankLCCreated
        #/// <summary>
        #/// Indicates whether the bank LC has been created for this order.
        #/// </summary>
        #/// <returns>
        #/// true if it is created; otherwise, false.
        #/// </returns>
        #public boolean isBankLCCreated()
        #{
        #    boolean ret = false;
        #
        #    if (this.isMarkedForBankLC())
        #    {
        #        ret = BankLCImport::existByPurchTable(this.PurchId);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isBankLGCreated
        #/// <summary>
        #/// Indicates whether the Bank LG has been created for this order.
        #/// </summary>
        #/// <returns>
        #/// true if it is created; otherwise, false.
        #/// </returns>
        #public boolean isBankLGCreated()
        #{
        #    boolean     ret = false;
        #
        #    if (this.isMarkedForBankLG() && this.BankLGDocumentMap::isLinkedToGuarantee())
        #    {
        #        ret = true;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isCancellingFiscalDocument_BR
        #/// <summary>
        #/// Verifies whether the purchase order is for cancelling a fiscal document issued by current fiscal establisment.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the purchase order is for cancelling an original fiscal document issued by current FE; false otherwise.
        #/// </returns>
        #public boolean isCancellingFiscalDocument_BR()
        #{
        #    PurchTable_BR       purchTable_BR;
        #
        #    purchTable_BR = this.purchTable_BR();
        #
        #    return purchTable_BR.isCancellingOrReversingFiscalDocument() && purchTable_BR.isRelatedFiscalDocIssuedByFiscalEstab();
        #}
      ENDSOURCE
      SOURCE #isCancellingPurchaseReturn_BR
        #/// <summary>
        #///     Verifies whether the purchase order is for cancelling a purchase return previously entered.
        #/// </summary>
        #/// <returns>
        #///     true if the purchase order is for cancelling a purchase return; false otherwise.
        #/// </returns>
        #public boolean isCancellingPurchaseReturn_BR()
        #{
        #    PurchTable_BR       purchTable_BR;
        #    FiscalDocument_BR   fiscalDocumentBeingCancelled;
        #
        #    purchTable_BR = this.purchTable_BR();
        #
        #    if (!purchTable_BR.isCancellingOrReversingFiscalDocument())
        #    {
        #        return false;
        #    }
        #
        #    fiscalDocumentBeingCancelled = FiscalDocument_BR::findByRef(tableNum(VendInvoiceJour), purchTable_BR.InvoiceRefRecId_BR);
        #
        #    if (fiscalDocumentBeingCancelled.Direction == FiscalDocDirection_BR::Outgoing)
        #    {
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #isCustomsImportOrder_IN
        #/// <summary>
        #/// Checks if the table is in customs import order.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the table is in customs import order.
        #/// </returns>
        #// <GIN>
        #public boolean isCustomsImportOrder_IN()
        #{
        #    return this.purchTable_W().CustomsImportOrder_IN;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #isDirectImport_BR
        #/// <summary>
        #///     Indicates whether a purchase order is a direct import order by checking its CFOP.
        #/// </summary>
        #/// <returns>
        #///     true if the CFOP is for foreign operations; otherwise false.
        #/// </returns>
        #public boolean isDirectImport_BR()
        #{
        #    PurchLine purchLine;
        #
        #    select firstonly cfopTable_BR
        #        from purchLine
        #        where purchLine.PurchId == this.PurchId;
        #
        #    return CFOPTable_BR::find(purchLine.cfopTable_BR).CustVendLocation == CustVendLocation_BR::OutsideCountry;
        #}
        #
      ENDSOURCE
      SOURCE #isDropShipment
        #/// <summary>
        #///    Indicates whether a purchase order is created as a direct delivery order.
        #/// </summary>
        #/// <returns>
        #///    true if there are direct delivery lines for the purchase order; otherwise, false.
        #/// </returns>
        #boolean isDropShipment()
        #{
        #    PurchLine   purchLine;
        #
        #    select firstonly RecId from purchLine
        #        where purchLine.PurchId         == this.PurchId
        #           && purchLine.DeliveryType    == TradeLineDlvType::DropShip
        #           && !purchLine.IsDeleted;
        #
        #    return purchLine.RecId;
        #}
      ENDSOURCE
      SOURCE #isFinalized
        #/// <summary>
        #///     Checks if the purchase order is finalized.
        #/// </summary>
        #/// <returns>
        #///     True if the purchase order is finalized; oterwise, false
        #/// </returns>
        #public boolean isFinalized()
        #{
        #    return this.DocumentState == VersioningDocumentState::Finalized;
        #}
      ENDSOURCE
      SOURCE #isFullyInvoicedIncludingPendingInvoice
        #/// <summary>
        #/// Indicates whether the current purchase order is fully invoiced by either posted invoices or active
        #/// invoices.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order is fully invoiced; otherwise, false.
        #/// </returns>
        #public boolean isFullyInvoicedIncludingPendingInvoice()
        #{
        #    PurchLine   purchLine;
        #
        #    //if this is already invoiced fully by a posted PO, it is less expensive to check the purchStatus field and short-circuit everything else.
        #    if(this.PurchStatus == PurchStatus::Invoiced)
        #    {
        #        return true;
        #    }
        #
        #    //For each purchLine record, make sure that the line is fully invoiced.  If it is not return false.
        #    while select purchLine
        #        where purchLine.PurchId == this.PurchId &&
        #                purchLine.IsDeleted == NoYes::No
        #    {
        #        //if the line is not fully invoiced, then return false
        #        if(purchLine.RemainPurchFinancial + purchLine.RemainPurchPhysical - purchLine.calcPendingQtyPurch() != 0)
        #        {
        #            return false;
        #        }
        #    }
        #
        #    //if we have made it this far then the PO is fully invoiced
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isInterCompanyOrder
        #boolean  isInterCompanyOrder()
        #{;
        #    return (this.InterCompanyOrder
        #        &&  this.InterCompanyCompanyId != ''
        #        &&  this.SkipUpdate            != InterCompanySkipUpdate::InterCompany
        #        &&  this.SkipUpdate            != InterCompanySkipUpdate::Both);
        #}
      ENDSOURCE
      SOURCE #isInvoiceMatched
        #/// <summary>
        #/// Indicates whether the purchase order was partially of fully invoiced.
        #/// </summary>
        #/// <returns>
        #/// true if the order was partially of fully invoiced; otherwise, false.
        #/// </returns>
        #public boolean isInvoiceMatched()
        #{
        #
        #    if (this.DocumentStatus < DocumentStatus::Invoice
        #        // The Confirmation Request enum has bigger value than the Invoice, but logically it is less than the one of Invoice
        #        || this.DocumentStatus == DocumentStatus::ConfirmationRequest)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from vendInvoicePurchLink
        #        where vendInvoicePurchLink.OrigPurchId == this.PurchId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #isMarkedForBankLC
        #/// <summary>
        #/// Indicates whether the purchase order is marked for letter of credit.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order is marked for letter of credit; otherwise, false.
        #/// </returns>
        #public boolean isMarkedForBankLC()
        #{
        #    return this.BankDocumentType == BankDocumentType::LetterOfCredit
        #        || this.BankDocumentType == BankDocumentType::ImportCollection;
        #}
      ENDSOURCE
      SOURCE #isMarkedForBankLG
        #/// <summary>
        #/// Indicates whether the purchase order is marked for letter of guarantee.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order is marked for letter of guarantee; otherwise, false.
        #/// </returns>
        #public boolean isMarkedForBankLG()
        #{
        #    return this.BankDocumentType == BankDocumentType::LetterOfGuarantee;
        #}
        #
      ENDSOURCE
      SOURCE #isPartiallyDistributed
        #/// <summary>
        #///    Performs a check whether any lines that are partially distributed exist.
        #/// </summary>
        #/// <returns>
        #///    True, if there are partially distributed lines; otherwise false.
        #/// </returns>
        #/// <remarks>
        #///     A line is either not distributed, partially distributed, or fully distributed.
        #///     This method will return true if any lines that have distributions, but aren't fully
        #///     distributed exist.
        #/// </remarks>
        #public server boolean isPartiallyDistributed()
        #{
        #    PurchLine   purchLine;
        #    SourceDocumentLine sourceDocumentLine;
        #    AccountingDistribution accountingDistribution;
        #    boolean     ret;
        #
        #    while select purchLine
        #        where purchLine.PurchId == this.PurchId
        #            && !purchLine.IsDeleted
        #        join sourceDocumentLine
        #            where sourceDocumentLine.RecId == purchLine.SourceDocumentLine
        #            exists join accountingDistribution
        #                where accountingDistribution.SourceDocumentLine == sourceDocumentLine.RecId
        #    {
        #        ret = !purchLine.isFullyDistributed(sourceDocumentLine);
        #        if (ret)
        #        {//break the loop as soon as one partially distributed line is found.
        #            break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isProjectSalesItemReqPO
        #public boolean isProjectSalesItemReqPO()
        #{
        #    InterCompanyPurchSalesReference     interCompanyPurchSalesReference;
        #    SalesTable                          salesTable;
        #
        #    if (!this.ProjId)
        #    {
        #        return false;
        #    }
        #
        #    select firstonly RecId from interCompanyPurchSalesReference
        #        where interCompanyPurchSalesReference.PurchId == this.PurchId
        #            exists join salesTable
        #                where salesTable.SalesId == interCompanyPurchSalesReference.SalesId
        #                    && salesTable.ProjId == this.ProjId;
        #
        #    return (interCompanyPurchSalesReference.RecId == 0 ? false : true);
        #}
        #
      ENDSOURCE
      SOURCE #isReversingFiscalDocument_BR
        #/// <summary>
        #/// Verifies whether the purchase order is for reversing a fiscal document issued by third party
        #/// </summary>
        #/// <returns>
        #/// Returns true if the purchase order is for reversing an original fiscal document issued by third party; false otherwise.
        #/// </returns>
        #public boolean isReversingFiscalDocument_BR()
        #{
        #    PurchTable_BR       purchTable_BR;
        #
        #    purchTable_BR = this.purchTable_BR();
        #
        #    return purchTable_BR.isCancellingOrReversingFiscalDocument() && purchTable_BR.isRelatedFiscalDocIssuedByThirdParty();
        #}
      ENDSOURCE
      SOURCE #isVersioned
        #/// <summary>
        #/// Determines whether the order has been versioned, i.e. whether it has been confirmed or approved with change management enabled.
        #/// </summary>
        #/// <returns>true if the order has been versioned; otherwise, false.</returns>
        #public boolean isVersioned()
        #{
        #    if (this.IsModified)
        #    {
        #        // If the header is modified then it is either new or modified with history.
        #        return VersioningPurchaseOrder::checkHistoryExist(this);
        #    }
        #    else
        #    {
        #        // If the header is not modified then it is versioned.
        #        return true;
        #    }
        #}
      ENDSOURCE
      SOURCE #jumpRefIntercompanySalesOrder
        #/// <summary>
        #///   Jump reference for the intercompany sales order relating to the purchase order.
        #/// </summary>
        #/// <param name="_caller">
        #///    The object that is calling the <c>jumpRefIntercompanySalesOrder</c> method; optional.
        #/// </param>
        #public void jumpRefIntercompanySalesOrder(Object _caller = null)
        #{
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #    {
        #        TradeInterCompany::construct(this).formRun(formStr(ReturnTable),_caller);
        #    }
        #    else
        #    {
        #        TradeInterCompany::construct(this).formRun(formStr(SalesTable),_caller);
        #    }
        #}
      ENDSOURCE
      SOURCE #lastConfirmationRequestJournal
        #/// <summary>
        #/// Returns the last entry in the <c>PurchConfirmationRequestJour</c> table.
        #/// </summary>
        #/// <returns>
        #/// The last record created in the <c>PurchConfirmationRequestJour</c> table.
        #/// </returns>
        #public client server PurchConfirmationRequestJour lastConfirmationRequestJournal()
        #{
        #    PurchConfirmationRequestJour      purchConfirmationRequestJour;
        #    PurchTableVersion                 purchTableVersion;
        #
        #    select firstonly * from purchConfirmationRequestJour
        #    join TableId from purchTableVersion
        #        order by purchConfirmationRequestJour.DocumentNumber desc, RecId desc
        #        where   purchTableVersion.PurchId                      == this.PurchId
        #            &&  purchTableVersion.PurchIdDataAreaId            == this.DataAreaId
        #            &&  purchConfirmationRequestJour.PurchTableVersion == purchTableVersion.RecId;
        #
        #    return purchConfirmationRequestJour;
        #}
      ENDSOURCE
      SOURCE #lastFacture_RU
        ##define.FactureNumPosition(1)
        #public FactureExternalId_RU lastFacture_RU()
        #{
        #    return conPeek(this.lastFactureNumDate_RU(), #FactureNumPosition);
        #}
      ENDSOURCE
      SOURCE #lastFactureNumDate_RU
        #private container lastFactureNumDate_RU()
        #{
        #    FactureJour_RU          jour;
        #    VendInvoicePurchLink    invoicePurchLink;
        #    VendInvoiceJour         invoiceJour;
        #    RecordSortedList        list = new RecordSortedList(tableNum(FactureJour_RU)),
        #                            tmpList;
        #
        #    // to avoid BP warning
        #    void dummy()
        #    {
        #    }
        #
        #    select firstonly RecId from jour;
        #    if(! jour.RecId)
        #        return ["", dateNull()];
        #
        #    list.sortOrder(fieldNum(FactureJour_RU, FactureDate),
        #                   fieldNum(FactureJour_RU, FactureId),
        #                   fieldNum(FactureJour_RU, ModifiedDateTime),
        #                   fieldNum(FactureJour_RU, RecId));
        #
        #    while select RecId from invoicePurchLink
        #        index hint origPurchIdx
        #        where invoicePurchLink.OrigPurchId == this.PurchId
        #    join invoiceJour
        #        where invoiceJour.PurchId     == invoicePurchLink.PurchId   &&
        #              invoiceJour.InvoiceId   == invoicePurchLink.InvoiceId &&
        #              invoiceJour.InvoiceDate == invoicePurchLink.InvoiceDate
        #    {
        #        tmpList = invoiceJour.factureJourSortedList_RU();
        #        tmpList.first(jour);
        #        if (jour)
        #        {
        #            while (tmpList.next(jour))
        #            {
        #                dummy();
        #            } // last element
        #            if (! list.find(jour))
        #            {
        #                list.ins(jour);
        #            }
        #        }
        #    }
        #
        #    list.first(jour);
        #    while (list.next(jour))
        #    {
        #        dummy();
        #    } // last element
        #
        #    return [ jour.FactureExternalId, jour.FactureDate ];
        #}
      ENDSOURCE
      SOURCE #lastInventExtPackingSlip
        #/// <summary>
        #/// Finds last product receipt from ext. inventory delivery note based on pucrhase id.
        #/// </summary>
        #/// <returns>
        #/// Last product receipt where update was made.
        #/// </returns>
        #//BP Deviation documented
        #client server
        #display LastPlPackingSlipExternalId  lastInventExtPackingSlip()
        #{
        #    PlInventPackingSlipExtJour  inventPackingSlipExtJour;
        #    select firstonly PackingSlipId from inventPackingSlipExtJour
        #        index hint origPurchIdx
        #        order by TransDate desc, PackingSlipId desc
        #        where inventPackingSlipExtJour.PurchId == this.PurchId;
        #
        #    return  inventPackingSlipExtJour.PackingSlipId;
        #}
        #
      ENDSOURCE
      SOURCE #lastInvoice
        #//BP Deviation documented
        #client server
        #display LastInvoiceId  lastInvoice()
        #{
        #    return (select firstonly InvoiceId from vendInvoicePurchLink
        #                index hint origPurchIdx
        #                order by InvoiceDate desc, InvoiceId desc
        #                where vendInvoicePurchLink.OrigPurchId == this.PurchId).InvoiceId;
        #}
      ENDSOURCE
      SOURCE #lastInvoice4Paym_RU
        ##define.Invoice4PaymNumPosition(1)
        #//BP deviation documented
        #server display Invoice4PaymId_RU lastInvoice4Paym_RU()
        #{
        #    return conPeek(this.lastInvoice4PaymNumDate_RU(), #Invoice4PaymNumPosition);
        #}
      ENDSOURCE
      SOURCE #lastInvoice4PaymDate_RU
        ##define.Invoice4PaymDatePosition(2)
        #//BP deviation documented
        #server display TransDate lastInvoice4PaymDate_RU()
        #{
        #    return conPeek(this.lastInvoice4PaymNumDate_RU(), #Invoice4PaymDatePosition);
        #}
      ENDSOURCE
      SOURCE #lastInvoice4PaymNumDate_RU
        #private server container lastInvoice4PaymNumDate_RU()
        #{
        #    VendInvoice4PaymPurchLink_RU invoice4PaymPurchLink;
        #
        #    select firstonly Invoice4PaymId, Invoice4PaymDate from invoice4PaymPurchLink
        #        index hint OrigPurchIdx
        #        order by Invoice4PaymDate desc
        #        where invoice4PaymPurchLink.OrigPurchId == this.PurchId;
        #
        #    return [ invoice4PaymPurchLink.Invoice4PaymId, invoice4PaymPurchLink.Invoice4PaymDate ];
        #}
      ENDSOURCE
      SOURCE #lastInvoiceDate
        #//BP Deviation documented
        #client server
        #display LastInvoiceDate lastInvoiceDate()
        #{
        #    return (select maxof(InvoiceDate) from vendInvoicePurchLink
        #                index hint origPurchIdx
        #                where vendInvoicePurchLink.OrigPurchId == this.PurchId).InvoiceDate;
        #}
      ENDSOURCE
      SOURCE #lastJournals
        #server container  lastJournals()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    container  c;
        #
        #    c = conIns(c, PurchTableType::posPurchaseOrder(),   [this.lastPurchaseOrder(),  this.lastPurchaseOrderDate()]);
        #    c = conIns(c, PurchTableType::posReceiptsList(),    [this.lastReceiptsList(),   this.lastReceiptsListDate()]);
        #    c = conIns(c, PurchTableType::posPackingSlip(),     [this.lastPackingSlip(),    this.lastPackingSlipDate()]);
        #    c = conIns(c, PurchTableType::posInvoice(),         [this.lastInvoice(),        this.lastInvoiceDate()]);
        #
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        c = conIns(c, PurchTableType::posInvoice4Paym_RU(), this.lastInvoice4PaymNumDate_RU());
        #        c = conIns(c, PurchTableType::posFacture_RU(),      this.lastFactureNumDate_RU());
        #    }
        #    // </GEERU>
        #
        #    return c;
        #}
      ENDSOURCE
      SOURCE #lastPackingSlip
        #//BP Deviation documented
        #client server
        #display LastPackingSlipId  lastPackingSlip()
        #{
        #    return (select firstonly PackingSlipId from vendPackingSlipPurchLink
        #                index hint origPurchIdx
        #                order by DeliveryDate desc, PackingSlipId desc
        #                where vendPackingSlipPurchLink.OrigPurchId == this.PurchId).PackingSlipId;
        #}
      ENDSOURCE
      SOURCE #lastPackingSlipDate
        #//BP Deviation documented
        #client server
        #display LastPackingSlipDate lastPackingSlipDate()
        #{
        #    return (select maxof(DeliveryDate) from vendPackingSlipPurchLink
        #                index hint origPurchIdx
        #                where vendPackingSlipPurchLink.OrigPurchId == this.PurchId).DeliveryDate;
        #}
      ENDSOURCE
      SOURCE #lastPurchaseOrder
        #//BP Deviation documented
        #client server
        #display LastPurchaseOrderId  lastPurchaseOrder()
        #{
        #    VendPurchOrderJour      vendPurchOrderJour;
        #
        #    select firstonly PurchOrderDocNum from vendPurchOrderJour
        #            order by PurchOrderDate desc, PurchaseOrderId desc
        #            where vendPurchOrderJour.PurchId == this.PurchId;
        #
        #    return vendPurchOrderJour.PurchOrderDocNum;
        #}
      ENDSOURCE
      SOURCE #lastPurchaseOrderDate
        #//BP Deviation documented
        #[SysClientCacheDataMethodAttribute(false)]
        #client server
        #display LastPurchaseOrderDate lastPurchaseOrderDate()
        #{
        #    return (select maxof(PurchOrderDate) from vendPurchOrderJour
        #                where vendPurchOrderJour.PurchId == this.PurchId).PurchOrderDate;
        #}
      ENDSOURCE
      SOURCE #lastPurchConfirmationRequestJour
        #/// <summary>
        #/// Method returns the <c>DocumentNumber</c> for the last <c>PurchConfirmationRequestJour</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>DocumentNumber</c> of the last <c>PurchConfirmationRequestJour</c> record.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public client server display PurchLastConfirmationRequestId lastPurchConfirmationRequestJour()
        #{
        #    return this.lastConfirmationRequestJournal().DocumentNumber;
        #}
      ENDSOURCE
      SOURCE #lastPurchConfirmationRequestJourDate
        #/// <summary>
        #/// Method returns the <c>DocumentDate</c> field value for the last <c>PurchConfirmationRequestJour</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>DocumentDate</c> field value of the last <c>PurchConfirmationRequestJour</c> record.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public client server display PurchLastConfirmationRequestDate  lastPurchConfirmationRequestJourDate()
        #{
        #    return this.lastConfirmationRequestJournal().DocumentDate;
        #}
      ENDSOURCE
      SOURCE #lastReceiptsList
        #//BP Deviation documented
        #client server
        #display LastReceiptsListId  lastReceiptsList()
        #{
        #    return (select firstonly ReceiptsListId from vendReceiptsListPurchLink
        #                index hint origPurchIdx
        #                order by ReceiptsListDate desc, ReceiptsListId desc
        #                where vendReceiptsListPurchLink.OrigPurchId == this.PurchId).ReceiptsListId;
        #}
      ENDSOURCE
      SOURCE #lastReceiptsListDate
        #//BP Deviation documented
        #client server
        #display LastReceiptsListDate lastReceiptsListDate()
        #{
        #    return (select maxof(ReceiptsListDate) from vendReceiptsListPurchLink
        #                index hint origPurchIdx
        #                where vendReceiptsListPurchLink.OrigPurchId == this.PurchId).ReceiptsListDate;
        #}
      ENDSOURCE
      SOURCE #lineMapping
        #/// <summary>
        #/// Retrieves the table ID of the table that is considered to be the line table.
        #/// </summary>
        #/// <returns>
        #/// The ID of the <c>PurchLine</c> table.
        #/// </returns>
        #public RefTableId lineMapping()
        #{
        #    return tableNum(PurchLine);
        #}
      ENDSOURCE
      SOURCE #maintainTaxUncommitted
        #/// <summary>
        #/// Determines whether <c>TaxUncommitted</c> records should be maintained or flushed.
        #/// </summary>
        #/// <returns>true if <c>TaxUncommitted</c> records should be maintained; otherwise, false.</returns>
        #public boolean maintainTaxUncommitted()
        #{
        #    return VersioningPurchaseOrder::checkHistoryExist(this);
        #}
      ENDSOURCE
      SOURCE #mayBankDocumentTypeBeBankLCImport
        #/// <summary>
        #/// Indicates whether the bank document type can be set to bank LC import.
        #/// </summary>
        #/// <returns>
        #/// true if the document type can be set; otherwise, false.
        #/// </returns>
        #public boolean mayBankDocumentTypeBeBankLCImport()
        #{
        #    return this.PurchaseType        == PurchaseType::Purch
        #        && this.DocumentState       != VersioningDocumentState::Confirmed
        #        && this.PurchStatus         == PurchStatus::Backorder
        #        && this.InterCompanyOrder   == NoYes::No;
        #}
      ENDSOURCE
      SOURCE #mayBankDocumentTypeBeBankLG
        #/// <summary>
        #/// Checks whether the Bank document type can be set to the types of Bank LG.
        #/// </summary>
        #/// <returns>
        #/// true if allowed; otherwise, false.
        #/// </returns>
        #public boolean mayBankDocumentTypeBeBankLG()
        #{
        #    // It is not allowed to create LG on purchase order if
        #    // the related project's bank document type is set to LG.
        #    return !(this.ProjId && ProjTable::find(this.ProjId).isMarkedForBankLG());
        #}
      ENDSOURCE
      SOURCE #mayInterCompanyBeUpdated
        #/// <summary>
        #/// Determines whether an intercompany order can be updated.
        #/// </summary>
        #/// <returns>
        #/// true if the intercompany order can be updated; otherwise, false.
        #/// </returns>
        #public boolean mayInterCompanyBeUpdated()
        #{
        #    return this.type().interCompanyCanBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mayInvoice4PaymBeUpdated_RU
        #public boolean mayInvoice4PaymBeUpdated_RU()
        #{
        #    return this.type().mayInvoice4PaymBeUpdated_RU();
        #}
      ENDSOURCE
      SOURCE #mayInvoiceBeUpdated
        #boolean  mayInvoiceBeUpdated()
        #{
        #    return this.type().mayInvoiceBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mayPackingSlipBeUpdated
        #public boolean mayPackingSlipBeUpdated(VersioningUpdateType _updateType = VersioningUpdateType::Initial)
        #{
        #    return this.type().mayPackingSlipBeUpdated(_updateType);
        #}
      ENDSOURCE
      SOURCE #mayPurchaseOrderBeUpdated
        #boolean  mayPurchaseOrderBeUpdated()
        #{
        #    return this.type().mayPurchaseOrderBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mayReceiptsListBeUpdated
        #boolean  mayReceiptsListBeUpdated()
        #{
        #    return this.type().mayReceiptsListBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mcrDisplayOnHold
        #/// <summary>
        #/// Determines whether or not to return a on hold icon.
        #/// </summary>
        #/// <returns>
        #/// The defined on hold icon which is set in the resAppl macro.
        #/// </returns>
        #public display MCRDisplayOnHold mcrDisplayOnHold()
        #{
        #    #MCRresAppl
        #    int image = 0;
        #
        #    if (MCRHoldCodeTrans::findActiveOrderHolds(this.PurchId))
        #    {
        #        image = #MCRImage_OnHold;
        #    }
        #    return image;
        #}
      ENDSOURCE
      SOURCE #mergeDimension
        #/// <summary>
        #/// Retrieves a dimension set that contains the merged combination of the current
        #/// <c>defaultDimension</c> field on this table and the provided dimension set.
        #/// </summary>
        #/// <param name="_primaryDefaultDimension">
        #/// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_secondaryDefaultDimension">
        #/// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
        #/// optional.
        #/// </param>
        #/// <param name="_dimensionMerge">
        #/// A <c>dimensionMerge</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
        #/// on this table and the provided dimension set.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten when they are merged.
        #/// </remarks>
        #
        #public DimensionDefault mergeDimension(
        #    DimensionDefault _primaryDefaultDimension,
        #    DimensionDefault _secondaryDefaultDimension = 0,
        #    DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
        #                                                                    this.companyInfo().RecId
        #                                                                    )
        #    )
        #{
        #    return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    PurchTable_RU   purchTable_RU;
        #    // </GEERU>
        #    // <GIN>
        #    PurchTable_W    purchTable_W;
        #    // </GIN>
        #
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(PurchTable, ContactPersonId):
        #            this.initFromContactInfo();
        #            break;
        #        case fieldNum(PurchTable, InventLocationId):
        #            this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventLocationId));
        #            this.setAddressFromInventLocationId(this.InventLocationId);
        #            break;
        #
        #        case fieldNum(PurchTable, InventSiteId):
        #            this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventSiteId));
        #            this.setAddressFromInventSiteId(this.InventSiteId);
        #            break;
        #
        #        case fieldNum(PurchTable, InterCompanyOrder):
        #            if (this.InterCompanyOrder)
        #            {
        #                this.InterCompanyCompanyId = this.vendTable_OrderAccount().interCompanyTradingPartnerCompanyID();
        #                if (this.isMarkedForBankLC())
        #                {
        #                    this.BankDocumentType = BankDocumentType::None;
        #                }
        #            }
        #            else
        #                this.InterCompanyCompanyId = '';
        #            break;
        #
        #        case fieldNum(PurchTable, BankDocumentType):
        #            this.type().modifiedBankDocumentType();
        #            break;
        #
        #        case fieldNum(PurchTable, InvoiceAccount):
        #            // <GEERU>
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #            {
        #                if(this.RecId && this.MatchingAgreement && this.InvoiceAccount != this.orig().InvoiceAccount )
        #                {
        #                    if (!this.unlinkAgreementPrompt())
        #                    {
        #                        this.InvoiceAccount = this.orig().InvoiceAccount;
        #                        break;
        #                    }
        #                }
        #            }
        #            // </GEERU>
        #            if (!this.existMarkedSettlement(_fieldId))
        #                this.transferInvoiceAccount();
        #            else
        #                this.reread();
        #            break;
        #
        #        case fieldNum(PurchTable, MarkupGroup):
        #            this.modifieMarkupGroup();
        #            break;
        #
        #        case fieldNum(PurchTable, OrderAccount):
        #            if(this.RecId && this.MatchingAgreement && this.OrderAccount != this.orig().OrderAccount )
        #            {
        #                if (!this.unlinkAgreementPrompt(
        #                                                false
        #                                                ))
        #                {
        #                    this.OrderAccount = this.orig().OrderAccount;
        #                    break;
        #                }
        #            }
        #
        #            // <GIN>
        #            if (TaxParameters::isCustomsEnable_IN()
        #                && this.OrderAccount)
        #            {
        #                purchTable_W = this.purchTable_W();
        #                purchTable_W.CustomsImportOrder_IN = VendTable::find(this.OrderAccount).isForeign();
        #                this.packPurchTable_W(purchTable_W);
        #            }
        #            // </GIN>
        #            // <GSA>
        #            if (LedgerParameters::find().IsZakatEnabled_SA)
        #            {
        #                this.ContractNum_SA = '';
        #            }
        #            // </GSA>
        #            if (!this.existMarkedSettlement(_fieldId))
        #                this.transferOrderAccount();
        #            else
        #                this.reread();
        #
        #            this.DefaultDimension = this.copyDimension(this.DefaultDimension);
        #            break;
        #
        #        case fieldNum(PurchTable, Payment):
        #            this.initFromPayment();
        #            break;
        #
        #        case fieldNum(PurchTable, PaymMode):
        #            this.paymModeModified();
        #            break;
        #
        #        case fieldNum(PurchTable, BankCentralBankPurposeCode):
        #            this.BankCentralBankPurposeText = BankCentralBankPurpose::find(this.BankCentralBankPurposeCode).Text;
        #            break;
        #
        #        case fieldNum(PurchTable, Requester):
        #            this.ReqAttention = HcmWorkerTitle::findByWorker(this.Requester).OfficeLocation;
        #            break;
        #
        #        case fieldNum(PurchTable, DiscPercent):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            break;
        #
        #        case fieldNum(PurchTable, ProjId):
        #            this.DefaultDimension = this.copyDimension(this.DefaultDimension);
        #            break;
        #
        #
        #        // <GEERU>
        #        case fieldNum(PurchTable, MatchingAgreement):
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #            {
        #                purchTable_RU = this.purchTable_RU();
        #                purchTable_RU.AgreementHeaderExt_RU = PurchAgreementHeaderExt_RU::findByPurchAgreementHeader(this.MatchingAgreement).RecId;
        #                this.packPurchTable_RU(purchTable_RU);
        #
        #                this.setAgreement_RU();
        #            }
        #            break;
        #         // </GEERU>
        #
        #        case fieldNum(PurchTable, PurchaseType):
        #            this.setDefaultDeliveryAddress();
        #            if (this.PurchaseType != PurchaseType::Purch && this.isMarkedForBankLC())
        #            {
        #                this.BankDocumentType = BankDocumentType::None;
        #            }
        #            break;
        #
        #        case fieldNum(PurchTable, DeliveryPostalAddress):
        #            LogisticsLocationSelectForm_PurchTable::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #                this.DeliveryPostalAddress);
        #            break;
        #
        #        default:
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedInventSiteFromParent
        #public void modifiedInventSiteFromParent()
        #{
        #    this.InventStorageDimMap::modifiedInventSiteFromParent(this);
        #}
      ENDSOURCE
      SOURCE #modifieMarkupGroup
        #server void modifieMarkupGroup()
        #{
        #    PurchLine  purchLine;
        #
        #    while select purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId         == this.PurchId
        #           && !purchLine.IsDeleted
        #    {
        #        purchLine.createMarkupTrans(this, true);
        #    }
        #}
      ENDSOURCE
      SOURCE #moduleType
        #ModuleInventPurchSales moduleType()
        #{
        #    return ModuleInventPurchSales::Purch;
        #}
      ENDSOURCE
      SOURCE #mustBeCovPlanned
        #boolean  mustBeCovPlanned()
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    return purchTableType.mustBeCovPlanned();
        #}
      ENDSOURCE
      SOURCE #operationType_BR
        #/// <summary>
        #/// Retrieves the operation type of the current purchase order.
        #/// </summary>
        #/// <param name="_forUpdate">
        #/// A boolean value that indicates whether the <c>SalesPurchOperationType_BR</c> table record should be retrieved for update.
        #/// </param>
        #/// <returns>
        #/// The <c>SalesPurchOperationType_BR</c> table record representing the operation type.
        #/// </returns>
        #SalesPurchOperationType_BR operationType_BR(boolean _forUpdate = false)
        #{
        #    return SalesPurchOperationType_BR::find(this.purchTable_BR().SalesPurchOperationType_BR, _forUpdate);
        #}
        #
      ENDSOURCE
      SOURCE #packExtensionTable
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_sysExtensionSerializerExtensionTableMap">
        #/// The extension table record.
        #/// </param>
        #public void packExtensionTable(SysExtensionSerializerExtensionMap _sysExtensionSerializerExtensionTableMap)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_sysExtensionSerializerExtensionTableMap.data());
        #}
      ENDSOURCE
      SOURCE #packPurchTable_BR
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchTable_BR">
        #/// The extension table record.
        #/// </param>
        #// <GBR>
        #public void packPurchTable_BR(PurchTable_BR _purchTable_BR)
        #{
        #    _purchTable_BR.PurchTable = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchTable_BR);
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #packPurchTable_RU
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchTable_RU">
        #/// The extension table record.
        #/// </param>
        #// <GEERU>
        #public void packPurchTable_RU(PurchTable_RU _purchTable_RU)
        #{
        #    _purchTable_RU.PurchTable = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchTable_RU);
        #}
        #// </GEERU>
      ENDSOURCE
      SOURCE #packPurchTable_W
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchTable_W">
        #/// The extension table record.
        #/// </param>
        #public void packPurchTable_W(PurchTable_W _purchTable_W)
        #{
        #    _purchTable_W.PurchTable = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchTable_W);
        #}
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    return this.ExchangeRateDate;
        #}
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    return this.PurchTableMap::parmParentSourceDocumentLine();
        #}
        #
      ENDSOURCE
      SOURCE #parmSourceDocHeaderTypeEnumName
        #public EnumName parmSourceDocHeaderTypeEnumName()
        #{
        #    return this.PurchTableMap::parmSourceDocHeaderTypeEnumName();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocHeaderTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocHeaderTypeEnumValue()
        #{
        #    return this.PurchTableMap::parmSourceDocHeaderTypeEnumValue();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    return this.PurchTableMap::parmSourceDocLineTypeEnumName();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    return this.PurchTableMap::parmSourceDocLineTypeEnumValue();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocumentHeader
        #public SourceDocumentHeader parmSourceDocumentHeader()
        #{
        #    return this.PurchTableMap::parmSourceDocumentHeader();
        #}
        #
      ENDSOURCE
      SOURCE #party
        #public DirPartyRecId party()
        #{
        #    return VendTable::find(this.OrderAccount).Party;
        #}
      ENDSOURCE
      SOURCE #partyTable_OrderAccount
        #/// <summary>
        #/// Gets the <c>DirPartyTable</c> record for the order account of the purchase order.
        #/// </summary>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether the record is selected for update.
        #/// </param>
        #/// <returns>
        #/// The <c>DirPartyTable</c> record for the order account of the purchase order.
        #/// </returns>
        #DirPartyTable partyTable_OrderAccount(boolean _forUpdate = false)
        #{
        #    DirPartyTable   partyTable;
        #    VendTable       vendTable;
        #
        #    if (this.OrderAccount)
        #    {
        #        if (_forUpdate)
        #            partyTable.selectForUpdate(_forUpdate);
        #
        #        select firstonly partyTable
        #            exists join vendTable
        #            where vendTable.Party      == partyTable.RecId
        #               && vendTable.AccountNum == this.OrderAccount;
        #    }
        #    return partyTable;
        #}
      ENDSOURCE
      SOURCE #payer
        #VendTable payer(boolean  update = false)
        #{
        #    return this.vendTable_InvoiceAccount(update);
        #}
        #
      ENDSOURCE
      SOURCE #paymDayId
        #VendPaymDayId paymDayId()
        #{
        #    VendPaymDayId    paymDayId;
        #
        #    paymDayId = this.vendTable_InvoiceAccount().PaymDayId;
        #
        #    if (!paymDayId)
        #        paymDayId = this.payment().PaymDayId;
        #
        #    return paymDayId;
        #}
      ENDSOURCE
      SOURCE #payment
        #PaymTerm payment(boolean _update = false)
        #{
        #    return PaymTerm::find(this.Payment, _update);
        #}
      ENDSOURCE
      SOURCE #paymModeModified
        #void paymModeModified()
        #{
        #    this.PaymModeMap::modifiedPaymMode();
        #}
        #
      ENDSOURCE
      SOURCE #pdsCheckApprovedVendorList
        #/// <summary>
        #/// Method validates if the corresponding purchase lines have valid approved vendor list entry if controlled by AVL functionality.
        #/// </summary>
        #/// <param name="_orderAcct" type="VendAccount">Vendor account number</param>
        #/// <returns type="Enum">true if allowed ; otherwise false</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public Enum pdsCheckApprovedVendorList(VendAccount _orderAcct)
        #/// </syntax>
        #/// </remarks>
        #public boolean pdsCheckApprovedVendorList(VendAccount _orderAcct = '')
        #{
        #    PdsApprovedVendorListCheck  tableCheck;
        #    boolean                     ret = true;
        #
        #    tableCheck = this.type().pdsApprovedVendorListCheck();
        #    if (_orderAcct != '')
        #    {
        #        tableCheck.parmVendAccount(_orderAcct);
        #    }
        #    ret = tableCheck.validateCheck();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsMRCLineCheck
        #/// <summary>
        #/// Check each of the order line for MRC compliance
        #/// </summary>
        #/// <remarks>
        #/// Check if the vendor account number has been changed and check the
        #/// regulatory requirements
        #/// </remarks>
        #public void pdsMRCLineCheck()
        #{
        #    PurchLine   purchLine;
        #
        #    if (this.RecId
        #        && this.orig().OrderAccount != this.OrderAccount
        #        && PdsMRCParameters::find().RegulationWarningOnPurchase)
        #    {
        #        while select purchLine
        #            where purchLine.PurchId == this.PurchId
        #        {
        #            PdsMRCRegulated::checkRegulatedFromBuffer(purchLine);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #previewPaneTitle
        #/// <summary>
        #/// Gives the title on top of the preview pane.
        #/// </summary>
        #/// <returns>
        #/// Title field of the preview pane.
        #/// </returns>
        #// BP deviation documented
        #display Caption previewPaneTitle()
        #{
        #    return strFmt("@SYS330566", this.PurchId);
        #}
      ENDSOURCE
      SOURCE #priceDiscChangePolicyExistOnLine
        #/// <summary>
        #/// Determines whether a line record that is related to the current record has a price discount policy.
        #/// </summary>
        #/// <returns>
        #/// true if a line with a price discount policy exists; otherwise, false
        #/// </returns>
        #public boolean priceDiscChangePolicyExistOnLine()
        #{
        #    PurchLine purchLine;
        #
        #    select firstonly RecId from purchLine
        #        where purchLine.PurchId == this.PurchId
        #           && !purchLine.IsDeleted
        #           && (purchLine.SystemEntryChangePolicy
        #           || purchLine.ManualEntryChangepolicy);
        #
        #    return purchLine.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #priceDiscChangePolicyUpdateLine
        #/// <summary>
        #/// Updates the price discount policy fields on a set of purchase line records that are related to the
        #/// current PurchTable record.
        #/// </summary>
        #/// <param name="_priceDiscChangePoliciesTmp">
        #/// A buffer of the temporary <c>PriceDiscChangePoliciesTmp</c> table.
        #/// </param>
        #public void priceDiscChangePolicyUpdateLine(PriceDiscChangePoliciesTmp  _priceDiscChangePoliciesTmp)
        #{
        #    PurchLine purchLine;
        #
        #    purchLine.skipDataMethods(true);
        #    update_recordset purchLine
        #    setting ManualEntryChangepolicy = _priceDiscChangePoliciesTmp.ManualEntryChangepolicy,
        #            SystemEntryChangePolicy = _priceDiscChangePoliciesTmp.SystemEntryChangePolicy,
        #            SystemEntrySource       = _priceDiscChangePoliciesTmp.SystemEntrySource
        #    join _priceDiscChangePoliciesTmp
        #        where _priceDiscChangePoliciesTmp.RefRecId == purchLine.RecId;
        #}
      ENDSOURCE
      SOURCE #projCostControlUpdate
        #public void projCostControlUpdate(PurchLine _purchLine,ProjCommittedCostUpdateAction _action=ProjCommittedCostUpdateAction::Unknown)
        #{
        #    InventMov_Purch                     movement;
        #    InventMov_Virtuel                   movement_Virtuel;
        #    CostControlPostingItemPurchOrder    costControlPostingItemPurchOrder;
        #
        #    movement=InventMovement::construct(_purchLine);
        #    movement_Virtuel= InventMov_Virtuel::construct();
        #    movement_Virtuel.parmInventMovReference(movement);
        #
        #    if (movement_Virtuel.mustBeCostControlled()  && movement_Virtuel.canCommittedCostBeReversed())
        #    {
        #        costControlPostingItemPurchOrder=CostControlPosting::newCostControlPostingItem(movement_Virtuel);
        #        costControlPostingItemPurchOrder.run(_action);
        #    }
        #}
      ENDSOURCE
      SOURCE #projTable
        #ProjTable projTable(boolean update = false)
        #{
        #    return ProjTable::find(this.ProjId, update);
        #}
      ENDSOURCE
      SOURCE #purchTable_BR
        #/// <summary>
        #/// Get the <c>PurchTable_BR</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchTable_BR</c> associated with the current record.
        #/// </returns>
        #// <GBR>
        #public PurchTable_BR purchTable_BR()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchTable_BR));
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #purchTable_Intrastat
        #/// <summary>
        #/// Retrieves <c>PurchTable_Intrastat</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #public PurchTable_Intrastat purchTable_Intrastat()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchTable_Intrastat));
        #}
        #
      ENDSOURCE
      SOURCE #purchTable_RU
        #/// <summary>
        #/// Get the <c>PurchTable_RU</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchTable_RU</c> associated with the current record.
        #/// </returns>
        #// <GEERU>
        #public PurchTable_RU purchTable_RU()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchTable_RU));
        #}
        #// </GEERU>
      ENDSOURCE
      SOURCE #purchTable_W
        #/// <summary>
        #/// Get the <c>PurchTable_W</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchTable_W</c> associated with the current record.
        #/// </returns>
        #public PurchTable_W purchTable_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchTable_W));
        #}
      ENDSOURCE
      SOURCE #qualityOrderStatusDisplay
        #/// <summary>
        #/// Retrieves the status of the associated quality orders.
        #/// </summary>
        #/// <returns>
        #/// The current quality order status.
        #/// </returns>
        #
        #//BP deviation documented
        #display InventTestOrderStatusDisplay qualityOrderStatusDisplay()
        #{
        #    InventQualityOrderTable orderTable = InventQualityOrderTable::findLastQualityOrder(InventTestReferenceType::Purch, this.PurchId);
        #
        #    return orderTable ? orderTable.statusDisplay() : InventTestOrderStatusDisplay::None;
        #}
        #
      ENDSOURCE
      SOURCE #queryPurchLine
        #Query queryPurchLine(boolean _update = false)
        #{
        #    DictRelation    dictRelation;
        #    DictField       externdictField;
        #    DictField       dictField;
        #    Query           query = new Query();
        #    Counter         c;
        #
        #    query.addDataSource(tableNum(PurchLine));
        #
        #    dictRelation = new DictRelation(tableNum(PurchLine));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c=1; c <= dictRelation.lines(); c++)
        #        {
        #            externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
        #            dictField   = new DictField(tableNum(PurchLine),dictRelation.lineTableValue(c));
        #            query.dataSourceTable(tableNum(PurchLine)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
        #        }
        #    }
        #
        #    query.dataSourceTable(tableNum(PurchLine)).addRange(fieldNum(PurchLine,IsDeleted)).value(queryValue(NoYes::No));
        #
        #    query.dataSourceTable(tableNum(PurchLine)).update(_update);
        #
        #    return query;
        #}
        #
      ENDSOURCE
      SOURCE #recalculateTaxForChangedLineOnly
        #/// <summary>
        #/// Determines whether tax should be recalculated for changed lines only or for all lines.
        #/// </summary>
        #/// <returns>
        #/// true if tax should be recalculated for changed lines only; otherwise, false.
        #/// </returns>
        #public boolean recalculateTaxForChangedLineOnly()
        #{
        #    // If Product receipt or invoicing posting has started on the PO, then don't recalculate for all lines
        #    return this.DocumentStatus == DocumentStatus::PackingSlip || this.DocumentStatus == DocumentStatus::Invoice;
        #}
      ENDSOURCE
      SOURCE #referenceSalesTable
        #/// <summary>
        #///    Returns the reference sales table record.
        #/// </summary>
        #/// <returns>
        #///    The reference sales table record.
        #/// </returns>
        #/// <remarks>
        #///    Used for finding the reference sales table in the same legal entity in 3-leged intercompany scenarios.
        #/// </remarks>
        #public SalesTable referenceSalesTable()
        #{
        #    InterCompanyPurchSalesReference     interCompanyPurchSalesReference;
        #    SalesTable                          referenceSalesTable;
        #
        #    select firstonly referenceSalesTable
        #        exists join interCompanyPurchSalesReference
        #        where interCompanyPurchSalesReference.SalesId == referenceSalesTable.SalesId
        #        &&    interCompanyPurchSalesReference.PurchId == this.PurchId;
        #
        #    return referenceSalesTable;
        #}
      ENDSOURCE
      SOURCE #removeInvoiceRefRecId_BR
        #/// <summary>
        #/// removes the reference to cancelled fiscal document for Brazil Localization.
        #/// </summary>
        #public void removeInvoiceRefRecId_BR()
        #{
        #    PurchTable_BR purchTable_BR;
        #
        #    ttsBegin;
        #
        #    purchTable_BR = this.purchTable_BR();
        #    purchTable_BR.InvoiceRefRecId_BR = 0;
        #    purchTable_BR.update();
        #
        #    ttsCommit;
        #}
      ENDSOURCE
      SOURCE #removePackages
        #[SysObsoleteAttribute('Unused method removed in AX 2012 R2', true)]
        #void removePackages()
        #{
        #    throw error(Error::wrongUseOfFunction(funcName()));
        #}
      ENDSOURCE
      SOURCE #resetLinePolicies
        #/// <summary>
        #/// Releases the price discount policies on lines that are related to the current record.
        #/// </summary>
        #public void resetLinePolicies()
        #{
        #    PurchLine purchLine;
        #
        #    update_recordset purchLine
        #        setting SystemEntrySource       = PriceDiscSystemSource::None,
        #                SystemEntryChangePolicy = 0,
        #                ManualEntryChangepolicy = 0
        #    where purchLine.PurchId == this.PurchId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromInventLocationId
        #public boolean setAddressFromInventLocationId(InventLocationId _inventLocationId)
        #{
        #    LogisticsLocationRecId          inventLocationAddress;
        #    InventLocation                  inventLocation;
        #    boolean                         addressSet;
        #
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #    {//Never set the address from the location if the purchase order is of type return.
        #        return false;
        #    }
        #
        #    if (_inventLocationId)
        #    {
        #        inventLocation          = InventLocation::find(_inventLocationId);
        #        inventLocationAddress   = LogisticsLocationDefault::findSimpleDefault(inventLocation,
        #                                    LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #
        #        if (inventLocationAddress)
        #        {
        #            this.setLocation(inventLocationAddress, inventLocation);
        #            addressSet = true;
        #        }
        #
        #        else if(inventLocation.VendAccount)
        #        {
        #            this.setAddressFromVendTable(VendTable::find(inventLocation.VendAccount));
        #            addressSet = true;
        #        }
        #    }
        #
        #    if(!addressSet)
        #    {
        #        addressSet = this.setAddressFromInventSiteId(this.InventSiteId);
        #    }
        #
        #    return addressSet;
        #}
      ENDSOURCE
      SOURCE #setAddressFromInventSiteId
        #public boolean setAddressFromInventSiteId(InventSiteId _inventSiteId)
        #{
        #    LogisticsLocationRecId      location;
        #    InventSite                  inventSite;
        #    boolean                     addressSet = false;
        #    CompanyInfo                 companyInfo;
        #    LogisticsLocationRole       role = LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery);
        #
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #    {//Never set the address from the site if the purchase order is of type return order.
        #        return false;
        #    }
        #
        #    if (this.isDropShipment())
        #    {
        #        addressSet = true;
        #    }
        #
        #    if (!addressSet && _inventSiteId
        #    && !this.InterCompanyDirectDelivery)
        #    {
        #        inventSite = InventSite::find(_inventSiteId);
        #        location   = LogisticsLocationDefault::findSimpleDefault(InventSite::find(_inventSiteId), role).RecId;
        #
        #        if (location)
        #        {
        #            this.setLocation(location, inventSite);
        #            addressSet = true;
        #        }
        #    }
        #
        #    if(!addressSet)
        #    {
        #        companyInfo = CompanyInfo::find();
        #
        #        location = LogisticsLocationDefault::findSimpleDefault(companyInfo,role).RecId;
        #        if (location)
        #        {
        #            this.setLocation(location, companyInfo);
        #            addressSet = true;
        #        }
        #    }
        #
        #    return addressSet;
        #}
      ENDSOURCE
      SOURCE #setAddressFromVendTable
        #void  setAddressFromVendTable(VendTable _vendTable)
        #{
        #    LogisticsLocation location;
        #    LogisticsPostalAddress postalAddress = DirParty::primaryPostalAddress(_vendTable.Party);
        #
        #    this.DeliveryName = _vendTable.name();
        #    if (postalAddress)
        #    {
        #        this.DeliveryPostalAddress  = postalAddress.RecId;
        #        location = LogisticsLocation::find(postalAddress.Location);
        #        if (location.Description)
        #        {
        #            this.DeliveryName = location.Description;
        #        }
        #    }
        #    else
        #    {
        #        this.DeliveryPostalAddress = 0;
        #    }
        #    this.AddressRefRecId            = _vendTable.RecId;
        #    this.AddressRefTableId          = _vendTable.TableId;
        #}
      ENDSOURCE
      SOURCE #setAgreement_RU
        #/// <summary>
        #///     Initializes purchase order from the agreement.
        #/// </summary>
        #public void setAgreement_RU()
        #{
        #    PurchAgreementHeaderExt_RU  purchAgreementHeaderExt;
        #    PurchAgreementHeader        purchAgreementHeader;
        #    PurchTable_RU               purchTable_RU = this.purchTable_RU();
        #
        #    if (purchTable_RU.AgreementHeaderExt_RU)
        #    {
        #        purchAgreementHeaderExt = PurchAgreementHeaderExt_RU::find(purchTable_RU.AgreementHeaderExt_RU);
        #
        #        purchAgreementHeader = PurchAgreementHeader::find(purchAgreementHeaderExt.AgreementHeader);
        #
        #        if (Box::yesNo("@SYS311926",DialogButton::Yes) == DialogButton::Yes)
        #        {
        #            // Transfer default settings from Agreement to PurchTable buffer...
        #            this.initFromPurchAgreementHeader(purchAgreementHeader);
        #        }
        #        else
        #        {
        #            this.DefaultDimension = this.copyDimension(purchAgreementHeader.DefaultDimension);
        #        }
        #    }
        #    else
        #    {
        #        this.MatchingAgreement = 0;
        #        this.DefaultDimension = AgreementHeaderExt_RU::clearAgreementDimension(this.DefaultDimension);
        #        this.initFromVendTable();
        #        this.initInvoiceAccount();
        #    }
        #}
      ENDSOURCE
      SOURCE #setDefaultDeliveryAddress
        #/// <summary>
        #/// Sets the default delivery address for the <c>purchTable</c> record.
        #/// </summary>
        #public void setDefaultDeliveryAddress()
        #{
        #    this.type().setDefaultDeliveryAddress();
        #}
      ENDSOURCE
      SOURCE #setDeliveryName
        #/// <summary>
        #///     Sets the delivery name field based on the specified logistic location.
        #/// </summary>
        #public void setDeliveryName()
        #{
        #    this.TradePostalAddress::setDeliveryName();
        #}
      ENDSOURCE
      SOURCE #setEndDiscFromVendInvoiceJour
        #/// <summary>
        #///     On the PurchTable the DiscPercent is a percentage while on the VendInvoiceJour the EndDisc is an amount.
        #///     The algorithm to calculate the percentage based on enddisc and salesbalance from the vendinvoicejour and subsequently compare the result to that of the original PurchTable,
        #///     if the difference is less than 0.1% then the original Purchtable's discpercent is utilized in order to mitigate from potential rounding issues.
        #///     If the original PurchTable is not available the calculated and rounded amount is used.
        #/// </summary>
        #/// <param name="_vendInvoiceJour">
        #///    The <c>VendInvoiceJour</c> table buffer that is to calculate the <c>PurchTable.DiscPercent</c> field from.
        #/// </param>
        #void setEndDiscFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
        #{
        #    PurchTable  purchTableLocal;
        #
        #    if (_vendInvoiceJour.EndDisc != 0 && _vendInvoiceJour.SalesBalance != 0)
        #    {
        #        this.DiscPercent = round(_vendInvoiceJour.EndDisc * 100 / _vendInvoiceJour.SalesBalance, 0.01);
        #        purchTableLocal = _vendInvoiceJour.purchTable();
        #        if (purchTableLocal && abs(purchTableLocal.DiscPercent - this.DiscPercent) < 0.1)
        #        {
        #            this.DiscPercent = purchTableLocal.DiscPercent;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setInventProfileId_RU
        #void setInventProfileId_RU()
        #{
        #    PurchTable_RU       purchTable_RU = this.purchTable_RU();
        #
        #    if (purchTable_RU.InventProfileType_RU == InventProfileType_RU::NotSpecified ||
        #        purchTable_RU.InventProfileType_RU != InventProfile_RU::find(purchTable_RU.InventProfileId_RU).InventProfileType)
        #    {
        #        purchTable_RU.InventProfileId_RU = '';
        #        this.packPurchTable_RU(purchTable_RU);
        #    }
        #}
      ENDSOURCE
      SOURCE #setInventSiteId
        #public void setInventSiteId(InventSiteId _inventSiteId)
        #{
        #    this.InventSiteId = _inventSiteId;
        #    this.modifiedInventSiteFromParent();
        #    this.setAddressFromInventSiteId(_inventSiteId);
        #}
      ENDSOURCE
      SOURCE #setListCode
        #/// <summary>
        #///     Sets the list code based on the location of the payer and vendor.
        #/// </summary>
        #void setListCode()
        #{
        #    this.ListCode = EUSalesList::resolveListCode(this.vendTable_OrderAccount().postalAddress().CountryRegionId);
        #}
        #
      ENDSOURCE
      SOURCE #setLocation
        #/// <summary>
        #///    Sets delivery address information and related information.
        #/// </summary>
        #/// <param name="_locationRecId">
        #///    The record ID of the logistics location.
        #/// </param>
        #/// <param name="_source">
        #///    The record that has an associated address.
        #/// </param>
        #/// <remarks>
        #///    If <c>_source</c> parameter is not specified, the address related information will be set based on the logistics location.
        #/// </remarks>
        #public void  setLocation(LogisticsLocationRecId  _locationRecId, Common _source = null)
        #{
        #    LogisticsLocation location = LogisticsLocation::find(_locationRecId);
        #
        #    this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
        #
        #    if (_source)
        #    {
        #        LogisticsLocationSelectForm_PurchTable::construct(this).copyAddressToCaller(_source,
        #            this.DeliveryPostalAddress);
        #    }
        #    else
        #    {
        #        LogisticsLocationSelectForm_PurchTable::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #            this.DeliveryPostalAddress);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscChangePolicy
        #/// <summary>
        #/// Sets the price disc change policy.
        #/// </summary>
        #/// <param name="_policySource">
        #/// A <c>PriceDiscSystemSource</c> enumeration value that indicates the source of the policy.
        #/// </param>
        #/// <param name="_fieldId">
        #/// The ID of the field.
        #/// </param>
        #client server void setPriceDiscChangePolicy(PriceDiscSystemSource _policySource, RefFieldId _fieldId = 0)
        #{
        #    if (!this.isInterCompanyOrder())
        #    {
        #        this.PriceDiscResultFields::createPriceDiscChangePolicy(ModuleSalesPurch::Purch, _policySource, _fieldId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscChangePolicyMultiLine
        #/// <summary>
        #/// Calls the <c>setPriceDiscChangePolicy</c> method with fixed price discount change parameters for
        #/// the multiline discount fields.
        #/// </summary>
        #public void setPriceDiscChangePolicyMultiLine()
        #{
        #    this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, fieldNum(PurchTable, MultiLineDisc));
        #}
      ENDSOURCE
      SOURCE #setTaxGroup
        #void setTaxGroup(TaxGroup _taxGroup)
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.setTaxGroup(_taxGroup);
        #}
        #
      ENDSOURCE
      SOURCE #setupChangeManagmentFieldsForVendor
        #/// <summary>
        #/// Set change management specific fields depending on the vendor or company settings.
        #/// </summary>
        #/// <param name="_vendTable">
        #/// The <c>VendTable</c> record.
        #/// </param>
        #public void setupChangeManagmentFieldsForVendor(VendTable _vendTable)
        #{
        #    if (_vendTable.canAutoCreatePurchOrder())
        #    {
        #        this.ChangeRequestRequired = NoYes::No;
        #        this.DocumentState         = VersioningDocumentState::Approved;
        #    }
        #    else
        #    {
        #        this.ChangeRequestRequired = NoYes::Yes;
        #        this.DocumentState         = VersioningDocumentState::Draft;
        #    }
        #}
      ENDSOURCE
      SOURCE #skipAddressFields
        #/// <summary>
        #/// Specifies whether address fields should be skipped.
        #/// </summary>
        #/// <returns>
        #/// true if address field should be skipped; otherwise, false.
        #/// </returns>
        #boolean skipAddressFields()
        #{
        #    return ((this.InterCompanyCompanyId && this.InterCompanyOriginalSalesId && this.InterCompanyDirectDelivery)
        #          || this.isDropShipment());
        #}
      ENDSOURCE
      SOURCE #submitToWorkflow
        #/// <summary>
        #/// Activates purchase order workflow.
        #/// </summary>
        #/// <param name="_workflowTemplateName">
        #/// The AOT name of the workflow template the purchase order will be submittet to.
        #/// </param>
        #/// <param name="_workflowComment">
        #/// The reason for submitting.
        #/// </param>
        #/// <param name="_activatingFromWeb">
        #/// A Boolean value that indicates whether the workflow framework if the submission is coming from the
        #/// enterprise portal.
        #/// </param>
        #/// <remarks>
        #/// This method starts the workflow configuration by calling the <c>ActivateWorkflowTemplate</c> method
        #/// on the <c>Workflow</c> class that has information about the purchase order record.
        #/// </remarks>
        #public void  submitToWorkflow(WorkflowTypeName	     _workflowTemplateName,
        #                              WorkflowComment       _workflowComment,
        #                              boolean               _activatingFromWeb = false)
        #{
        #    ttsbegin;
        #
        #    Workflow::activateFromWorkflowType(_workflowTemplateName,
        #                                           this.RecId,
        #                                           _workflowComment,
        #                                           _activatingFromWeb,
        #                                           curUserId());
        #
        #    VersioningPurchaseOrder::newPurchaseOrder(this).submitChangeRequest();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #taxModuleType
        #TaxModuleType taxModuleType()
        #{
        #    return TaxModuleType::Purch;
        #}
        #
      ENDSOURCE
      SOURCE #templateName
        #/// <summary>
        #/// Sets or gets the information of the <c>DistributionTemplate</c> record for the creation of
        #/// distributions.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether to update.
        #/// </param>
        #/// <param name="_templateName">
        #/// The name of the distribution template to be used to create distributions.
        #/// </param>
        #/// <returns>
        #/// The name of the distribution template.
        #/// </returns>
        #// BP Deviation Documented
        #public edit TemplateName templateName(boolean _set, TemplateName _templateName)
        #{
        #    TemplateName                      templateName = "";
        #    AccountingDistributionTemplate    accountingDistributionTemplate;
        #
        #    if (_set)
        #    {
        #        if (_templateName == "")
        #        {
        #            this.AccountingDistributionTemplate = 0;
        #        }
        #        else
        #        {
        #            accountingDistributionTemplate = AccountingDistributionTemplate::findByName(_templateName);
        #
        #            if (accountingDistributionTemplate)
        #            {
        #                this.AccountingDistributionTemplate = accountingDistributionTemplate.RecId;
        #                templateName = accountingDistributionTemplate.Name;
        #            }
        #            else
        #            {
        #                this.AccountingDistributionTemplate = 0;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (this.AccountingDistributionTemplate != 0)
        #        {
        #            templateName = AccountingDistributionTemplate::find(this.AccountingDistributionTemplate).Name;
        #        }
        #    }
        #
        #    return templateName;
        #}
      ENDSOURCE
      SOURCE #tmsDisplayRoute
        #/// <summary>
        #/// Method used to display the route code tied to a purchase order.
        #/// </summary>
        #/// <returns>
        #/// The route code tied to a purchase order.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public server display TMSRouteCode tmsDisplayRoute()
        #{
        #    PurchLine                   purchLine;
        #    TMSRouteSegmentLoadLine     segmentLine;
        #    TMSRouteCode                ret;
        #    int                         counter = 0;
        #
        #    while select RouteCode from segmentLine
        #        group by RouteCode
        #        join InventTransId, PurchId from purchLine
        #            where purchLine.InventTransId   == segmentLine.InventTransId &&
        #                  purchLine.PurchId         == this.PurchId
        #    {
        #        ret = segmentLine.RouteCode;
        #        ++counter;
        #
        #        if (counter > 1)
        #        {
        #            break;
        #        }
        #    }
        #
        #    switch (counter)
        #    {
        #        case 0:
        #            ret = "";
        #            break;
        #        case 1:
        #            break;
        #        default:
        #            ret = "@SYS78137";
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #totalWeightAndVolume
        #/// <summary>
        #/// Calculates total weight and volume aggregated over all purchase order lines.
        #/// </summary>
        #/// <returns>
        #/// Container with two elements: total wieght and total volume.
        #/// </returns>
        #public container totalWeightAndVolume()
        #{
        #    Volume      totalVolume;
        #    Weight      totalWeight;
        #    PurchLine   purchLine;
        #
        #    while select ItemId, QtyOrdered from purchLine
        #        where purchLine.PurchId == this.PurchId
        #    {
        #        totalWeight += purchLine.tmsWeight();
        #        totalVolume += purchLine.tmsVolume();
        #    }
        #
        #    return [totalWeight, totalVolume];
        #}
      ENDSOURCE
      SOURCE #transferInvoiceAccount
        #void  transferInvoiceAccount()
        #{
        #    if (PurchParameters::find().PromptTransfer)
        #    {
        #        if (Box::yesNo("@SYS19435" + '\n\n' + this.InvoiceAccount, DialogButton::Yes) == DialogButton::Yes)
        #            this.initInvoiceAccount();
        #    }
        #    else
        #        this.initInvoiceAccount();
        #}
      ENDSOURCE
      SOURCE #transferOrderAccount
        #/// <summary>
        #/// Method for transfering order account related information based on vendor data.
        #/// </summary>
        #client server
        #public void  transferOrderAccount()
        #{
        #    boolean initFromVendTable = true;
        #
        #    if (this.OrderAccount)
        #    {
        #        if (PurchParameters::find().PromptTransfer &&
        #            Box::yesNo("@SYS22099"+'\n\n'+this.vendTable_OrderAccount().name(),DialogButton::Yes) != DialogButton::Yes)
        #        {
        #                initFromVendTable = false;
        #        }
        #
        #        if (PurchTable::hasExensionTableEnabled())
        #        {
        #            this.SysExtensionSerializerMap::packAll();
        #        }
        #
        #        this.transferOrderAccount_server(initFromVendTable);
        #
        #        if (PurchTable::hasExensionTableEnabled())
        #        {
        #            this.SysExtensionSerializerMap::unpackAll();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #transferOrderAccount_server
        #/// <summary>
        #/// Method for initializing order account related information based on vendor data.
        #/// </summary>
        #/// <param name="_initFromVendTable">
        #/// true if the purchase order should be initialized based on vendor data; false if only mandatory order fields should be set.
        #/// </param>
        #server void transferOrderAccount_server(boolean _initFromVendTable)
        #{
        #    if(_initFromVendTable)
        #    {
        #        this.initFromVendTable();
        #
        #        if (this.OrderAccount != this.InvoiceAccount)
        #        {
        #            this.transferInvoiceAccount();
        #        }
        #    }
        #    else
        #    {
        #        this.initFromVendTableMandatoryFields();
        #        if (!this.RecId || !this.isDropShipment())
        #        {
        #            this.setDefaultDeliveryAddress();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #transferToOneTimeVendor
        #/// <summary>
        #/// Updates the related one time vendor entity based on the purchase order.
        #/// </summary>
        #server void transferToOneTimeVendor()
        #{
        #    VendorEntity        vendorEntity;
        #    if (this.OneTimeVendor)
        #    {
        #        ttsbegin;
        #        vendorEntity = DirParty::constructFromCommon(this.vendTable_OrderAccount(),
        #                                                     DateTimeUtil::getSystemDateTime(),
        #                                                     DirPartyType::None,
        #                                                     true,
        #                                                     false);
        #        vendorEntity.initFromPurchTable(this);
        #        vendorEntity.update();
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #type
        #PurchTableType type()
        #{
        #    return PurchTableType::construct(this);
        #}
      ENDSOURCE
      SOURCE #unlinkAgreement
        #server private void unlinkAgreement(boolean _unlinkLines      = false,
        #                                    boolean _recalculatePrice = false
        #                                    ,boolean _doUpdatePurchTable = true
        #                                    ,boolean _doUpdatePurchLine  = true
        #                                    )
        #{
        #    AgreementReleaseHeaderMatch agreementReleaseHeaderMatch;
        #    PurchLine                   purchLine;
        #    boolean                     restorePriceDiscChagnePolicy = true;
        #    // <GEERU>
        #    PurchTable_RU               purchTable_RU;
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    if (this.MatchingAgreement)
        #    {
        #        ttsbegin;
        #
        #        if (_unlinkLines)
        #        {
        #            while select forupdate purchLine
        #                    where purchLine.PurchId == this.PurchId
        #            {
        #                if (purchLine.MatchingAgreementLine)
        #                {
        #                    if (_recalculatePrice)
        #                    {
        #                        PurchLine::modifyPurchQty(purchLine,purchLine.inventDim());
        #                        restorePriceDiscChagnePolicy = false;
        #                    }
        #                    if (restorePriceDiscChagnePolicy)
        #                    {
        #                        // Set Price Discount Change Policy originated by PriceDiscSystemSource::Agreement
        #                        purchLine.setPriceDiscChangePolicy(PriceDiscSystemSource::Agreement);
        #                    }
        #
        #                    purchLine.unLinkAgreementLine(
        #                                                  _doUpdatePurchLine
        #                                                  );
        #                }
        #            }
        #        }
        #
        #        delete_from agreementReleaseHeaderMatch
        #        where agreementReleaseHeaderMatch.PurchTablePurchId     == this.PurchId
        #           && agreementReleaseHeaderMatch.ReferenceRelationType == tableNum(PurchTable)
        #           && agreementReleaseHeaderMatch.PurchTableDataAreaId  == this.DataAreaId;
        #
        #        this.MatchingAgreement = 0;
        #
        #        // <GEERU>
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #        {
        #            purchTable_RU = this.purchTable_RU();
        #            purchTable_RU.AgreementHeaderExt_RU = 0;
        #            this.packPurchTable_RU(purchTable_RU);
        #
        #            this.DefaultDimension = AgreementHeaderExt_RU::clearAgreementDimension(this.DefaultDimension);
        #        }
        #        // </GEERU>
        #
        #        if (_doUpdatePurchTable)
        #        {
        #            this.doUpdate();
        #        }
        #
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #unlinkAgreementPrompt
        #public boolean unlinkAgreementPrompt(
        #                                     boolean _doUpdatePurchTable = true
        #                                     )
        #{
        #    Dialog       dialog;
        #    DialogField  dialogField;
        #    boolean      linesExist;
        #
        #    if (this.MatchingAgreement)
        #    {
        #        linesExist = PurchLine::exist(this.PurchId);
        #        dialog = new Dialog();
        #        dialog.addText("@SYS306906");
        #        if (linesExist)
        #        {
        #            dialogField = dialog.addField(extendedTypeStr(NoYesId), "@SYS23228", "@SYS305716");
        #            dialogField.value(NoYes::Yes);
        #        }
        #        if (!dialog.run())
        #        {
        #            return false;
        #        }
        #
        #        if (linesExist)
        #        {
        #            this.unlinkAgreement(linesExist, dialogField.value()
        #                                 , _doUpdatePurchTable
        #                                 );
        #        }
        #        else
        #        {
        #            this.unlinkAgreement(linesExist, false
        #                                 , _doUpdatePurchTable
        #                                 );
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #update
        #public void  update(boolean _updateDistributions = false)
        #{
        #    PurchTableType purchTableType;
        #
        #    PurchTotalsSummaryController    purchTotalsSummaryController;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        purchTotalsSummaryController = PurchTotalsSummaryController::construct(this.PurchId);
        #        purchTotalsSummaryController.checkFields(this);
        #    }
        #
        #    purchTableType = this.type();
        #    purchTableType.update(_updateDistributions);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        purchTotalsSummaryController.onUpdate(this);
        #    }
        #}
      ENDSOURCE
      SOURCE #updateBackStatus
        #void  updateBackStatus()
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.updateBackStatus();
        #}
      ENDSOURCE
      SOURCE #updateDocumentStatus
        #void  updateDocumentStatus(DocumentStatus  documentStatus)
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.updateDocumentStatus(documentStatus);
        #}
      ENDSOURCE
      SOURCE #updateFinalDisc
        # server void  updateFinalDisc()
        #{
        #    PurchLine purchLine;
        #
        #    // In case the document state differs from confirmed: Final discount should be updated to get the totals right.
        #    // In case the document state is confirmed: Final discount is already updated and shouldn't be called again, as it'll reset the document state.
        #    if (this.DocumentState != VersioningDocumentState::Confirmed
        #        && !this.isInvoiceMatched()
        #        && this.icCheckUpdateHeaderDiscounts())
        #    {
        #        this.PriceDiscHeading::updateFinalDisc(purchLine);
        #    }
        #}
      ENDSOURCE
      SOURCE #updateFromPurchLines
        #/// <summary>
        #/// Sets values on the purchase order that are depending on purchase order line values.
        #/// </summary>
        #/// <param name="_updateDistributions">
        #/// A Boolean value that specifies whether the <c>AccountingDistribution</c> table record that is
        #/// associated with the <c>PurchTable</c> should be updated.
        #/// </param>
        #public void updateFromPurchLines(boolean _updateDistributions = false)
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.updateFromPurchLines(_updateDistributions);
        #}
      ENDSOURCE
      SOURCE #updateFromPurchReqLineMap
        #/// <summary>
        #///  Update <c>PurchTable</c> from <c>PurchLine</c> or <c>PurchReqLine</c>.
        #/// </summary>
        #/// <param name="_listEnumerator">
        #/// A list enumerator contains recrods from <c>PurchLine</c> or <c>PurchReqLine</c>.
        #/// </param>
        #public void updateFromPurchReqLineMap(ListEnumerator _listEnumerator)
        #{
        #    InventSiteId                    siteId;
        #    InventLocationId                locationId;
        #    LogisticsPostalAddressRecId     addressRecId;
        #    Addressing                      deliveryAddress;
        #    AddressZipCodeId                deliveryZipCode;
        #    AddressCountyId                 deliveryCounty;
        #    AddressCountryRegionId          deliveryCountryRegionId;
        #    AddressStateId                  deliveryStateId;
        #    VendName                        deliveryName;
        #    AddressCity                     deliveryCity;
        #    AddressStreet                   deliveryStreet;
        #    LogisticsPostalAddress          postalAddress;
        #    PurchReqAttention               attention;
        #    DimensionDefault                dimension;
        #    RecId                           requesterRecId;
        #    InventDim                       inventDim;
        #    PurchReqLineMap                 purchReqLineMap;
        #
        #    boolean                         first           = true;
        #    boolean                         setSiteId       = true;
        #    boolean                         setLocationId   = true;
        #    boolean                         setAddress      = true;
        #    boolean                         setDim          = true;
        #
        #    // Only related to purchReqLine
        #    boolean                         setAtt          = true;
        #    boolean                         setReq          = true;
        #    ProdId                          projId;
        #
        #    while (_listEnumerator.moveNext())
        #    {
        #        purchReqLineMap = _listEnumerator.current();
        #        postalAddress   = LogisticsPostalAddress::findRecId(purchReqLineMap.DeliveryPostalAddress);
        #        inventDim       = InventDim::find(purchReqLineMap.InventDimId);
        #
        #        if (first)
        #        {
        #            first                   = false;
        #            siteId                  = inventDim.InventSiteId;
        #            locationId              = inventDim.InventLocationId;
        #            addressRecId            = purchReqLineMap.DeliveryPostalAddress;
        #            deliveryAddress         = postalAddress.Address;
        #            deliveryZipCode         = postalAddress.ZipCode;
        #            deliveryCounty          = postalAddress.County;
        #            deliveryCountryRegionId = postalAddress.CountryRegionId;
        #            deliveryStateId         = postalAddress.State;
        #            deliveryName            = purchReqLineMap.DeliveryName;
        #            deliveryCity            = postalAddress.City;
        #            deliveryStreet          = postalAddress.Street;
        #            dimension               = purchReqLineMap.DefaultDimension;
        #
        #            if (purchReqLineMap.TableId == tableNum(PurchReqLine))
        #            {
        #                attention           = purchReqLineMap.Attention;
        #                requesterRecId      = purchReqLineMap.Requisitioner;
        #                projId              = purchReqLineMap.ProjId;
        #            }
        #        }
        #        else
        #        {
        #            setSiteId       = setSiteId     && (siteId          == inventDim.InventSiteId);
        #            setLocationId   = setLocationId && (locationId      == inventDim.InventLocationId);
        #            setDim          = setDim        && (dimension       == purchReqLineMap.DefaultDimension);
        #            setAddress      = setAddress
        #                           && deliveryAddress         == postalAddress.Address
        #                           && deliveryZipCode         == postalAddress.ZipCode
        #                           && deliveryCounty          == postalAddress.County
        #                           && deliveryCountryRegionId == postalAddress.CountryRegionId
        #                           && deliveryStateId         == postalAddress.State
        #                           && deliveryName            == purchReqLineMap.DeliveryName
        #                           && deliveryCity            == postalAddress.City
        #                           && deliveryStreet          == postalAddress.Street
        #                           && addressRecId            == purchReqLineMap.DeliveryPostalAddress;
        #
        #            if (purchReqLineMap.TableId == tableNum(PurchReqLine))
        #            {
        #                setReq = setReq && (requesterRecId  == purchReqLineMap.Requisitioner);
        #                setAtt = setAtt && (attention       == purchReqLineMap.Attention);
        #            }
        #        }
        #    }
        #
        #    this.InventSiteId          = setSiteId     ? siteId : '';
        #    this.InventLocationId      = setLocationId ? locationId : '';
        #    this.DeliveryPostalAddress = setAddress    ? addressRecId : 0;
        #    this.DeliveryName          = setAddress    ? deliveryName : '';
        #    if (setDim)
        #    {
        #        this.DefaultDimension = dimension;
        #    }
        #
        #    if (purchReqLineMap.TableId == tableNum(PurchReqLine))
        #    {
        #        this.ReqAttention   = setAtt ? attention : '';
        #        this.Requester      = setReq ? requesterRecId : 0;
        #        this.ProjId         = projId;
        #        this.CurrencyCode   = purchReqLineMap.CurrencyCode;
        #        this.AccountingDate = purchReqLineMap.TransDate;
        #    }
        #}
      ENDSOURCE
      SOURCE #updateIsEncumbranceRequired
        #/// <summary>
        #/// This method sets the <c>IsEncumbranceProcessEnabled</c> field on the current <c>PurchTable</c>
        #/// record to a value that matches the <c>IsEncumbranceProcessEnabled</c> parameter in the
        #/// <c>LedgerParameters</c> table.
        #/// </summary>
        #public void updateIsEncumbranceRequired()
        #{
        #    LedgerParameters    ledgerParameters = LedgerParameters::find();
        #
        #    if (this.IsEncumbranceRequired == UnknownNoYes::Unknown)
        #    {
        #        if (ledgerParameters.IsEncumbranceProcessEnabled == NoYes::Yes)
        #        {
        #            this.IsEncumbranceRequired = UnknownNoYes::Yes;
        #        }
        #        else
        #        {
        #            this.IsEncumbranceRequired = UnknownNoYes::No;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #updateLedgerCov
        #public void updateLedgerCov()
        #{
        #    PurchTableType purchTableType;
        #
        #    if (!this.isFinalized())
        #    {
        #        // Exclude finalized purchase orders from the cash flow process.
        #        purchTableType = this.type();
        #        purchTableType.updateLedgerCov();
        #    }
        #}
      ENDSOURCE
      SOURCE #updateLineFieldsBasedOnHeaderChanges_BR
        #/// <summary>
        #/// It is responsible for updating the PurchLine when fiscal information
        #/// on header is changed
        #/// </summary>
        #// <GBR>
        #public void updateLineFieldsBasedOnHeaderChanges_BR()
        #{
        #    PurchLine           purchLine;
        #    CFOPValidation_BR   cfopValidation;
        #
        #    ttsbegin;
        #
        #    while select forupdate purchLine
        #            where purchLine.PurchId == this.PurchId
        #    {
        #        cfopValidation       = CFOPValidation_BR::construct(this);
        #        purchLine.cfopTable_BR    = cfopValidation.getDefaultCFOP();
        #
        #        if (purchLine.cfopTable_BR != purchLine.orig().cfopTable_BR)
        #        {
        #            purchLine.setTaxGroupAndTaxItemGroupFields_BR();
        #            purchLine.update();
        #            purchLine.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #        }
        #    }
        #
        #    ttscommit;
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #updateMultiLineDisc
        #server boolean  updateMultiLineDisc()
        #{
        #    PurchLine purchLine;
        #    boolean   ret;
        #
        #    if (!this.isInvoiceMatched())
        #    {
        #        ret = this.PriceDiscHeading::updateMultiLineDisc(purchLine);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #updatePurchaseType
        #void  updatePurchaseType()
        #{
        #    PurchTableType purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.updatePurchaseType();
        #}
      ENDSOURCE
      SOURCE #updatePurchLineDelete
        #//// <summary>
        #///     Makes <c>PurchLine</c> table deletion related updates to <c>PurchTable</c>.
        #/// </summary>
        #public void updatePurchLineDelete()
        #{
        #    PurchTableType  purchTableType;
        #
        #    purchTableType = this.type();
        #    purchTableType.updatePurchLineDelete();
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean  validateDelete()
        #{
        #    boolean         ok = true;
        #    PurchTableType  purchTableType;
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        purchTableType = this.type();
        #        ok = purchTableType.validateDelete();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateField
        #boolean  validateField(FieldId  _fieldId)
        #{
        #    boolean         ok = true;
        #
        #    ok = super(_fieldId);
        #
        #    ok = ok && this.validateFieldServer(_fieldId);
        #
        #    if (ok)
        #    {
        #        switch (_fieldId)
        #        {
        #            case fieldNum(PurchTable, PurchaseType) :
        #            case fieldNum(PurchTable, OrderAccount) :
        #                if (#PdsApprovedVendorListEnabled)
        #                {
        #                    ok = this.type().pdsApprovedVendorListCheck().validateCheck();
        #                }
        #                break;
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateFieldServer
        #/// <summary>
        #/// Validates a changed field on the server side.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that was changed.
        #/// </param>
        #/// <returns>
        #/// true if the validation did not fail; otherwise, false.
        #/// </returns>
        #server boolean validateFieldServer(FieldId  _fieldId)
        #{
        #    boolean         ok;
        #    PurchTableType  purchTableType;
        #
        #    purchTableType = this.type();
        #    ok = purchTableType.validateField(_fieldId);
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #public boolean  validateWrite()
        #{
        #    boolean         ok = true;
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        setPrefix(strFmt("@SYS25974", this.PurchId));
        #
        #        ok = this.validateWriteServer();
        #    }
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #validateWriteServer
        #server public boolean  validateWriteServer()
        #{
        #    boolean         ok;
        #    PurchTableType  purchTableType;
        #    #ISOCountryRegionCodes
        #
        #    purchTableType = this.type();
        #    ok = purchTableType.validateWrite();
        #
        #    if (ok && this.InclTax && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoHU]))
        #    {
        #        ok = this.SalesPurchTable::validateExcludeTaxFromInvoice();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #vendorAddress
        #//BP Deviation documented
        #display Addressing vendorAddress()
        #{
        #    return this.vendTable_OrderAccount().postalAddress().Address;
        #}
        #
      ENDSOURCE
      SOURCE #vendorEmail
        #//BP Deviation documented
        #display Email vendorEmail()
        #{
        #    return this.vendTable_OrderAccount().email();
        #}
      ENDSOURCE
      SOURCE #vendorName
        #//BP Deviation documented
        #display VendName vendorName()
        #{
        #    return this.vendTable_OrderAccount().name();
        #}
        #
      ENDSOURCE
      SOURCE #vendorPhone
        #//BP Deviation documented
        #display VendPhone vendorPhone()
        #{
        #    return this.vendTable_OrderAccount().phone();
        #}
      ENDSOURCE
      SOURCE #vendTable_InvoiceAccount
        #VendTable vendTable_InvoiceAccount(boolean update = false)
        #{
        #    return VendTable::find(this.InvoiceAccount, update);
        #}
      ENDSOURCE
      SOURCE #vendTable_OrderAccount
        #VendTable vendTable_OrderAccount(boolean update = false)
        #{
        #    return VendTable::find(this.OrderAccount, update);
        #}
      ENDSOURCE
      SOURCE #workflowInstructions
        #/// <summary>
        #/// Retrieves the lates workflow step instructions for this record.
        #/// </summary>
        #/// <returns>
        #/// Returns the instructions for the lates work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowStepInstruction  workflowInstructions()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #    WorkflowStepInstruction     stepInstruction;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime, Description from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : stepInstruction = '';
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        stepInstruction = workflowWorkItemTable.Description;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                            {
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                                stepInstruction = workflowWorkItemTable.Description;
        #                            }
        #                        }
        #        }
        #    }
        #
        #    return stepInstruction;
        #}
      ENDSOURCE
      SOURCE #workflowLastComment
        #/// <summary>
        #/// Retrieves the last workflow comment for this record.
        #/// </summary>
        #/// <returns>
        #/// The last comment entered by any user for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public server  WorkflowComment  workflowLastComment()
        #{
        #    WorkflowTrackingTable           workflowTrackingTable;
        #    WorkflowTrackingStatusTable     workflowTrackingStatusTable;
        #    WorkflowTrackingCommentTable    workflowTrackingCommentTable;
        #
        #
        #    select ContextCompanyId, ContextTableId, ContextRecId from workflowTrackingStatusTable
        #        where workflowTrackingStatusTable.ContextCompanyId    == curext()
        #           && workflowTrackingStatusTable.ContextTableId      == this.TableId
        #           && workflowTrackingStatusTable.ContextRecId        == this.RecId
        #        join firstonly TrackingId, CreatedDateTime from workflowTrackingTable order by CreatedDateTime desc
        #            where workflowTrackingTable.WorkflowTrackingStatusTable == workflowTrackingStatusTable.RecId
        #        join Comment from workflowTrackingCommentTable
        #            where workflowTrackingCommentTable.WorkflowTrackingTable == workflowTrackingTable.RecId;
        #
        #    return workflowTrackingCommentTable.Comment;
        #}
      ENDSOURCE
      SOURCE #workflowWorkItemDueDate
        #/// <summary>
        #/// Retrieves the lates workflow due date for this record.
        #/// </summary>
        #/// <returns>
        #/// The due date for lates work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowDueDateTime  workflowWorkItemDueDate()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : dueDateTime = DateTimeUtil::minValue();
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        dueDateTime = workflowWorkItemTable.DueDateTime;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                        }
        #        }
        #    }
        #
        #    return dueDateTime;
        #}
      ENDSOURCE
      SOURCE #balanceAmountDelivered
        #server static AmountMST  balanceAmountDelivered(VendAccount _invoiceAccount,
        #                                                // <GEERU>
        #                                                PurchId          _excludePurchId     = '',
        #                                                boolean          _checkAgreementLimit = false,
        #                                                AgreementHeaderExtRecId_RU _agreementHeaderExtRecId = 0)
        #                                                // </GEERU>
        #{
        #    PurchTable     purchTable;
        #    PurchTotals    purchTotals;
        #    AmountMST      amountMST;
        #
        #    while select purchTable
        #            where purchTable.InvoiceAccount == _invoiceAccount              &&
        #                  (purchTable.PurchStatus    == PurchStatus::None       ||
        #                   purchTable.PurchStatus    == PurchStatus::Backorder  ||
        #                   purchTable.PurchStatus    == PurchStatus::Received)      &&
        #                  purchTable.PurchaseType   != PurchaseType::Journal        &&
        #                  purchTable.PurchId        != _excludePurchId
        #    {
        #        // <GEERU>
        #        if (_checkAgreementLimit
        #            && purchTable.purchTable_RU().AgreementHeaderExt_RU != _agreementHeaderExtRecId)
        #        {
        #            continue;
        #        }
        #        // </GEERU>
        #
        #        purchTotals = PurchTotals::newPurchTable(purchTable, PurchUpdate::PackingSlip);
        #        purchTotals.calc();
        #        amountMST += Currency::mstAmount(purchTotals.purchTotalAmount(),purchTable.CurrencyCode);
        #    }
        #
        #    return amountMST;
        #}
      ENDSOURCE
      SOURCE #balanceAmountNotInvoiced
        #server static AmountMST  balanceAmountNotInvoiced(VendAccount _invoiceAccount,
        #                                                  // <GEERU>
        #                                                  PurchId          _excludePurchId     = '',
        #                                                  boolean          _checkAgreementLimit = false,
        #                                                  AgreementHeaderExtRecId_RU _agreementHeaderExtRecId = 0)
        #                                                  // </GEERU>
        #{
        #    PurchTable     purchTable;
        #    PurchTotals    purchTotals;
        #    AmountMST      amountMST;
        #
        #    while select purchTable
        #            where purchTable.InvoiceAccount == _invoiceAccount              &&
        #                  (purchTable.PurchStatus    == PurchStatus::None       ||
        #                   purchTable.PurchStatus    == PurchStatus::Backorder  ||
        #                   purchTable.PurchStatus    == PurchStatus::Received)      &&
        #                  purchTable.PurchaseType   != PurchaseType::Journal        &&
        #                  purchTable.PurchId        != _excludePurchId
        #    {
        #        // <GEERU>
        #        if (_checkAgreementLimit
        #            && purchTable.purchTable_RU().AgreementHeaderExt_RU != _agreementHeaderExtRecId)
        #        {
        #            continue;
        #        }
        #        // </GEERU>
        #
        #        purchTotals = PurchTotals::newPurchTable(purchTable, PurchUpdate::All);
        #        purchTotals.calc();
        #        amountMST += Currency::mstAmount(purchTotals.purchTotalAmount(),purchTable.CurrencyCode);
        #    }
        #
        #    return amountMST;
        #}
      ENDSOURCE
      SOURCE #checkCustomsPurchaseOrder_IN
        #/// <summary>
        #/// Checks customs purchase order.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purchase id.
        #/// </param>
        #/// <returns>
        #/// Returns true if the check is succeed.
        #/// </returns>
        #// <GIN>
        #public static boolean checkCustomsPurchaseOrder_IN(PurchIdBase  _purchId)
        #{
        #    PurchTable      purchTable;
        #    PurchTable_W    purchTable_W;
        #    boolean         ret = false;
        #
        #    if (_purchId)
        #    {
        #        select firstonly RecId from purchTable
        #            where purchTable.PurchId == _purchId
        #            exists join purchTable_W
        #                where purchTable_W.PurchTable                   == purchTable.RecId
        #                    && purchTable_W.CustomsInvoiceRegistered_IN == NoYes::Yes;
        #
        #        ret = (purchTable.RecId != 0);
        #    }
        #
        #    return ret;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #checkExist
        #static boolean checkExist(PurchId purchId)
        #{
        #    if (purchId && !PurchTable::exist(purchId))
        #        return checkFailed(strFmt(PurchTable::txtNotExist(),purchId));
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkLedgerPeriod
        #/// <summary>
        #/// Checks whether posting in the ledger period is allowed.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purchase order number.
        #/// </param>
        #/// <param name="_transDate">
        #/// The transaction date to check.
        #/// </param>
        #/// <returns>
        #/// True if posting in the ledger period is allowed; otherwise False.
        #/// </returns>
        #public static boolean checkLedgerPeriod(PurchId _purchId, TransDate _transDate)
        #{
        #    if (!FiscalCalendars::checkLedgerPeriodDateModule(CompanyInfo::fiscalCalendarRecId(), _transDate, SysModule::Purch, false) && LedgerParameters::find().IsEncumbranceProcessEnabled)
        #    {
        #        return checkFailed(strFmt("@SYS310560", _purchId, date2StrUsr(_transDate, DateFlags::FormatAll)));
        #    }
        #
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #computeRetailCaseCount
        #/// <summary>
        #/// Computes the RetailCaseCount for all lines for the specified <c>PurchId</c>
        #/// </summary>
        #/// <param name="purchId">
        #/// A <c>PurchId</c>
        #/// </param>
        #/// <returns>
        #/// The total for all line quantities for the PO (regadless of line item type)
        #/// </returns>
        #static RetailCaseCount computeRetailCaseCount(PurchId          purchId)
        #{
        #    PurchLine           tPurchLine;
        #
        #    select sum(PurchQty) from tPurchLine where tPurchLine.PurchId == purchId;
        #
        #    return tPurchLine.PurchQty;
        #}
      ENDSOURCE
      SOURCE #exist
        #static boolean exist(PurchId  purchId)
        #{
        #    return (select firstonly RecId from purchTable
        #                index hint PurchIdx
        #                where purchTable.PurchId    == purchId
        #           ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existVendOpenOrder
        #static boolean existVendOpenOrder(VendAccount vendAccount)
        #{
        #    PurchTable purchTable;
        #
        #    return (select firstonly RecId from purchTable
        #                index hint VendIdx
        #                where purchTable.OrderAccount == vendAccount                &&
        #                      (purchTable.PurchStatus == PurchStatus::None      ||
        #                       purchTable.PurchStatus == PurchStatus::Backorder ||
        #                       purchTable.PurchStatus == PurchStatus::Received)).RecId != 0;
        #
        #}
      ENDSOURCE
      SOURCE #fieldIdToInternalFieldId_W
        #/// <summary>
        #/// Converts a normal field ID to an internal field ID.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// Normal field ID.
        #/// </param>
        #/// <param name="_tableId">
        #/// Table ID of the talbe for the specified field ID. Optional.
        #/// </param>
        #/// <returns>
        #/// Internal field ID.
        #/// </returns>
        #public static FieldId fieldIdToInternalFieldId_W(FieldId _fieldId, TableId _tableId = tableNum(PurchTable))
        #{
        #    TableId internalTableId = PurchTable::tableIdToInternalTableId_W(_tableId);
        #
        #    return ((internalTableId << 24) | _fieldId);
        #}
      ENDSOURCE
      SOURCE #find
        #static PurchTable find(PurchId          purchId,
        #                       boolean          _forUpdate = false,
        #                       ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    PurchTable purchTable;
        #
        #    if (purchId)
        #    {
        #        if (_forUpdate)
        #        {
        #            purchTable.selectForUpdate  (_forUpdate);
        #            if (_concurrencyModel != ConcurrencyModel::Auto)
        #                purchTable.concurrencyModel(_concurrencyModel);
        #        }
        #        purchTable.selectLocked     (_forUpdate);
        #
        #        select firstonly purchTable
        #            index hint PurchIdx
        #            where purchTable.PurchId == purchId;
        #    }
        #
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #findByBankLG
        #/// <summary>
        #///     Finds a record that link to a specified <c>BankLGGuarantee</c> record.
        #/// </summary>
        #/// <param name="_bankLGRefRecId">
        #///     The rec Id of the related <c>BankLGGuarantee</c> record.
        #/// </param>
        #/// <param name="_forUpdate">
        #///     A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///     If found, returns the record in the <c>PurchTable</c> table; otherwise, returns an empty record.
        #/// </returns>
        #public static PurchTable findByBankLG(
        #    BankLGRefRecId   _bankLGRefRecId,
        #    boolean          _forUpdate = false)
        #{
        #    PurchTable                      purchTable;
        #    BankLGGuaranteePurchaseOrder    bankLGGuaranteePurchaseOrder;
        #
        #    purchTable.selectForUpdate(_forUpdate);
        #
        #    if (_bankLGRefRecId)
        #    {
        #        select firstonly purchTable
        #            exists join bankLGGuaranteePurchaseOrder
        #            where bankLGGuaranteePurchaseOrder.Guarantee        == _bankLGRefRecId
        #                && bankLGGuaranteePurchaseOrder.PurchaseOrder   == purchTable.PurchId;
        #    }
        #
        #    return purchTable;
        #}
        #
      ENDSOURCE
      SOURCE #findPurchIdLocationPurchType
        #/// <summary>
        #/// Find Purchaes ID Location Purchase Type
        #/// </summary>
        #/// <param name="purchId">
        #/// Purchase ID
        #/// </param>
        #/// <param name="location">
        #/// Retail Location
        #/// </param>
        #/// <param name="purchType">
        #/// Purchase Type
        #/// </param>
        #/// <param name="_forUpdate">
        #/// for update?
        #/// </param>
        #/// <returns>
        #/// The Purchase Table
        #/// </returns>
        #static PurchTable findPurchIdLocationPurchType(PurchId  purchId,RetailLocationEx2 location,PurchaseType   purchType,
        #                       boolean     _forUpdate = false)
        #{
        #    PurchTable  purchTable;
        #
        #    if (purchId)
        #    {
        #        purchTable.selectForUpdate  (_forUpdate);
        #        purchTable.selectLocked     (_forUpdate);
        #
        #        select firstonly purchTable
        #            index hint PurchIdx
        #            where purchTable.PurchId == purchId
        #                && purchTable.PurchaseType == purchType
        #                && purchTable.InventLocationId == location;
        #    }
        #
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #findPurchIdPurchaseType
        #/// <summary>
        #/// Find purchase ID purchase type
        #/// </summary>
        #/// <param name="purchId">
        #/// Purchase ID
        #/// </param>
        #/// <param name="purchaseType">
        #/// Purchase Type
        #/// </param>
        #/// <param name="_forUpdate">
        #/// for update?
        #/// </param>
        #/// <returns>
        #/// The Purchase Table
        #/// </returns>
        #static PurchTable findPurchIdPurchaseType(PurchId      purchId,
        #                                          PurchaseType purchaseType,
        #                                          boolean     _forUpdate = false)
        #{
        #    PurchTable  purchTable;
        #
        #    if (purchId)
        #    {
        #        purchTable.selectForUpdate  (_forUpdate);
        #        purchTable.selectLocked     (_forUpdate);
        #
        #        select firstonly purchTable
        #            index hint PurchIdx
        #            where purchTable.PurchId        == purchId  &&
        #                  purchTable.PurchaseType   == purchaseType;
        #    }
        #
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static PurchTable findRecId(RecId       _recId,
        #                            boolean     _forUpdate = false)
        #{
        #    PurchTable purchTable;
        #
        #    purchTable.selectForUpdate(_forUpdate);
        #
        #    select purchTable
        #        where purchTable.RecId == _recId;
        #
        #    // Due to cache, the non-persistent field PackedExtensions may not have a empty value.
        #    // This may cause update conflict issue for extension table record. Clear the cached value
        #    // for this field to make sure it will pack the latest version of extension table record.
        #    purchTable.PackedExtensions = conNull();
        #
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #findSourceDocumentHeader
        #/// <summary>
        #/// Finds a <c>PurchTable</c> record by the <c>SourceDocument</c>.
        #/// </summary>
        #/// <param name="_sourceDocumentHeader">
        #/// A <c>SourceDocumentHeader</c> record ID.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A <c>PurchTable</c> record.
        #/// </returns>
        #public static PurchTable findSourceDocumentHeader(RefRecId    _sourceDocumentHeader,boolean _forUpdate = false)
        #{
        #    PurchTable    purchTable;
        #
        #    purchTable.selectForUpdate(_forUpdate);
        #
        #    if (_sourceDocumentHeader)
        #    {
        #        select firstonly purchTable
        #            where purchTable.SourceDocumentHeader == _sourceDocumentHeader;
        #    }
        #
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #findSourceDocumentLine
        # /// <summary>
        #/// Finds a <c>PurchTable</c> record by <c>SourceDocumentLine</c>.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #/// A <c>SourceDocumentLine</c> record id.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A boolean value that indicates whether to read the record for update;optional.
        #/// </param>
        #/// <returns>
        #/// A <c>PurchTable</c> record.
        #/// </returns>
        #public static PurchTable findSourceDocumentLine(RefRecId _sourceDocumentLine,boolean _forUpdate = false)
        #{
        #    PurchTable    purchTable;
        #
        #    purchTable.selectForUpdate(_forUpdate);
        #
        #    if (_sourceDocumentLine)
        #    {
        #        select firstonly purchTable
        #        where purchTable.SourceDocumentLine == _sourceDocumentLine;
        #    }
        #
        #    return purchTable;
        #}
        #
        #
        #
      ENDSOURCE
      SOURCE #hasExensionTableEnabled
        #/// <summary>
        #/// Checks is there any extension table of table <C>PurchTable</C> is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if there is one or more extension tables are enabled. Otherwise, return false.
        #/// </returns>
        #public static boolean hasExensionTableEnabled()
        #{
        #    return SysExtensionSerializerMap::hasExensionTableEnabled(tableNum(PurchTable));
        #}
      ENDSOURCE
      SOURCE #initFromVendTableIL
        #/// <summary>
        #///    Initializes the <c>PurchTable</c> record from a <c>VendTable</c> record.
        #/// </summary>
        #/// <param name="_inputContract">
        #///    A container with the <c>PurchTable</c> record to initialize and <c>VendTable</c> record from which to initialize.
        #/// </param>
        #/// <returns>
        #///    Returns a container with the <c>PurchTable</c> record
        #/// </returns>
        #private static server container initFromVendTableIL(container _inputContract)
        #{
        #    VendTable               invoiceVendTable;
        #    boolean                 addressSet;
        #    TaxVATNumTable          taxVATNumTable;
        #    PurchTable              purchTable = con2Buf(conPeek(_inputContract, 1));
        #    VendTable               vendTable = con2Buf(conPeek(_inputContract, 2));
        #
        #    // <GIN>
        #    TaxWithholdParameters_IN    taxWithholdParameters;
        #    TaxInformationVendTable_IN  taxInformationVendTableLoc;
        #    PurchTable_W                purchTable_W;
        #    // </GIN>
        #    RetailServiceCategory      tServiceCategory;
        #    // <GEERU>
        #    PurchTable_RU               purchTable_RU;
        #    // </GEERU>
        #
        #    #ISOCountryRegionCodes
        #
        #    purchTable.OrderAccount               = vendTable.AccountNum;
        #
        #    purchTable.InvoiceAccount             = vendTable.InvoiceAccount  ? vendTable.InvoiceAccount
        #                                                                : vendTable.AccountNum;
        #
        #    invoiceVendTable                      = purchTable.vendTable_InvoiceAccount();
        #    purchTable.vatNum                     = vendTable.vatNum;
        #    purchTable.EnterpriseNumber           = vendTable.EnterpriseNumber;
        #    purchTable.NumberSequenceGroup        = invoiceVendTable.NumberSequenceGroup;
        #
        #    purchTable.CurrencyCode               = vendTable.Currency;
        #    if(VendParameters::find().VendNameFromVATNum)
        #    {
        #        taxVATNumTable = TaxVATNumTable::find(vendTable.vatNum, vendTable.postalAddress().CountryRegionId);
        #
        #        if(taxVATNumTable.Name)
        #        {
        #            purchTable.PurchName      = taxVATNumTable.Name;
        #        }
        #        else
        #        {
        #            purchTable.PurchName      = vendTable.name();
        #        }
        #    }
        #    else
        #    {
        #        purchTable.PurchName                  = vendTable.name();
        #    }
        #
        #    purchTable.ItemBuyerGroupId           = vendTable.ItemBuyerGroupId;
        #    purchTable.VendGroup                  = vendTable.VendGroup;
        #    purchTable.PriceGroupId               = vendTable.PriceGroup;
        #    purchTable.TaxGroup                   = vendTable.TaxGroup;
        #    purchTable.InclTax                    = vendTable.InclTax;
        #    purchTable.LineDisc                   = vendTable.LineDisc;
        #    purchTable.MultiLineDisc              = vendTable.MultiLineDisc;
        #    purchTable.EndDisc                    = vendTable.EndDisc;
        #
        #    purchTable.Email                      = vendTable.email();
        #    purchTable.url                        = vendTable.url();
        #
        #    purchTable.LanguageId                 = DirPartyTable::findRec(vendTable.Party).LanguageId;
        #
        #    purchTable.DefaultDimension           = purchTable.copyDimension(vendTable.DefaultDimension);
        #    purchTable.DlvTerm                    = vendTable.DlvTerm;
        #    purchTable.DlvMode                    = vendTable.DlvMode;
        #    purchTable.MarkupGroup                = vendTable.MarkupGroup;
        #    purchTable.FreightZone                = vendTable.FreightZone;
        #
        #    purchTable.Payment                    = vendTable.PaymTermId;
        #    purchTable.initFromPayment();
        #    if (vendTable.PaymSched)
        #    {
        #        purchTable.PaymentSched           = vendTable.PaymSched;
        #    }
        #    purchTable.PaymMode                   = vendTable.PaymMode;
        #    purchTable.PaymSpec                   = vendTable.PaymSpec;
        #
        #    purchTable.PostingProfile             = VendParameters::find().PostingProfile;
        #
        #    purchTable.setInventSiteId(vendTable.InventSiteId);
        #    purchTable.InventLocationId = vendTable.InventLocation;
        #
        #    if (!purchTable.RecId || !purchTable.isDropShipment())
        #    {
        #        addressSet = purchTable.setAddressFromInventLocationId(purchTable.InventLocationId);
        #
        #        if (!addressSet)
        #        {
        #            purchTable.setDefaultDeliveryAddress();
        #        }
        #    }
        #    purchTable.ContactPersonId            = vendTable.ContactPersonId;
        #
        #    purchTable.CashDisc                   = vendTable.CashDisc;
        #
        #    if(vendTable.CashDisc)
        #        purchTable.CashDiscPercent        = CashDisc::find(vendTable.CashDisc).Percent;
        #
        #    purchTable.PurchPoolId                = PurchParameters::find().PurchPoolId;
        #    if (vendTable.PurchPoolId)
        #        purchTable.PurchPoolId            = vendTable.PurchPoolId;
        #
        #    purchTable.InterCompanyOrder          = vendTable.interCompanyTradingRelationActive();
        #    purchTable.InterCompanyCompanyId      = vendTable.interCompanyTradingPartnerCompanyID();
        #
        #    //<GEEPL>
        #    purchTable.TaxPeriodPaymentCode_PL          = vendTable.TaxPeriodPaymentCode_PL;
        #    //</GEEPL>
        #
        #    purchTable.tamVendRebateGroupId     = vendTable.tamRebateGroupID;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        purchTable.ServiceCategory            = RetailVendTable::find(vendTable.AccountNum).ServiceCategory;
        #
        #        if (purchTable.ServiceCategory)
        #        {
        #            tServiceCategory                  = RetailServiceCategory::find(purchTable.ServiceCategory);
        #            purchTable.AvailSalesDate         = tServiceCategory.calcSalesdate(purchTable.DeliveryDate);
        #            purchTable.LocalDeliveryDate      = tServiceCategory.calcLVMdate(purchTable.DeliveryDate);
        #            if (tServiceCategory.CrossDockingWarehouse)
        #            {
        #                purchTable.InventLocationId      = tServiceCategory.CrossDockingWarehouse;
        #                purchTable.ReplenishmentLocation = tServiceCategory.ReplenishmentLocation;
        #            }
        #        }
        #    }
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
        #    {
        #        purchTable.BankCentralBankPurposeCode = vendTable.BankCentralBankPurposeCode;
        #        purchTable.BankCentralBankPurposeText = vendTable.BankCentralBankPurposeText;
        #    }
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIS]))
        #    {
        #        purchTable.VendInvoiceDeclaration_IS = vendTable.VendInvoiceDeclaration_IS;
        #    }
        #
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchTable_RU = purchTable.purchTable_RU();
        #
        #        purchTable_RU.vatOperationCode_RU = vendTable.vatOperationCode_RU;
        #        if (vendTable.InventProfileType_RU || vendTable.InventProfileId_RU)
        #        {
        #            purchTable_RU.InventProfileType_RU = vendTable.InventProfileType_RU;
        #            purchTable_RU.InventProfileId_RU   = vendTable.InventProfileId_RU;
        #        }
        #
        #        purchTable.packPurchTable_RU(purchTable_RU);
        #    }
        #    // </GEERU>
        #    purchTable.ChangeRequestRequired      = (PurchParameters::find().ChangeRequestAllowOverride && vendTable.ChangeRequestOverride) ? vendTable.ChangeRequestEnabled : PurchParameters::find().ChangeRequestEnabled;
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        purchTable_W = purchTable.purchTable_W();
        #
        #        taxWithholdParameters           = TaxWithholdParameters_IN::find();
        #        taxInformationVendTableLoc      = vendTable.getTaxInformationVendTable_IN();
        #        if (taxWithholdParameters.tcsInvoice)
        #        {
        #            purchTable_W.NatureOfAssessee_IN    = taxInformationVendTableLoc.NatureOfAssessee;
        #        }
        #        if (taxWithholdParameters.tdsInvoice)
        #        {
        #            purchTable_W.tdsGroup_IN            = taxInformationVendTableLoc.tdsGroup;
        #            purchTable_W.NatureOfAssessee_IN    = taxInformationVendTableLoc.NatureOfAssessee;
        #        }
        #
        #        purchTable_W.CustomsImportOrder_IN = vendTable.isForeign();
        #        purchTable.packPurchTable_W(purchTable_W);
        #    }
        #    // </GIN>
        #
        #    // <GJP>
        #    if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        #    {
        #        if (vendTable.ConsDay_JP != 0)
        #        {
        #            purchTable.ConsTarget_JP = NoYes::Yes;
        #        }
        #    }
        #    // </GJP>
        #
        #    // <GEELT>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        #    {
        #        purchTable.UnitedVATInvoice_LT = vendTable.UnitedVATInvoice_LT;
        #    }
        #    // </GEELT>
        #
        #    purchTable.setListCode();
        #
        #    // <GBR>
        #    PurchTableHandler_BR::initFromVendTableFromVendor(vendTable, purchTable);
        #    // </GBR>
        #
        #    return buf2Con(purchTable, true);
        #}
      ENDSOURCE
      SOURCE #internalFieldIdToFieldId_W
        #/// <summary>
        #/// Converts an internal field ID to normal field ID.
        #/// </summary>
        #/// <param name="_internalFieldId">
        #/// Internal field ID.
        #/// </param>
        #/// <returns>
        #/// Normal field ID.
        #/// </returns>
        #/// <remarks>
        #/// Internal field ID saves the normal field ID information in the lower 24 bits,
        #/// and save the internal table ID information in the upper 8 bits.
        #/// Note: internal table ID is a code defined ID, not the normal table ID.
        #/// </remarks>
        #public static FieldId internalFieldIdToFieldId_W(FieldId _internalFieldId)
        #{
        #    return (_internalFieldId & 0xffffff);
        #}
      ENDSOURCE
      SOURCE #internalFieldIdToTableId_W
        #/// <summary>
        #/// Converts an internal field ID to normal table ID.
        #/// </summary>
        #/// <param name="_internalFieldId">
        #/// Internal field ID.
        #/// </param>
        #/// <returns>
        #/// Normal table ID.
        #/// </returns>
        #/// <remarks>
        #/// Internal field ID saves the normal field ID information in the lower 24 bits,
        #/// and save the internal table ID information in the upper 8 bits.
        #/// Note: internal table ID is a code defined ID, not the normal table ID.
        #/// </remarks>
        #public static TableId internalFieldIdToTableId_W(FieldId _internalFieldId)
        #{
        #    return PurchTable::internalTableIdToTableId_W((_internalFieldId >> 24));
        #}
      ENDSOURCE
      SOURCE #internalTableIdToTableId_W
        #/// <summary>
        #/// Converts internal table ID to normal table ID.
        #/// </summary>
        #/// <param name="_internalTableId">
        #/// Internal table ID.
        #/// </param>
        #/// <returns>
        #/// Normal table ID.
        #/// </returns>
        #private static TableId internalTableIdToTableId_W(TableId _internalTableId)
        #{
        #    #define.InternalTableId_PurchTable_BR(1)
        #    #define.InternalTableId_PurchTable_RU(2)
        #    #define.InternalTableId_PurchTable_W(3)
        #
        #    switch (_internalTableId)
        #    {
        #        case #InternalTableId_PurchTable_BR:
        #            return tableNum(PurchTable_BR);
        #
        #        case #InternalTableId_PurchTable_RU:
        #            return tableNum(PurchTable_RU);
        #
        #        case #InternalTableId_PurchTable_W:
        #            return tableNum(PurchTable_W);
        #    }
        #
        #    return tableNum(PurchTable);
        #}
      ENDSOURCE
      SOURCE #lookupCustomsImportOrder_IN
        #/// <summary>
        #/// Lookups customs import order.
        #/// </summary>
        #/// <param name="_formControl">
        #/// The form control.
        #/// </param>
        #// <GIN>
        #public static void lookupCustomsImportOrder_IN(FormControl _formControl)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), _formControl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource;
        #    QueryBuildRange         queryBuildRange;
        #
        #    queryBuildDataSource    = query.addDataSource(tableNum(PurchTable));
        #    queryBuildDataSource    = queryBuildDataSource.addDataSource(tableNum(PurchTable_W));
        #    queryBuildRange         = queryBuildDataSource.addRange(fieldNum(PurchTable_W, CustomsImportOrder_IN));
        #    queryBuildRange.value(queryValue(NoYes::Yes));
        #    queryBuildRange         = queryBuildDataSource.addRange(fieldNum(PurchTable_W, CustomsInvoiceRegistered_IN));
        #    queryBuildRange.value(queryValue(NoYes::No));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchStatus));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, OrderAccount));
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #lookupCustomsPurchOrder_IN
        #/// <summary>
        #/// Displays all Purchase Orders where Importe Order is marked.[ Displays all Import Orders]
        #/// </summary>
        #/// <param name="_formControl">
        #/// The form control.
        #/// </param>
        #// <GIN>
        #public static void lookupCustomsPurchOrder_IN(FormControl _formControl)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), _formControl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource;
        #    QueryBuildRange         queryBuildRange;
        #
        #    queryBuildDataSource    = query.addDataSource(tableNum(PurchTable));
        #    queryBuildDataSource    = queryBuildDataSource.addDataSource(tableNum(PurchTable_W));
        #    queryBuildRange         = queryBuildDataSource.addRange(fieldNum(PurchTable_W, CustomsImportOrder_IN));
        #    queryBuildRange.value(queryValue(NoYes::Yes));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchStatus));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, OrderAccount));
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #lookupOrdersForConfirmationRequest
        #/// <summary>
        #/// Queries for orders that are relevant for requesting confirmation on
        #/// </summary>
        #/// <param name="_formControl">
        #/// The control where the lookup was invoked
        #/// </param>
        #/// <remarks>
        #/// Used in the order lookup while processing confirmation request
        #/// </remarks>
        #public static void lookupOrdersForConfirmationRequest(FormControl _formControl)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), _formControl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource;
        #    QueryBuildRange         queryBuildRange;
        #
        #    queryBuildDataSource    = query.addDataSource(tableNum(PurchTable));
        #    queryBuildRange = queryBuildDataSource.addRange(fieldNum(PurchTable, DocumentState));
        #    queryBuildRange.value(enum2Value(VersioningDocumentState::Approved));
        #
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, DocumentState));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchStatus));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, OrderAccount));
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #lookupWMSReception
        #static void lookupWMSReception(FormStringControl ctrl, VendAccount vendAccount)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), ctrl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    dsPurchTable;
        #    QueryBuildDataSource    dsPurchLine;
        #    QueryBuildDataSource    dsPurchTableVersion;
        #    QueryBuildRange         queryBuildRange;
        #
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
        #    sysTableLookup.addLookupfield(fieldNum(PurchTable, OrderAccount));
        #
        #    dsPurchTable = query.addDataSource(tableNum(PurchTable));
        #
        #    if (PurchParameters::find().ChangeRequestEnabled)
        #    {
        #        dsPurchTableVersion = dsPurchTable.addDataSource(tableNum(PurchTableVersion));
        #        dsPurchTableVersion.relations(true);
        #        dsPurchTableVersion.joinMode(JoinMode::ExistsJoin);
        #    }
        #
        #    dsPurchLine = dsPurchTable.addDataSource(tableNum(PurchLine));
        #    dsPurchLine.relations(true);
        #    dsPurchLine.joinMode(JoinMode::ExistsJoin);
        #
        #    if (vendAccount)
        #    {
        #        queryBuildRange = dsPurchTable.addRange(fieldNum(PurchTable, OrderAccount));
        #        queryBuildRange.value(queryValue(vendAccount));
        #    }
        #
        #    queryBuildRange = dsPurchTable.addRange(fieldNum(PurchTable, PurchStatus));
        #    queryBuildRange.value(enum2Value(PurchStatus::Backorder));
        #
        #    // Direct deliveries are excluded since they can not be received at out warehouse
        #    queryBuildRange = dsPurchLine.addRange(fieldNum(PurchLine, DeliveryType));
        #    queryBuildRange.value(queryNotValue(TradeLineDlvType::DropShip));
        #
        #    // Exclude purchase orders of type Journal
        #    queryBuildRange = dsPurchTable.addRange(fieldNum(PurchTable, PurchaseType));
        #    queryBuildRange.value(queryNotValue(PurchaseType::Journal));
        #
        #    dsPurchTable.addSortField(fieldNum(PurchTable, PurchId));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #mustValidateAllAccountsFullyQualified
        #/// <summary>
        #/// Indicates whether to validate if all accounts are fully qualified.
        #/// </summary>
        #/// <returns>
        #/// true when validation of if all accounts are fully qualified; otherwise, false.
        #/// </returns>
        #public static boolean mustValidateAllAccountsFullyQualified()
        #{
        #    return Ledger::isLedgerBudgetControlEnabled()
        #        || LedgerParameters::find().IsEncumbranceProcessEnabled;
        #}
      ENDSOURCE
      SOURCE #pdsCWItemLine
        #public static boolean pdsCWItemLine(PurchId _purchId)
        #{
        #    PurchLine           purchLine;
        #    PdsCatchWeightItem  catchWeightItem;
        #    boolean             ret = false;
        #
        #    if (#PdsCatchWeightEnabled)
        #    {
        #        select firstonly RecId
        #            from purchLine
        #            where purchLine.PurchId         == _purchId
        #            exists join catchWeightItem
        #            where catchWeightItem.ItemId    == purchLine.ItemId;
        #
        #        if (purchLine.RecId)
        #        {
        #            ret = true;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #promptConvertCurrencyCode
        #client static container promptConvertCurrencyCode(PurchTable _purchTable = null)
        #{
        #    DialogButton            dialogButton;
        #
        #    if (!isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
        #    {
        #        dialogButton = Box::okCancel("@SYS127859", DialogButton::Ok);
        #        if (dialogButton == DialogButton::Ok)
        #            return [NoYes::Yes, TradeCurencyConversion::ExchRate];
        #
        #        return [NoYes::No, TradeCurencyConversion::ExchRate];
        #    }
        #    return TradeCurrencyConversionPrompt::newFromParm(_purchTable,
        #                                                      _purchTable.PurchId,
        #                                                      _purchTable.priceDiscChangePolicyExistOnLine()
        #                                                      ).promptConvertCurrencyCode();
        #}
        #
      ENDSOURCE
      SOURCE #promptCopyDeliveryAddress
        #client static DialogButton  promptCopyDeliveryAddress()
        #{;
        #    return Box::yesYesAllNoCancel("@SYS89799", DialogButton::Yes);
        #}
      ENDSOURCE
      SOURCE #tableIdToInternalTableId_W
        #/// <summary>
        #/// Converts normal table ID to internal table ID.
        #/// </summary>
        #/// <param name="_narmalTableId">
        #/// Normal table ID.
        #/// </param>
        #/// <returns>
        #/// Internal table ID.
        #/// </returns>
        #/// <remarks>
        #/// Internal table ID is defined separately for each set of
        #/// base table and its extension tables. And the internal table
        #/// ID for base table should always be 0.
        #/// </remarks>
        #private static TableId tableIdToInternalTableId_W(TableId _narmalTableId)
        #{
        #    #define.InternalTableId_PurchTable_BR(1)
        #    #define.InternalTableId_PurchTable_RU(2)
        #    #define.InternalTableId_PurchTable_W(3)
        #
        #    switch (_narmalTableId)
        #    {
        #        case tableNum(PurchTable_BR):
        #            return #InternalTableId_PurchTable_BR;
        #
        #        case tableNum(PurchTable_RU):
        #            return #InternalTableId_PurchTable_RU;
        #
        #        case tableNum(PurchTable_W):
        #            return #InternalTableId_PurchTable_W;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #txtNotExist
        #static TxtNotExist  txtNotExist()
        #{
        #    return "@SYS15741";
        #}
      ENDSOURCE
      SOURCE #updateDlvModeFromCarrierService
        #/// <summary>
        #///   Updates delivery mode on purchase order.
        #/// </summary>
        #/// <param name="_purchId">
        #///   The purch order ID.
        #/// </param>
        #/// <param name="_carrierCode">
        #///   The carrier code.
        #/// </param>
        #/// <param name="_carrierServiceCode">
        #///   The carrier service code.
        #/// </param>
        #/// <remarks>
        #///   The delivery mode is assigned based on carrier code and carrier service.
        #/// </remarks>
        #public static server void updateDlvModeFromCarrierService(
        #    PurchId                 _purchId,
        #    TMSCarrierCode          _carrierCode,
        #    TMSCarrierServiceCode   _carrierServiceCode)
        #{
        #    PurchTable  purchTable;
        #    DlvModeId   dlvModeId = TMSCarrierService::findDlvModeId(_carrierCode, _carrierServiceCode);
        #
        #    if (dlvModeId)
        #    {
        #        ttsbegin;
        #
        #        update_recordset purchTable
        #            setting DlvMode = dlvModeId
        #            where purchTable.PurchId == _purchId;
        #
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #vendOpenOrders
        #static PurchTable vendOpenOrders(VendAccount vendAccount, boolean update = false)
        #{
        #    PurchTable purchTable;
        #
        #    purchTable.selectForUpdate (update);
        #
        #    select purchTable
        #           index hint VendIdx
        #           where purchTable.OrderAccount == vendAccount                &&
        #                 (purchTable.PurchStatus == PurchStatus::None      ||
        #                  purchTable.PurchStatus == PurchStatus::Backorder ||
        #                  purchTable.PurchStatus == PurchStatus::Received);
        #
        #    return purchTable;
        #}
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #initFromVendInvoiceJour
        EVENTHANDLERS
          EVENTHANDLER #postInitFromVendInvoiceJour_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchTableHandler_BR
              Method              #initFromVendInvoiceJour
              AOTlink             #\Classes\PurchTableHandler_BR\initFromVendInvoiceJour
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #initFromVendTable
        EVENTHANDLERS
          EVENTHANDLER #postInitFromVendTable_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #purchtablehandler_br
              Method              #initFromVendTable
              AOTlink             #\Classes\purchtablehandler_br\initFromVendTable
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifiedField
        EVENTHANDLERS
          EVENTHANDLER #postModifiedField_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchTableType
              Method              #postModifiedFieldHandler_BR
              AOTlink             #\Classes\PurchTableType\postModifiedFieldHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : LogisticsPostalAddress unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #LogisticsPostalAddress
    EnforceFKRelation 0
    PROPERTIES
      Name                #LogisticsPostalAddress
      Label               #@SYS7566
      FormRef             #LogisticsPostalAddressEdit
      TitleField1         #Location
      TitleField2         #Address
      SecurityKey         #BasicTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      SaveDataPerCompany  #No
      TableGroup          #Main
      PrimaryIndex        #RecId
      ClusterIndex        #AK1
      ReplacementKey      #AK1
      ModifiedDateTime    #Yes
      ModifiedBy          #Yes
      DeveloperDocumentation  #@SYS344551
      ValidTimeStateFieldType   #UtcDateTime
      Origin              #{2C160B7D-0000-1000-F942-C2ABF13A53DE}
      LegacyId            #2941
    ENDPROPERTIES
    
    FIELDS
      FIELD #Address
        STRING
        PROPERTIES
          Name                #Address
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #LogisticsPostalAddress
          Origin              #{5631CFBD-CD07-4643-8046-9167789F3774}
          LegacyId            #1
          ExtendedDataType    #LogisticsAddressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #Apartment_RU
        STRING
        PROPERTIES
          Name                #Apartment_RU
          Table               #LogisticsPostalAddress
          Origin              #{B7E572CD-5D91-4C59-B1E4-CE9D074BED5E}
          ExtendedDataType    #LogisticsAddressApartment_RU
        ENDPROPERTIES
        
      FIELD #Building_RU
        STRING
        PROPERTIES
          Name                #Building_RU
          Table               #LogisticsPostalAddress
          Origin              #{0F2ADF72-9904-46FD-BFD0-BB3AEBCD0C78}
          ExtendedDataType    #LogisticsAddressBuilding_RU
        ENDPROPERTIES
        
      FIELD #BuildingCompliment
        STRING
        PROPERTIES
          Name                #BuildingCompliment
          Table               #LogisticsPostalAddress
          Origin              #{A1D9515F-F308-4B3C-BDBB-9EACB934DA33}
          LegacyId            #13
          ExtendedDataType    #LogisticsAddressBuildingCompliment
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #City
        STRING
        PROPERTIES
          Name                #City
          Table               #LogisticsPostalAddress
          Origin              #{78C04325-D486-41BE-AB4F-C8DC4CFAE6CE}
          LegacyId            #7
          ExtendedDataType    #LogisticsAddressCity
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CityKana_JP
        STRING
        PROPERTIES
          Name                #CityKana_JP
          Table               #LogisticsPostalAddress
          Origin              #{107511C3-A7F7-41CF-8209-2E62F08C5AC9}
          ExtendedDataType    #AssetCityKana_JP
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CityRecId
        INT64
        PROPERTIES
          Name                #CityRecId
          Table               #LogisticsPostalAddress
          Origin              #{A30AD8AD-41EC-4380-A439-C6D13AAFBDCB}
          LegacyId            #15
          ExtendedDataType    #LogisticsAddressCityRecId
        ENDPROPERTIES
        
      FIELD #CountryRegionId
        STRING
        PROPERTIES
          Name                #CountryRegionId
          Mandatory           #Yes
          Table               #LogisticsPostalAddress
          Origin              #{FAEAE62E-FEEA-451C-8734-60BA26FC8C38}
          LegacyId            #2
          ExtendedDataType    #LogisticsAddressCountryRegionId
        ENDPROPERTIES
        
      FIELD #County
        STRING
        PROPERTIES
          Name                #County
          Table               #LogisticsPostalAddress
          Origin              #{FE07235B-AC22-46AB-B45A-7EAC2494E068}
          LegacyId            #6
          ExtendedDataType    #LogisticsAddressCountyId
        ENDPROPERTIES
        
      FIELD #District
        INT64
        PROPERTIES
          Name                #District
          Table               #LogisticsPostalAddress
          Origin              #{ACCCDFBF-CD6D-4858-BAC2-7C1D0FCCD8FD}
          LegacyId            #16
          ExtendedDataType    #LogisticsAddressDistrictRecId
        ENDPROPERTIES
        
      FIELD #DistrictName
        STRING
        PROPERTIES
          Name                #DistrictName
          Table               #LogisticsPostalAddress
          Origin              #{8CC2FA07-0128-4CC5-9A8E-13CEF1BA1290}
          LegacyId            #40
          ExtendedDataType    #LogisticsAddressDistrictName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #FlatId_RU
        INT64
        PROPERTIES
          Name                #FlatId_RU
          Table               #LogisticsPostalAddress
          Origin              #{2A091F43-0B7D-1000-3D68-6E7449645F52}
          LegacyId            #8003
          ExtendedDataType    #LogisticsAddressFlatId_RU
        ENDPROPERTIES
        
      FIELD #HouseId_RU
        INT64
        PROPERTIES
          Name                #HouseId_RU
          Table               #LogisticsPostalAddress
          Origin              #{2A0A1F42-0B7D-1000-EEEC-7D806549645F}
          LegacyId            #8002
          ExtendedDataType    #LogisticsAddressHouseId_RU
        ENDPROPERTIES
        
      FIELD #IsPrivate
        ENUM
        PROPERTIES
          Name                #IsPrivate
          Table               #LogisticsPostalAddress
          Origin              #{2F6C37E5-D8ED-46AF-9157-B4FC72D952EE}
          ExtendedDataType    #LogisticsIsPrivate
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Latitude
        REAL
        PROPERTIES
          Name                #Latitude
          Table               #LogisticsPostalAddress
          Origin              #{2285BB12-46DA-4A5E-8DBE-A872B450C401}
          LegacyId            #9
          ExtendedDataType    #LogisticsAddressLatitude
        ENDPROPERTIES
        
      FIELD #Location
        INT64
        PROPERTIES
          Name                #Location
          Mandatory           #Yes
          Table               #LogisticsPostalAddress
          Origin              #{853F3E4B-1431-4A94-A8BD-03076870842F}
          LegacyId            #17
          ExtendedDataType    #LogisticsLocationRecId
        ENDPROPERTIES
        
      FIELD #Longitude
        REAL
        PROPERTIES
          Name                #Longitude
          Table               #LogisticsPostalAddress
          Origin              #{58183FCF-0788-4466-8A4F-97018D662AFF}
          LegacyId            #10
          ExtendedDataType    #LogisticsAddressLongitude
        ENDPROPERTIES
        
      FIELD #PostBox
        STRING
        PROPERTIES
          Name                #PostBox
          Table               #LogisticsPostalAddress
          Origin              #{0F2F70CD-72FC-4172-AE7D-D8CD6C7BDAFD}
          LegacyId            #14
          ExtendedDataType    #LogisticsAddressPostBox
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PrivateForParty
        INT64
        PROPERTIES
          Name                #PrivateForParty
          Table               #LogisticsPostalAddress
          Origin              #{E629C674-5053-459A-9CC8-413E16067AD3}
          ExtendedDataType    #DirPartyPrivateLocationRecId
        ENDPROPERTIES
        
      FIELD #State
        STRING
        PROPERTIES
          Name                #State
          Table               #LogisticsPostalAddress
          Origin              #{C4776D73-DF39-4316-8A29-59EFA39D2C93}
          LegacyId            #5
          ExtendedDataType    #LogisticsAddressStateId
        ENDPROPERTIES
        
      FIELD #Street
        STRING
        PROPERTIES
          Name                #Street
          Table               #LogisticsPostalAddress
          Origin              #{9575CEDC-0094-42EE-8E83-16B0FFBA389F}
          LegacyId            #8
          ExtendedDataType    #LogisticsAddressStreet
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #StreetId_RU
        INT64
        PROPERTIES
          Name                #StreetId_RU
          Table               #LogisticsPostalAddress
          Origin              #{2A0B1F41-0B7D-1000-589D-FE6D72744964}
          LegacyId            #8001
          ExtendedDataType    #LogisticsAddressStreetID_RU
        ENDPROPERTIES
        
      FIELD #StreetKana_JP
        STRING
        PROPERTIES
          Name                #StreetKana_JP
          Table               #LogisticsPostalAddress
          Origin              #{5C3DAA93-C348-4A53-A98C-5969EFC6C26D}
          ExtendedDataType    #AssetStreetKana_JP
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #StreetNumber
        STRING
        PROPERTIES
          Name                #StreetNumber
          Table               #LogisticsPostalAddress
          Origin              #{806AC4EC-E400-4814-B579-645E4F9D97DE}
          LegacyId            #12
          ExtendedDataType    #LogisticsAddressStreetNumber
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TimeZone
        ENUM
        PROPERTIES
          Name                #TimeZone
          Label               #@SYS102501
          HelpText            #@SYS108837
          Table               #LogisticsPostalAddress
          Origin              #{939F4F6D-9217-42E8-BF83-04E5955EF2CE}
          LegacyId            #11
          EnumType            #Timezone
        ENDPROPERTIES
        
      FIELD #ValidFrom
        DATETIME
        PROPERTIES
          Name                #ValidFrom
          Table               #LogisticsPostalAddress
          Origin              #{3BA5E4B1-1E72-47C3-A48C-50136F7FDF13}
          LegacyId            #25
          ExtendedDataType    #EffectiveDateTime
        ENDPROPERTIES
        
      FIELD #ValidTo
        DATETIME
        PROPERTIES
          Name                #ValidTo
          Table               #LogisticsPostalAddress
          Origin              #{0A3B0BF5-757F-4FA2-83C6-C83C44897566}
          LegacyId            #24
          ExtendedDataType    #ExpirationDateTime
        ENDPROPERTIES
        
      FIELD #ZipCode
        STRING
        PROPERTIES
          Name                #ZipCode
          Table               #LogisticsPostalAddress
          Origin              #{AC8425F4-A998-48A0-9D02-3ECFA3162F0F}
          LegacyId            #3
          ExtendedDataType    #LogisticsAddressZipCodeId
        ENDPROPERTIES
        
      FIELD #ZipCodeRecId
        INT64
        PROPERTIES
          Name                #ZipCodeRecId
          Table               #LogisticsPostalAddress
          Origin              #{103AB53C-21F9-4AFD-B0EA-6B0F3FC009CF}
          LegacyId            #22
          ExtendedDataType    #LogisticsAddressZipCodeRecId
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #Address
          #CountryRegionId
          #ZipCode
          #State
          #County
          #Street
          #Latitude
          #Longitude
          #TimeZone
          #City
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoIdentification
        PROPERTIES
          Name                #AutoIdentification
        ENDPROPERTIES
        
        GROUPFIELDS
          #Location
          #ValidFrom
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Address
        PROPERTIES
          Name                #Address
          Label               #@SYS9362
        ENDPROPERTIES
        
        GROUPFIELDS
          #Street
          #StreetNumber
          #BuildingCompliment
          #DistrictName
          #ZipCode
          #City
          #County
          #State
          #CountryRegionId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressDisplay
        PROPERTIES
          Name                #AddressDisplay
          Label               #@SYS9362
        ENDPROPERTIES
        
        GROUPFIELDS
          #Address
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #City
          #StreetNumber
          #BuildingCompliment
          #PostBox
          #CityRecId
          #District
          #Location
          #ZipCodeRecId
          #DistrictName
          #ValidTo
          #StreetId_RU
          #HouseId_RU
          #FlatId_RU
          #Building_RU
          #Apartment_RU
          #PrivateForParty
          #IsPrivate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPIdentification
        PROPERTIES
          Name                #EPIdentification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #TimeZone
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPMiniPage
        PROPERTIES
          Name                #EPMiniPage
          Label               #@SYS108232
        ENDPROPERTIES
        
        GROUPFIELDS
          #Street
          #ZipCode
          #County
          #CountryRegionId
          #City
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #KanaName_JP
        PROPERTIES
          Name                #KanaName_JP
          Label               #@SYS4003819
        ENDPROPERTIES
        
        GROUPFIELDS
          #CityKana_JP
          #StreetKana_JP
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Location
        PROPERTIES
          Name                #Location
          Label               #@SYS108832
        ENDPROPERTIES
        
        GROUPFIELDS
          #Latitude
          #Longitude
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #LocationReference
        PROPERTIES
          Name                #LocationReference
          Label               #@SYS33556
        ENDPROPERTIES
        
        GROUPFIELDS
          #Location
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TimeZone
        PROPERTIES
          Name                #TimeZone
          Label               #@SYS102501
        ENDPROPERTIES
        
        GROUPFIELDS
          #TimeZone
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #AK1
      PROPERTIES
        Name                #AK1
        AllowDuplicates     #No
        AlternateKey        #Yes
        ValidTimeStateKey   #Yes
        ValidTimeStateMode  #Gap
        Origin              #{2B030002-0B7D-1000-414B-310000000000}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #Location
        #ValidFrom
      ENDINDEXFIELDS
      
      #PrivateIdx
      PROPERTIES
        Name                #PrivateIdx
        Origin              #{2FE69964-21C2-43AE-8B26-3816E087413B}
      ENDPROPERTIES
      
      INDEXFIELDS
        #IsPrivate
        #PrivateForParty
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #City
        PROPERTIES
          Name                #City
          Table               #LogisticsAddresssCity
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddresssCity
          Role                #LogisticsAddresssCity_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CityRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CityName
        PROPERTIES
          Name                #CityName
          Table               #LogisticsAddresssCity
          RelationshipType    #Link
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #City
            RelatedField        #Name
            SourceEDT           #LogisticsAddressCity
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Country
        PROPERTIES
          Name                #Country
          Table               #LogisticsAddressCountryRegion
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #LogisticsAddressCountryRegion
          Role                #LogisticsAddressCountryRegion_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CountryRegionId
            RelatedField        #CountryRegionId
            SourceEDT           #LogisticsAddressCountryRegionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #County
        PROPERTIES
          Name                #County
          Table               #LogisticsAddressCounty
          EntityRelationshipRole  #@SYS125028
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountryRegionId
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #State
            RelatedField        #StateId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #County
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DirPartyTable_PrivateForParty
        PROPERTIES
          Name                #DirPartyTable_PrivateForParty
          Table               #DirPartyTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PrivateForParty
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DistirctName
        PROPERTIES
          Name                #DistirctName
          Table               #LogisticsAddressDistrict
          RelationshipType    #Link
          UseDefaultRoleNames #Yes
          RelatedTableRole    #LogisticsPostalAddress_DistrictName
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DistrictName
            RelatedField        #Name
            SourceEDT           #LogisticsAddressDistrictName
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #District
        PROPERTIES
          Name                #District
          Table               #LogisticsAddressDistrict
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressDistrict
          Role                #LogisticsAddressDistrict_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #District
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Flat_RU
        PROPERTIES
          Name                #Flat_RU
          Table               #LogisticsAddressFlatNumber_RU
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressFlatNumber_RU
          Role                #LogisticsAddressFlatNumber_RU_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #FlatId_RU
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #House_RU
        PROPERTIES
          Name                #House_RU
          Table               #LogisticsAddressHouseNumber_RU
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressHouseNumber_RU
          Role                #LogisticsAddressHouseNumber_RU_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #HouseId_RU
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Location
        PROPERTIES
          Name                #Location
          Table               #LogisticsLocation
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #LocationRelatedTableRole
          Role                #LocationRole
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Location
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #State
        PROPERTIES
          Name                #State
          Table               #LogisticsAddressState
          EntityRelationshipRole  #@SYS125028
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountryRegionId
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #State
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Street_RU
        PROPERTIES
          Name                #Street_RU
          Table               #LogisticsAddressStreet_RU
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressStreet_RU
          Role                #LogisticsAddressStreet_RU_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #StreetId_RU
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ZipCode
        PROPERTIES
          Name                #ZipCode
          Table               #LogisticsAddressZipCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsAddressZipCode
          Role                #LogisticsAddressZipCode_LogisticsPostalAddress
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ZipCodeRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ZipCodeId
        PROPERTIES
          Name                #ZipCodeId
          Table               #LogisticsAddressZipCode
          Validate            #No
          RelationshipType    #Link
          UseDefaultRoleNames #Yes
          RelatedTableRole    #LogisticsAddressZipCodeId
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ZipCode
            RelatedField        #ZipCode
            SourceEDT           #LogisticsAddressZipCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #MarkupTrans(MCRDeliveryPostalAddress_FK)
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Restricted
        Relation            #MCRDeliveryPostalAddress_FK
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #activate
        #/// <summary>
        #///     Activate the inactivated address record and its corresponding location record.
        #/// </summary>
        #/// <param name="_callerRecord">
        #///     Common table buffer of the entity to activate the address.
        #/// </param>
        #
        #public void activate(Common _callerRecord = null)
        #{
        #    this.LogisticsAddressDateEffectiveMap::activate(_callerRecord);
        #}
      ENDSOURCE
      SOURCE #aosValidateDelete
        #public boolean aosValidateDelete()
        #{
        #    boolean ret;
        #
        #    ret = super() && LogisticsLocationEntity::canDeletePostalAddress(this.RecId,conNull(),false);
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #axLogisticsPostalAddress
        #public AxLogisticsPostalAddress axLogisticsPostalAddress()
        #{
        #    return AxLogisticsPostalAddress::newLogisticsPostalAddress(this);
        #}
      ENDSOURCE
      SOURCE #countyFullName_RU
        #/// <summary>
        #/// Edit-method accessing the address county full name.
        #/// </summary>
        #/// <param name="_set">
        #/// A <c>Boolean</c> value indicating whether to set the value.
        #/// </param>
        #/// <param name="_value">
        #/// A <c>String</c> value used to set the value of the county.
        #/// </param>
        #/// <returns>
        #/// Street name.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #//<GEERU>
        #edit LogisticsAddressCountyName countyFullName_RU(
        #    boolean                    _set   = false,
        #    LogisticsAddressCountyName _value = '')
        #{
        #    LogisticsAddressCounty tmpCounty;
        #
        #    if (_set)
        #    {
        #        select firstonly tmpCounty
        #            where (! this.County || tmpCounty.CountyId ==   this.County)         &&
        #                  (! _value      || tmpCounty.Name     like _value)              &&
        #                  tmpCounty.CountryRegionId            ==   this.CountryRegionId &&
        #                  tmpCounty.StateId                    ==   this.State;
        #
        #        if (tmpCounty.RecId)
        #        {
        #            this.County = tmpCounty.CountyId;
        #        }
        #        else
        #        {
        #            warning(strFmt("@SYS316757", tablePName(LogisticsAddressCounty)));
        #        }
        #    }
        #
        #    if (! tmpCounty)
        #    {
        #        tmpCounty = LogisticsAddressCounty::find(this.CountryRegionId, this.State, this.County);
        #    }
        #
        #    return tmpCounty.fullName_RU(false);
        #}
        #//</GEERU>
      ENDSOURCE
      SOURCE #deactivate
        #/// <summary>
        #///     Deactivate the address record and its corresponding location record.
        #/// </summary>
        #/// <param name="_callerRecord">
        #///     Common table buffer of the entity to deactivate the address.
        #/// </param>
        #/// <param name="_deleteDefaults">
        #///     Remove the defaults if exists when deactivating the address.
        #/// </param>
        #///
        #public void deactivate(Common _callerRecord = null, boolean _deleteDefaults = false)
        #{
        #    this.LogisticsAddressDateEffectiveMap::deactivate(_callerRecord , _deleteDefaults);
        #}
      ENDSOURCE
      SOURCE #displayLocationDescription
        #/// <summary>
        #///     Gets the Description from the LogisticsLocation table.
        #/// </summary>
        #/// <returns>
        #///     The Description field from the Logistics Location table.
        #/// </returns>
        #public display Description displayLocationDescription()
        #{
        #    LogisticsLocation       location;
        #
        #    location = LogisticsLocation::find(this.Location);
        #    if (!location)
        #    {
        #        return "";
        #    }
        #
        #    return location.Description;
        #}
      ENDSOURCE
      SOURCE #formatAddress_RU
        #/// <summary>
        #/// Formats the address to a string.
        #/// </summary>
        #/// <param name="_formatId">
        #/// The format to use.
        #/// </param>
        #/// <param name="_addressAsLine">
        #/// If true then address will be represented as a line without line breaks.
        #/// </param>
        #/// <returns>
        #/// The formatted address.
        #/// </returns>
        #public LogisticsAddressing formatAddress_RU(LogisticsAddressFormatId _formatId, boolean _addressAsLine = false)
        #{
        #    return LogisticsPostalAddress::formatAddress(
        #        this.Street,
        #        this.ZipCode, this.City,
        #        this.CountryRegionId,
        #        this.State,
        #        this.County,
        #        this.DistrictName,
        #        this.StreetNumber,
        #        this.BuildingCompliment,
        #        this.PostBox,
        #        this.CityRecId,
        #        this.District,
        #        this.StreetId_RU,
        #        this.HouseId_RU,
        #        this.FlatId_RU,
        #        this.Building_RU,
        #        this.Apartment_RU,
        #        _formatId);
        #}
      ENDSOURCE
      SOURCE #formatLogisticsAddressNL
        #public server void formatLogisticsAddressNL()
        #{
        #    #isoCountryRegionCodes
        #    #define.space(' ')
        #    LogisticsAddressZipCodeId   zipCode;
        #    LogisticsAddressStreet      street;
        #
        #    street = subStr(this.Street, 1, 7);
        #    if (subStr(street, 7, 1) == #space)
        #    {
        #        street = strRem(street, #space);
        #    }
        #
        #    if (strLen(street) == 6)
        #    {
        #        zipCode = LogisticsPostalAddressMap::formatZipCodeStrForNL(street);
        #        if (strLen(zipCode) == 7)
        #        {
        #            this.Street = zipCode + #space + subStr(this.Street, 8, strLen(this.Street));
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #getAddressAsLine_RU
        #/// <summary>
        #/// Gets address as a string without end-of-line symbols.
        #/// </summary>
        #/// <returns>
        #/// The Address string with end-of-line symbols replaced by spaces.
        #/// </returns>
        #//<GEERU>
        #public LogisticsAddressing getAddressAsLine_RU()
        #{
        #    return strReplace(this.Address, '\n', ' ');
        #}
        #//</GEERU>
      ENDSOURCE
      SOURCE #initValue
        #public void initValue()
        #{
        #    super();
        #    this.CountryRegionId = SysUserInfo::find().DefaultCountryRegion;
        #    if (this.CountryRegionId)
        #    {
        #        this.modifiedField(fieldNum(LogisticsPostalAddress, CountryRegionId));
        #    }
        #}
      ENDSOURCE
      SOURCE #insert
        #/// <summary>
        #/// Override insert and check if ValidFrom and ValidTo is filled-in, otherwise default.
        #/// </summary>
        #public void insert()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    SysUserInfo sysUserInfo;
        #
        #    if (!this.Location)
        #    {
        #        this.Location = LogisticsLocation::create().RecId;
        #    }
        #
        #    // <GEERU>
        #    if ((LogisticsAddressCountryRegion::find(this.CountryRegionId).isOcode == #isoRU) && ! LogisticsPostalAddress::findByLocation(this.Location))
        #    {
        #        this.ValidFrom = DateTimeUtil::newDateTime(DateTimeUtil::date(this.ValidFrom), 0);
        #    }
        #    else
        #    {
        #    // </GEERU>
        #        if (this.ValidFrom == DateTimeUtil::minValue())
        #        {
        #            this.ValidFrom = DateTimeUtil::utcNow();
        #        }
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #    if (this.ValidTo == DateTimeUtil::minValue())
        #    {
        #        this.ValidTo = DateTimeUtil::maxValue();
        #    }
        #
        #    ttsbegin;
        #
        #    super();
        #
        #    // Replace country region token in formatted address with the translatad name based on the global language
        #    DirUtility::replaceAddressToken(this);
        #
        #    //Update the DefaultCountryRegion in SysUserInfo table if it is blank
        #    sysUserInfo = SysUserInfo::find(curUserId(), true);
        #    if (sysUserInfo.DefaultCountryRegion == '')
        #    {
        #        sysUserInfo.DefaultCountryRegion = this.CountryRegionId;
        #        sysUserInfo.update();
        #    }
        #
        #    ttscommit;
        #
        #    this.mcrAutoChangeTaxGroup();
        #}
        #
      ENDSOURCE
      SOURCE #isEffective
        #/// <summary>
        #/// Determines whether the current record is effective or not.
        #/// </summary>
        #/// <returns>
        #/// <c>Boolean</c> value for the effective status.
        #/// </returns>
        #public boolean isEffective()
        #{
        #    utcdatetime validDateTime = DirUtility::getCurrentDateTime();
        #
        #    if (this.isFieldDataRetrieved(fieldStr(LogisticsPostalAddress, ValidFrom)) &&
        #        this.isFieldDataRetrieved(fieldStr(LogisticsPostalAddress, ValidTo)))
        #    {
        #        return (this.ValidFrom <= validDateTime && this.ValidTo >= validDateTime);
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #mcrAutoChangeTaxGroup
        #/// <summary>
        #/// Changes the tax group if auto tax search is turned on.
        #/// Does nothing if auto tax search is turned off.
        #/// </summary>
        #void mcrAutoChangeTaxGroup()
        #{
        #    MCRAutoTaxSearch autoTaxSearch;
        #    LogisticsLocationExt logisticsLocationExt = LogisticsLocationExt::find(this.Location);
        #    if(this.RecId)
        #    {
        #        autoTaxSearch = new MCRAutoTaxSearch();
        #
        #        if (autoTaxSearch.autoSearchActive())
        #        {
        #            ttsbegin;
        #            logisticsLocationExt.selectForUpdate(true);
        #            logisticsLocationExt.TaxGroup = autoTaxSearch.setSalesTaxGroup(this.City,
        #                                                           this.State,
        #                                                           this.County,
        #                                                           this.ZipCode,
        #                                                           this.CountryRegionId);
        #            if(logisticsLocationExt.RecId)
        #            {
        #                if(logisticsLocationExt.validateWrite())
        #                {
        #                    logisticsLocationExt.update();
        #                }
        #            }
        #            else if(logisticsLocationExt.TaxGroup)
        #            {
        #                logisticsLocationExt.Location = this.Location;
        #                if(logisticsLocationExt.validateWrite())
        #                {
        #                    logisticsLocationExt.insert();
        #                }
        #            }
        #            ttscommit;
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #mcrIsAddresElementMandatory
        #/// <summary>
        #/// Determines whethere the passed <c>LogisticsAddressElement</c> object is mandatory.
        #/// </summary>
        #/// <param name="_element">
        #/// The <c>LogisticsAddressElement</c> object for which this method determines if it is mandatory.
        #/// </param>
        #/// <returns>
        #/// true if the passed <c>LogisticsAddressElement</c> is mandatory; otherwise, false.
        #/// </returns>
        #public boolean mcrIsAddresElementMandatory(LogisticsAddressElement _element)
        #{
        #    boolean mandatory;
        #
        #    mandatory = LogisticsAddressFormatHeading::mcrIsAddresElementMandatory(this.CountryRegionId, _element);
        #
        #    return mandatory;
        #}
        #
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    AxLogisticsPostalAddress    axLogisticsPostalAddress;
        #    Object                      formDataSourceObject;
        #    FormDataSource              formDataSource;
        #    LogisticsAddressZipCode     zipCodeRecord;
        #    LogisticsAddressDistrict    districtRecord;
        #
        #    super(_fieldId);
        #
        #    if (this.isFormDataSource())
        #    {
        #        switch (_fieldId)
        #        {
        #            case fieldNum(LogisticsPostalAddress, ZipCode):
        #                select RecId from zipCodeRecord where zipCodeRecord.ZipCode == this.ZipCode;
        #                if (this.ZipCodeRecId != zipCodeRecord.RecId)
        #                {
        #                    this.ZipCodeRecId = 0;
        #                }
        #                if (this.ZipCode)
        #                {
        #                    this.LogisticsPostalAddressMap::modifiedFieldZipCode();
        #                }
        #                break;
        #
        #            case fieldNum(LogisticsPostalAddress, ZipCodeRecId):
        #                select ZipCode from zipCodeRecord where zipCodeRecord.RecId == this.ZipCodeRecId;
        #                this.ZipCode = zipCodeRecord.ZipCode;
        #                this.LogisticsPostalAddressMap::modifiedFieldZipCode();
        #                break;
        #
        #            case fieldNum(LogisticsPostalAddress, District):
        #                select Name from districtRecord where districtRecord.RecId == this.District;
        #                this.DistrictName = districtRecord.Name;
        #                this.LogisticsPostalAddressMap::modifiedField(_fieldId);
        #                break;
        #
        #            case fieldNum(LogisticsPostalAddress, DistrictName):
        #                if (this.District)
        #                {
        #                    select Name from districtRecord where districtRecord.RecId == this.District;
        #                    if (this.DistrictName != districtRecord.Name)
        #                    {
        #                        this.District = 0;
        #                    }
        #                }
        #                this.LogisticsPostalAddressMap::modifiedField(_fieldId);
        #                break;
        #
        #            case fieldNum(LogisticsPostalAddress, City):
        #                if (this.City != LogisticsAddresssCity::getCityName(this.CityRecId))
        #                {
        #                    this.CityRecId = 0;
        #                }
        #                this.LogisticsPostalAddressMap::modifiedField(_fieldId);
        #                break;
        #
        #            case fieldNum(LogisticsPostalAddress, Street):
        #                this.formatLogisticsAddressNL();
        #                this.LogisticsPostalAddressMap::modifiedField(_fieldId);
        #                break;
        #
        #            default :
        #                this.LogisticsPostalAddressMap::modifiedField(_fieldId);
        #                break;
        #        }
        #
        #        formDataSourceObject  = this.dataSource();
        #        if (formDataSourceHasMethod(formDataSourceObject, classStr(AxLogisticsPostalAddress)))
        #        {
        #            axLogisticsPostalAddress    = formDataSourceObject.axLogisticsPostalAddress();
        #            formDataSource              = formDataSourceObject;
        #            axLogisticsPostalAddress.validTimeStateUpdateMode(formDataSource.validTimeStateUpdate());
        #        }
        #    }
        #    else
        #    {
        #        axLogisticsPostalAddress = this.axLogisticsPostalAddress();
        #        axLogisticsPostalAddress.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
        #        if (axLogisticsPostalAddress)
        #        {
        #            axLogisticsPostalAddress.setFieldAsTouched(_fieldId);
        #            axLogisticsPostalAddress.modify();
        #        }
        #    }
        #    // Change the tax group whenever the address is changed.
        #    if (_fieldId == fieldNum(LogisticsPostalAddress, City) ||
        #        _fieldId == fieldNum(LogisticsPostalAddress, State) ||
        #        _fieldId == fieldNum(LogisticsPostalAddress, County) ||
        #        _fieldId == fieldNum(LogisticsPostalAddress, ZipCode) ||
        #        _fieldId == fieldNum(LogisticsPostalAddress, CountryRegionId) &&
        #        this.RecId)
        #    {
        #        this.mcrAutoChangeTaxGroup();
        #    }
        #
        #    if (formDataSource)
        #    {
        #        formDataSource.refresh();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #postLoad
        #public void postLoad()
        #{
        #    super();
        #
        #    // Replace country region token in formatted address with the translatad name based on the global language
        #    DirUtility::replaceAddressToken(this);
        #}
      ENDSOURCE
      SOURCE #stateFullName_RU
        #/// <summary>
        #/// Edit-method accessing address state full name.
        #/// </summary>
        #/// <param name="_set">
        #/// A <c>Boolean</c> determining whether to set the value or not.
        #/// </param>
        #/// <param name="_value">
        #/// A <c>String</c> representing the state name to set.
        #/// </param>
        #/// <returns>
        #/// Full address state name together with abbreviation code by utilizing the <c>LogisticsAddressState</c> <c>fullName_RU</c> method.
        #/// </returns>
        #/// <remarks>
        #/// Utilizes sql <c>like</c> operator to retrieve a suitable state record.
        #/// </remarks>
        #// BP deviation documented
        #[SysClientCacheDataMethodAttribute(true)]
        #//<GEERU>
        #edit LogisticsAddressStatename stateFullName_RU(
        #    boolean                   _set   = false,
        #    LogisticsAddressStatename _value = '')
        #{
        #    LogisticsAddressState tmpState;
        #
        #    if (_set)
        #    {
        #        select firstonly tmpState
        #            where (! this.State || tmpState.StateId ==   this.State) &&
        #                  (! _value     || tmpState.Name    like _value)     &&
        #                  tmpState.CountryRegionId          ==   this.CountryRegionId;
        #
        #        if (tmpState.RecId)
        #        {
        #            this.State = tmpState.StateId;
        #        }
        #        else
        #        {
        #            warning(strFmt("@SYS316757", tablePName(LogisticsAddressState)));
        #        }
        #    }
        #
        #    if (! tmpState)
        #    {
        #        tmpState = LogisticsAddressState::find(this.CountryRegionId, this.State);
        #    }
        #
        #    return tmpState.fullName_RU(false);
        #}
        #//</GEERU>
      ENDSOURCE
      SOURCE #update
        #/// <summary>
        #/// Updates a record in table <c>LogisticsPostalAddress</c>.
        #/// </summary>
        #/// <remarks>
        #/// If replicate is enabled, action is inserted into the <c>RetailConnPreactionTable</c>.
        #/// </remarks>
        #public void update()
        #{
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #
        #    // Invalidate the cache if country/region changes
        #    if (this.orig().CountryRegionId != this.CountryRegionId)
        #    {
        #        // When changing the location address, several scopes could be affected and must be invalidated.
        #        SysCountryRegionCode::locationCountryRegionChanged(this.Location);
        #    }
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && TaxParameters::find().vat_in)
        #    {
        #        if (this.State != this.orig().State)
        #        {
        #            SalesLineType::updateVATCommodityCodeByAddress_IN(this);
        #        }
        #    }
        #    // </GIN>
        #
        #    super();
        #
        #    // Replace country region token in formatted address with the translatad name based on the global language
        #    DirUtility::replaceAddressToken(this);
        #}
        #
        #
        #
      ENDSOURCE
      SOURCE #validateCity_BR
        #/// <summary>
        #/// Validates the value of <c>City</c> field.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the City is valid. False, otherwise.
        #/// </returns>
        #// <GBR>
        #public boolean validateCity_BR()
        #{
        #    LogisticsAddresssCity   city;
        #
        #    if (this.City)
        #    {
        #        if (!this.State)
        #        {
        #            return checkFailed(strFmt("@GLS222751", fieldStr(LogisticsPostalAddress, State), fieldStr(LogisticsPostalAddress, City)));
        #        }
        #
        #        select firstOnly city
        #            where   city.Name               == this.City
        #                &&  city.StateId            == this.State
        #                &&  city.CountryRegionId    == this.CountryRegionId;
        #
        #        if (!city)
        #        {
        #            return checkFailed(strFmt("@GLS222752",
        #                                this.City,
        #                                this.State,
        #                                this.CountryRegionId));
        #        }
        #    }
        #
        #    return true;
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean validateDelete()
        #{
        #    boolean ret;
        #
        #    ret = super() && LogisticsLocationEntity::canDeletePostalAddress(this.RecId,conNull(),true);
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldIdToCheck)
        #{
        #    boolean                     ret;
        #    LogisticsAddressParameters  parameters;
        #
        #    parameters = LogisticsAddressParameters::find();
        #
        #    switch (_fieldIdToCheck)
        #    {
        #        case fieldNum(LogisticsPostalAddress, ZipCode):
        #            if (parameters.ValidateZipCode)
        #            {
        #                ret = this.LogisticsPostalAddressMap::validatePostalCode(_fieldIdToCheck) && super(_fieldIdToCheck);
        #            }
        #            else
        #            {
        #                ret = true;
        #            }
        #            break;
        #
        #        case fieldNum(LogisticsPostalAddress, City):
        #            if (parameters.ValidateCity)
        #            {
        #                ret = super(_fieldIdToCheck);
        #            }
        #            else
        #            {
        #                ret = true;
        #            }
        #            break;
        #
        #        case fieldNum(LogisticsPostalAddress, DistrictName):
        #            if (parameters.ValidateDistrict)
        #            {
        #                ret = super(_fieldIdToCheck);
        #            }
        #            else
        #            {
        #                ret = true;
        #            }
        #            break;
        #
        #        default:
        #            ret = super(_fieldIdToCheck);
        #            break;
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #validateWrite
        #// <GBR>
        #public boolean validateWrite()
        #{
        #    boolean ret;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    DirPartyLocation dirPartyLocation;
        #    TaxRegistration  taxRegistration;
        #    // </GEERU>
        #
        #    ret = super();
        #
        #    if (ret && BrazilParameters::isEnabled())
        #    {
        #        ret = this.validateCity_BR();
        #    }
        #
        #    // <GEERU>
        #    if (ret
        #        && this.RecId
        #        && this.CountryRegionId != this.orig().CountryRegionId
        #        && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        select firstonly RecId from dirPartyLocation
        #            where dirPartyLocation.Location == this.Location
        #            exists join taxRegistration
        #                where taxRegistration.DirPartyLocation == dirPartyLocation.RecId;
        #
        #        if (dirPartyLocation.RecId)
        #        {
        #            ret = checkFailed("@GLS223773");
        #        }
        #    }
        #    // </GEERU>
        #
        #    return ret;
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #whsAddressFormatValidation
        #/// <summary>
        #/// Validates the address based on required fields of the address format.
        #/// </summary>
        #/// <returns>
        #/// true if validation success; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Specific to warehousing
        #/// </remarks>
        #boolean whsAddressFormatValidation()
        #{
        #    LogisticsAddressFormatLines     formatLines;
        #    LogisticsAddressFormatId        formatId;
        #    boolean                         ret = true;
        #
        #    formatId = LogisticsAddressCountryRegion::find(this.CountryRegionId).AddrFormat;
        #
        #    while select Element, InActive from formatLines
        #        where formatLines.AddrFormat == formatId
        #    {
        #        if (!formatLines.InActive)
        #        {
        #            switch (formatLines.Element)
        #            {
        #                case LogisticsAddressElement::StreetName:
        #                    if (!this.Street)
        #                    {
        #                        ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::StreetName));
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::ZipCode:
        #                    if (!this.ZipCode)
        #                    {
        #                       ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::ZipCode));
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::City:
        #                    if (!this.City)
        #                    {
        #                        ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::City));
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::County:
        #                    if (!this.County)
        #                    {
        #                        ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::County));
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::State:
        #                    if (!this.State)
        #                    {
        #                        ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::State));
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::CountryRegion:
        #                    if (!this.CountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@WAX2996", LogisticsAddressElement::CountryRegion));
        #                    }
        #                    break;
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #addressFromRecId
        #/// <summary>
        #/// Gets the address that is associated with the <c>LogisticsPostalAddressRecId</c> field on the
        #/// <c>LogisticsPostalAddress</c> table.
        #/// </summary>
        #/// <param name="_recId">
        #/// The record ID of the <c>LogisticsPostalAddress</c> record.
        #/// </param>
        #/// <returns>
        #/// The postal address.
        #/// </returns>
        #public static LogisticsAddressing addressFromRecId(LogisticsPostalAddressRecId _recId)
        #{
        #    LogisticsPostalAddress  logisticsAddress;
        #    utcdatetime beginDate = DateTimeUtil::minValue();
        #    utcdatetime endDate = DateTimeUtil::maxValue();
        #
        #    if (_recId)
        #    {
        #        select validtimestate(beginDate,endDate) Address from logisticsAddress
        #            where logisticsAddress.RecId == _recId;
        #    }
        #    return logisticsAddress.Address;
        #}
      ENDSOURCE
      SOURCE #addressRecIdFromLocationRecId
        #/// <summary>
        #/// Gets the record ID of the <c>LogisticsPostalAddress</c> table from the <c>LogisticsLocation</c>
        #/// record ID.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>LogisticsPostalAddressRecId</c> record ID of the <c>LogisticsLocation</c> table.
        #/// </param>
        #/// <returns>
        #/// The <c>LogisticsPostalAddress</c> record ID.
        #/// </returns>
        #public static LogisticsPostalAddressRecId addressRecIdFromLocationRecId(LogisticsLocationRecId _recId)
        #{
        #    LogisticsPostalAddress  logisticsAddress;
        #
        #    if (_recId)
        #    {
        #        select RecId from logisticsAddress
        #            where logisticsAddress.Location == _recId;
        #    }
        #    return logisticsAddress.RecId;
        #}
      ENDSOURCE
      SOURCE #element2fieldId
        #/// <summary>
        #/// Determines the corresponding field ID by using the element type.
        #/// </summary>
        #/// <param name="_element">
        #/// An <c>LogisticsAddressElement</c> enumeration type.
        #/// </param>
        #/// <param name="_countryRegionId">
        #/// The <c>LogisticsAddressCountryRegionId</c> string, that identifies the Country/region to which the address is related.
        #/// </param>
        #/// <returns>
        #/// A field ID of the corresponding element.
        #/// </returns>
        #/// <remarks>
        #/// This method is used to manage the visibility of fields in the <c>LogisticsPostalAddress</c> form.
        #/// </remarks>
        #public static FieldId element2fieldId(LogisticsAddressElement _element, LogisticsAddressCountryRegionId _countryRegionId = '')
        #{
        #    switch (_element)
        #    {
        #        case LogisticsAddressElement::BuildingCompliment :
        #            return fieldNum(LogisticsPostalAddress, BuildingCompliment);
        #        case LogisticsAddressElement::City :
        #            // <GEERU>
        #            if (isCountryRegionRU(_countryRegionId))
        #            {
        #                return fieldNum(LogisticsPostalAddress, CityRecId);
        #            }
        #            //</GEERU>
        #            return fieldNum(LogisticsPostalAddress, City);
        #        case LogisticsAddressElement::CountryRegion :
        #            return fieldNum(LogisticsPostalAddress, CountryRegionId);
        #        case LogisticsAddressElement::County :
        #            return fieldNum(LogisticsPostalAddress, County);
        #        case LogisticsAddressElement::District :
        #            // <GEERU>
        #            if (isCountryRegionRU(_countryRegionId))
        #            {
        #                return fieldNum(LogisticsPostalAddress, District);
        #            }
        #            //</GEERU>
        #            return fieldNum(LogisticsPostalAddress, DistrictName);
        #        case LogisticsAddressElement::PostBox :
        #            return fieldNum(LogisticsPostalAddress, PostBox);
        #        case LogisticsAddressElement::State :
        #            return fieldNum(LogisticsPostalAddress, State);
        #        case LogisticsAddressElement::StreetName :
        #            return fieldNum(LogisticsPostalAddress, Street);
        #        case LogisticsAddressElement::StreetNumber :
        #            return fieldNum(LogisticsPostalAddress, StreetNumber);
        #        case LogisticsAddressElement::ZipCode :
        #            return fieldNum(LogisticsPostalAddress, ZipCode);
        #        // <GEERU>
        #        case LogisticsAddressElement::Flat_RU :
        #            return fieldNum(LogisticsPostalAddress, FlatId_RU);
        #        case LogisticsAddressElement::House_RU :
        #            return fieldNum(LogisticsPostalAddress, HouseId_RU);
        #        case LogisticsAddressElement::StreetId_RU:
        #            return fieldNum(LogisticsPostalAddress, StreetId_RU);
        #        case LogisticsAddressElement::Building_RU:
        #            return fieldNum(LogisticsPostalAddress, Building_RU);
        #        case LogisticsAddressElement::Apartment_RU:
        #            return fieldNum(LogisticsPostalAddress, Apartment_RU);
        #        // </GEERU>
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #findByAddress_IN
        #/// <summary>
        #///  Reads the <c>LogisticsPostalAddress</c> table for the specified Addressing.
        #/// </summary>
        #/// <param name="_addressing">
        #/// The addressing is used to select the record.
        #/// </param>
        #/// <returns>
        #/// A buffer containing <c>LogisticsPostalAddress</c> table.
        #/// </returns>
        #// <GIN>
        #public static LogisticsPostalAddress findByAddress_IN(Addressing _addressing)
        #{
        #    LogisticsPostalAddress logisticsPostalAddress;
        #
        #    select logisticsPostalAddress
        #        where logisticsPostalAddress.Address   == _addressing;
        #
        #    return logisticsPostalAddress;
        #}
        #// </GIN>
        #
        #
      ENDSOURCE
      SOURCE #findByLocation
        #public static LogisticsPostalAddress findByLocation(LogisticsLocationRecId _recId,  boolean _update = false )
        #{
        #    LogisticsPostalAddress logisticsAddress;
        #
        #    if (_recId)
        #    {
        #        logisticsAddress.selectForUpdate(_update);
        #
        #        select firstonly logisticsAddress
        #            where logisticsAddress.Location == _recId;
        #    }
        #    return logisticsAddress;
        #}
        #
      ENDSOURCE
      SOURCE #findByLocationAndValidDateTime_IN
        #/// <summary>
        #/// Gets LogisticsPostalAddress by Location, FromDatetime and ToDateTime.
        #/// </summary>
        #/// <param name="_recId">
        #/// Record id of LogisticsLocation.
        #/// </param>
        #/// <param name="fromDateTime">
        #/// From date time.
        #/// </param>
        #/// <param name="toDateTime">
        #/// To date time.
        #/// </param>
        #/// <param name="_update">
        #/// A Boolean value that indicates whether the record is to be selected for update.
        #/// </param>
        #/// <returns>
        #/// The record that matches the specified <c>recId</c> value.
        #/// </returns>
        #// <GIN>
        #public static LogisticsPostalAddress findByLocationAndValidDateTime_IN(
        #    LogisticsLocationRecId _recId,
        #    utcdatetime fromDateTime,
        #    utcdatetime toDateTime,
        #    boolean _update = false)
        #{
        #    LogisticsPostalAddress logisticsAddress;
        #
        #    if (_recId)
        #    {
        #        logisticsAddress.selectForUpdate(_update);
        #
        #        select firstonly validTimeState(fromDateTime, toDateTime) logisticsAddress
        #            where logisticsAddress.Location == _recId;
        #    }
        #    return logisticsAddress;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #findRecId
        #/// <summary>
        #///    Retrieves the record that matches the provided <c>recId</c> value.
        #/// </summary>
        #/// <param name="_recId">
        #///    The record to select from the table.
        #/// </param>
        #/// <param name="_update">
        #///    A Boolean value that indicates whether the record is to be selected for update.
        #/// </param>
        #/// <param name="_validFrom">
        #///    The utcDateTime for the validFrom range.  Default is minValue().
        #/// </param>
        #/// <param name="_validTo">
        #///    The utcDateTime for the validTo range.  Default is maxValue().
        #/// </param>
        #/// <returns>
        #///    The record that matches the specified <c>recId</c> value.
        #/// </returns>
        #/// <remarks>
        #///    This method will return the record no matter the record is invalid or valid on the date effective.
        #/// </remarks>
        #public static LogisticsPostalAddress findRecId(
        #    RecId   _recId,
        #    boolean _update = false,
        #    utcdatetime _validFrom = DateTimeUtil::minValue(),
        #    utcdatetime _validTo = DateTimeUtil::maxValue())
        #{
        #    LogisticsPostalAddress logisticsAddress;
        #
        #    if (_recId)
        #    {
        #        logisticsAddress.selectForUpdate(_update);
        #
        #        select firstonly validtimestate(_validFrom, _validTo) logisticsAddress
        #            where logisticsAddress.RecId == _recId;
        #    }
        #    return logisticsAddress;
        #}
        #
      ENDSOURCE
      SOURCE #formatAddress
        #public static server LogisticsAddressing formatAddress(
        #    LogisticsAddressStreet            _street,
        #    LogisticsAddressZipCodeId         _zipcode,
        #    LogisticsAddressCityName          _city,
        #    LogisticsAddressCountryRegionId   _countryRegion,
        #    LogisticsAddressStateId           _state,
        #    LogisticsAddressCountyId          _county,
        #    LogisticsAddressDistrictName      districtName = '',
        #    LogisticsAddressStreetNumber      streetNumber = '',
        #    LogisticsAddressBuildingCompliment buildingCompliment = '',
        #    // <GEERU>
        #    LogisticsAddressPostBox            postBox            = '',
        #    LogisticsAddressCityRecId          _cityId            = 0,
        #    LogisticsAddressDistrictRecId      _districtId        = 0,
        #    LogisticsAddressStreetID_RU        _streetId          = 0,
        #    LogisticsAddressHouseId_RU         _houseId           = 0,
        #    LogisticsAddressFlatId_RU          _flatId            = 0,
        #    LogisticsAddressBuilding_RU        _building          = '',
        #    LogisticsAddressApartment_RU       _apartment         = '',
        #    // </GEERU>
        #    // <RUPAY>
        #    LogisticsAddressFormatId           _addrFormat        = '')
        #    // </RUPAY>
        #{
        #    #define.LineFeed('\n')
        #    #DirParty
        #
        #    /* <SYS>
        #    LogisticsAddressFormatId         addrFormat      = LogisticsPostalAddressMap::addressFormatId(_countryRegion);
        #    </SYS> */
        #    // <RUPAY>
        #    LogisticsAddressFormatId         addrFormat      = _addrFormat ? _addrFormat : LogisticsPostalAddressMap::addressFormatId(_countryRegion);
        #    // </RUPAY>
        #
        #    LogisticsAddressFormatLines      logisticsAddressFormatLinesFieldList;
        #    TempStr                 saveLogisticsAddress     = '';
        #    LogisticsAddressCountryRegion    countryRegion   = LogisticsAddressCountryRegion::find(_countryRegion);
        #    LogisticsAddressState            state           = LogisticsAddressState::find(_countryRegion, _state);
        #    LogisticsAddressCounty           county          = LogisticsAddressCounty::find(_countryRegion, _state, _county);
        #     // <GEERU>
        #     #ISOCountryRegionCodes
        #     boolean                                  isRU    = countryRegion.isOcode == #isoRU;
        #     LogisticsAddressCountryRegionTranslation countryRegionTranslation;
        #     UserInfo                                 userInfo;
        #
        #     #localMacro.Separators
        #     logisticsAddressFormatLinesFieldList.Separator + (logisticsAddressFormatLinesFieldList.SeparatorCrLf ? #LineFeed : '')
        #     #endmacro
        #     // </GEERU>
        #
        #    if (addrFormat)
        #    {
        #
        #        //  Prepare saveLogisticsAddress string
        #        while select Element, InActive, Separator, SeparatorCrLf from logisticsAddressFormatLinesFieldList
        #            order by LineNum
        #            where logisticsAddressFormatLinesFieldList.AddrFormat == addrFormat &&
        #                logisticsAddressFormatLinesFieldList.InActive == false &&
        #                logisticsAddressFormatLinesFieldList.DataEntryOnly == false
        #        {
        #            switch(logisticsAddressFormatLinesFieldList.Element)
        #            {
        #                case LogisticsAddressElement::StreetName :
        #                    if (_street)
        #                    {
        #                        // <GEERU>
        #                        saveLogisticsAddress += _street + (isRU ? '' : (#Separators));
        #                        // </GEERU>
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::ZipCode :
        #                    if (_zipcode)
        #                    {
        #                        saveLogisticsAddress += _zipcode + #Separators;
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::City :
        #                    if (_city)
        #                    {
        #                        // <GEERU>
        #                        if (isRU)
        #                        {
        #                            saveLogisticsAddress += LogisticsAddresssCity::find_RU(_cityId).fullName_RU() + #Separators;
        #                        }
        #                        else
        #                        {
        #                        // </GEERU>
        #                            saveLogisticsAddress += _city + #Separators;
        #                        // <GEERU>
        #                        }
        #                        // </GEERU>
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::County :
        #                    if (_county)
        #                    {
        #                        // <GEERU>
        #                        if (isRU)
        #                        {
        #                            saveLogisticsAddress += county.fullName_RU() + #Separators;
        #                        }
        #                        else
        #                        {
        #                        // </GEERU>
        #                            saveLogisticsAddress += ((county.Name && logisticsAddressFormatLinesFieldList.Expand) ? county.Name : _county) + #Separators;
        #                        // <GEERU>
        #                        }
        #                        // </GEERU>
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::State :
        #                    if (_state)
        #                    {
        #                        // <GEERU>
        #                        if (isRU)
        #                        {
        #                            saveLogisticsAddress += state.fullName_RU() + #Separators;
        #                        }
        #                        else
        #                        {
        #                        // </GEERU>
        #                            saveLogisticsAddress += ((state.Name && logisticsAddressFormatLinesFieldList.Expand) ? state.Name : _state) + #Separators;
        #                        // <GEERU>
        #                        }
        #                        // </GEERU>
        #                    }
        #                    break;
        #
        #                case LogisticsAddressElement::CountryRegion :
        #                    if (_countryRegion)
        #                    {
        #                        // <GEERU>
        #                        if (isRU)
        #                        {
        #                            if (countryRegionTranslation.ShortName)
        #                            {
        #                                saveLogisticsAddress += countryRegionTranslation.ShortName + #Separators;
        #                            }
        #                            else
        #                            {
        #                                select firstonly Language from userInfo where userInfo.Id == curUserId()
        #                                join countryRegionTranslation
        #                                    where countryRegionTranslation.CountryRegionId == countryRegion.CountryRegionId &&
        #                                          countryRegionTranslation.LanguageId      == userInfo.Language;
        #                                saveLogisticsAddress += (logisticsAddressFormatLinesFieldList.Expand && countryRegionTranslation.LongName ?
        #                                                         countryRegionTranslation.LongName                                                :
        #                                                         (countryRegionTranslation.ShortName ?
        #                                                          countryRegionTranslation.ShortName :
        #                                                          countryRegion.CountryRegionId)) + #Separators;
        #                            }
        #                        }
        #                        else
        #                        {
        #                        // </GEERU>
        #                            saveLogisticsAddress += ((logisticsAddressFormatLinesFieldList.Expand) ? #CountryRegionToken : _countryRegion) + #Separators;
        #                        // <GEERU>
        #                        }
        #                        // </GEERU>
        #                    }
        #                    break;
        #                case LogisticsAddressElement::District :
        #                    if (districtName)
        #                    {
        #                        // <GEERU>
        #                        if (isRU)
        #                        {
        #                            saveLogisticsAddress += LogisticsAddressDistrict::find_RU(_districtId).fullName_RU() + #Separators;
        #                        }
        #                        else
        #                        {
        #                        // </GEERU>
        #                            saveLogisticsAddress += districtName + #Separators;
        #                        // <GEERU>
        #                        }
        #                        // </GEERU>
        #                    }
        #                    break;
        #                case LogisticsAddressElement::StreetNumber :
        #                    if (streetNumber)
        #                    {
        #                        saveLogisticsAddress += streetNumber + #Separators;
        #                    }
        #                    break;
        #                case LogisticsAddressElement::BuildingCompliment :
        #                    // <GEERU>
        #                    // see \Data Dictionary\Maps\LogisticsPostalAddressMap\Methods\makeStreet_RU
        #                    if (buildingCompliment &&
        #                        (!isRU || (isRU &&!LogisticsAddressFormatLines::includeElementInAddressFormat(addrFormat, LogisticsAddressElement::StreetName))))
        #                    // </GEERU>
        #                    {
        #                        saveLogisticsAddress += buildingCompliment +
        #                                    logisticsAddressFormatLinesFieldList.Separator            +
        #                                    (logisticsAddressFormatLinesFieldList.SeparatorCrLf ? #LineFeed : '');
        #                    }
        #                    break;
        #                case LogisticsAddressElement::PostBox :
        #                    if (postBox)
        #                    {
        #                        saveLogisticsAddress += postBox +
        #                                        logisticsAddressFormatLinesFieldList.Separator            +
        #                                        (logisticsAddressFormatLinesFieldList.SeparatorCrLf ? #LineFeed : '');
        #                    }
        #                    break;
        #                // <GEERU>
        #                case LogisticsAddressElement::CountryOKSMCode_RU :
        #                    if (_countryRegion)
        #                    {
        #                        saveLogisticsAddress += countryRegion.oksmCode_RU + #Separators;
        #                    }
        #                    break;
        #                case LogisticsAddressElement::StreetId_RU:
        #                    if (_streetId
        #                     && !LogisticsAddressFormatLines::includeElementInAddressFormat(addrFormat, LogisticsAddressElement::StreetName))
        #                    {
        #                        saveLogisticsAddress += LogisticsAddressStreet_RU::findRecID(_streetId).fullName() + #Separators;
        #                    }
        #                    break;
        #                case LogisticsAddressElement::Building_RU:
        #                    if (_building
        #                     && !LogisticsAddressFormatLines::includeElementInAddressFormat(addrFormat, LogisticsAddressElement::StreetName))
        #                    {
        #                        saveLogisticsAddress += _building + #Separators;
        #                    }
        #                    break;
        #                case LogisticsAddressElement::Apartment_RU:
        #                    if (_apartment
        #                     && !LogisticsAddressFormatLines::includeElementInAddressFormat(addrFormat, LogisticsAddressElement::StreetName))
        #                    {
        #                        saveLogisticsAddress += _apartment + #Separators;
        #                    }
        #                    break;
        #                // </GEERU>
        #            }
        #            if (saveLogisticsAddress && logisticsAddressFormatLinesFieldList.SeparatorCrLf && strScan(saveLogisticsAddress, #LineFeed, strLen(saveLogisticsAddress), -1) == 0)
        #            {
        #                saveLogisticsAddress += #LineFeed;
        #            }
        #        }
        #        //Lets remove trailing spaces
        #        saveLogisticsAddress = strRTrim(saveLogisticsAddress);
        #
        #        //Lets remove empty lines from LogisticsAddress string
        #        while (saveLogisticsAddress && strScan(saveLogisticsAddress, #LineFeed, strLen(saveLogisticsAddress), -1))
        #        {
        #            saveLogisticsAddress = strRTrim(strDel(saveLogisticsAddress, strLen(saveLogisticsAddress), 1));
        #        }
        #    }
        #    else
        #    {
        #        saveLogisticsAddress = strRTrim(_street);
        #    }
        #    return saveLogisticsAddress;
        #}
      ENDSOURCE
      SOURCE #getLocation
        #public static LogisticsLocationRecId getLocation(LogisticsPostalAddressRecId _addressRecId,
        #                                          utcdatetime dateTimeMin = DateTimeUtil::minValue(),
        #                                          utcdatetime dateTimeMax = DateTimeUtil::maxValue())
        #{
        #    LogisticsPostalAddress address;
        #
        #    if(_addressRecId)
        #    {
        #        select firstonly validtimestate(dateTimeMin, dateTimeMax) Location from address where address.RecId == _addressRecId;
        #    }
        #    return address.Location;
        #}
      ENDSOURCE
      SOURCE #locationNameFromRecId
        #/// <summary>
        #/// Gets the location name that is associated with the <c>LogisticsPostalAddressRecId</c> field on the
        #/// <c>LogisticsPostalAddress</c> table.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>LogisticsPostalAddressRecId</c> ID value from the <c>LogisticsPostalAddress</c> record.
        #/// </param>
        #/// <returns>
        #/// The location name.
        #/// </returns>
        #public static Description locationNameFromRecId(LogisticsPostalAddressRecId _recId)
        #{
        #    LogisticsLocation       logisticsLocation;
        #    LogisticsPostalAddress  logisticsAddress;
        #    utcdatetime beginDate = DateTimeUtil::minValue();
        #    utcdatetime endDate = DateTimeUtil::maxValue();
        #
        #    if (_recId)
        #    {
        #        select validtimestate(beginDate,endDate) Description from logisticsLocation
        #            exists join logisticsAddress
        #            where logisticsAddress.Location == logisticsLocation.RecId &&
        #                  logisticsAddress.RecId == _recId;
        #    }
        #    return logisticsLocation.Description;
        #}
      ENDSOURCE
      SOURCE #locationRecIdFromAddressRecId
        #/// <summary>
        #/// Gets the <c>LogisticsLocation</c> record ID on the <c>LogisticsPostalAddress</c> table.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>LogisticsPostalAddressRecId</c> record ID from the <c>LogisticsPostalAddress</c> table.
        #/// </param>
        #/// <returns>
        #/// The <c>LogisticsLocation</c> table record ID.
        #/// </returns>
        #public static LogisticsLocationRecId locationRecIdFromAddressRecId(LogisticsPostalAddressRecId _recId)
        #{
        #    LogisticsPostalAddress  logisticsAddress;
        #
        #    if (_recId)
        #    {
        #        select Location from logisticsAddress
        #            where logisticsAddress.RecId == _recId;
        #    }
        #    return logisticsAddress.Location;
        #}
      ENDSOURCE
      SOURCE #shipCarrierGetAddressLines
        #/// <summary>
        #/// Gets the individual address lines from the specified string.
        #/// </summary>
        #/// <param name="_address">
        #/// The string that contains the full address.
        #/// </param>
        #/// <returns>
        #/// A container that contains the two separated address lines.
        #/// </returns>
        #public static container shipCarrierGetAddressLines(str _address)
        #{
        #    ShipCarrierStreetName   firstLine, secondLine;
        #    str                     temp;
        #    int                     maxLineLength=30, n;
        #
        #    _address    = strLTrim(_address);
        #    _address    = strRTrim(_address);
        #
        #    temp        = strLine(_address,0);
        #    secondLine  = subStr(_address, strLen(temp)+2, strLen(_address));
        #
        #    if(strLen(temp) > maxLineLength && strLen(secondLine) == 0)
        #    {
        #        n = strFind(temp, ' ,', maxLineLength, -maxLineLength);
        #        if (n)
        #        {
        #            firstLine   = subStr(temp, 1, n);
        #            secondLine  = subStr(temp, n+1, strLen(temp) - n);
        #        }
        #        else
        #        {
        #            firstLine   = subStr(temp, 1, maxLineLength);
        #            secondLine  = subStr(temp, maxLineLength+1, maxLineLength);
        #        }
        #    }
        #    else
        #        firstLine   = temp;
        #
        #    return [firstLine,secondLine];
        #}
        #
      ENDSOURCE
      SOURCE #zipCityCountyRegionDifferent
        #/// <summary>
        #/// Indicates whether two addresses have matching zip code, city, county, and country and region.
        #/// </summary>
        #/// <param name="_address1">
        #/// The <c>RecId</c> value of the first address to compare.
        #/// </param>
        #/// <param name="_address2">
        #/// The <c>RecId</c> value of the second address to compare.
        #/// </param>
        #/// <returns>
        #/// true if the zip code, city, county, and country and region match; otherwise, false.
        #/// </returns>
        #public static boolean zipCityCountyRegionDifferent(LogisticsPostalAddressRecId _address1, LogisticsPostalAddressRecId _address2)
        #{
        #    LogisticsPostalAddress address1, address2;
        #
        #    if (!_address1)
        #    {
        #        return true;
        #    }
        #
        #    if (!_address2)
        #    {
        #        return true;
        #    }
        #
        #    if (_address1 == _address2)
        #    {
        #        return false;
        #    }
        #
        #    address1 = LogisticsPostalAddress::findRecId(_address1);
        #    address2 = LogisticsPostalAddress::findRecId(_address2);
        #
        #    return !(address1.ZipCode == address2.ZipCode &&
        #             address1.City == address2.City &&
        #             address1.County == address2.County &&
        #             address1.CountryRegionId == address2.CountryRegionId);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : DossierImportationPort unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #DossierImportationPort
    EnforceFKRelation 1
    PROPERTIES
      Name                #DossierImportationPort
      FormRef             #DossierImportationPort
      TitleField1         #Code
      CreateRecIdIndex    #Yes
      PrimaryIndex        #SurrogateKey
      ClusterIndex        #SurrogateKey
      ReplacementKey      #UniqueCode
      Origin              #{931D5538-E902-4BFF-B10E-B7D257AAB5E8}
    ENDPROPERTIES
    
    FIELDS
      FIELD #Code
        STRING
        PROPERTIES
          Name                #Code
          Table               #DossierImportationPort
          Origin              #{E6096D8D-9762-47D9-B428-EC39CE4F76F5}
        ENDPROPERTIES
        
      FIELD #Description
        STRING
        PROPERTIES
          Name                #Description
          Table               #DossierImportationPort
          Origin              #{ADE49C7A-1516-415D-9D32-6709151D9721}
        ENDPROPERTIES
        
      FIELD #LogisticsAddressCountryRegion
        INT64
        PROPERTIES
          Name                #LogisticsAddressCountryRegion
          Label               #Pays
          Table               #DossierImportationPort
          Origin              #{D0369CB9-5791-494C-A817-A8423343000B}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoIdentification
        PROPERTIES
          Name                #AutoIdentification
        ENDPROPERTIES
        
        GROUPFIELDS
          #Code
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #UniqueCode
      PROPERTIES
        Name                #UniqueCode
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{B6CADEAD-741B-434B-9599-A0C327D2F412}
      ENDPROPERTIES
      
      INDEXFIELDS
        #Code
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #Pays
        PROPERTIES
          Name                #Pays
          Table               #LogisticsAddressCountryRegion
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LogisticsAddressCountryRegion
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : LogisticsAddressCountryRegion unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #LogisticsAddressCountryRegion
    EnforceFKRelation 0
    PROPERTIES
      Name                #LogisticsAddressCountryRegion
      Label               #@SYS7437
      FormRef             #LogisticsAddressCountryRegion
      TitleField1         #CountryRegionId
      TableContents       #Default data
      SecurityKey         #BasicTables
      CacheLookup         #EntireTable
      CreateRecIdIndex    #Yes
      SaveDataPerCompany  #No
      TableGroup          #Group
      PrimaryIndex        #CountryRegionIdx
      ClusterIndex        #CountryRegionIdx
      DeveloperDocumentation  #@SYS344552
      Origin              #{2C1D0B7E-0000-1000-2517-279F89425958}
      LegacyId            #2942
    ENDPROPERTIES
    
    FIELDS
      FIELD #AddressUseZipPlus4
        ENUM
        PROPERTIES
          Name                #AddressUseZipPlus4
          Table               #LogisticsAddressCountryRegion
          Origin              #{446B613E-C432-4CCD-8D5B-B4CB73C1B90A}
          LegacyId            #8
          ExtendedDataType    #LogisticsAddressUseZipPlus4
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #AddrFormat
        STRING
        PROPERTIES
          Name                #AddrFormat
          Mandatory           #Yes
          Table               #LogisticsAddressCountryRegion
          Origin              #{58A18296-59D3-4954-AA6B-81672F58670C}
          LegacyId            #4
          ExtendedDataType    #LogisticsAddressFormatId
        ENDPROPERTIES
        
      FIELD #BACENCode_BR
        STRING
        PROPERTIES
          Name                #BACENCode_BR
          Table               #LogisticsAddressCountryRegion
          Origin              #{2A0C1F40-0B7E-1000-E9B3-CB0EDF4F6F64}
          LegacyId            #8000
          ExtendedDataType    #BacenCode_BR
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #CountryRegionId
        STRING
        PROPERTIES
          Name                #CountryRegionId
          Mandatory           #Yes
          AllowEdit           #No
          Table               #LogisticsAddressCountryRegion
          Origin              #{F03E92A8-5452-4618-895C-E7CED4A2E410}
          LegacyId            #1
          ExtendedDataType    #LogisticsAddressCountryRegionId
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS73534
          Table               #LogisticsAddressCountryRegion
          Origin              #{77EA7DA1-3359-471C-A8DD-619F63FAF5F2}
          LegacyId            #6
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #IsImmutable
        ENUM
        PROPERTIES
          Name                #IsImmutable
          Visible             #No
          Table               #LogisticsAddressCountryRegion
          Origin              #{D2EC7FBE-58DF-4990-A6FF-CE24BEAC2689}
          LegacyId            #9
          ExtendedDataType    #IsImmutable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ISOcode
        STRING
        PROPERTIES
          Name                #ISOcode
          Table               #LogisticsAddressCountryRegion
          Origin              #{AB763D1C-30C3-4319-87E6-53571AEFFBC0}
          LegacyId            #3
          ExtendedDataType    #LogisticsAddressCountryRegionISOCode
          StringSize          #2
        ENDPROPERTIES
        
      FIELD #MCRIOR_Facility_ID
        STRING
        PROPERTIES
          Name                #MCRIOR_Facility_ID
          Table               #LogisticsAddressCountryRegion
          Origin              #{9040216F-14D1-4AE6-B3AA-D86BE2844DB0}
          LegacyId            #30001
          ExtendedDataType    #MCRIOR_Facility_ID
          StringSize          #12
        ENDPROPERTIES
        
      FIELD #OKSMCode_RU
        STRING
        PROPERTIES
          Name                #OKSMCode_RU
          Table               #LogisticsAddressCountryRegion
          Origin              #{2A0B1F41-0B7E-1000-5474-DF55506F6465}
          LegacyId            #8001
          ExtendedDataType    #CountryOKSMCode_RU
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #RPayParentCountryRegionId
        STRING
        PROPERTIES
          Name                #RPayParentCountryRegionId
          Label               #@RUP6180
          ConfigurationKey    #RPayroll
          Table               #LogisticsAddressCountryRegion
          Origin              #{09F7FA87-989F-4A20-AE01-EE2E95BD9709}
          ExtendedDataType    #LogisticsAddressCountryRegionId
        ENDPROPERTIES
        
      FIELD #TimeZone
        ENUM
        PROPERTIES
          Name                #TimeZone
          Label               #@SYS102501
          HelpText            #@SYS108833
          Table               #LogisticsAddressCountryRegion
          Origin              #{62C9A015-7AFB-490D-9296-980275C5A680}
          LegacyId            #7
          EnumType            #Timezone
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #CountryRegionId
          #displayName
          #AddrFormat
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoLookup
        PROPERTIES
          Name                #AutoLookup
        ENDPROPERTIES
        
        GROUPFIELDS
          #CountryRegionId
          #displayName
          #AddrFormat
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoIdentification
        PROPERTIES
          Name                #AutoIdentification
          AutoPopulate        #No
        ENDPROPERTIES
        
        GROUPFIELDS
          #CountryRegionId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BACEN
        PROPERTIES
          Name                #BACEN
          Label               #@GLS62486
        ENDPROPERTIES
        
        GROUPFIELDS
          #BACENCode_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Description
        PROPERTIES
          Name                #Description
          Label               #@SYS6303
        ENDPROPERTIES
        
        GROUPFIELDS
          #displayName
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #CountryRegionId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intrastat
        PROPERTIES
          Name                #Intrastat
          Label               #@SYS6530
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #LogisticsAddressFormat
        PROPERTIES
          Name                #LogisticsAddressFormat
          Label               #@SYS22504
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddrFormat
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MCRUngrouped
        PROPERTIES
          Name                #MCRUngrouped
          Label               #@SYS130398
        ENDPROPERTIES
        
        GROUPFIELDS
          #MCRIOR_Facility_ID
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #CountryRegionId
          #AddrFormat
          #ISOcode
          #OKSMCode_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PostalCodes
        PROPERTIES
          Name                #PostalCodes
          Label               #@SYS104131
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressUseZipPlus4
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RPayParentCountryRegionId
        PROPERTIES
          Name                #RPayParentCountryRegionId
          Label               #@RUP6180
        ENDPROPERTIES
        
        GROUPFIELDS
          #RPayParentCountryRegionId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Timezone
        PROPERTIES
          Name                #Timezone
          Label               #@SYS102501
        ENDPROPERTIES
        
        GROUPFIELDS
          #TimeZone
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Various
        PROPERTIES
          Name                #Various
          Label               #@SYS28008
        ENDPROPERTIES
        
        GROUPFIELDS
          #ISOcode
          #CurrencyCode
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #CountryRegionIdx
      PROPERTIES
        Name                #CountryRegionIdx
        AllowDuplicates     #No
        Origin              #{2B100001-0B7E-1000-EAB9-533D13043D4C}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #CountryRegionId
      ENDINDEXFIELDS
      
      #LogisticsAddressFormatHeadingIdx
      PROPERTIES
        Name                #LogisticsAddressFormatHeadingIdx
        Origin              #{2B200003-0B7E-1000-0A9F-60F37C322BD7}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #AddrFormat
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AddrFormat_FK
        PROPERTIES
          Name                #AddrFormat_FK
          Table               #LogisticsAddressFormatHeading
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AddrFormat
            RelatedField        #AddrFormat
            SourceEDT           #LogisticsAddressFormatId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LogisticsAddressCountryRegion
        PROPERTIES
          Name                #LogisticsAddressCountryRegion
          Table               #LogisticsAddressCountryRegion
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RPayParentCountryRegionId
            RelatedField        #CountryRegionId
            SourceEDT           #LogisticsAddressCountryRegionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #TMSDiscountTable(LogisticsAddressCountryRegion)
      PROPERTIES
        Table               #TMSDiscountTable
        DeleteAction        #Cascade
        Relation            #LogisticsAddressCountryRegion
      ENDPROPERTIES
      
      #TMSAccessorialAssignment(LogisticsAddressCountryRegion)
      PROPERTIES
        Table               #TMSAccessorialAssignment
        DeleteAction        #Cascade
        Relation            #LogisticsAddressCountryRegion
      ENDPROPERTIES
      
      #TaxGroupHeading(LogisticsAddressCountryRegion)
      PROPERTIES
        Table               #TaxGroupHeading
        DeleteAction        #Restricted
        Relation            #LogisticsAddressCountryRegion
      ENDPROPERTIES
      
      #MCRNCOAFileTable(CountryRegionId)
      PROPERTIES
        Table               #MCRNCOAFileTable
        DeleteAction        #Restricted
        Relation            #CountryRegionId
      ENDPROPERTIES
      
      #LogisticsAddresssCity(Country_FK)
      PROPERTIES
        Table               #LogisticsAddresssCity
        DeleteAction        #Cascade + Restricted
        Relation            #Country_FK
      ENDPROPERTIES
      
      #LogisticsAddressZipCode(Country)
      PROPERTIES
        Table               #LogisticsAddressZipCode
        DeleteAction        #Cascade + Restricted
        Relation            #Country
      ENDPROPERTIES
      
      #PaymCalendarCountryRegion(CountryRegion)
      PROPERTIES
        Table               #PaymCalendarCountryRegion
        DeleteAction        #Restricted
        Relation            #CountryRegion
      ENDPROPERTIES
      
      #LogisticsAddressCountryRegionTranslation
      PROPERTIES
        Table               #LogisticsAddressCountryRegionTranslation
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #LogisticsAddressState
      PROPERTIES
        Table               #LogisticsAddressState
        DeleteAction        #Cascade + Restricted
      ENDPROPERTIES
      
      #LogisticsPostalAddress
      PROPERTIES
        Table               #LogisticsPostalAddress
        DeleteAction        #Restricted
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #checkParent
        #// <RUP>
        #private boolean checkParent()
        #{
        #    boolean                         ret = true;
        #    LogisticsAddressCountryRegion   logisticsAddressCountryRegionParent;
        #
        #    if (this.RPayParentCountryRegionId)
        #    {
        #        if (this.RPayParentCountryRegionId == this.CountryRegionId)
        #        {
        #            ret = checkFailed(strFmt("@RUP6181"));
        #        }
        #
        #        logisticsAddressCountryRegionParent = LogisticsAddressCountryRegion::find(this.RPayParentCountryRegionId);
        #
        #        if (ret && logisticsAddressCountryRegionParent.RPayParentCountryRegionId)
        #        {
        #            ret = checkFailed(strFmt("@RUP6182"));
        #        }
        #    }
        #
        #    return ret;
        #}
        #// </RUP>
      ENDSOURCE
      SOURCE #displayName
        #// BP Deviation Documented
        #public display LogisticsAddressCountryRegionName displayName()
        #{
        #    return LogisticsAddressCountryRegionTranslation::find(this.CountryRegionId).ShortName;
        #}
      ENDSOURCE
      SOURCE #update
        #/// <summary>
        #/// Updates the record in <c>LogisticsAddressCountryRegion</c> table.
        #/// </summary>
        #/// <remarks>
        #/// If replicate is enabled, action is inserted into the <c>RetailConnPreactionTable</c>.
        #/// </remarks>
        #public void update()
        #{
        #    boolean replicate = false;
        #    LogisticsAddressFormatHeading addressFormat;
        #
        #    ttsbegin;
        #
        #    if (this.orig().AddrFormat != this.AddrFormat)
        #    {
        #        update_recordset addressFormat
        #        setting UpdateToAddress = NoYes::Yes
        #        where addressFormat.AddrFormat == this.AddrFormat;
        #    }
        #
        #    super();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean validateDelete()
        #{
        #    boolean ret;
        #
        #    ret = super();
        #
        #    if(ret && this.IsImmutable)
        #        ret = checkFailed(strFmt("@SYS303353", this.CountryRegionId));
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldIdToCheck)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldIdToCheck);
        #
        #    if(ret)
        #    {
        #        switch(_fieldIdToCheck)
        #        {
        #            case fieldNum(LogisticsAddressCountryRegion, isOcode):
        #                if(LogisticsAddressCountryRegion::existISOcode(this.isOcode))
        #                {
        #                    ret = checkFailed(strFmt("@SYS153389", tablePName(LogisticsAddressCountryRegion), strFmt("%1 : %2", fieldPName(LogisticsAddressCountryRegion, isOcode), this.isOcode)));
        #                }
        #            break;
        #            // <RUP>
        #            case fieldNum(LogisticsAddressCountryRegion, RPayParentCountryRegionId):
        #                ret = this.checkParent();
        #            break;
        #            // </RUP>
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateFieldValue
        #/// <summary>
        #/// Validates the value of a given field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The ID of the field to validate.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the value to validate; optional.
        #/// </param>
        #/// <returns>
        #/// True if validation is successful; otherwise, false.
        #/// </returns>
        #public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldName, _arrayIndex);
        #
        #    // <GBR>
        #    if (ret)
        #    {
        #        switch (_fieldName)
        #        {
        #            case fieldStr(LogisticsAddressCountryRegion, bacenCode_BR) :
        #                if (this.bacenCode_BR != strKeep(this.bacenCode_BR, '0123456789'))
        #                {
        #                    ret = checkFailed("@GLS63440");
        #                }
        #                break;
        #        }
        #
        #    }
        #    // </GBR>
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #bacen2ISO_BR
        #/// <summary>
        #/// Retrieves the ISO code of a country according to its BACEN code.
        #/// </summary>
        #/// <param name="_bacenCode">
        #/// The country BACEN code.
        #/// </param>
        #/// <returns>
        #/// The country ISO code.
        #/// </returns>
        #public static str bacen2ISO_BR(str _bacenCode)
        #{
        #    str formattedBacenCode;
        #
        #    formattedBacenCode = strRFix(_bacenCode, 5, '0');
        #
        #    return LogisticsAddressCountryRegion::getBACEN2ISOMap_BR().lookup(formattedBacenCode);
        #}
      ENDSOURCE
      SOURCE #checkExist
        #public static boolean checkExist(LogisticsAddressCountryRegionId _countryRegionId)
        #{
        #    if (_countryRegionId && !LogisticsAddressCountryRegion::exist(_countryRegionId))
        #        return checkFailed(strFmt(LogisticsAddressCountryRegion::txtNotExist(), _countryRegionId));
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #exist
        #public static boolean exist(LogisticsAddressCountryRegionId _countryRegionId)
        #{
        #    return _countryRegionId &&
        #        (select logisticsAddressCountryRegion
        #            index hint CountryRegionIdx
        #            where logisticsAddressCountryRegion.CountryRegionId == _countryRegionId
        #        ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existISOcode
        #/// <summary>
        #/// Checks if ISOcode exist
        #/// </summary>
        #/// <param name="_isoCode">
        #/// The field to check.
        #/// </param>
        #/// <returns>
        #/// true if <c>_isoCode</c> exist in the the table.
        #/// </returns>
        #/// <remarks>
        #/// The <c>existISOcode</c> method checks if the <c>_isoCode</c> exist in the logisticsAddressCountryRegion table.
        #/// This method is called when the ISOCode field is validated.
        #/// </remarks>
        #public static boolean existISOcode(LogisticsAddressCountryRegionISOCode _isoCode)
        #{
        #    return _isoCode &&
        #        (select firstonly RecId from logisticsAddressCountryRegion
        #        where logisticsAddressCountryRegion.isOcode == _isoCode
        #        ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existsBacenCode_BR
        #/// <summary>
        #/// Verifies if the BACEN code exists.
        #/// </summary>
        #/// <param name="_bacenCode">
        #/// The country BACEN code.
        #/// </param>
        #/// <returns>
        #/// True if the BACEN code exists; otherwise, false.
        #/// </returns>
        #public static boolean existsBacenCode_BR(str _bacenCode)
        #{
        #    str formattedBacenCode;
        #
        #    formattedBacenCode = strRFix(_bacenCode, 5, '0');
        #
        #    return LogisticsAddressCountryRegion::getBACEN2ISOMap_BR().exists(formattedBacenCode);
        #}
      ENDSOURCE
      SOURCE #existSingleISOCode
        #/// <summary>
        #/// Determines whether only single county exists matching the given ISOcode.
        #/// </summary>
        #/// <param name="_isoCode">
        #/// The ISO code to check for.
        #/// </param>
        #/// <returns>
        #/// true, if only single country with the given ISOcode exists; false - otherwise.
        #/// </returns>
        #server public static boolean existSingleISOCode(LogisticsAddressCountryRegionISOCode _isoCode)
        #{
        #    #define.one(1)
        #    return LogisticsAddressCountryRegion::isoCodeCount(_isoCode) == #one;
        #}
      ENDSOURCE
      SOURCE #find
        #public static LogisticsAddressCountryRegion find(
        #    LogisticsAddressCountryRegionId  _countryRegionId,
        #    boolean                 _forUpdate = false)
        #{
        #    LogisticsAddressCountryRegion    countryRegion;
        #    ;
        #
        #    if (_countryRegionId)
        #    {
        #        countryRegion.selectForUpdate(_forUpdate);
        #
        #        select firstonly countryRegion
        #            index hint CountryRegionIdx
        #            where countryRegion.CountryRegionId == _countryRegionId;
        #    }
        #
        #    return countryRegion;
        #}
      ENDSOURCE
      SOURCE #findByISOCode
        #/// <summary>
        #///     Finds the specified record in the <c>LogisticsAddressCountryRegion</c> table.
        #/// </summary>
        #/// <param name="_isoCode">
        #///     The value of the <c>ISOCode</c> field of the record to find.
        #/// </param>
        #/// <param name="_forUpdate">
        #///     A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///     A record in the <c>LogisticsAddressCountryRegion</c> table.
        #/// </returns>
        #public static LogisticsAddressCountryRegion findByISOCode(
        #    LogisticsAddressCountryRegionISOCode    _isoCode,
        #    boolean                                 _forUpdate = false)
        #{
        #    LogisticsAddressCountryRegion    logisticsAddressCountryRegion;
        #
        #    if (_isoCode)
        #    {
        #        logisticsAddressCountryRegion.selectForUpdate(_forUpdate);
        #
        #        select firstonly logisticsAddressCountryRegion
        #            where logisticsAddressCountryRegion.isOcode == _isoCode;
        #    }
        #
        #    return logisticsAddressCountryRegion;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #public static LogisticsAddressCountryRegion findRecId(
        #    RecId   _recId,
        #    boolean _forUpdate = false)
        #{
        #    LogisticsAddressCountryRegion    countryRegion;
        #    ;
        #
        #    if (_recId)
        #    {
        #        countryRegion.selectForUpdate(_forUpdate);
        #
        #        select firstonly countryRegion
        #            where countryRegion.RecId == _recId;
        #    }
        #
        #    return countryRegion;
        #}
      ENDSOURCE
      SOURCE #getBACEN2ISOMap_BR
        #private static Map getBACEN2ISOMap_BR()
        #{
        #    #define.cacheKey('bacen2iso')
        #    Map             bacen2ISO;
        #    SysGlobalCache  globalCache = ClassFactory.globalCache();
        #
        #    if (globalCache.isSet(#cacheKey, 0))
        #    {
        #        bacen2ISO   = globalCache.get(#cacheKey, 0);
        #    }
        #    else
        #    {
        #        bacen2ISO   = new Map(Types::String, Types::String);
        #
        #        bacen2ISO.insert('00132', 'AFG');
        #        bacen2ISO.insert('00175', 'ALB');
        #        bacen2ISO.insert('00230', 'DEU');
        #        bacen2ISO.insert('00310', 'BFA');
        #        bacen2ISO.insert('00370', 'AND');
        #        bacen2ISO.insert('00400', 'AGO');
        #        bacen2ISO.insert('00418', 'AIA');
        #        bacen2ISO.insert('00434', 'ATG');
        #        bacen2ISO.insert('00477', '');
        #        bacen2ISO.insert('00531', 'SAU');
        #        bacen2ISO.insert('00590', 'DZA');
        #        bacen2ISO.insert('00639', 'ARG');
        #        bacen2ISO.insert('00647', 'ARM');
        #        bacen2ISO.insert('00655', 'ABW');
        #        bacen2ISO.insert('00698', 'AUS');
        #        bacen2ISO.insert('00728', 'AUT');
        #        bacen2ISO.insert('00736', 'AZE');
        #        bacen2ISO.insert('00779', 'BHS');
        #        bacen2ISO.insert('00809', 'BHR');
        #        bacen2ISO.insert('00817', 'BGD');
        #        bacen2ISO.insert('00833', 'BRB');
        #        bacen2ISO.insert('00850', 'BLR');
        #        bacen2ISO.insert('00876', 'BEL');
        #        bacen2ISO.insert('00884', 'BLZ');
        #        bacen2ISO.insert('00906', 'BMU');
        #        bacen2ISO.insert('00930', 'MMR');
        #        bacen2ISO.insert('00973', 'BOL');
        #        bacen2ISO.insert('00981', 'BIH');
        #        bacen2ISO.insert('01015', 'BWA');
        #        bacen2ISO.insert('01058', 'BRA');
        #        bacen2ISO.insert('01082', 'BRN');
        #        bacen2ISO.insert('01112', 'BGR');
        #        bacen2ISO.insert('01155', 'BDI');
        #        bacen2ISO.insert('01198', 'BTN');
        #        bacen2ISO.insert('01279', 'CPV');
        #        bacen2ISO.insert('01376', 'CYM');
        #        bacen2ISO.insert('01414', 'KHM');
        #        bacen2ISO.insert('01457', 'CMR');
        #        bacen2ISO.insert('01490', 'CAN');
        #        bacen2ISO.insert('01504', 'GGY');
        #        bacen2ISO.insert('01508', 'JEY');
        #        bacen2ISO.insert('01511', '');
        #        bacen2ISO.insert('01538', 'KAZ');
        #        bacen2ISO.insert('01546', 'QAT');
        #        bacen2ISO.insert('01589', 'CHL');
        #        bacen2ISO.insert('01600', 'CHN');
        #        bacen2ISO.insert('01619', 'TWN');
        #        bacen2ISO.insert('01635', 'CYP');
        #        bacen2ISO.insert('01651', 'CCK');
        #        bacen2ISO.insert('01694', 'COL');
        #        bacen2ISO.insert('01732', 'COM');
        #        bacen2ISO.insert('01775', 'COG');
        #        bacen2ISO.insert('01830', 'COK');
        #        bacen2ISO.insert('01872', 'PRK');
        #        bacen2ISO.insert('01902', 'KOR');
        #        bacen2ISO.insert('01937', 'CIV');
        #        bacen2ISO.insert('01953', 'HRV');
        #        bacen2ISO.insert('01961', 'CRI');
        #        bacen2ISO.insert('01988', 'KWT');
        #        bacen2ISO.insert('01996', 'CUB');
        #        bacen2ISO.insert('02291', 'BEN');
        #        bacen2ISO.insert('02321', 'DNK');
        #        bacen2ISO.insert('02356', 'DMA');
        #        bacen2ISO.insert('02399', 'ECU');
        #        bacen2ISO.insert('02402', 'EGY');
        #        bacen2ISO.insert('02437', 'ERI');
        #        bacen2ISO.insert('02445', 'ARE');
        #        bacen2ISO.insert('02453', 'ESP');
        #        bacen2ISO.insert('02461', 'SVN');
        #        bacen2ISO.insert('02470', 'SVK');
        #        bacen2ISO.insert('02496', 'USA');
        #        bacen2ISO.insert('02518', 'EST');
        #        bacen2ISO.insert('02534', 'ETH');
        #        bacen2ISO.insert('02550', 'FLK');
        #        bacen2ISO.insert('02593', 'FRO');
        #        bacen2ISO.insert('02674', 'PHL');
        #        bacen2ISO.insert('02712', 'FIN');
        #        bacen2ISO.insert('02755', 'FRA');
        #        bacen2ISO.insert('02810', 'GAB');
        #        bacen2ISO.insert('02852', 'GMB');
        #        bacen2ISO.insert('02895', 'GHA');
        #        bacen2ISO.insert('02917', 'GEO');
        #        bacen2ISO.insert('02933', 'GIB');
        #        bacen2ISO.insert('02976', 'GRD');
        #        bacen2ISO.insert('03018', 'GRC');
        #        bacen2ISO.insert('03050', 'GRL');
        #        bacen2ISO.insert('03093', 'GLP');
        #        bacen2ISO.insert('03131', 'GUM');
        #        bacen2ISO.insert('03174', 'GTM');
        #        bacen2ISO.insert('03255', 'GUF');
        #        bacen2ISO.insert('03298', 'GIN');
        #        bacen2ISO.insert('03310', 'GNQ');
        #        bacen2ISO.insert('03344', 'GNB');
        #        bacen2ISO.insert('03379', 'GUY');
        #        bacen2ISO.insert('03417', 'HTI');
        #        bacen2ISO.insert('03450', 'HND');
        #        bacen2ISO.insert('03514', 'HKG');
        #        bacen2ISO.insert('03557', 'HUN');
        #        bacen2ISO.insert('03573', 'YEM');
        #        bacen2ISO.insert('03595', 'IMN');
        #        bacen2ISO.insert('03611', 'IND');
        #        bacen2ISO.insert('03654', 'IDN');
        #        bacen2ISO.insert('03697', 'IQQ');
        #        bacen2ISO.insert('03727', 'IRN');
        #        bacen2ISO.insert('03751', 'IRL');
        #        bacen2ISO.insert('03794', 'ISL');
        #        bacen2ISO.insert('03832', 'ISR');
        #        bacen2ISO.insert('03867', 'ITA');
        #        bacen2ISO.insert('03913', 'JAM');
        #        bacen2ISO.insert('03964', '');
        #        bacen2ISO.insert('03999', 'JPN');
        #        bacen2ISO.insert('04030', 'JOR');
        #        bacen2ISO.insert('04111', 'KIR');
        #        bacen2ISO.insert('04200', 'LAO');
        #        bacen2ISO.insert('04235', '');
        #        bacen2ISO.insert('04260', 'LSO');
        #        bacen2ISO.insert('04278', 'LVA');
        #        bacen2ISO.insert('04316', 'LBN');
        #        bacen2ISO.insert('04340', 'LBR');
        #        bacen2ISO.insert('04383', 'LBY');
        #        bacen2ISO.insert('04405', 'LIE');
        #        bacen2ISO.insert('04421', 'LTU');
        #        bacen2ISO.insert('04456', 'LUX');
        #        bacen2ISO.insert('04472', 'MAC');
        #        bacen2ISO.insert('04499', 'MKD');
        #        bacen2ISO.insert('04502', 'MG');
        #        bacen2ISO.insert('04525', '');
        #        bacen2ISO.insert('04553', 'MYS');
        #        bacen2ISO.insert('04588', 'MWI');
        #        bacen2ISO.insert('04618', 'MDV');
        #        bacen2ISO.insert('04642', 'MLI');
        #        bacen2ISO.insert('04677', 'MLT');
        #        bacen2ISO.insert('04723', 'MNP');
        #        bacen2ISO.insert('04740', 'MAR');
        #        bacen2ISO.insert('04766', 'MHL');
        #        bacen2ISO.insert('04774', 'MTQ');
        #        bacen2ISO.insert('04855', 'MUS');
        #        bacen2ISO.insert('04880', 'MRT');
        #        bacen2ISO.insert('04885', 'MYT');
        #        bacen2ISO.insert('04901', '');
        #        bacen2ISO.insert('04936', 'MEX');
        #        bacen2ISO.insert('04944', 'MDA');
        #        bacen2ISO.insert('04952', 'MCO');
        #        bacen2ISO.insert('04979', 'MNG');
        #        bacen2ISO.insert('04985', 'MNE');
        #        bacen2ISO.insert('04995', 'FSM');
        #        bacen2ISO.insert('05010', 'MSR');
        #        bacen2ISO.insert('05053', 'MOZ');
        #        bacen2ISO.insert('05070', 'NAM');
        #        bacen2ISO.insert('05088', 'NRU');
        #        bacen2ISO.insert('05118', 'CXR');
        #        bacen2ISO.insert('05177', 'NPL');
        #        bacen2ISO.insert('05215', 'NIC');
        #        bacen2ISO.insert('05258', 'NER');
        #        bacen2ISO.insert('05282', 'NGA');
        #        bacen2ISO.insert('05312', 'NIU');
        #        bacen2ISO.insert('05355', 'NFK');
        #        bacen2ISO.insert('05380', 'NOR');
        #        bacen2ISO.insert('05428', 'NCL');
        #        bacen2ISO.insert('05452', 'PNG');
        #        bacen2ISO.insert('05487', 'NZL');
        #        bacen2ISO.insert('05517', 'VUT');
        #        bacen2ISO.insert('05568', 'OMN');
        #        bacen2ISO.insert('05665', '');
        #        bacen2ISO.insert('05738', 'NLD');
        #        bacen2ISO.insert('05754', 'PLW');
        #        bacen2ISO.insert('05762', 'PAK');
        #        bacen2ISO.insert('05780', 'PSE');
        #        bacen2ISO.insert('05800', 'PAN');
        #        bacen2ISO.insert('05860', 'PRY');
        #        bacen2ISO.insert('05894', 'PER');
        #        bacen2ISO.insert('05932', 'PCN');
        #        bacen2ISO.insert('05991', 'PYF');
        #        bacen2ISO.insert('06033', 'POL');
        #        bacen2ISO.insert('06076', 'PRT');
        #        bacen2ISO.insert('06114', 'PRI');
        #        bacen2ISO.insert('06238', 'KEN');
        #        bacen2ISO.insert('06254', 'KGZ');
        #        bacen2ISO.insert('06289', 'GBR');
        #        bacen2ISO.insert('06408', 'CAF');
        #        bacen2ISO.insert('06475', 'DOM');
        #        bacen2ISO.insert('06602', 'REU');
        #        bacen2ISO.insert('06653', 'ZWE');
        #        bacen2ISO.insert('06700', 'ROU');
        #        bacen2ISO.insert('06750', 'RWA');
        #        bacen2ISO.insert('06769', 'RUS');
        #        bacen2ISO.insert('06777', 'SLB');
        #        bacen2ISO.insert('06858', 'ESH');
        #        bacen2ISO.insert('06874', 'SLV');
        #        bacen2ISO.insert('06904', 'WSM');
        #        bacen2ISO.insert('06912', 'ASM');
        #        bacen2ISO.insert('06955', 'KNA');
        #        bacen2ISO.insert('06971', 'SMR');
        #        bacen2ISO.insert('07005', 'SPM');
        #        bacen2ISO.insert('07056', 'VCT');
        #        bacen2ISO.insert('07102', 'SHN');
        #        bacen2ISO.insert('07153', 'LCA');
        #        bacen2ISO.insert('07200', 'STP');
        #        bacen2ISO.insert('07285', 'SEN');
        #        bacen2ISO.insert('07315', 'SYC');
        #        bacen2ISO.insert('07358', 'SLE');
        #        bacen2ISO.insert('07370', 'SRB');
        #        bacen2ISO.insert('07412', 'SGP');
        #        bacen2ISO.insert('07447', 'SYR');
        #        bacen2ISO.insert('07480', 'SOM');
        #        bacen2ISO.insert('07501', 'LKA');
        #        bacen2ISO.insert('07544', 'SWZ');
        #        bacen2ISO.insert('07560', 'ZAF');
        #        bacen2ISO.insert('07595', 'SDN');
        #        bacen2ISO.insert('07641', 'SWE');
        #        bacen2ISO.insert('07676', 'CHE');
        #        bacen2ISO.insert('07706', 'SUR');
        #        bacen2ISO.insert('07722', 'TJK');
        #        bacen2ISO.insert('07765', 'THA');
        #        bacen2ISO.insert('07803', 'TZA');
        #        bacen2ISO.insert('07820', 'IOT');
        #        bacen2ISO.insert('07838', 'DJI');
        #        bacen2ISO.insert('07889', 'TCD');
        #        bacen2ISO.insert('07919', 'CZE');
        #        bacen2ISO.insert('07951', 'TLS');
        #        bacen2ISO.insert('08001', 'TGO');
        #        bacen2ISO.insert('08052', 'TKL');
        #        bacen2ISO.insert('08109', 'TON');
        #        bacen2ISO.insert('08150', 'TTO');
        #        bacen2ISO.insert('08206', 'TUN');
        #        bacen2ISO.insert('08230', 'TCA');
        #        bacen2ISO.insert('08249', 'TKM');
        #        bacen2ISO.insert('08273', 'TUR');
        #        bacen2ISO.insert('08281', 'TUV');
        #        bacen2ISO.insert('08311', 'UKR');
        #        bacen2ISO.insert('08338', 'UGA');
        #        bacen2ISO.insert('08451', 'URY');
        #        bacen2ISO.insert('08478', 'UZB');
        #        bacen2ISO.insert('08486', 'VAT');
        #        bacen2ISO.insert('08508', 'VEN');
        #        bacen2ISO.insert('08583', 'VNM');
        #        bacen2ISO.insert('08630', 'VGB');
        #        bacen2ISO.insert('08664', 'VIR');
        #        bacen2ISO.insert('08702', 'FJI');
        #        bacen2ISO.insert('08737', '');
        #        bacen2ISO.insert('08885', 'COD');
        #        bacen2ISO.insert('08907', 'ZMB');
        #
        #        globalCache.set(#cacheKey, 0, bacen2ISO);
        #    }
        #
        #    return bacen2ISO;
        #}
      ENDSOURCE
      SOURCE #isoCodeCount
        #/// <summary>
        #/// Counts the number of countries matching the given ISOcode.
        #/// </summary>
        #/// <param name="_isoCode">
        #/// The ISOCode to count countries for.
        #/// </param>
        #/// <returns>
        #/// The number of countries that have the ISOCode provided.
        #/// </returns>
        #server public static Counter isoCodeCount(LogisticsAddressCountryRegionISOCode _isoCode)
        #{
        #    Counter cnt;
        #    if (_isoCode)
        #    {
        #        cnt = int642int((select count (RecId) from logisticsAddressCountryRegion
        #                         where logisticsAddressCountryRegion.isOcode == _isoCode).RecId);
        #    }
        #    return cnt;
        #}
      ENDSOURCE
      SOURCE #lookup
        #public static void lookup(FormControl _formControl, str _filterStr)
        #{
        #    Query               query;
        #    SysTableLookup      sysTableLookup;
        #    QueryBuildDataSource    queryBuildDataSourceView;
        #
        #    query = new Query();
        #    sysTableLookup = SysTableLookup::newParameters(tableNum(LogisticsAddressCountryRegionNameView), _formControl);
        #    queryBuildDataSourceView = query.addDataSource(tableNum(LogisticsAddressCountryRegionNameView));
        #    queryBuildDataSourceView.addRange(fieldNum(LogisticsAddressCountryRegionNameView, LanguageId)).value(queryValue(currentUserLanguage()));
        #
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionNameView, CountryRegionId));
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionNameView, ShortName));
        #    sysTableLookup.setLabel("@SYS7576");
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionNameView, AddrFormat));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #name
        #public static LogisticsAddressCountryRegionShortName name(LogisticsAddressCountryRegionId _countryRegionId)
        #{
        #    return LogisticsAddressCountryRegionTranslation::find(_countryRegionId).ShortName;
        #}
      ENDSOURCE
      SOURCE #txtNotExist
        #public static str txtNotExist()
        #{
        #    return "@SYS9347";
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : TMSMode unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #TMSMode
    EnforceFKRelation 0
    PROPERTIES
      Name                #TMSMode
      Label               #@TRX192
      FormRef             #TMSMode
      TitleField1         #ModeCode
      TitleField2         #Name
      TableContents       #Base data
      ConfigurationKey    #WHSandTMS
      CacheLookup         #EntireTable
      CreateRecIdIndex    #Yes
      TableGroup          #Group
      PrimaryIndex        #ModeCodeIdx
      ClusterIndex        #ModeCodeIdx
      ModifiedDateTime    #Yes
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@TRX1931
      Origin              #{CF1F7D18-C255-4413-B2E8-A7F28841B2E0}
    ENDPROPERTIES
    
    FIELDS
      FIELD #ModeCode
        STRING
        PROPERTIES
          Name                #ModeCode
          Mandatory           #Yes
          AllowEdit           #No
          Table               #TMSMode
          IgnoreEDTRelation   #Yes
          Origin              #{B1DABEDA-F94D-4B73-83B8-681B64C586C8}
          LegacyId            #20001
          ExtendedDataType    #TMSModeCode
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          Table               #TMSMode
          Origin              #{0A660E73-2435-4C75-934F-0E9D47E69EDD}
          LegacyId            #20002
          ExtendedDataType    #TMSName
          StringSize          #60
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #ModeCode
          #Name
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@WAX2277
        ENDPROPERTIES
        
        GROUPFIELDS
          #ModeCode
          #Name
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #ModeCodeIdx
      PROPERTIES
        Name                #ModeCodeIdx
        AllowDuplicates     #No
        Origin              #{448C8BC7-266A-4B8A-894B-CA014D19BD89}
        LegacyId            #20001
      ENDPROPERTIES
      
      INDEXFIELDS
        #ModeCode
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
      #TMSShipmentConstraint(TMSMode)
      PROPERTIES
        Table               #TMSShipmentConstraint
        DeleteAction        #Cascade
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSSalesAgreementHeader(TMSMode)
      PROPERTIES
        Table               #TMSSalesAgreementHeader
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSRouteTable(TMSMode)
      PROPERTIES
        Table               #TMSRouteTable
        DeleteAction        #Cascade
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSRouteSegmentTable(TMSMode)
      PROPERTIES
        Table               #TMSRouteSegmentTable
        DeleteAction        #Cascade
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSRouteSegmentConfig(TMSMode)
      PROPERTIES
        Table               #TMSRouteSegmentConfig
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSPurchAgreementHeader(TMSMode)
      PROPERTIES
        Table               #TMSPurchAgreementHeader
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSItemConstraint(TMSMode)
      PROPERTIES
        Table               #TMSItemConstraint
        DeleteAction        #Cascade
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSInvoiceLine(TMSMode)
      PROPERTIES
        Table               #TMSInvoiceLine
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSFreightBillTypeAssignment(TMSMode)
      PROPERTIES
        Table               #TMSFreightBillTypeAssignment
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSCarrierConstraint(TMSMode)
      PROPERTIES
        Table               #TMSCarrierConstraint
        DeleteAction        #Cascade
        Relation            #TMSMode
      ENDPROPERTIES
      
      #TMSCarrier(TMSMode)
      PROPERTIES
        Table               #TMSCarrier
        DeleteAction        #Restricted
        Relation            #TMSMode
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #exist
        #public static boolean exist(TMSModeCode _tmsModeCode)
        #{
        #    return (_tmsModeCode) &&
        #           (select firstonly TMSMode
        #                where tmsMode.ModeCode == _tmsModeCode).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #public static TMSMode find(TMSModeCode _tmsModeCode,
        #                           boolean     _forupdate = false)
        #{
        #    TMSMode    tmsMode;
        #
        #    if (_tmsModeCode)
        #    {
        #        tmsMode.selectForUpdate(_forupdate);
        #
        #        select firstonly tmsMode
        #            where tmsMode.ModeCode == _tmsModeCode;
        #    }
        #
        #    return tmsMode;
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : DossierImportation unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #DossierImportation
    EnforceFKRelation 1
    PROPERTIES
      Name                #DossierImportation
      FormRef             #DossierImportation
      TitleField1         #DINumSeq
      CreateRecIdIndex    #Yes
      PrimaryIndex        #SurrogateKey
      ClusterIndex        #SurrogateKey
      ReplacementKey      #NumDossierImportation
      Origin              #{96CCEBD6-01DA-4791-9699-56EDCDBF8619}
    ENDPROPERTIES
    
    FIELDS
      FIELD #DateArriveeUsine
        DATE
        PROPERTIES
          Name                #DateArriveeUsine
          Label               #Date arrivée usine
          Table               #DossierImportation
          Origin              #{CC1662DB-613A-44C7-863C-E5481B71B2A3}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateConfirmeLivraison
        DATE
        PROPERTIES
          Name                #DateConfirmeLivraison
          Label               #Date confirmée livraison
          Table               #DossierImportation
          Origin              #{CE715899-045E-42B9-B7E0-6A368C589353}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateDebarquementDestination
        DATE
        PROPERTIES
          Name                #DateDebarquementDestination
          Label               #Date débarquement destination
          Table               #DossierImportation
          Origin              #{8BBEC361-5787-490B-BA7A-CF74E75C37A2}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateDossier
        DATE
        PROPERTIES
          Name                #DateDossier
          Label               #Date de dossier
          Mandatory           #Yes
          Table               #DossierImportation
          Origin              #{894488DC-975D-49E3-8593-25E313BF6FB2}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateEmbarquementOrigine
        DATE
        PROPERTIES
          Name                #DateEmbarquementOrigine
          Label               #Date embarquement d'origine
          Table               #DossierImportation
          Origin              #{4069BBE2-C86E-45B2-AEE5-B120FD2A2FF7}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DatePrevueLivraison
        DATE
        PROPERTIES
          Name                #DatePrevueLivraison
          Label               #Date prévue livraison
          Table               #DossierImportation
          Origin              #{AF2C41DD-7E8E-4296-881F-1CFC5735A339}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateSortiePortAieroport
        DATE
        PROPERTIES
          Name                #DateSortiePortAieroport
          Label               #Date sortie port\aieroport
          Table               #DossierImportation
          Origin              #{1495E93A-71F3-4F5F-841C-BE4EEE49F605}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DateSortieUsine
        DATE
        PROPERTIES
          Name                #DateSortieUsine
          Label               #Date sortie usine
          Table               #DossierImportation
          Origin              #{2A69503A-0942-4F78-ABB0-46D93F9E6739}
          ExtendedDataType    #Date
        ENDPROPERTIES
        
      FIELD #DelaiDouane
        INT
        PROPERTIES
          Name                #DelaiDouane
          Table               #DossierImportation
          Origin              #{4E9E4C43-6722-42B5-BB1F-CD266F8BDB9F}
        ENDPROPERTIES
        
      FIELD #Destination
        STRING
        PROPERTIES
          Name                #Destination
          Table               #DossierImportation
          Origin              #{B9A40DD6-B692-4189-9ACD-146245DD5D65}
        ENDPROPERTIES
        
      FIELD #DINumSeq
        STRING
        PROPERTIES
          Name                #DINumSeq
          Table               #DossierImportation
          Origin              #{B326B750-E686-4B7C-A2A4-0BA39963B7CC}
          ExtendedDataType    #DINumSeq
        ENDPROPERTIES
        
      FIELD #NbJrsTransport
        INT
        PROPERTIES
          Name                #NbJrsTransport
          Label               #Jours de transport
          Table               #DossierImportation
          Origin              #{6B08D879-C8B4-441E-B083-CBD4D708E439}
        ENDPROPERTIES
        
      FIELD #Origine
        STRING
        PROPERTIES
          Name                #Origine
          Table               #DossierImportation
          Origin              #{CC1F1E05-45B1-42AA-B64A-D627501EC503}
        ENDPROPERTIES
        
      FIELD #PortDestination
        INT64
        PROPERTIES
          Name                #PortDestination
          Label               #Port de destination
          Table               #DossierImportation
          Origin              #{2B473769-1611-40EC-ACD1-C5A00A612FBF}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PortOrigine
        INT64
        PROPERTIES
          Name                #PortOrigine
          Label               #Port d'origine
          Table               #DossierImportation
          Origin              #{FFC4548A-C468-4128-AFDC-C1A56C4FE748}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PortTranspordement
        INT64
        PROPERTIES
          Name                #PortTranspordement
          Label               #Port de transpordement
          Table               #DossierImportation
          Origin              #{F8592868-9D01-47AF-9002-93D935C11B6A}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #StatusDossierImportation
        ENUM
        PROPERTIES
          Name                #StatusDossierImportation
          Label               #Status du dossier
          Table               #DossierImportation
          Origin              #{828877F3-35ED-40D4-8E2F-FB1F23D64038}
          EnumType            #StatusDossierImportation
        ENDPROPERTIES
        
      FIELD #TypeTransport
        STRING
        PROPERTIES
          Name                #TypeTransport
          Label               #Type de transport
          Table               #DossierImportation
          Origin              #{20BC2531-D8B9-4D38-B623-666F74738854}
          StringSize          #20
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoIdentification
        PROPERTIES
          Name                #AutoIdentification
        ENDPROPERTIES
        
        GROUPFIELDS
          #DINumSeq
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #NumDossierImportation
      PROPERTIES
        Name                #NumDossierImportation
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{9FE43710-68F4-4ED9-8914-BEDDA12775A7}
      ENDPROPERTIES
      
      INDEXFIELDS
        #DINumSeq
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #Destination
        PROPERTIES
          Name                #Destination
          Table               #LogisticsAddressCountryRegion
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          UseDefaultRoleNames #Yes
          RelatedTableRole    #Destination
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Destination
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Origine
        PROPERTIES
          Name                #Origine
          Table               #LogisticsAddressCountryRegion
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          UseDefaultRoleNames #Yes
          RelatedTableRole    #Origine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Origine
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PortDestination
        PROPERTIES
          Name                #PortDestination
          Table               #DossierImportationPort
          RelatedTableCardinality   #ExactlyOne
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PortDestination
          Role                #Portdedestination
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PortDestination
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PortOrigine
        PROPERTIES
          Name                #PortOrigine
          Table               #DossierImportationPort
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          UseDefaultRoleNames #Yes
          RelatedTableRole    #Portd'origine
          Role                #Portd'origine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PortOrigine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PortTranspordement
        PROPERTIES
          Name                #PortTranspordement
          Table               #DossierImportationPort
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PortTranspordement
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PortTranspordement
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TypeTransport
        PROPERTIES
          Name                #TypeTransport
          Table               #TMSMode
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TypeTransport
            RelatedField        #ModeCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #insert
        #public void insert()
        #{
        #    super();
        #    //this.DINumSeq = NumberSeq::newGetNum(DossierImportation::numRefNumDossier(),true).num();
        #}
      ENDSOURCE
      SOURCE #numRefNumDossier
        #static client server NumberSequenceReference numRefNumDossier()
        #
        #{
        #
        #    return NumberSeqReference::findReference(extendedTypeNum(DINumSeq));
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: MNU

; Microsoft Dynamics AX Menu : AccountsPayable unloaded
; --------------------------------------------------------------------------------
  MNUVERSION 5
  
  MENU #AccountsPayable
    PROPERTIES
      Name                #AccountsPayable
      Label               #@SYS333874
      SetCompany          #Yes
      NormalImage         #3479
      ImageLocation       #EmbeddedResource
      Origin              #{7F9E7903-A6E4-411F-9749-CD2901311BE5}
    ENDPROPERTIES
    
    MENU #@SYS333846
      PROPERTIES
        Name                #Common
        Label               #@SYS333846
        NormalImage         #3495
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENU #@SYS333876
        PROPERTIES
          Name                #Vendors
          Label               #@SYS333876
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Tous les fournisseurs
            MenuItemName        #VendTableListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fournisseurs en attente
            MenuItemName        #VendTableHoldListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fournisseurs en retard
            MenuItemName        #VendTablePastDueListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fournisseurs variés
            MenuItemName        #VendTableDiverseListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333877
        PROPERTIES
          Name                #PurchaseOrders
          Label               #@SYS333877
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Toutes les commandes fournisseur
            MenuItemName        #PurchTableListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Contrats d'achat
            MenuItemName        #PurchAgreementListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Commandes fournisseur reçues mais pas facturées
            MenuItemName        #PurchTableReceivedNotInvoicedListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Commandes fournisseur qui me sont affectées
            MenuItemName        #PurchTableListPageAssignedToMe
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333878
        PROPERTIES
          Name                #VendorInvoices
          Label               #@SYS333878
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur en cours
            MenuItemName        #VendOpenInvoicesListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur en attente
            MenuItemName        #VendInvoiceInfoListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur qui me sont affectées
            MenuItemName        #VendInvoiceAssignedToMeListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur affectées aux files d'attente auxquelles j'appartiens
            MenuItemName        #VendInvoiceAssignedToQueuesThatIBelongTo
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur avec échéance aujourd'hui
            MenuItemName        #VendOpenInvoicesDueTodayListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur en retard
            MenuItemName        #VendOpenInvoicesPastDueListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures fournisseur du registre des factures hors comptabilité
            MenuItemName        #VendTransInvoicePoolNotPostedListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333881
        PROPERTIES
          Name                #VendPayments
          Label               #@SYS333881
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journaux des paiements
            MenuItemName        #LedgerJournalTableVendPaymentListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journaux des paiements qui me sont affectés
            MenuItemName        #VendPaymentAssignedToMeListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journaux des paiements affectés aux files d'attente auxquelles j'appartiens
            MenuItemName        #VendPaymentAssignedToQueuesListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS322452
        PROPERTIES
          Name                #Postdatedchecks
          Label               #@SYS322452
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Chèques fournisseur postdatés
            MenuItemName        #VendPostDatedChecks
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENUITEM
        PROPERTIES
          Name                #Reverse unrealized VAT
          MenuItemName        #VendUnrealizedRevListPage
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@GLS103588
        PROPERTIES
          Name                #AdvanceHolders_RU
          Label               #@GLS103588
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Advance reports
            MenuItemName        #EmplAdvTableListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Advance holders
            MenuItemName        #HcmWorkerAdvHolderTableListPage_RU
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS107924
        PROPERTIES
          Name                #AdvanceInvoices
          Label               #@GLS107924
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #All advance invoices
            MenuItemName        #CzVendAdvanceInvoiceListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS63553
        PROPERTIES
          Name                #FiscalDocuments
          Label               #@GLS63553
          CountryRegionCodes  #BR
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #All fiscal documents
            MenuItemName        #FiscalDocumentListPageVend_BR
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #All purchase complementary fiscal documents
            MenuItemName        #PurchComplementaryInvoiceListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Rejected fiscal documents with pending cancellation
            MenuItemName        #FiscalDocumentLPVendCancelPending_BR
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fiscal documents pending an update to contingency mode
            MenuItemName        #FiscalDocumentLPVendContigencyPending_BR
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS109238
        PROPERTIES
          Name                #Submenu1
          Label               #@GLS109238
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #SAD documents
            MenuItemName        #PlSADTable
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR21408
        PROPERTIES
          Name                #MCRBroker
          Label               #@MCR21408
          ConfigurationKey    #TradeAgreements
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Contrats du courtier
            MenuItemName        #MCRBrokerContractTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Réclamations du courtier
            MenuItemName        #MCRBrokerClaims
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR33593
        PROPERTIES
          Name                #CommonRoyalty
          Label               #@MCR33593
          ConfigurationKey    #MCRRoyalty
        ENDPROPERTIES
        
        MENU #Dossiers import
          PROPERTIES
            Name                #Submenu1
            Label               #Dossiers import
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Tous les dossiers d'importation
              MenuItemName        #DossierImportationListPage
              IsDisplayedInContentArea    #Yes
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENUITEM
          PROPERTIES
            Name                #Accords de redevance
            MenuItemName        #MCRRoyaltyTable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Réclamations de redevance
            MenuItemName        #MCRRoyaltyVendTableListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #Dossiers d'import
        PROPERTIES
          Name                #DossierImport
          Label               #Dossiers d'import
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Tous les dossiers d'importation
            MenuItemName        #DossierImportationListPage
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333879
      PROPERTIES
        Name                #Journals
        Label               #@SYS333879
        NormalImage         #3475
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENU #@SYS333880
        PROPERTIES
          Name                #Invoices
          Label               #@SYS333880
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journal des factures
            MenuItemName        #LedgerJournalTable9
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal des approbations de facture
            MenuItemName        #LedgerJournalTable4
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Registre des factures
            MenuItemName        #LedgerJournalTable6
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Registre de factures fournisseur excluant les détails de validation
            MenuItemName        #VendTransInvoicePoolNotPostedDetails
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Correction notes
            MenuItemName        #PlVendCorrectJour
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333881
        PROPERTIES
          Name                #Payments
          Label               #@SYS333881
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journal des paiements
            MenuItemName        #LedgerJournalTable5
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transfert de paiement
            MenuItemName        #VendPaymReconciliation
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333882
        PROPERTIES
          Name                #PromissoryNotes
          Label               #@SYS333882
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journal de création des billets à ordre
            MenuItemName        #LedgerJournalTable_VendDrawNote
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal de renouvellement des billets à ordre
            MenuItemName        #LedgerJournalTable_VendRedrawNote
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal des remises
            MenuItemName        #LedgerJournalTable_VendPaymRemittance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal des règlements des billets à ordre
            MenuItemName        #LedgerJournalTable_VendSettleNote
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333856
      PROPERTIES
        Name                #Inquiries
        Label               #@SYS333856
        NormalImage         #3474
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Registre des factures
          MenuItemName        #VendTransInvoicePoolReg
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Frais de paiement
          MenuItemName        #VendPaymFeeInquery
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Vendor balance inquiry
          MenuItemName        #VendBalanceList_CN
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Payment order register
          MenuItemName        #BankPaymentOrderJour_Vend_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Act of adjustment
          MenuItemName        #RLedgerSheetActAdjustVend
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Tax document
          MenuItemName        #CzTaxDocumentTable_Vend
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Import declaration
          MenuItemName        #PurchImportDeclarationList_BR
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS333883
        PROPERTIES
          Name                #PromissoryNotes
          Label               #@SYS333883
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Journal des billets à ordre
            MenuItemName        #VendPromissoryNoteJour
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Statistiques des billets à ordre
            MenuItemName        #VendPromissoryNoteStat
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333884
        PROPERTIES
          Name                #Journals
          Label               #@SYS333884
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Facture à payer
            MenuItemName        #VendInvoice4PaymJournal_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Déclaration d'entrée en douane
            MenuItemName        #CustomsBillOfEntryJournal_IN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal des factures
            MenuItemName        #VendInvoiceJournal
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Facture
            MenuItemName        #FactureJournalVend_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Misc. charges allocation history
            MenuItemName        #CostAllocationHistory_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Accusé de réception de marchandises
            MenuItemName        #VendPackingSlipJournal
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333885
        PROPERTIES
          Name                #History
          Label               #@SYS333885
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Statistiques commerciales
            MenuItemName        #VendBusinessStatisticsDef
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Détails de correspondance et d'historique des factures
            MenuItemName        #PurchPostingHistoryInvoice
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Historique des journaux des approbations et détails correspondants
            MenuItemName        #PurchPostingHistoryInvoiceApproval
          ENDPROPERTIES
          
        ENDMENUITEM
        MENU #@SYS333886
          PROPERTIES
            Name                #PurchaseOrders
            Label               #@SYS333886
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Facture à payer
              MenuItemName        #PurchPostingHistoryInvoice4Paym_RU
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
      ENDMENU
      MENU #@GLS103588
        PROPERTIES
          Name                #EmployeeInquiries_RU
          Label               #@GLS103588
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Transactions
            MenuItemName        #EmplTrans_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Solde
            MenuItemName        #EmplBalance_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Règlements
            MenuItemName        #EmplSettlement_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333860
      PROPERTIES
        Name                #Reports
        Label               #@SYS333860
        NormalImage         #3477
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENU #@SYS333887
        PROPERTIES
          Name                #Tax1099
          Label               #@SYS333887
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Synthèse de la taxe sur les honoraires
            MenuItemType        #Output
            MenuItemName        #Tax1099Summary
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Détail de la taxe sur les honoraires
            MenuItemType        #Output
            MenuItemName        #Tax1099Detail
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Identification du contribuable en double de la taxe 1099
            MenuItemType        #Output
            MenuItemName        #Tax1099DupTIN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333888
        PROPERTIES
          Name                #Vendors
          Label               #@SYS333888
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Fournisseurs
            MenuItemType        #Output
            MenuItemName        #Vend
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Données de base du fournisseur
            MenuItemType        #Output
            MenuItemName        #VendBasedata
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Liste téléphonique des fournisseurs
            MenuItemType        #Output
            MenuItemName        #VendPhoneList
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333889
        PROPERTIES
          Name                #Transactions
          Label               #@SYS333889
        ENDPROPERTIES
        
        MENU #@SYS333890
          PROPERTIES
            Name                #Invoice
            Label               #@SYS333890
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Packing slip registration journal
              MenuItemType        #Output
              MenuItemName        #CustVendPackingSlipRegistration
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Transactions de factures fournisseur
              MenuItemType        #Output
              MenuItemName        #VendInvoice
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Spécification de facture
              MenuItemType        #Output
              MenuItemName        #VendInvoiceSpec
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Invoice register (FR0671)
              MenuItemType        #Output
              MenuItemName        #VendInvoiceJourRegisterReport
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENU #@SYS333891
          PROPERTIES
            Name                #Vendor
            Label               #@SYS333891
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Relevé de compte
              MenuItemType        #Output
              MenuItemName        #VendAccountStatementInt
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Transactions fournisseur
              MenuItemType        #Output
              MenuItemName        #VendTransList
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Historique par transaction
              MenuItemType        #Output
              MenuItemName        #VendLedgerTrans
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Journal des paiements fournisseur validés
              MenuItemType        #Output
              MenuItemName        #VendPostPaymJournal_NA
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Billets à ordre en cours
              MenuItemType        #Output
              MenuItemName        #VendPromissoryNoteOpenTrans_FR
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Déclaration de compte fournisseur (France)
              MenuItemType        #Output
              MenuItemName        #VendAccountStatement_FR
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendor monthly CIS statement
              MenuItemType        #Output
              MenuItemName        #taxwithholdslip
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendor turnover and balances statement
              MenuItemType        #Output
              MenuItemName        #VendTurnoverAndBalance
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendor balance notice
              MenuItemType        #Output
              MenuItemName        #VendBalanceNotice
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Vendor reconciliation statement
              MenuItemType        #Output
              MenuItemName        #VendInterReconciliation
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Transactions en cours
              MenuItemType        #Output
              MenuItemName        #VendOpenTransactionStatement
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Factures client en cours de courtier
              MenuItemType        #Output
              MenuItemName        #MCRBrokerARInvoices
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
      ENDMENU
      MENU #@SYS333892
        PROPERTIES
          Name                #Status
          Label               #@SYS333892
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Liste détaillée des dates d'échéance fournisseur
            MenuItemType        #Output
            MenuItemName        #VendDueReportDetail_NA
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Factures non approuvées
            MenuItemType        #Output
            MenuItemName        #VendReportApproveCollection
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Journal des billets à ordre
            MenuItemType        #Output
            MenuItemName        #VendPromissoryNoteReport
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tableau du total de la comptabilité fournisseur au cours des dernières périodes
            MenuItemType        #Output
            MenuItemName        #LedgerTotalAcctsPayablePastXPeriods
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fournisseur âgé
            MenuItemType        #Output
            MenuItemName        #VendAgingBalance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Liste des soldes fournisseur
            MenuItemType        #Output
            MenuItemName        #VendProvisionalBalance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Liste des soldes fournisseur avec limite de crédit
            MenuItemType        #Output
            MenuItemName        #VendBalanceList
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor balance confirmation
            MenuItemType        #Output
            MenuItemName        #VendBalanceConfirmation
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333893
        PROPERTIES
          Name                #Statistics
          Label               #@SYS333893
        ENDPROPERTIES
        
        MENU #@SYS333894
          PROPERTIES
            Name                #Vendor
            Label               #@SYS333894
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Top 100 des fournisseurs
              MenuItemType        #Output
              MenuItemName        #PurchRankingReport
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Principaux fournisseurs par achats de l'année en cours
              MenuItemType        #Output
              MenuItemName        #VendTopXVendorsbyYTDPurchases
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Tableau des totaux du journal des paiements fournisseur et du nombre de transactions
              MenuItemType        #Output
              MenuItemName        #VendVendorPayJournalTotalsandTrxCount
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Achats dans les périodes précédentes
              MenuItemType        #Output
              MenuItemName        #VendPurchasesPastXPeriods
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Déclaration de facture fournisseur
              MenuItemType        #Output
              MenuItemName        #VendInvoiceSumByDeclaration_IS
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
        MENU #@SYS333895
          PROPERTIES
            Name                #Invoice
            Label               #@SYS333895
          ENDPROPERTIES
          
          MENUITEM
            PROPERTIES
              Name                #Chiffre d'affaires des factures fournisseur
              MenuItemType        #Output
              MenuItemName        #VendInvoiceVolume
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Journal des factures
              MenuItemType        #Output
              MenuItemName        #VendInvoiceJourReport
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Tableau des totaux du journal des factures fournisseur et du nombre de transactions
              MenuItemType        #Output
              MenuItemName        #VendVendorInvoiceJourTotalsandTrxCount
            ENDPROPERTIES
            
          ENDMENUITEM
          MENUITEM
            PROPERTIES
              Name                #Advance invoices journal
              MenuItemType        #Output
              MenuItemName        #VendadvanceInvoiceJour
            ENDPROPERTIES
            
          ENDMENUITEM
        ENDMENU
      ENDMENU
      MENU #@SYS333896
        PROPERTIES
          Name                #PromissoryNotes
          Label               #@SYS333896
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Ouvrir les documents de paiement
            MenuItemType        #Output
            MenuItemName        #VendOpenPaymDocu_ES
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transactions cartera en cours
            MenuItemType        #Output
            MenuItemName        #VendPromissoryNoteReports_ES
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transactions en cours par mode de paiement
            MenuItemType        #Output
            MenuItemName        #VendTransOpenPaymMode_ES
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Relation documents de paiement/factures par date de transaction
            MenuItemType        #Output
            MenuItemName        #VendInvoiceSettledTransDate_ES
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS100699
        PROPERTIES
          Name                #EmployeeReports_RU
          Label               #@GLS100699
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Advance holder balance
            MenuItemType        #Output
            MenuItemName        #EmplBalance_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Advance holder transactions
            MenuItemType        #Output
            MenuItemName        #EmplTransList_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Advance report
            MenuItemType        #Output
            MenuItemName        #EmplReportAdvance_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Transaction settlements
            MenuItemType        #Output
            MenuItemName        #EmplSettlement_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS302749
        PROPERTIES
          Name                #PurchaseAgreements
          Label               #@SYS302749
          ConfigurationKey    #PublicSector
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Conformité de la certification des contrats d'achat
            MenuItemType        #Output
            MenuItemName        #PurchAgreementCertificationCompliance
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333877
        PROPERTIES
          Name                #PurchaseOrderReports
          Label               #@SYS333877
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Régularisations restantes préalables à la mise à niveau
            MenuItemType        #Output
            MenuItemName        #InventPurchAccruals
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS63261
        PROPERTIES
          Name                #AsiaReports
          Label               #@GLS63261
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Vendor details (China)
            MenuItemType        #Output
            MenuItemName        #VendLedgerTransactions_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor details with aging (China)
            MenuItemType        #Output
            MenuItemName        #VendTransactionwithAgingAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fournisseur âgé
            MenuItemType        #Output
            MenuItemName        #VendAging_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #État sur les soldes fournisseur
            MenuItemType        #Output
            MenuItemName        #VendBalance_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Solde fournisseur par dimension
            MenuItemType        #Output
            MenuItemName        #VendBalanceByDimension_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Solde fournisseur par profil
            MenuItemType        #Output
            MenuItemName        #VendBalanceByProfile_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor balance by vendor group (China)
            MenuItemType        #Output
            MenuItemName        #VendBalancebyVendGroup_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor balance by buyer groups (China)
            MenuItemType        #Output
            MenuItemName        #VendBalancebyPurchaseGroup_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #État sur les statistiques des achats
            MenuItemType        #Output
            MenuItemName        #VendPayableStatistics_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Payable details (China)
            MenuItemType        #Output
            MenuItemName        #VendPayableTransaction_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Analyse âgée du paiement des achats
            MenuItemType        #Output
            MenuItemName        #VendAgingAnalysisofPayment_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #État du solde des achats fournisseur
            MenuItemType        #Output
            MenuItemName        #VendPayableBalance_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Vendor settlements report (China)
            MenuItemType        #Output
            MenuItemName        #VendSettlement_CN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Due amount analysis (China)
            MenuItemType        #Output
            MenuItemName        #VendDueAmountAnalysis_CN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS223282
        PROPERTIES
          Name                #France
          Label               #@GLS223282
          ConfigurationKey    #PurchFrenchRegulatory_PSN
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Mandat de paiement
            MenuItemType        #Output
            MenuItemName        #VendDirectiveReport_PSN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Bordereau de mandat
            MenuItemType        #Output
            MenuItemName        #VendRoutingSlipReport_PSN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333865
      PROPERTIES
        Name                #Periodic
        Label               #@SYS333865
        NormalImage         #3476
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Règlement fournisseur pour les déclarations d'honoraires
          MenuItemName        #Tax1099Summary
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Tenir à jour les factures fournisseur
          MenuItemType        #Action
          MenuItemName        #VendEditInvoice_Maintain
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Maintain vendor factures
          MenuItemType        #Action
          MenuItemName        #VendEditInvoice_Maintain_Facture_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Réévaluation des comptes en devises
          MenuItemName        #VendExchRateAdjustment
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Créer des notes préliminaires
          MenuItemType        #Action
          MenuItemName        #PrenoteAP
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Tenir à jour les mandats de paiement (France)
          MenuItemName        #VendDirectiveManagementForm_PSN
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Consolidated invoice
          MenuItemName        #VendConsInvoiceListPage_JP
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Account payable counting
          MenuItemType        #Action
          MenuItemName        #RTax25InventoryActAP
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Facture creation for prepayment
          MenuItemName        #VendCreatePrepaymentFacture_RU
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Invoice register (FR0671)
          MenuItemType        #Output
          MenuItemName        #VendInvoiceJourRegisterXML
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS10163
        PROPERTIES
          Name                #Settlement_RU
          Label               #@SYS10163
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Periodic settlement
            MenuItemType        #Action
            MenuItemName        #CustVendAutoSettlement_Vend_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Periodic reverse
            MenuItemType        #Action
            MenuItemName        #CustVendAutoReverse_Vend_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS101149
        PROPERTIES
          Name                #PurchaseBook_RU
          Label               #@GLS101149
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Purchase books journal
            MenuItemName        #PurchBookTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Incoming VAT processing
            MenuItemName        #PurchBookVAT_Process_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Canceling processed VAT
            MenuItemName        #PurchBookVAT_Cancel_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #VAT processing log
            MenuItemName        #PurchBookVATProcessLog_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Parameters of VAT process
            MenuItemName        #PurchBookVATProcessParameters_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS103846
        PROPERTIES
          Name                #Amortization_RU
          Label               #@GLS103846
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Trade liabilities amortization
            MenuItemName        #RTax25DebtCreditAmortisation
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Trade liabilities amortization cancellation
            MenuItemName        #RTax25DebtCreditReverse
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS103588
        PROPERTIES
          Name                #EmployeePeriodic_RU
          Label               #@GLS103588
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Periodic settlement
            MenuItemType        #Action
            MenuItemName        #EmplCloseSettle_Close_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Periodic reverse
            MenuItemType        #Action
            MenuItemName        #EmplCloseSettle_Cancel_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Réévaluation des comptes en devises
            MenuItemName        #EmplExchRateAdjustment_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS4003533
        PROPERTIES
          Name                #OverdueDebt
          Label               #@SYS4003533
          CountryRegionCodes  #PL
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Overdue debt VAT
            MenuItemName        #VendOverdueVATJournalTableListPage_W
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Overdue vendor debt CIT and PIT journals
            MenuItemName        #VendOverdueCITPITJournalTableListPage_W
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS4000837
        PROPERTIES
          Name                #ElectronicInvoice
          Label               #@SYS4000837
          CountryRegionCodes  #BR
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Received NF-e XML documents
            MenuItemName        #EFDocumentReceivedXML_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Import XML files from email
            MenuItemType        #Action
            MenuItemName        #EFDocumentEmailReader_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Posted NF-e with pending validation
            MenuItemName        #EFDocReceivedXmlPendingActions_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Inquire about NF-e access key status
            MenuItemType        #Action
            MenuItemName        #EFDocReceivedXmlInquireFromMenu_BR
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
    MENU #@SYS333869
      PROPERTIES
        Name                #Setup
        Label               #@SYS333869
        NormalImage         #3478
        ImageLocation       #EmbeddedResource
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Paramètres de la comptabilité fournisseur
          MenuItemName        #VendParameters
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Workflows de la comptabilité fournisseur
          MenuItemName        #WorkflowConfigurationVend
          IsDisplayedInContentArea    #Yes
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Profils de validation fournisseur
          MenuItemName        #VendPosting
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Paramètres de mise à jour récapitulative
          MenuItemName        #PurchSummaryParameters
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Assign fiscal document types
          MenuItemName        #VendFiscalDocumentType_BR
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS333897
        PROPERTIES
          Name                #Vendors
          Label               #@SYS333897
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Groupes de fournisseurs
            MenuItemName        #VendGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Groupes d'exception fournisseurs
            MenuItemName        #VendExceptionGroup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Motifs de fournisseur
            MenuItemName        #VendReason
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Groupes de tolérance de prix fournisseur
            MenuItemName        #VendPriceToleranceGroup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@MCR21408
        PROPERTIES
          Name                #MCRBroker
          Label               #@MCR21408
          ConfigurationKey    #TradeAgreements
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Motifs de différence
            MenuItemName        #MCRBrokerDifferentialReason
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333899
        PROPERTIES
          Name                #Policies
          Label               #@SYS333899
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Stratégies de facture fournisseur
            MenuItemType        #Action
            MenuItemName        #VendInvoicePolicies
            IsDisplayedInContentArea    #Yes
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Types de règles de stratégies de facture fournisseur
            MenuItemName        #VendInvoicePolicyRuleType
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Réviseurs de dépenses des factures fournisseur
            MenuItemName        #VendInvoiceWorkflowParticipantExpenToken
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333900
        PROPERTIES
          Name                #InvoiceMatching
          Label               #@SYS333900
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Tolérances de totaux de facture
            MenuItemName        #VendTotalPriceTolerance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Stratégie de rapprochement
            MenuItemName        #PurchLineMatchingPolicy
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tolérances de prix
            MenuItemName        #PurchPriceTolerance
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Tolérances en termes de frais
            MenuItemName        #MarkupTolerance_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333901
        PROPERTIES
          Name                #Misc.Charges
          Label               #@SYS333901
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Code frais
            MenuItemName        #MarkupTable_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Groupe de frais fournisseur
            MenuItemName        #MarkupGroup_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Groupes de frais sur article
            MenuItemName        #MarkupGroup_Invent
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Frais automatiques
            MenuItemName        #MarkupAutoSetup_Vend
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333902
        PROPERTIES
          Name                #Distribution
          Label               #@SYS333902
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Conditions de livraison
            MenuItemName        #VendDeliveryTerms
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333903
        PROPERTIES
          Name                #Forms
          Label               #@SYS333903
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Textes standard
            MenuItemName        #VendFormLetterRemarks
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Paramétrage d'écran
            MenuItemName        #VendFormletterParameters
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Paramètres de tri d'écran
            MenuItemName        #VendFormLetterSortingParameters
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333904
        PROPERTIES
          Name                #Payment
          Label               #@SYS333904
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Conditions de paiement
            MenuItemName        #PaymTerm
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Escomptes de règlement
            MenuItemName        #CashDisc
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Echéanciers de paiement
            MenuItemName        #PaymSched
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Jours de paiement
            MenuItemName        #PaymDay
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Frais de paiement
            MenuItemName        #VendPaymFee
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Bank rules for payment fee
            MenuItemName        #PaymFeeBankRule_JP
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Modes de paiement
            MenuItemName        #VendPaymMode
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Instructions de paiement
            MenuItemName        #PaymInstruction
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Payment calendar
            MenuItemName        #PaymCalendar
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Payment calendar configuration - vendors
            MenuItemName        #PaymCalendarRuleVendor
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Fine codes
            MenuItemName        #VendFineSetup_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Interest codes
            MenuItemName        #VendInterestSetup_BR
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Due date limits
            MenuItemName        #PaymDueDateLimit_ES
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS109233
        PROPERTIES
          Name                #SAD
          Label               #@GLS109233
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #SAD groups
            MenuItemName        #PlSADRateGroups
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Paramètres
            MenuItemName        #PlSADParameters
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333905
        PROPERTIES
          Name                #Statistics
          Label               #@SYS333905
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Définitions des plages âgées
            MenuItemName        #VendReportInterval
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Activité
            MenuItemName        #LineOfBusiness
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Déclaration de facture fournisseur
            MenuItemName        #VendInvoiceDeclaration_IS
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333906
        PROPERTIES
          Name                #Tax1099
          Label               #@SYS333906
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Champs de déclaration des honoraires
            MenuItemName        #Tax1099Fields
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS332788
        PROPERTIES
          Name                #SitesService
          Label               #@SYS332788
          CountryRegionCodes  #US
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Solutions disponibles
            MenuItemName        #VendSitesAvailableSolution
            Parameters          #SitesService.AccountsPayable
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Pages en ligne
            MenuItemName        #SitesSvcCreatePage
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS5007
        PROPERTIES
          Name                #Customs_IN
          Label               #@GLS5007
          CountryRegionCodes  #IN
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Import invoice number
            MenuItemName        #CustomsImportInvoiceNumberTable_IN
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Bill of entry number
            MenuItemName        #CustomsBillOfEntryNumberTable_IN
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS103588
        PROPERTIES
          Name                #EmployeeSetup_RU
          Label               #@GLS103588
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Advance holder groups
            MenuItemName        #HcmWorkerGroup_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Employee posting profiles
            MenuItemName        #EmplPosting_RU
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #Expense rates
            MenuItemName        #EmplAdvExpendTable_RU
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@GLS103894
        PROPERTIES
          Name                #RTax25Setup_RU
          Label               #@GLS103894
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Debt interval
            MenuItemName        #RTax25DebtPeriodCredit
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS333898
        PROPERTIES
          Name                #PurchaseAgreements
          Label               #@SYS333898
          CountryRegionCodes  #RU
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Classification de contrat d'achat
            MenuItemName        #PurchAgreementClassification
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENU #@SYS80071
        PROPERTIES
          Name                #Reports
          Label               #@SYS80071
          ConfigurationKey    #PublicSector
          SecurityKey         #VendSetup
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #Page de couverture pour l'état des paiements
            MenuItemName        #VendCoverPageSetup
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
    ENDMENU
  ENDMENU
  

***Element: DBE

; Microsoft Dynamics AX Enumtype : StatusDossierImportation unloaded
; --------------------------------------------------------------------------------
  ENUMTYPEVERSION 1
  
  ENUMTYPE #StatusDossierImportation
    PROPERTIES
      Name                #StatusDossierImportation
      UseEnumValue        #Yes
      Origin              #{01EC87F5-0134-4D05-9972-E9F691FC37B1}
    ENDPROPERTIES
    
    TYPEELEMENTS
      #Ouvert
      PROPERTIES
        Name                #Ouvert
        Label               #Ouvert
        EnumValue           #0
      ENDPROPERTIES
      
      #Affecte
      PROPERTIES
        Name                #Affecte
        Label               #Affecté
        EnumValue           #1
      ENDPROPERTIES
      
      #Embarque
      PROPERTIES
        Name                #Embarque
        Label               #Embarqué
        EnumValue           #2
      ENDPROPERTIES
      
      #Debarque
      PROPERTIES
        Name                #Debarque
        Label               #Débarqué
        EnumValue           #3
      ENDPROPERTIES
      
      #Sorti
      PROPERTIES
        Name                #Sorti
        Label               #Sorti
        EnumValue           #4
      ENDPROPERTIES
      
      #Arrive
      PROPERTIES
        Name                #Arrive
        Label               #Arrivé
        EnumValue           #5
      ENDPROPERTIES
      
      #Cloture
      PROPERTIES
        Name                #Cloture
        Label               #Cloturé
        EnumValue           #6
      ENDPROPERTIES
      
    ENDTYPEELEMENTS
  ENDENUMTYPE
  

***Element: UTD

; Microsoft Dynamics AX Date : Date déchargé
; --------------------------------------------------------------------------------
  USERTYPEVERSION 6
  
  USERTYPE #Date
  DATE
    PROPERTIES
      Name                #Date
      Origin              #{EEB057D0-982A-402F-8525-8742BC3AA69E}
      Extends             #TransDate
    ENDPROPERTIES
    
    TYPEELEMENTS
    ENDTYPEELEMENTS
    
    TYPEREFERENCES
    ENDTYPEREFERENCES
    
    TYPELOOKUPS
    ENDTYPELOOKUPS
    
  ENDUSERTYPE
  

***Element: PRN

; Microsoft Dynamics AX Project : Disco_Dossier_Importation unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #Disco_Dossier_Importation
  PRIVATE
  PROPERTIES
    Name                #Disco_Dossier_Importation
    Origin              #{B44BA7D7-406C-4D20-949F-20E3DBD5D65F}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    BEGINNODE
      FILETYPE 0
      UTILTYPE 5
      UTILOBJECTID 0
      NODETYPE 215
      NAME #jobName
    ENDNODE
    BEGINNODE
      FILETYPE 0
      UTILTYPE 41
      UTILOBJECTID 103761
      NODETYPE 234
      NAME #DINumSeq
    ENDNODE
    GROUP #MenuItems
      PROPERTIES
        Name                #MenuItems
        ProjectGroupType    #MenuItems
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Display
        PROPERTIES
          Name                #Display
          ProjectGroupType    #Display
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #DossierImportationQuickCreate
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #DossierImportationPort
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #DossierImportationListPage
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #DossierImportation
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #Query
      PROPERTIES
        Name                #Query
        ProjectGroupType    #Queries
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 20
        UTILOBJECTID 0
        NODETYPE 330
        NAME #DossierImportationListPage
      ENDNODE
      ENDGROUP
      
    GROUP #Forms
      PROPERTIES
        Name                #Forms
        ProjectGroupType    #Forms
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DossierImportationListPage
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DossierImportationQuickCreate
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DossierImportationPort
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #PurchTable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DossierImportation
      ENDNODE
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1016492
        NODETYPE 329
        NAME #NumberSeqModuleVendor
      ENDNODE
      ENDGROUP
      
    GROUP #Tables
      PROPERTIES
        Name                #Tables
        ProjectGroupType    #Tables
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 340
        NODETYPE 204
        NAME #PurchLine
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 230
        NODETYPE 204
        NAME #MarkupTrans
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 345
        NODETYPE 204
        NAME #PurchTable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 2941
        NODETYPE 204
        NAME #LogisticsPostalAddress
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 103659
        NODETYPE 204
        NAME #DossierImportationPort
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 2942
        NODETYPE 204
        NAME #LogisticsAddressCountryRegion
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 102452
        NODETYPE 204
        NAME #TMSMode
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 103658
        NODETYPE 204
        NAME #DossierImportation
      ENDNODE
      ENDGROUP
      
    BEGINNODE
      FILETYPE 0
      UTILTYPE 16
      UTILOBJECTID 0
      NODETYPE 205
      NAME #AccountsPayable
    ENDNODE
    BEGINNODE
      FILETYPE 0
      UTILTYPE 40
      UTILOBJECTID 101240
      NODETYPE 209
      NAME #StatusDossierImportation
    ENDNODE
    BEGINNODE
      FILETYPE 0
      UTILTYPE 41
      UTILOBJECTID 103760
      NODETYPE 231
      NAME #Date
    ENDNODE
  ENDPROJECT
  

***Element: END
